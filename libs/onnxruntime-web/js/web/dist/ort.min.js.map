{"version":3,"sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/@protobufjs/aspromise/index.js","webpack://ort/./node_modules/@protobufjs/base64/index.js","webpack://ort/./node_modules/@protobufjs/eventemitter/index.js","webpack://ort/./node_modules/@protobufjs/float/index.js","webpack://ort/./node_modules/@protobufjs/inquire/index.js","webpack://ort/./node_modules/@protobufjs/pool/index.js","webpack://ort/./node_modules/@protobufjs/utf8/index.js","webpack://ort/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://ort/./node_modules/guid-typescript/dist/guid.js","webpack://ort/./node_modules/long/src/long.js","webpack://ort/./node_modules/onnx-proto/dist/onnx.js","webpack://ort/./node_modules/protobufjs/minimal.js","webpack://ort/./node_modules/protobufjs/src/index-minimal.js","webpack://ort/./node_modules/protobufjs/src/reader.js","webpack://ort/./node_modules/protobufjs/src/reader_buffer.js","webpack://ort/./node_modules/protobufjs/src/roots.js","webpack://ort/./node_modules/protobufjs/src/rpc.js","webpack://ort/./node_modules/protobufjs/src/rpc/service.js","webpack://ort/./node_modules/protobufjs/src/util/longbits.js","webpack://ort/./node_modules/protobufjs/src/util/minimal.js","webpack://ort/./node_modules/protobufjs/src/writer.js","webpack://ort/./node_modules/protobufjs/src/writer_buffer.js","webpack://ort/./lib/backend-onnxjs.ts","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/onnxjs/attribute-with-cache-key.ts","webpack://ort/./lib/onnxjs/attribute.ts","webpack://ort/./lib/onnxjs/backend.ts","webpack://ort/./lib/onnxjs/backends/backend-webgl.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://ort/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/types.ts","webpack://ort/./lib/onnxjs/backends/webgl/utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://ort/./lib/onnxjs/execution-plan.ts","webpack://ort/./lib/onnxjs/graph.ts","webpack://ort/./lib/onnxjs/instrument.ts","webpack://ort/./lib/onnxjs/model.ts","webpack://ort/./lib/onnxjs/operators.ts","webpack://ort/./lib/onnxjs/opset.ts","webpack://ort/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://ort/./lib/onnxjs/session-handler.ts","webpack://ort/./lib/onnxjs/session.ts","webpack://ort/./lib/onnxjs/tensor.ts","webpack://ort/./lib/onnxjs/util.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/./node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/global","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","length","splice","push","env","this","wasm","webgl","logLevelInternal","value","indexOf","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","set","Tensor","arg0","arg1","arg2","type","data","dims","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","constructor","size","dim","Number","isSafeInteger","RangeError","calculateSize","InferenceSession","handler","feeds","fetches","options","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","buffer","byteOffset","byteLength","backendHints","executionProviders","map","async","backendNames","errors","backendName","backendInfo","initialized","initializing","aborted","e","err","join","resolveBackend","startProfiling","endProfiling","_scriptDir","document","currentScript","src","n","F","B","ue","L","r","z","t","V","a","J","o","X","Q","u","Z","c","f","s","ready","Promise","l","p","d","m","h","b","g","y","_","window","w","importScripts","A","process","versions","node","T","ENVIRONMENT_IS_PTHREAD","E","k","locateFile","__dirname","normalize","readFileSync","W","readFile","argv","replace","slice","on","xr","we","he","exitCode","exit","inspect","Worker","O","console","error","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","C","S","M","print","log","bind","D","printErr","warn","thisProgram","quit","wasmBinary","x","noExitRuntime","WebAssembly","I","P","R","U","TextDecoder","decode","j","H","subarray","String","fromCharCode","Y","G","charCodeAt","N","q","K","$","ee","ne","re","te","ae","oe","ie","ar","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","ce","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","fe","se","le","pe","de","me","be","preRun","shift","unshift","ge","ye","_e","ve","onAbort","RuntimeError","Ae","startsWith","Te","preloadedImages","preloadedAudios","Ee","985396","ke","qc","Jb","Oe","Atomics","load","Dr","compareExchange","notify","Ce","Me","Eb","Ub","worker","_emscripten_futex_wake","Se","Hb","Gb","bc","bd","vc","store","yr","sr","wc","receiveObjectTransfer","Cc","threadInit","Mc","threadCancel","Lc","threadExit","kc","setExitStatus","Ec","ac","hc","pop","vr","ic","ur","postMessage","cmd","jc","terminate","Db","Zb","Fb","ir","Yb","Ib","Dc","Mr","zc","onmessage","oc","targetThread","jd","transferList","dr","Ie","thread","loaded","Ob","threadId","text","alert","Ir","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","lc","rc","Sc","now","De","Date","or","xe","Dn","Fe","Nb","Jc","Gc","Hc","Fc","Ic","tc","Tb","Kb","detached","_r","start_routine","Kc","arg","threadInfoStruct","stackBase","stackSize","time","Rc","Pe","exchange","wait","Re","establishStackSpace","Cr","kr","invokeEntryPoint","hrtime","__performance_now_clock_drift","We","Ue","je","He","Ye","Wc","Ge","Ne","qe","Be","Le","ze","Xc","Ve","Math","ceil","Sr","fill","Bc","yc","mc","fd","ed","flags","offset","Je","Xe","Qe","Yc","Ke","Ze","$e","en","nn","rn","tn","an","un","cn","Function","fn","stack","toString","prototype","create","sn","ln","pn","sc","forEach","dn","mn","hn","$b","bn","gn","fromWireType","yn","_n","vn","wn","An","cr","Tn","En","kn","On","globalThis","Cn","Sn","Mn","arguments","Er","Or","mr","xn","Fn","In","querySelector","Pn","Sb","fc","Uc","hr","Rb","Qb","getParameter","width","height","viewport","Rn","Wn","Un","jn","Hn","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Yn","Gn","Nn","qn","Bn","$c","Zc","Ln","zn","Vn","toTimeString","match","nc","getFullYear","getTimezoneOffset","max","Tr","Ar","wr","Jn","Xn","Qn","Kn","Zn","getTime","getMonth","getDate","setDate","setMonth","setFullYear","$n","getDay","Cb","Xb","Pc","Oc","Vb","Pb","Lb","Wb","kd","Nc","Qc","RegExp","split","substring","abs","includes","er","nr","BindingError","InternalError","count_emval_handles","get_first_emval","rr","tr","da","ra","pr","Tc","pa","qa","lr","br","ca","ja","ma","ia","ha","la","ka","ba","fa","ga","Ba","toWireType","argPackAdvance","readValueFromPointer","Mb","Aa","Uint8ClampedArray","Ca","xc","xa","deleteObject","apply","Da","Fa","ea","na","ya","oa","copyWithin","hardwareConcurrency","ua","min","grow","va","ta","setTimeout","gr","wa","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Ac","cd","dc","pc","gd","hd","ec","getContext","WebGLRenderingContext","ad","attributes","version","canvas","uc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","Vc","dd","getSupportedExtensions","aa","za","Ga","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","cc","sa","getSeconds","getMinutes","getHours","setTime","Ea","asm","ab","Ha","fb","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Ia","_OrtCreateSessionOptions","Ja","_OrtSessionOptionsAppendExecutionProviderWebNN","Ka","_OrtAddSessionConfigEntry","La","_OrtReleaseSessionOptions","Ma","_OrtCreateSession","Na","_OrtReleaseSession","Oa","_OrtGetInputCount","Pa","_OrtGetOutputCount","Qa","_OrtGetInputName","Ra","_OrtGetOutputName","Sa","_OrtFree","Ta","_OrtCreateTensor","Ua","_OrtGetTensorData","Va","_OrtReleaseTensor","Wa","_OrtCreateRunOptions","Xa","_OrtAddRunConfigEntry","Ya","_OrtReleaseRunOptions","Za","_OrtRun","_a","_OrtEndProfiling","$a","_malloc","bb","___errno_location","cb","_free","db","_pthread_self","eb","_emscripten_tls_init","___getTypeName","gb","___embind_register_native_and_builtin_types","hb","_emscripten_current_thread_process_queued_calls","ib","fr","_emscripten_register_main_browser_thread_id","jb","_emscripten_main_browser_thread_id","kb","_emscripten_sync_run_in_main_thread_4","lb","_emscripten_main_thread_process_queued_calls","mb","_emscripten_run_in_main_runtime_thread_js","nb","__emscripten_call_on_thread","ob","_pthread_testcancel","pb","_pthread_exit","qb","__emscripten_thread_init","rb","_emscripten_get_global_libc","sb","___pthread_tsd_run_dtors","tb","__get_tzname","ub","__get_daylight","vb","__get_timezone","wb","stackSave","xb","stackRestore","yb","stackAlloc","zb","_emscripten_stack_set_limits","Ab","_memalign","Bb","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","Fr","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","preInit","ortWasm","ctx","params","index","pending","reject","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","radixToPower","parseInt","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","fromObject","object","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","assign","_cacheKey","sort","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","initialize","dispose","WebGLBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","clip","parseClipAttributes","concat","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scale","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","bias","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","_fetches","_options","inputMap","feed","outputMap","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","ep","deviceType","webnnOptions","preferenceValues","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority.\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.backend === backend) {\n            return;\n        }\n        else {\n            throw new Error(`backend \"${name}\" is already registered`);\n        }\n        for (let i = 0; i < backendsSortedByPriority.length; i++) {\n            if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                backendsSortedByPriority.splice(i, 0, name);\n                return;\n            }\n        }\n        backendsSortedByPriority.push(name);\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.initializing) {\n                throw new Error(`backend \"${backendName}\" is being initialized; cannot initialize multiple times.`);\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            try {\n                backendInfo.initializing = true;\n                await backendInfo.backend.init();\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                errors.push({ name: backendName, err: e });\n                backendInfo.aborted = true;\n            }\n            finally {\n                backendInfo.initializing = false;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\nif (isBigInt64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    //#endregion\n    //#region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function n(){return F.buffer!=B&&ue(F.buffer),L}function r(){return F.buffer!=B&&ue(F.buffer),z}function t(){return F.buffer!=B&&ue(F.buffer),V}function a(){return F.buffer!=B&&ue(F.buffer),J}function o(){return F.buffer!=B&&ue(F.buffer),X}function i(){return F.buffer!=B&&ue(F.buffer),Q}function u(){return F.buffer!=B&&ue(F.buffer),Z}var c,f,s;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,n){f=e,s=n}));var l,p={};for(l in c)c.hasOwnProperty(l)&&(p[l]=c[l]);var d=\"./this.program\";function m(e,n){throw n}var h,b,g,y,_,v=\"object\"==typeof window,w=\"function\"==typeof importScripts,A=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,T=c.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function k(e){return c.locateFile?c.locateFile(e,E):E+e}if(A){if(E=w?require(\"path\").dirname(E)+\"/\":__dirname+\"/\",h=function(e,n){return y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFileSync(e,n?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),W(e.buffer),e},b=function(e,n,r){y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFile(e,(function(e,t){e?r(e):n(t.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof xr))throw e})),process.on(\"unhandledRejection\",we),m=function(e,n){if(he())throw process.exitCode=e,n;process.exit(e)},c.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var O;try{O=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=O.Worker}}else(v||w)&&(w?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\"blob:\")?E.substr(0,E.lastIndexOf(\"/\")+1):\"\",A?(h=function(e,n){return y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFileSync(e,n?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),W(e.buffer),e},b=function(e,n,r){y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFile(e,(function(e,t){e?r(e):n(t.buffer)}))}):(h=function(e){var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(null),n.responseText},w&&(g=function(e){var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),b=function(e,n,r){var t=new XMLHttpRequest;t.open(\"GET\",e,!0),t.responseType=\"arraybuffer\",t.onload=function(){200==t.status||0==t.status&&t.response?n(t.response):r()},t.onerror=r,t.send(null)}));A&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var C,S,M=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(l in p)p.hasOwnProperty(l)&&(c[l]=p[l]);p=null,c.thisProgram&&(d=c.thisProgram),c.quit&&(m=c.quit),c.wasmBinary&&(S=c.wasmBinary);var x=c.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&we(\"no native wasm support detected\");var F,I,P,R=!1;function W(e,n){e||we(\"Assertion failed: \"+n)}function U(e){var n=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),n.decode.call(n,e)}}var j=\"undefined\"!=typeof TextDecoder?new U(\"utf8\"):void 0;function H(e,n,r){var t=n+r;for(r=n;e[r]&&!(r>=t);)++r;if(16<r-n&&e.subarray&&j)return j.decode(e.subarray(n,r));for(t=\"\";n<r;){var a=e[n++];if(128&a){var o=63&e[n++];if(192==(224&a))t+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[n++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[n++])?t+=String.fromCharCode(a):(a-=65536,t+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else t+=String.fromCharCode(a)}return t}function Y(e,n){return e?H(r(),e,n):\"\"}function G(e,n,r,t){if(!(0<t))return 0;var a=r;t=r+t-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(r>=t)break;n[r++]=i}else{if(2047>=i){if(r+1>=t)break;n[r++]=192|i>>6}else{if(65535>=i){if(r+2>=t)break;n[r++]=224|i>>12}else{if(r+3>=t)break;n[r++]=240|i>>18,n[r++]=128|i>>12&63}n[r++]=128|i>>6&63}n[r++]=128|63&i}}return n[r]=0,r-a}function N(e,n,t){return G(e,r(),n,t)}function q(e){for(var n=0,r=0;r<e.length;++r){var t=e.charCodeAt(r);55296<=t&&57343>=t&&(t=65536+((1023&t)<<10)|1023&e.charCodeAt(++r)),127>=t?++n:n=2047>=t?n+2:65535>=t?n+3:n+4}return n}var B,L,z,V,J,X,Q,K,Z,$=\"undefined\"!=typeof TextDecoder?new U(\"utf-16le\"):void 0;function ee(e,n){for(var o=e>>1,i=o+n/2;!(o>=i)&&a()[o];)++o;if(32<(o<<=1)-e&&$)return $.decode(r().subarray(e,o));for(o=\"\",i=0;!(i>=n/2);++i){var u=t()[e+2*i>>1];if(0==u)break;o+=String.fromCharCode(u)}return o}function ne(e,n,r){if(void 0===r&&(r=2147483647),2>r)return 0;var a=n;r=(r-=2)<2*e.length?r/2:e.length;for(var o=0;o<r;++o){var i=e.charCodeAt(o);t()[n>>1]=i,n+=2}return t()[n>>1]=0,n-a}function re(e){return 2*e.length}function te(e,n){for(var r=0,t=\"\";!(r>=n/4);){var a=o()[e+4*r>>2];if(0==a)break;++r,65536<=a?(a-=65536,t+=String.fromCharCode(55296|a>>10,56320|1023&a)):t+=String.fromCharCode(a)}return t}function ae(e,n,r){if(void 0===r&&(r=2147483647),4>r)return 0;var t=n;r=t+r-4;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),o()[n>>2]=i,(n+=4)+4>r)break}return o()[n>>2]=0,n-t}function oe(e){for(var n=0,r=0;r<e.length;++r){var t=e.charCodeAt(r);55296<=t&&57343>=t&&++r,n+=4}return n}function ie(e){var r=q(e)+1,t=ar(r);return t&&G(e,n(),t,r),t}function ue(e){B=e,c.HEAP8=L=new Int8Array(e),c.HEAP16=V=new Int16Array(e),c.HEAP32=X=new Int32Array(e),c.HEAPU8=z=new Uint8Array(e),c.HEAPU16=J=new Uint16Array(e),c.HEAPU32=Q=new Uint32Array(e),c.HEAPF32=K=new Float32Array(e),c.HEAPF64=Z=new Float64Array(e)}T&&(B=c.buffer);var ce=c.INITIAL_MEMORY||16777216;if(T)F=c.wasmMemory,B=c.buffer;else if(c.wasmMemory)F=c.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:ce/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),A&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");F&&(B=F.buffer),ce=B.byteLength,ue(B);var fe,se=[],le=[],pe=[],de=[],me=0;function he(){return x||0<me}function be(){var e=c.preRun.shift();se.unshift(e)}var ge,ye=0,_e=null,ve=null;function we(e){throw c.onAbort&&c.onAbort(e),W(!T),D(e),R=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function Ae(){return ge.startsWith(\"data:application/octet-stream;base64,\")}function Te(){var e=ge;try{if(e==ge&&S)return new Uint8Array(S);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){we(e)}}c.preloadedImages={},c.preloadedAudios={},ge=\"ort-wasm-threaded.wasm\",Ae()||(ge=k(ge));var Ee={985396:function(){throw\"Canceled!\"}};function ke(e){for(;0<e.length;){var n=e.shift();if(\"function\"==typeof n)n(c);else{var r=n.qc;\"number\"==typeof r?void 0===n.Jb?fe.get(r)():fe.get(r)(n.Jb):r(void 0===n.Jb?null:n.Jb)}}}function Oe(e,r){if(0>=e||e>n().length||1&e||0>r)return-28;if(0==r)return 0;2147483647<=r&&(r=1/0);var t=Atomics.load(o(),Dr>>2),a=0;if(t==e&&Atomics.compareExchange(o(),Dr>>2,t,0)==t&&(a=1,0>=--r))return 1;if(0<=(e=Atomics.notify(o(),e>>2,r)))return e+a;throw\"Atomics.notify returned an unexpected value \"+e}function Ce(e){if(T)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var n=Me.Eb[e];n&&(o()[e+12>>2]=0,Me.Ub(n.worker))}c._emscripten_futex_wake=Oe;var Se,Me={Hb:[],Gb:[],bc:[],bd:function(){},vc:function(){for(var e=ar(228),n=0;57>n;++n)i()[e/4+n]=0;o()[e+12>>2]=e,n=e+152,o()[n>>2]=n;var r=ar(512);for(n=0;128>n;++n)i()[r/4+n]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),yr(e,!w,1),sr(e)},wc:function(){Me.receiveObjectTransfer=Me.Cc,Me.threadInit=Me.Mc,Me.threadCancel=Me.Lc,Me.threadExit=Me.kc,Me.setExitStatus=Me.Ec},Eb:{},ac:[],hc:function(){for(;0<Me.ac.length;)Me.ac.pop()();vr()},ic:function(e,n){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Me.hc(),Atomics.store(i(),e+4>>2,n),Atomics.store(i(),e+0>>2,1),Oe(e+0,2147483647),yr(0,0,0)},Ec:function(e){P=e},kc:function(e){var n=ur();n&&(Me.ic(n,e),T&&postMessage({cmd:\"exit\"}))},Lc:function(){Me.ic(ur(),-1),postMessage({cmd:\"cancelDone\"})},jc:function(){for(var e in Me.Eb){var n=Me.Eb[e];n&&n.worker&&Me.Ub(n.worker)}for(Me.Eb={},e=0;e<Me.Hb.length;++e){var r=Me.Hb[e];r.terminate()}for(Me.Hb=[],e=0;e<Me.Gb.length;++e)n=(r=Me.Gb[e]).Db,Me.Zb(n),r.terminate();Me.Gb=[]},Zb:function(e){if(e){if(e.Fb){var n=o()[e.Fb+100>>2];o()[e.Fb+100>>2]=0,ir(n),ir(e.Fb)}e.Fb=0,e.Yb&&e.Ib&&ir(e.Ib),e.Ib=0,e.worker&&(e.worker.Db=null)}},Ub:function(e){Me.Dc((function(){delete Me.Eb[e.Db.Fb],Me.Hb.push(e),Me.Gb.splice(Me.Gb.indexOf(e),1),Me.Zb(e.Db),e.Db=void 0}))},Dc:function(e){o()[Mr>>2]=0;try{e()}finally{o()[Mr>>2]=1}},Cc:function(){},Mc:function(){for(var e in Me.bc)Me.bc[e]()},zc:function(e,n){e.onmessage=function(r){var t=r.data,a=t.cmd;if(e.Db&&(Me.oc=e.Db.Fb),t.targetThread&&t.targetThread!=ur()){var u=Me.Eb[t.jd];u?u.worker.postMessage(r.data,t.transferList):D('Internal error! Worker sent a message \"'+a+'\" to target pthread '+t.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)dr();else if(\"spawnThread\"===a)Ie(r.data);else if(\"cleanupThread\"===a)Ce(t.thread);else if(\"killThread\"===a){if(r=t.thread,T)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!r)throw\"Internal Error! Null pthread_ptr in killThread!\";o()[r+12>>2]=0,t=Me.Eb[r],delete Me.Eb[r],t.worker.terminate(),Me.Zb(t),Me.Gb.splice(Me.Gb.indexOf(t.worker),1),t.worker.Db=void 0}else if(\"cancelThread\"===a){if(r=t.thread,T)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!r)throw\"Internal Error! Null pthread_ptr in cancelThread!\";Me.Eb[r].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,n&&n(e),e.Ob&&(e.Ob(),delete e.Ob);else if(\"print\"===a)M(\"Thread \"+t.threadId+\": \"+t.text);else if(\"printErr\"===a)D(\"Thread \"+t.threadId+\": \"+t.text);else if(\"alert\"===a)alert(\"Thread \"+t.threadId+\": \"+t.text);else if(\"exit\"===a)e.Db&&Atomics.load(i(),e.Db.Fb+64>>2)&&Me.Ub(e);else if(\"exitProcess\"===a)try{Ir(t.returnCode)}catch(e){if(e instanceof xr)return;throw e}else\"cancelDone\"===a?Me.Ub(e):\"objectTransfer\"!==a&&(\"setimmediate\"===r.data.target?e.postMessage(r.data):D(\"worker sent an unknown command \"+a));Me.oc=void 0},e.onerror=function(e){D(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},A&&void 0!==e.on&&(e.on(\"message\",(function(n){e.onmessage({data:n})})),e.on(\"error\",(function(n){e.onerror(n)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:F,wasmModule:I})},lc:function(){var e=k(\"ort-wasm-threaded.worker.js\");Me.Hb.push(new Worker(e))},rc:function(){return 0==Me.Hb.length&&(Me.lc(),Me.zc(Me.Hb[0])),Me.Hb.pop()},Sc:function(e){for(e=performance.now()+e;performance.now()<e;);}};function De(e,n){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return o()[or()>>2]=28,-1;e=Se()}return o()[n>>2]=e/1e3|0,o()[n+4>>2]=e%1e3*1e6|0,0}function xe(e,n){if(T)return Dn(1,1,e,n);pe.unshift({qc:e,Jb:n})}function Fe(e){this.Nb=e-16,this.Jc=function(e){o()[this.Nb+4>>2]=e},this.Gc=function(e){o()[this.Nb+8>>2]=e},this.Hc=function(){o()[this.Nb>>2]=0},this.Fc=function(){n()[this.Nb+12>>0]=0},this.Ic=function(){n()[this.Nb+13>>0]=0},this.tc=function(e,n){this.Jc(e),this.Gc(n),this.Hc(),this.Fc(),this.Ic()}}function Ie(e){if(T)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var n=Me.rc();if(!n)return 6;if(void 0!==n.Db)throw\"Internal error!\";if(!e.Tb)throw\"Internal error, no pthread ptr!\";Me.Gb.push(n);for(var r=ar(512),t=0;128>t;++t)o()[r+4*t>>2]=0;var a=e.Ib+e.Kb,u=(t=Me.Eb[e.Tb]={worker:n,Ib:e.Ib,Kb:e.Kb,Yb:e.Yb,Fb:e.Tb}).Fb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,r),Atomics.store(i(),u+10,t.Fb),Atomics.store(i(),u+20,e.Kb),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.Kb),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached),r=_r()+40,Atomics.store(i(),u+43,r),n.Db=t;var c={cmd:\"run\",start_routine:e.Kc,arg:e.Jb,threadInfoStruct:e.Tb,stackBase:e.Ib,stackSize:e.Kb};return n.Ob=function(){c.time=performance.now(),n.postMessage(c,e.Rc)},n.loaded&&(n.Ob(),delete n.Ob),0}function Pe(e,r,t){if(0>=e||e>n().length||1&e)return-28;if(v){if(Atomics.load(o(),e>>2)!=r)return-6;var a=performance.now();for(t=a+t,Atomics.exchange(o(),Dr>>2,e);;){if((a=performance.now())>t)return Atomics.exchange(o(),Dr>>2,0),-73;if(0==(a=Atomics.exchange(o(),Dr>>2,0)))break;if(dr(),Atomics.load(o(),e>>2)!=r)return-6;Atomics.exchange(o(),Dr>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(o(),e>>2,r,t)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function Re(){A||w||(C||(C={}),C[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(C[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,D(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}c.establishStackSpace=function(e,n){Cr(e,n),kr(e)},c.invokeEntryPoint=function(e,n){return fe.get(e)(n)},Se=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:T?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var We={},Ue=[null,[],[]];function je(e,n){var r=Ue[e];0===n||10===n?((1===e?M:D)(H(r,0)),r.length=0):r.push(n)}var He={};function Ye(e,n){return T?Dn(2,1,e,n):(e=Y(e),He.Wc(e,n))}function Ge(e,n,r){return T?Dn(3,1,e,n,r):0}function Ne(e,n){if(T)return Dn(4,1,e,n)}function qe(e,n,r){if(T)return Dn(5,1,e,n,r)}function Be(e,n,r){return T?Dn(6,1,e,n,r):0}function Le(e,n){if(T)return Dn(7,1,e,n)}function ze(e,n){return T?Dn(8,1,e,n):(e=Y(e),He.Xc(e,n))}function Ve(e,n,t,a,o,i){if(T)n=Dn(9,1,e,n,t,a,o,i);else if(i<<=12,0!=(16&a)&&0!=e%65536)n=-28;else if(0!=(32&a)){var u=65536*Math.ceil(n/65536);(e=Sr(65536,u))?r().fill(0,e,e+u):e=0,e?(We[e]={Bc:e,yc:n,mc:!0,fd:o,ed:t,flags:a,offset:i},n=e):n=-48}else n=-52;return n}function Je(e,n){if(T)e=Dn(10,1,e,n);else{var r=We[e];0!==n&&r?(n===r.yc&&(We[e]=null,r.mc&&ir(r.Bc)),e=0):e=-28}return e}function Xe(e,n,r){if(T)return Dn(11,1,e,n,r)}function Qe(e,n,r){return T?Dn(12,1,e,n,r):(e=Y(e),He.Yc(e,n,r))}function Ke(e){if(T)return Dn(13,1,e)}function Ze(e,n){if(T)return Dn(14,1,e,n)}function $e(e){if(T)return Dn(15,1,e)}function en(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+e)}}var nn=void 0;function rn(e){for(var n=\"\";r()[e];)n+=nn[r()[e++]];return n}var tn={},an={},on={};function un(e){if(void 0===e)return\"_unknown\";var n=(e=e.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return 48<=n&&57>=n?\"_\"+e:e}function cn(e,n){return e=un(e),new Function(\"body\",\"return function \"+e+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(n)}function fn(e){var n=Error,r=cn(e,(function(n){this.name=e,this.message=n,void 0!==(n=Error(n).stack)&&(this.stack=this.toString()+\"\\n\"+n.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},r}var sn=void 0;function ln(e){throw new sn(e)}function pn(e,n,r){if(r=r||{},!(\"argPackAdvance\"in n))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var t=n.name;if(e||ln('type \"'+t+'\" must have a positive integer typeid pointer'),an.hasOwnProperty(e)){if(r.sc)return;ln(\"Cannot register type '\"+t+\"' twice\")}an[e]=n,delete on[e],tn.hasOwnProperty(e)&&(n=tn[e],delete tn[e],n.forEach((function(e){e()})))}var dn=[],mn=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function hn(e){4<e&&0==--mn[e].$b&&(mn[e]=void 0,dn.push(e))}function bn(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var n=dn.length?dn.pop():mn.length;return mn[n]={$b:1,value:e},n}}function gn(e){return this.fromWireType(i()[e>>2])}function yn(e){if(null===e)return\"null\";var n=typeof e;return\"object\"===n||\"array\"===n||\"function\"===n?e.toString():\"\"+e}function _n(e,n){switch(n){case 2:return function(e){var n=this.fromWireType;return F.buffer!=B&&ue(F.buffer),n.call(this,K[e>>2])};case 3:return function(e){return this.fromWireType(u()[e>>3])};default:throw new TypeError(\"Unknown float type: \"+e)}}function vn(e,u,c){switch(u){case 0:return c?function(e){return n()[e]}:function(e){return r()[e]};case 1:return c?function(e){return t()[e>>1]}:function(e){return a()[e>>1]};case 2:return c?function(e){return o()[e>>2]}:function(e){return i()[e>>2]};default:throw new TypeError(\"Unknown integer type: \"+e)}}function wn(e){return e||ln(\"Cannot use deleted val. handle = \"+e),mn[e].value}function An(e,n){var r=an[e];if(void 0===r){var t=rn(e=cr(e));ir(e),ln(n+\" has unknown type \"+t)}return r}var Tn={};function En(e){var n=Tn[e];return void 0===n?rn(e):n}var kn=[];function On(){return\"object\"==typeof globalThis?globalThis:Function(\"return this\")()}var Cn={};function Sn(){if(T)return Dn(16,1);we()}var Mn=[];function Dn(e,n){for(var r=arguments.length-2,t=Er(),a=Or(8*r),o=a>>3,i=0;i<r;i++){var c=arguments[2+i];u()[o+i]=c}return r=mr(e,r,a,n),kr(t),r}var xn=[],Fn=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function In(e){return e=2<e?Y(e):e,Fn[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Pn(e,n,r){var t=In(e);if(!t)return-4;if(t.Sb&&(o()[t.Sb>>2]=n,o()[t.Sb+4>>2]=r),!t.fc&&t.Uc){if(t.Sb){t=o()[t.Sb+8>>2],e=e?Y(e):\"\";var a=Er(),i=Or(12),u=0;if(e){u=q(e)+1;var c=ar(u);N(e,c,u),u=c}return o()[i>>2]=u,o()[i+4>>2]=n,o()[i+8>>2]=r,hr(0,t,657457152,0,u,i),kr(a),1}return-4}return t.fc&&(t=t.fc),e=!1,t.Rb&&t.Rb.Qb&&(e=0===(e=t.Rb.Qb.getParameter(2978))[0]&&0===e[1]&&e[2]===t.width&&e[3]===t.height),t.width=n,t.height=r,e&&t.Rb.Qb.viewport(0,0,n,r),0}function Rn(e,n,r){return T?Dn(17,1,e,n,r):Pn(e,n,r)}var Wn,Un=[\"default\",\"low-power\",\"high-performance\"],jn={};function Hn(){if(!Wn){var e,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in jn)void 0===jn[e]?delete n[e]:n[e]=jn[e];var r=[];for(e in n)r.push(e+\"=\"+n[e]);Wn=r}return Wn}function Yn(e,r){if(T)return Dn(18,1,e,r);var t=0;return Hn().forEach((function(a,i){var u=r+t;for(i=o()[e+4*i>>2]=u,u=0;u<a.length;++u)n()[i++>>0]=a.charCodeAt(u);n()[i>>0]=0,t+=a.length+1})),0}function Gn(e,n){if(T)return Dn(19,1,e,n);var r=Hn();o()[e>>2]=r.length;var t=0;return r.forEach((function(e){t+=e.length+1})),o()[n>>2]=t,0}function Nn(e){return T?Dn(20,1,e):0}function qn(e,r){return T?Dn(21,1,e,r):(e=1==e||2==e?2:we(),n()[r>>0]=e,0)}function Bn(e,n,r,t){return T?Dn(22,1,e,n,r,t):(e=He.$c(e),n=He.Zc(e,n,r),o()[t>>2]=n,0)}function Ln(e,n,r,t,a){if(T)return Dn(23,1,e,n,r,t,a)}function zn(e,n,t,a){if(T)return Dn(24,1,e,n,t,a);for(var i=0,u=0;u<t;u++){for(var c=o()[n+8*u>>2],f=o()[n+(8*u+4)>>2],s=0;s<f;s++)je(e,r()[c+s]);i+=f}return o()[a>>2]=i,0}function Vn(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(T)return Dn(25,1);if(!Vn.nc){Vn.nc=!0;var n=(new Date).getFullYear(),r=new Date(n,0,1),t=new Date(n,6,1);n=r.getTimezoneOffset();var a=t.getTimezoneOffset(),i=Math.max(n,a);o()[Tr()>>2]=60*i,o()[Ar()>>2]=Number(n!=a),r=e(r),t=e(t),r=ie(r),t=ie(t),a<n?(o()[wr()>>2]=r,o()[wr()+4>>2]=t):(o()[wr()>>2]=t,o()[wr()+4>>2]=r)}}function Jn(e){return 0==e%4&&(0!=e%100||0==e%400)}function Xn(e,n){for(var r=0,t=0;t<=n;r+=e[t++]);return r}var Qn=[31,29,31,30,31,30,31,31,30,31,30,31],Kn=[31,28,31,30,31,30,31,31,30,31,30,31];function Zn(e,n){for(e=new Date(e.getTime());0<n;){var r=e.getMonth(),t=(Jn(e.getFullYear())?Qn:Kn)[r];if(!(n>t-e.getDate())){e.setDate(e.getDate()+n);break}n-=t-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function $n(e,r,t,a){function i(e,n,r){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<n;)e=r[0]+e;return e}function u(e,n){return i(e,n,\"0\")}function c(e,n){function r(e){return 0>e?-1:0<e?1:0}var t;return 0===(t=r(e.getFullYear()-n.getFullYear()))&&0===(t=r(e.getMonth()-n.getMonth()))&&(t=r(e.getDate()-n.getDate())),t}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Zn(new Date(e.Cb+1900,0,1),e.Xb);var n=new Date(e.getFullYear()+1,0,4),r=f(new Date(e.getFullYear(),0,4));return n=f(n),0>=c(r,e)?0>=c(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=o()[a+40>>2];for(var p in a={Pc:o()[a>>2],Oc:o()[a+4>>2],Vb:o()[a+8>>2],Pb:o()[a+12>>2],Lb:o()[a+16>>2],Cb:o()[a+20>>2],Wb:o()[a+24>>2],Xb:o()[a+28>>2],kd:o()[a+32>>2],Nc:o()[a+36>>2],Qc:l?Y(l):\"\"},t=Y(t),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})t=t.replace(new RegExp(p,\"g\"),l[p]);var d=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(e){return d[e.Wb].substring(0,3)},\"%A\":function(e){return d[e.Wb]},\"%b\":function(e){return m[e.Lb].substring(0,3)},\"%B\":function(e){return m[e.Lb]},\"%C\":function(e){return u((e.Cb+1900)/100|0,2)},\"%d\":function(e){return u(e.Pb,2)},\"%e\":function(e){return i(e.Pb,2,\" \")},\"%g\":function(e){return s(e).toString().substring(2)},\"%G\":function(e){return s(e)},\"%H\":function(e){return u(e.Vb,2)},\"%I\":function(e){return 0==(e=e.Vb)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.Pb+Xn(Jn(e.Cb+1900)?Qn:Kn,e.Lb-1),3)},\"%m\":function(e){return u(e.Lb+1,2)},\"%M\":function(e){return u(e.Oc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.Vb&&12>e.Vb?\"AM\":\"PM\"},\"%S\":function(e){return u(e.Pc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.Wb||7},\"%U\":function(e){var n=new Date(e.Cb+1900,0,1),r=0===n.getDay()?n:Zn(n,7-n.getDay());return 0>c(r,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-r.getDate()+(Xn(Jn(e.getFullYear())?Qn:Kn,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(r,n)?\"01\":\"00\"},\"%V\":function(e){var n=new Date(e.Cb+1901,0,4),r=f(new Date(e.Cb+1900,0,4));n=f(n);var t=Zn(new Date(e.Cb+1900,0,1),e.Xb);return 0>c(t,r)?\"53\":0>=c(n,t)?\"01\":u(Math.ceil((r.getFullYear()<e.Cb+1900?e.Xb+32-r.getDate():e.Xb+1-r.getDate())/7),2)},\"%w\":function(e){return e.Wb},\"%W\":function(e){var n=new Date(e.Cb,0,1),r=1===n.getDay()?n:Zn(n,0===n.getDay()?1:7-n.getDay()+1);return 0>c(r,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-r.getDate()+(Xn(Jn(e.getFullYear())?Qn:Kn,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(r,n)?\"01\":\"00\"},\"%y\":function(e){return(e.Cb+1900).toString().substring(2)},\"%Y\":function(e){return e.Cb+1900},\"%z\":function(e){var n=0<=(e=e.Nc);return e=Math.abs(e)/60,(n?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.Qc},\"%%\":function(){return\"%\"}})t.includes(p)&&(t=t.replace(new RegExp(p,\"g\"),l[p](a)));return(p=function(e){var n=Array(q(e)+1);return G(e,n,0,n.length),n}(t)).length>r?0:(function(e,r){n().set(e,r)}(p,e),p.length-1)}for(var er=Array(256),nr=0;256>nr;++nr)er[nr]=String.fromCharCode(nr);nn=er,sn=c.BindingError=fn(\"BindingError\"),c.InternalError=fn(\"InternalError\"),c.count_emval_handles=function(){for(var e=0,n=5;n<mn.length;++n)void 0!==mn[n]&&++e;return e},c.get_first_emval=function(){for(var e=5;e<mn.length;++e)if(void 0!==mn[e])return mn[e];return null};var rr=[null,xe,Ye,Ge,Ne,qe,Be,Le,ze,Ve,Je,Xe,Qe,Ke,Ze,$e,Sn,Rn,Yn,Gn,Nn,qn,Bn,Ln,zn,Vn],tr={u:function(e,n,r,t){we(\"Assertion failed: \"+Y(e)+\", at: \"+[n?Y(n):\"unknown filename\",r,t?Y(t):\"unknown function\"])},da:function(e,n){return De(e,n)},b:function(e){return ar(e+16)+16},e:function(e,n){return xe(e,n)},l:function(e,n){Me.ac.push((function(){fe.get(e)(n)}))},c:function(e,n,r){throw new Fe(e).tc(n,r),e},ra:function(e,n,r,t){if(\"undefined\"==typeof SharedArrayBuffer)return D(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return D(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(T&&0===a.length)return pr(687865856,e,n,r,t);var u=0,c=0;if(n&&-1!=n){var f=o()[n>>2];f+=81920,u=o()[n+8>>2],c=0!==o()[n+12>>2]}else f=2097152;(n=0==u)?u=Sr(16,f):W(0<(u-=f));for(var s=ar(228),l=0;57>l;++l)i()[(s>>2)+l]=0;return o()[e>>2]=s,o()[s+12>>2]=s,e=s+152,o()[e>>2]=e,r={Ib:u,Kb:f,Yb:n,detached:c,Kc:r,Tb:s,Jb:t,Rc:a},T?(r.Tc=\"spawnThread\",postMessage(r,a),0):Ie(r)},pa:function(e){throw T?Me.kc(e):(Me.hc(),Ir(e)),\"unwind\"},qa:function(e,n){return function(e,n){if(!e)return D(\"pthread_join attempted on a null thread pointer!\"),71;if(T&&ur()==e)return D(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!T&&lr()==e)return D(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(o()[e+12>>2]!==e)return D(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return D(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(Re();;){var r=Atomics.load(i(),e+0>>2);if(1==r)return r=Atomics.load(i(),e+4>>2),n&&(o()[n>>2]=r),Atomics.store(i(),e+64>>2,1),T?postMessage({cmd:\"cleanupThread\",thread:e}):Ce(e),0;br(),T||dr(),Pe(e+0,r,T?100:1)}}(e,n)},ca:Ye,I:Ge,ja:Ne,ma:qe,K:function(){return 42},X:Be,ia:Le,ha:ze,la:Ve,ka:Je,E:Xe,ba:Qe,fa:Ke,L:Ze,ga:$e,U:function(){},Ba:function(e,r,a,i,u){var c=en(a);pn(e,{name:r=rn(r),fromWireType:function(e){return!!e},toWireType:function(e,n){return n?i:u},argPackAdvance:8,readValueFromPointer:function(e){if(1===a)var i=n();else if(2===a)i=t();else{if(4!==a)throw new TypeError(\"Unknown boolean type size: \"+r);i=o()}return this.fromWireType(i[e>>c])},Mb:null})},Aa:function(e,n){pn(e,{name:n=rn(n),fromWireType:function(e){var n=mn[e].value;return hn(e),n},toWireType:function(e,n){return bn(n)},argPackAdvance:8,readValueFromPointer:gn,Mb:null})},N:function(e,n,r){r=en(r),pn(e,{name:n=rn(n),fromWireType:function(e){return e},toWireType:function(e,n){if(\"number\"!=typeof n&&\"boolean\"!=typeof n)throw new TypeError('Cannot convert \"'+yn(n)+'\" to '+this.name);return n},argPackAdvance:8,readValueFromPointer:_n(n,r),Mb:null})},t:function(e,n,r,t,a){function o(e){return e}n=rn(n),-1===a&&(a=4294967295);var i=en(r);if(0===t){var u=32-8*r;o=function(e){return e<<u>>>u}}var c=n.includes(\"unsigned\");pn(e,{name:n,fromWireType:o,toWireType:function(e,r){if(\"number\"!=typeof r&&\"boolean\"!=typeof r)throw new TypeError('Cannot convert \"'+yn(r)+'\" to '+this.name);if(r<t||r>a)throw new TypeError('Passing a number \"'+yn(r)+'\" from JS side to C/C++ side to an argument of type \"'+n+'\", which is outside the valid range ['+t+\", \"+a+\"]!\");return c?r>>>0:0|r},argPackAdvance:8,readValueFromPointer:vn(n,i,0!==t),Mb:null})},s:function(e,n,r){function t(e){e>>=2;var n=i();return new a(B,n[e+1],n[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][n];pn(e,{name:r=rn(r),fromWireType:t,argPackAdvance:8,readValueFromPointer:t},{sc:!0})},O:function(e,n){var t=\"std::string\"===(n=rn(n));pn(e,{name:n,fromWireType:function(e){var n=i()[e>>2];if(t)for(var a=e+4,o=0;o<=n;++o){var u=e+4+o;if(o==n||0==r()[u]){if(a=Y(a,u-a),void 0===c)var c=a;else c+=String.fromCharCode(0),c+=a;a=u+1}}else{for(c=Array(n),o=0;o<n;++o)c[o]=String.fromCharCode(r()[e+4+o]);c=c.join(\"\")}return ir(e),c},toWireType:function(e,n){n instanceof ArrayBuffer&&(n=new Uint8Array(n));var a=\"string\"==typeof n;a||n instanceof Uint8Array||n instanceof Uint8ClampedArray||n instanceof Int8Array||ln(\"Cannot pass non-string to std::string\");var o=(t&&a?function(){return q(n)}:function(){return n.length})(),u=ar(4+o+1);if(i()[u>>2]=o,t&&a)N(n,u+4,o+1);else if(a)for(a=0;a<o;++a){var c=n.charCodeAt(a);255<c&&(ir(u),ln(\"String has UTF-16 code units that do not fit in 8 bits\")),r()[u+4+a]=c}else for(a=0;a<o;++a)r()[u+4+a]=n[a];return null!==e&&e.push(ir,u),u},argPackAdvance:8,readValueFromPointer:gn,Mb:function(e){ir(e)}})},F:function(e,n,r){if(r=rn(r),2===n)var t=ee,o=ne,u=re,c=function(){return a()},f=1;else 4===n&&(t=te,o=ae,u=oe,c=function(){return i()},f=2);pn(e,{name:r,fromWireType:function(e){for(var r,a=i()[e>>2],o=c(),u=e+4,s=0;s<=a;++s){var l=e+4+s*n;s!=a&&0!=o[l>>f]||(u=t(u,l-u),void 0===r?r=u:(r+=String.fromCharCode(0),r+=u),u=l+n)}return ir(e),r},toWireType:function(e,t){\"string\"!=typeof t&&ln(\"Cannot pass non-string to C++ string type \"+r);var a=u(t),c=ar(4+a+n);return i()[c>>2]=a>>f,o(t,c+4,a+n),null!==e&&e.push(ir,c),c},argPackAdvance:8,readValueFromPointer:gn,Mb:function(e){ir(e)}})},Ca:function(e,n){pn(e,{xc:!0,name:n=rn(n),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},xa:function(e,n){if(e==n)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(T)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=Me.Eb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},G:function(e,n,r){e=wn(e),n=An(n,\"emval::as\");var t=[],a=bn(t);return o()[r>>2]=a,n.toWireType(t,e)},r:function(e,n,r,t,a){e=kn[e],n=wn(n),r=En(r);var i=[];return o()[t>>2]=bn(i),e(n,r,i,a)},n:function(e,n,r,t){(e=kn[e])(n=wn(n),r=En(r),null,t)},d:hn,P:function(e,n){return(e=wn(e))==wn(n)},R:function(e){return 0===e?bn(On()):(e=En(e),bn(On()[e]))},i:function(e,n){for(var r=(n=function(e,n){for(var r=Array(e),t=0;t<e;++t)r[t]=An(o()[(n>>2)+t],\"parameter \"+t);return r}(e,n))[0],t=r.name+\"_$\"+n.slice(1).map((function(e){return e.name})).join(\"_\")+\"$\",a=[\"retType\"],i=[r],u=\"\",c=0;c<e-1;++c)u+=(0!==c?\", \":\"\")+\"arg\"+c,a.push(\"argType\"+c),i.push(n[1+c]);t=\"return function \"+un(\"methodCaller_\"+t)+\"(handle, name, destructors, args) {\\n\";var f=0;for(c=0;c<e-1;++c)t+=\"    var arg\"+c+\" = argType\"+c+\".readValueFromPointer(args\"+(f?\"+\"+f:\"\")+\");\\n\",f+=n[c+1].argPackAdvance;for(t+=\"    var rv = handle[name](\"+u+\");\\n\",c=0;c<e-1;++c)n[c+1].deleteObject&&(t+=\"    argType\"+c+\".deleteObject(arg\"+c+\");\\n\");return r.xc||(t+=\"    return retType.toWireType(destructors, rv);\\n\"),a.push(t+\"};\\n\"),function(e){var n=kn.length;return kn.push(e),n}(e=function(e){var n=Function;if(!(n instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof n+\" which is not a function\");var r=cn(n.name||\"unknownFunctionName\",(function(){}));return r.prototype=n.prototype,r=new r,(e=n.apply(r,e))instanceof Object?e:r}(a).apply(null,i))},A:function(e,n){return bn((e=wn(e))[n=wn(n)])},h:function(e){4<e&&(mn[e].$b+=1)},Da:function(e,n,r,t){e=wn(e);var a=Cn[n];if(!a){a=\"\";for(var o=0;o<n;++o)a+=(0!==o?\", \":\"\")+\"arg\"+o;var i=\"return function emval_allocator_\"+n+\"(constructor, argTypes, args) {\\n\";for(o=0;o<n;++o)i+=\"var argType\"+o+\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \"+o+'], \"parameter '+o+'\");\\nvar arg'+o+\" = argType\"+o+\".readValueFromPointer(args);\\nargs += argType\"+o+\"['argPackAdvance'];\\n\";a=new Function(\"requireRegisteredType\",\"Module\",\"__emval_register\",i+\"var obj = new constructor(\"+a+\");\\nreturn __emval_register(obj);\\n}\\n\")(An,c,bn),Cn[n]=a}return a(e,r,t)},o:function(){return bn([])},f:function(e){return bn(En(e))},j:function(){return bn({})},p:function(e){for(var n=mn[e].value;n.length;){var r=n.pop();n.pop()(r)}hn(e)},g:function(e,n,r){e=wn(e),n=wn(n),r=wn(r),e[n]=r},k:function(e,n){return bn(e=(e=An(e,\"_emval_take_value\")).readValueFromPointer(n))},m:Sn,Q:De,Fa:function(e,n){return e-n},ea:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},z:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},na:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Y:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ya:function(e,n,t){var a;for(Mn.length=0,t>>=2;a=r()[n++];)(a=105>a)&&1&t&&t++,Mn.push(a?u()[t++>>1]:o()[t]),++t;return Ee[e].apply(null,Mn)},Z:Re,B:function(){},x:Pe,w:Oe,oa:function(){return 2147483648},v:Se,V:function(e,n,t){r().copyWithin(e,n,n+t)},C:function(){return A?require(\"os\").cpus().length:navigator.hardwareConcurrency},ua:function(e,n,r){xn.length=n,r>>=3;for(var t=0;t<n;t++)xn[t]=u()[r+t];return(0>e?Ee[-e-1]:rr[e]).apply(null,xn)},W:function(e){var n=r().length;if((e>>>=0)<=n||2147483648<e)return!1;for(var t=1;4>=t;t*=2){var a=n*(1+.2/t);a=Math.min(a,e+100663296),0<(a=Math.max(e,a))%65536&&(a+=65536-a%65536);e:{try{F.grow(Math.min(2147483648,a)-B.byteLength+65535>>>16),ue(F.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},va:function(e,n,r){return In(e)?Pn(e,n,r):Rn(e,n,r)},M:function(){},ta:function(e,n,r){return me+=1,setTimeout((function(){--me,function(e){if(!R){try{e()}catch(e){if(e instanceof xr)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&D(\"exception thrown: \"+[e,e.stack]),e}if(!he())try{T?gr(P):Ir(P)}catch(e){if(!(e instanceof xr))throw e}}}((function(){fe.get(e)(r)}))}),n)},wa:function(e,n){n>>=2;var r=o()[n+6];return n={alpha:!!o()[n],depth:!!o()[n+1],stencil:!!o()[n+2],antialias:!!o()[n+3],premultipliedAlpha:!!o()[n+4],preserveDrawingBuffer:!!o()[n+5],powerPreference:Un[r],failIfMajorPerformanceCaveat:!!o()[n+7],Ac:o()[n+8],cd:o()[n+9],dc:o()[n+10],pc:o()[n+11],gd:o()[n+12],hd:o()[n+13]},!(e=In(e))||n.pc?0:function(e,n){e.ec||(e.ec=e.getContext,e.getContext=function(n,r){return\"webgl\"==n==(r=e.ec(n,r))instanceof WebGLRenderingContext?r:null});var r=e.getContext(\"webgl\",n);return r?function(e,n){var r=ar(8);o()[r+4>>2]=ur();var t={ad:r,attributes:n,version:n.Ac,Qb:e};return e.canvas&&(e.canvas.Rb=t),(void 0===n.dc||n.dc)&&function(e){if(e||(e=void 0),!e.uc){e.uc=!0;var n=e.Qb;!function(e){var n=e.getExtension(\"ANGLE_instanced_arrays\");n&&(e.vertexAttribDivisor=function(e,r){n.vertexAttribDivisorANGLE(e,r)},e.drawArraysInstanced=function(e,r,t,a){n.drawArraysInstancedANGLE(e,r,t,a)},e.drawElementsInstanced=function(e,r,t,a,o){n.drawElementsInstancedANGLE(e,r,t,a,o)})}(n),function(e){var n=e.getExtension(\"OES_vertex_array_object\");n&&(e.createVertexArray=function(){return n.createVertexArrayOES()},e.deleteVertexArray=function(e){n.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){n.bindVertexArrayOES(e)},e.isVertexArray=function(e){return n.isVertexArrayOES(e)})}(n),function(e){var n=e.getExtension(\"WEBGL_draw_buffers\");n&&(e.drawBuffers=function(e,r){n.drawBuffersWEBGL(e,r)})}(n),n.Vc=n.getExtension(\"EXT_disjoint_timer_query\"),n.dd=n.getExtension(\"WEBGL_multi_draw\"),(n.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||n.getExtension(e)}))}}(t),r}(r,n):0}(e,n)},$:Yn,aa:Gn,y:Nn,_:qn,J:Bn,T:Ln,D:zn,za:function(e){var n=Date.now();return o()[e>>2]=n/1e3|0,o()[e+4>>2]=n%1e3*1e3|0,0},Ga:function e(n,r){return n=new Date(1e3*o()[n>>2]),o()[r>>2]=n.getUTCSeconds(),o()[r+4>>2]=n.getUTCMinutes(),o()[r+8>>2]=n.getUTCHours(),o()[r+12>>2]=n.getUTCDate(),o()[r+16>>2]=n.getUTCMonth(),o()[r+20>>2]=n.getUTCFullYear()-1900,o()[r+24>>2]=n.getUTCDay(),o()[r+36>>2]=0,o()[r+32>>2]=0,n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[r+28>>2]=n,e.cc||(e.cc=ie(\"GMT\")),o()[r+40>>2]=e.cc,r},sa:function(){Me.vc()},H:function(e,n){Vn(),e=new Date(1e3*o()[e>>2]),o()[n>>2]=e.getSeconds(),o()[n+4>>2]=e.getMinutes(),o()[n+8>>2]=e.getHours(),o()[n+12>>2]=e.getDate(),o()[n+16>>2]=e.getMonth(),o()[n+20>>2]=e.getFullYear()-1900,o()[n+24>>2]=e.getDay();var r=new Date(e.getFullYear(),0,1),t=(e.getTime()-r.getTime())/864e5|0;return o()[n+28>>2]=t,o()[n+36>>2]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(t!=(r=r.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(r,t)),o()[n+32>>2]=e,e=o()[wr()+(e?4:0)>>2],o()[n+40>>2]=e,n},a:F||c.wasmMemory,S:function(e){Vn();var n=new Date(o()[e+20>>2]+1900,o()[e+16>>2],o()[e+12>>2],o()[e+8>>2],o()[e+4>>2],o()[e>>2],0),r=o()[e+32>>2],t=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),i=new Date(n.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,i);return 0>r?o()[e+32>>2]=Number(i!=u&&c==t):0<r!=(c==t)&&(i=Math.max(u,i),n.setTime(n.getTime()+6e4*((0<r?c:i)-t))),o()[e+24>>2]=n.getDay(),r=(n.getTime()-a.getTime())/864e5|0,o()[e+28>>2]=r,o()[e>>2]=n.getSeconds(),o()[e+4>>2]=n.getMinutes(),o()[e+8>>2]=n.getHours(),o()[e+12>>2]=n.getDate(),o()[e+16>>2]=n.getMonth(),n.getTime()/1e3|0},Ea:$n,q:function(e,n,r,t){return $n(e,n,r,t)}};!function(){function e(e,n){c.asm=e.exports,fe=c.asm.ab,le.unshift(c.asm.Ha),Me.bc.push(c.asm.fb),I=n,T||(ye--,c.monitorRunDependencies&&c.monitorRunDependencies(ye),0==ye&&(null!==_e&&(clearInterval(_e),_e=null),ve&&(e=ve,ve=null,e())))}function n(n){e(n.instance,n.module)}function r(e){return function(){if(!S&&(v||w)){if(\"function\"==typeof fetch&&!ge.startsWith(\"file://\"))return fetch(ge,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ge+\"'\";return e.arrayBuffer()})).catch((function(){return Te()}));if(b)return new Promise((function(e,n){b(ge,(function(n){e(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return Te()}))}().then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(e){D(\"failed to asynchronously prepare wasm: \"+e),we(e)}))}var t={a:tr};if(T||(ye++,c.monitorRunDependencies&&c.monitorRunDependencies(ye)),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(e){return D(\"Module.instantiateWasm callback failed with error: \"+e),!1}(S||\"function\"!=typeof WebAssembly.instantiateStreaming||Ae()||ge.startsWith(\"file://\")||\"function\"!=typeof fetch?r(n):fetch(ge,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(e){return D(\"wasm streaming compile failed: \"+e),D(\"falling back to ArrayBuffer instantiation\"),r(n)}))}))).catch(s)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.Ha).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.Ia).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.Ja).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.Ka).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.La).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.Ma).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.Na).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.Oa).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.Pa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.Qa).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Ra).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Sa).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.Ta).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Ua).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Va).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.Wa).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.Xa).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.Ya).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Za).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm._a).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.$a).apply(null,arguments)};var ar=c._malloc=function(){return(ar=c._malloc=c.asm.bb).apply(null,arguments)},or=c.___errno_location=function(){return(or=c.___errno_location=c.asm.cb).apply(null,arguments)},ir=c._free=function(){return(ir=c._free=c.asm.db).apply(null,arguments)},ur=c._pthread_self=function(){return(ur=c._pthread_self=c.asm.eb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.fb).apply(null,arguments)};var cr=c.___getTypeName=function(){return(cr=c.___getTypeName=c.asm.gb).apply(null,arguments)};c.___embind_register_native_and_builtin_types=function(){return(c.___embind_register_native_and_builtin_types=c.asm.hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.ib).apply(null,arguments)};var fr,sr=c._emscripten_register_main_browser_thread_id=function(){return(sr=c._emscripten_register_main_browser_thread_id=c.asm.jb).apply(null,arguments)},lr=c._emscripten_main_browser_thread_id=function(){return(lr=c._emscripten_main_browser_thread_id=c.asm.kb).apply(null,arguments)},pr=c._emscripten_sync_run_in_main_thread_4=function(){return(pr=c._emscripten_sync_run_in_main_thread_4=c.asm.lb).apply(null,arguments)},dr=c._emscripten_main_thread_process_queued_calls=function(){return(dr=c._emscripten_main_thread_process_queued_calls=c.asm.mb).apply(null,arguments)},mr=c._emscripten_run_in_main_runtime_thread_js=function(){return(mr=c._emscripten_run_in_main_runtime_thread_js=c.asm.nb).apply(null,arguments)},hr=c.__emscripten_call_on_thread=function(){return(hr=c.__emscripten_call_on_thread=c.asm.ob).apply(null,arguments)},br=c._pthread_testcancel=function(){return(br=c._pthread_testcancel=c.asm.pb).apply(null,arguments)},gr=c._pthread_exit=function(){return(gr=c._pthread_exit=c.asm.qb).apply(null,arguments)},yr=c.__emscripten_thread_init=function(){return(yr=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)},_r=c._emscripten_get_global_libc=function(){return(_r=c._emscripten_get_global_libc=c.asm.sb).apply(null,arguments)},vr=c.___pthread_tsd_run_dtors=function(){return(vr=c.___pthread_tsd_run_dtors=c.asm.tb).apply(null,arguments)},wr=c.__get_tzname=function(){return(wr=c.__get_tzname=c.asm.ub).apply(null,arguments)},Ar=c.__get_daylight=function(){return(Ar=c.__get_daylight=c.asm.vb).apply(null,arguments)},Tr=c.__get_timezone=function(){return(Tr=c.__get_timezone=c.asm.wb).apply(null,arguments)},Er=c.stackSave=function(){return(Er=c.stackSave=c.asm.xb).apply(null,arguments)},kr=c.stackRestore=function(){return(kr=c.stackRestore=c.asm.yb).apply(null,arguments)},Or=c.stackAlloc=function(){return(Or=c.stackAlloc=c.asm.zb).apply(null,arguments)},Cr=c._emscripten_stack_set_limits=function(){return(Cr=c._emscripten_stack_set_limits=c.asm.Ab).apply(null,arguments)},Sr=c._memalign=function(){return(Sr=c._memalign=c.asm.Bb).apply(null,arguments)},Mr=c.__emscripten_allow_main_runtime_queued_calls=984944,Dr=c.__emscripten_main_thread_futex=989072;function xr(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function Fr(){function e(){if(!fr&&(fr=!0,c.calledRun=!0,!R)&&(T||ke(le),f(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!T)){if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();de.unshift(e)}ke(de)}}if(!(0<ye))if(T)f(c),T||ke(le),postMessage({cmd:\"loaded\"});else{if(!T){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)be();ke(se)}0<ye||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){c.setStatus(\"\")}),1),e()}),1)):e())}}function Ir(e){if(P=e,T)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new xr(e);he()||(Me.jc(),T||(ke(pe),\"undefined\"!=typeof _fflush&&_fflush(0),Ue[1].length&&je(1,10),Ue[2].length&&je(2,10))),P=e,he()||(Me.jc(),c.onExit&&c.onExit(e),R=!0),m(e,new xr(e))}if(c.UTF8ToString=Y,c.stringToUTF8=N,c.lengthBytesUTF8=q,c.keepRuntimeAlive=he,c.PThread=Me,c.stackSave=Er,c.stackRestore=kr,c.stackAlloc=Or,c.PThread=Me,c.wasmMemory=F,c.ExitStatus=xr,ve=function e(){fr||Fr(),fr||(ve=e)},c.run=Fr,c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return T&&(x=!1,Me.wc()),Fr(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\r\nvar ortWasm = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar e;e||(e=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;e.ready=new Promise(function(a,b){aa=a;ba=b});var k={},u;for(u in e)e.hasOwnProperty(u)&&(k[u]=e[u]);var ca=\"./this.program\",da=\"object\"===typeof window,v=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,x=\"\",fa,y,z,A,B;\r\nif(ea)x=v?require(\"path\").dirname(x)+\"/\":__dirname+\"/\",fa=function(a,b){A||(A=require(\"fs\"));B||(B=require(\"path\"));a=B.normalize(a);return A.readFileSync(a,b?null:\"utf8\")},z=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||C(\"Assertion failed: undefined\");return a},y=function(a,b,c){A||(A=require(\"fs\"));B||(B=require(\"path\"));a=B.normalize(a);A.readFile(a,function(d,f){d?c(d):b(f.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\r\nfunction(a){throw a;}),process.on(\"unhandledRejection\",C),e.inspect=function(){return\"[Emscripten Module object]\"};else if(da||v)v?x=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.lastIndexOf(\"/\")+1):x=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},v&&(z=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\r\nb.send(null);return new Uint8Array(b.response)}),y=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ha=e.print||console.log.bind(console),D=e.printErr||console.warn.bind(console);for(u in k)k.hasOwnProperty(u)&&(e[u]=k[u]);k=null;e.thisProgram&&(ca=e.thisProgram);var E;e.wasmBinary&&(E=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!1;\r\n\"object\"!==typeof WebAssembly&&C(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction la(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(d=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))d+=String.fromCharCode((f&31)<<6|h);else{var l=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|l:(f&7)<<18|h<<12|l<<6|a[b++]&63;65536>f?d+=String.fromCharCode(f):(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else d+=String.fromCharCode(f)}return d}function F(a,b){return a?la(H,a,b):\"\"}\r\nfunction ma(a,b,c,d){if(!(0<d))return 0;var f=c;d=c+d-1;for(var h=0;h<a.length;++h){var l=a.charCodeAt(h);if(55296<=l&&57343>=l){var m=a.charCodeAt(++h);l=65536+((l&1023)<<10)|m&1023}if(127>=l){if(c>=d)break;b[c++]=l}else{if(2047>=l){if(c+1>=d)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=d)break;b[c++]=224|l>>12}else{if(c+3>=d)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-f}function na(a,b,c){return ma(a,H,b,c)}\r\nfunction oa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}var pa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function qa(a,b){var c=a>>1;for(var d=c+b/2;!(c>=d)&&ra[c];)++c;c<<=1;if(32<c-a&&pa)return pa.decode(H.subarray(a,c));c=\"\";for(d=0;!(d>=b/2);++d){var f=I[a+2*d>>1];if(0==f)break;c+=String.fromCharCode(f)}return c}\r\nfunction sa(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var f=0;f<c;++f)I[b>>1]=a.charCodeAt(f),b+=2;I[b>>1]=0;return b-d}function ta(a){return 2*a.length}function ua(a,b){for(var c=0,d=\"\";!(c>=b/4);){var f=J[a+4*c>>2];if(0==f)break;++c;65536<=f?(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023)):d+=String.fromCharCode(f)}return d}\r\nfunction va(a,b,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var f=0;f<a.length;++f){var h=a.charCodeAt(f);if(55296<=h&&57343>=h){var l=a.charCodeAt(++f);h=65536+((h&1023)<<10)|l&1023}J[b>>2]=h;b+=4;if(b+4>c)break}J[b>>2]=0;return b-d}function wa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}function xa(a){var b=oa(a)+1,c=K(b);c&&ma(a,L,c,b);return c}var ya,L,H,I,ra,J,N,za,Aa;\r\nfunction Ba(){var a=ia.buffer;ya=a;e.HEAP8=L=new Int8Array(a);e.HEAP16=I=new Int16Array(a);e.HEAP32=J=new Int32Array(a);e.HEAPU8=H=new Uint8Array(a);e.HEAPU16=ra=new Uint16Array(a);e.HEAPU32=N=new Uint32Array(a);e.HEAPF32=za=new Float32Array(a);e.HEAPF64=Aa=new Float64Array(a)}var Ca,Da=[],Ea=[],Fa=[],Ga=[];function Ha(){var a=e.preRun.shift();Da.unshift(a)}var O=0,Ia=null,P=null;e.preloadedImages={};e.preloadedAudios={};\r\nfunction C(a){if(e.onAbort)e.onAbort(a);D(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Ja(){return Q.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!Ja()){var Ka=Q;Q=e.locateFile?e.locateFile(Ka,x):x+Ka}function La(){var a=Q;try{if(a==Q&&E)return new Uint8Array(E);if(z)return z(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){C(b)}}\r\nfunction Ma(){if(!E&&(da||v)){if(\"function\"===typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return a.arrayBuffer()}).catch(function(){return La()});if(y)return new Promise(function(a,b){y(Q,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return La()})}\r\nfunction Na(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(e);else{var c=b.ib;\"number\"===typeof c?void 0===b.Za?Ca.get(c)():Ca.get(c)(b.Za):c(void 0===b.Za?null:b.Za)}}}function Oa(a){this.ab=a-16;this.tb=function(b){J[this.ab+4>>2]=b};this.qb=function(b){J[this.ab+8>>2]=b};this.rb=function(){J[this.ab>>2]=0};this.pb=function(){L[this.ab+12>>0]=0};this.sb=function(){L[this.ab+13>>0]=0};this.lb=function(b,c){this.tb(b);this.qb(c);this.rb();this.pb();this.sb()}}\r\nvar Pa=0,Qa={},Ra=[null,[],[]],R={};function Sa(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var Ta=void 0;function S(a){for(var b=\"\";H[a];)b+=Ta[H[a++]];return b}var Ua={},Va={},Wa={};function Xa(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}\r\nfunction Ya(a,b){a=Xa(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}function Za(a){var b=Error,c=Ya(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}\r\nvar $a=void 0;function T(a){throw new $a(a);}function U(a,b,c){c=c||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||T('type \"'+d+'\" must have a positive integer typeid pointer');if(Va.hasOwnProperty(a)){if(c.kb)return;T(\"Cannot register type '\"+d+\"' twice\")}Va[a]=b;delete Wa[a];Ua.hasOwnProperty(a)&&(b=Ua[a],delete Ua[a],b.forEach(function(f){f()}))}var ab=[],V=[{},{value:void 0},{value:null},{value:!0},{value:!1}];\r\nfunction bb(a){4<a&&0===--V[a].gb&&(V[a]=void 0,ab.push(a))}function W(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=ab.length?ab.pop():V.length;V[b]={gb:1,value:a};return b}}function cb(a){return this.fromWireType(N[a>>2])}function db(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}\r\nfunction eb(a,b){switch(b){case 2:return function(c){return this.fromWireType(za[c>>2])};case 3:return function(c){return this.fromWireType(Aa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\r\nfunction fb(a,b,c){switch(b){case 0:return c?function(d){return L[d]}:function(d){return H[d]};case 1:return c?function(d){return I[d>>1]}:function(d){return ra[d>>1]};case 2:return c?function(d){return J[d>>2]}:function(d){return N[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function X(a){a||T(\"Cannot use deleted val. handle = \"+a);return V[a].value}function gb(a,b){var c=Va[a];if(void 0===c){a=hb(a);var d=S(a);Y(a);T(b+\" has unknown type \"+d)}return c}var ib={};\r\nfunction jb(a){var b=ib[a];return void 0===b?S(a):b}var kb=[];function lb(){return\"object\"===typeof globalThis?globalThis:Function(\"return this\")()}function mb(a){var b=kb.length;kb.push(a);return b}function nb(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=gb(J[(b>>2)+d],\"parameter \"+d);return c}\r\nfunction ob(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var c=Ya(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}var qb={},rb;rb=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var sb={};\r\nfunction tb(){if(!ub){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in sb)void 0===sb[b]?delete a[b]:a[b]=sb[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);ub=c}return ub}var ub;\r\nfunction vb(a,b){a=new Date(1E3*J[a>>2]);J[b>>2]=a.getUTCSeconds();J[b+4>>2]=a.getUTCMinutes();J[b+8>>2]=a.getUTCHours();J[b+12>>2]=a.getUTCDate();J[b+16>>2]=a.getUTCMonth();J[b+20>>2]=a.getUTCFullYear()-1900;J[b+24>>2]=a.getUTCDay();J[b+36>>2]=0;J[b+32>>2]=0;J[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;vb.hb||(vb.hb=xa(\"GMT\"));J[b+40>>2]=vb.hb;return b}\r\nfunction wb(){function a(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}if(!xb){xb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),d=new Date(b,6,1);b=c.getTimezoneOffset();var f=d.getTimezoneOffset(),h=Math.max(b,f);J[yb()>>2]=60*h;J[zb()>>2]=Number(b!=f);c=a(c);d=a(d);c=xa(c);d=xa(d);f<b?(J[Z()>>2]=c,J[Z()+4>>2]=d):(J[Z()>>2]=d,J[Z()+4>>2]=c)}}var xb;function Ab(a){return 0===a%4&&(0!==a%100||0===a%400)}function Bb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\r\nvar Cb=[31,29,31,30,31,30,31,31,30,31,30,31],Db=[31,28,31,30,31,30,31,31,30,31,30,31];function Eb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(Ab(a.getFullYear())?Cb:Db)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\r\nfunction Fb(a,b,c,d){function f(g,n,t){for(g=\"number\"===typeof g?g.toString():g||\"\";g.length<n;)g=t[0]+g;return g}function h(g,n){return f(g,n,\"0\")}function l(g,n){function t(pb){return 0>pb?-1:0<pb?1:0}var M;0===(M=t(g.getFullYear()-n.getFullYear()))&&0===(M=t(g.getMonth()-n.getMonth()))&&(M=t(g.getDate()-n.getDate()));return M}function m(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function p(g){g=Eb(new Date(g.Xa+1900,0,1),g.fb);var n=new Date(g.getFullYear()+1,0,4),t=m(new Date(g.getFullYear(),0,4));n=m(n);return 0>=l(t,g)?0>=l(n,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var r=J[d+40>>2];d={wb:J[d>>2],vb:J[d+4>>2],cb:J[d+8>>2],bb:J[d+12>>2],Ya:J[d+16>>2],Xa:J[d+20>>2],eb:J[d+24>>2],fb:J[d+28>>2],Eb:J[d+32>>2],ub:J[d+\r\n36>>2],xb:r?F(r):\"\"};c=F(c);r={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var q in r)c=c.replace(new RegExp(q,\"g\"),r[q]);var w=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\r\nG=\"January February March April May June July August September October November December\".split(\" \");r={\"%a\":function(g){return w[g.eb].substring(0,3)},\"%A\":function(g){return w[g.eb]},\"%b\":function(g){return G[g.Ya].substring(0,3)},\"%B\":function(g){return G[g.Ya]},\"%C\":function(g){return h((g.Xa+1900)/100|0,2)},\"%d\":function(g){return h(g.bb,2)},\"%e\":function(g){return f(g.bb,2,\" \")},\"%g\":function(g){return p(g).toString().substring(2)},\"%G\":function(g){return p(g)},\"%H\":function(g){return h(g.cb,\r\n2)},\"%I\":function(g){g=g.cb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){return h(g.bb+Bb(Ab(g.Xa+1900)?Cb:Db,g.Ya-1),3)},\"%m\":function(g){return h(g.Ya+1,2)},\"%M\":function(g){return h(g.vb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.cb&&12>g.cb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.wb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.eb||7},\"%U\":function(g){var n=new Date(g.Xa+1900,0,1),t=0===n.getDay()?n:Eb(n,7-n.getDay());g=new Date(g.Xa+1900,g.Ya,g.bb);return 0>\r\nl(t,g)?h(Math.ceil((31-t.getDate()+(Bb(Ab(g.getFullYear())?Cb:Db,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(t,n)?\"01\":\"00\"},\"%V\":function(g){var n=new Date(g.Xa+1901,0,4),t=m(new Date(g.Xa+1900,0,4));n=m(n);var M=Eb(new Date(g.Xa+1900,0,1),g.fb);return 0>l(M,t)?\"53\":0>=l(n,M)?\"01\":h(Math.ceil((t.getFullYear()<g.Xa+1900?g.fb+32-t.getDate():g.fb+1-t.getDate())/7),2)},\"%w\":function(g){return g.eb},\"%W\":function(g){var n=new Date(g.Xa,0,1),t=1===n.getDay()?n:Eb(n,0===n.getDay()?1:7-n.getDay()+1);g=\r\nnew Date(g.Xa+1900,g.Ya,g.bb);return 0>l(t,g)?h(Math.ceil((31-t.getDate()+(Bb(Ab(g.getFullYear())?Cb:Db,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(t,n)?\"01\":\"00\"},\"%y\":function(g){return(g.Xa+1900).toString().substring(2)},\"%Y\":function(g){return g.Xa+1900},\"%z\":function(g){g=g.ub;var n=0<=g;g=Math.abs(g)/60;return(n?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.xb},\"%%\":function(){return\"%\"}};for(q in r)c.includes(q)&&(c=c.replace(new RegExp(q,\"g\"),r[q](d)));q=Gb(c);\r\nif(q.length>b)return 0;L.set(q,a);return q.length-1}for(var Hb=Array(256),Ib=0;256>Ib;++Ib)Hb[Ib]=String.fromCharCode(Ib);Ta=Hb;$a=e.BindingError=Za(\"BindingError\");e.InternalError=Za(\"InternalError\");e.count_emval_handles=function(){for(var a=0,b=5;b<V.length;++b)void 0!==V[b]&&++a;return a};e.get_first_emval=function(){for(var a=5;a<V.length;++a)if(void 0!==V[a])return V[a];return null};function Gb(a){var b=Array(oa(a)+1);ma(a,b,0,b.length);return b}\r\nvar Lb={a:function(a){return K(a+16)+16},c:function(a,b){Fa.unshift({ib:a,Za:b})},k:function(a,b){Fa.unshift({ib:a,Za:b})},b:function(a,b,c){(new Oa(a)).lb(b,c);Pa++;throw a;},X:function(a,b){a=F(a);return R.yb(a,b)},B:function(){return 0},aa:function(){},da:function(){},D:function(){return 42},Q:function(){return 0},$:function(){},_:function(a,b){a=F(a);return R.zb(a,b)},ca:function(a,b,c,d,f,h){h<<=12;if(0!==(d&16)&&0!==a%65536)b=-28;else if(0!==(d&32)){a=65536*Math.ceil(b/65536);var l=Jb(65536,\r\na);l?(H.fill(0,l,l+a),a=l):a=0;a?(Qa[a]={ob:a,nb:b,jb:!0,fd:f,Db:c,flags:d,offset:h},b=a):b=-48}else b=-52;return b},ba:function(a,b){var c=Qa[a];0!==b&&c?(b===c.nb&&(Qa[a]=null,c.jb&&Y(c.ob)),a=0):a=-28;return a},x:function(){},W:function(a,b,c){a=F(a);return R.Ab(a,b,c)},Y:function(){},G:function(){},Z:function(){},O:function(){},ha:function(a,b,c,d,f){var h=Sa(c);b=S(b);U(a,{name:b,fromWireType:function(l){return!!l},toWireType:function(l,m){return m?d:f},argPackAdvance:8,readValueFromPointer:function(l){if(1===\r\nc)var m=L;else if(2===c)m=I;else if(4===c)m=J;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(m[l>>h])},$a:null})},ga:function(a,b){b=S(b);U(a,{name:b,fromWireType:function(c){var d=V[c].value;bb(c);return d},toWireType:function(c,d){return W(d)},argPackAdvance:8,readValueFromPointer:cb,$a:null})},H:function(a,b,c){c=Sa(c);b=S(b);U(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,f){if(\"number\"!==typeof f&&\"boolean\"!==typeof f)throw new TypeError('Cannot convert \"'+\r\ndb(f)+'\" to '+this.name);return f},argPackAdvance:8,readValueFromPointer:eb(b,c),$a:null})},r:function(a,b,c,d,f){function h(r){return r}b=S(b);-1===f&&(f=4294967295);var l=Sa(c);if(0===d){var m=32-8*c;h=function(r){return r<<m>>>m}}var p=b.includes(\"unsigned\");U(a,{name:b,fromWireType:h,toWireType:function(r,q){if(\"number\"!==typeof q&&\"boolean\"!==typeof q)throw new TypeError('Cannot convert \"'+db(q)+'\" to '+this.name);if(q<d||q>f)throw new TypeError('Passing a number \"'+db(q)+'\" from JS side to C/C++ side to an argument of type \"'+\r\nb+'\", which is outside the valid range ['+d+\", \"+f+\"]!\");return p?q>>>0:q|0},argPackAdvance:8,readValueFromPointer:fb(b,l,0!==d),$a:null})},q:function(a,b,c){function d(h){h>>=2;var l=N;return new f(ya,l[h+1],l[h])}var f=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=S(c);U(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{kb:!0})},I:function(a,b){b=S(b);var c=\"std::string\"===b;U(a,{name:b,fromWireType:function(d){var f=N[d>>2];\r\nif(c)for(var h=d+4,l=0;l<=f;++l){var m=d+4+l;if(l==f||0==H[m]){h=F(h,m-h);if(void 0===p)var p=h;else p+=String.fromCharCode(0),p+=h;h=m+1}}else{p=Array(f);for(l=0;l<f;++l)p[l]=String.fromCharCode(H[d+4+l]);p=p.join(\"\")}Y(d);return p},toWireType:function(d,f){f instanceof ArrayBuffer&&(f=new Uint8Array(f));var h=\"string\"===typeof f;h||f instanceof Uint8Array||f instanceof Uint8ClampedArray||f instanceof Int8Array||T(\"Cannot pass non-string to std::string\");var l=(c&&h?function(){return oa(f)}:function(){return f.length})(),\r\nm=K(4+l+1);N[m>>2]=l;if(c&&h)na(f,m+4,l+1);else if(h)for(h=0;h<l;++h){var p=f.charCodeAt(h);255<p&&(Y(m),T(\"String has UTF-16 code units that do not fit in 8 bits\"));H[m+4+h]=p}else for(h=0;h<l;++h)H[m+4+h]=f[h];null!==d&&d.push(Y,m);return m},argPackAdvance:8,readValueFromPointer:cb,$a:function(d){Y(d)}})},y:function(a,b,c){c=S(c);if(2===b){var d=qa;var f=sa;var h=ta;var l=function(){return ra};var m=1}else 4===b&&(d=ua,f=va,h=wa,l=function(){return N},m=2);U(a,{name:c,fromWireType:function(p){for(var r=\r\nN[p>>2],q=l(),w,G=p+4,g=0;g<=r;++g){var n=p+4+g*b;if(g==r||0==q[n>>m])G=d(G,n-G),void 0===w?w=G:(w+=String.fromCharCode(0),w+=G),G=n+b}Y(p);return w},toWireType:function(p,r){\"string\"!==typeof r&&T(\"Cannot pass non-string to C++ string type \"+c);var q=h(r),w=K(4+q+b);N[w>>2]=q>>m;f(r,w+4,q+b);null!==p&&p.push(Y,w);return w},argPackAdvance:8,readValueFromPointer:cb,$a:function(p){Y(p)}})},ia:function(a,b){b=S(b);U(a,{mb:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},\r\nz:function(a,b,c){a=X(a);b=gb(b,\"emval::as\");var d=[],f=W(d);J[c>>2]=f;return b.toWireType(d,a)},p:function(a,b,c,d,f){a=kb[a];b=X(b);c=jb(c);var h=[];J[d>>2]=W(h);return a(b,c,h,f)},l:function(a,b,c,d){a=kb[a];b=X(b);c=jb(c);a(b,c,null,d)},d:bb,K:function(a,b){a=X(a);b=X(b);return a==b},L:function(a){if(0===a)return W(lb());a=jb(a);return W(lb()[a])},h:function(a,b){b=nb(a,b);for(var c=b[0],d=c.name+\"_$\"+b.slice(1).map(function(r){return r.name}).join(\"_\")+\"$\",f=[\"retType\"],h=[c],l=\"\",m=0;m<a-1;++m)l+=\r\n(0!==m?\", \":\"\")+\"arg\"+m,f.push(\"argType\"+m),h.push(b[1+m]);d=\"return function \"+Xa(\"methodCaller_\"+d)+\"(handle, name, destructors, args) {\\n\";var p=0;for(m=0;m<a-1;++m)d+=\"    var arg\"+m+\" = argType\"+m+\".readValueFromPointer(args\"+(p?\"+\"+p:\"\")+\");\\n\",p+=b[m+1].argPackAdvance;d+=\"    var rv = handle[name](\"+l+\");\\n\";for(m=0;m<a-1;++m)b[m+1].deleteObject&&(d+=\"    argType\"+m+\".deleteObject(arg\"+m+\");\\n\");c.mb||(d+=\"    return retType.toWireType(destructors, rv);\\n\");f.push(d+\"};\\n\");a=ob(f).apply(null,\r\nh);return mb(a)},u:function(a,b){a=X(a);b=X(b);return W(a[b])},g:function(a){4<a&&(V[a].gb+=1)},ja:function(a,b,c,d){a=X(a);var f=qb[b];if(!f){f=\"\";for(var h=0;h<b;++h)f+=(0!==h?\", \":\"\")+\"arg\"+h;var l=\"return function emval_allocator_\"+b+\"(constructor, argTypes, args) {\\n\";for(h=0;h<b;++h)l+=\"var argType\"+h+\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \"+h+'], \"parameter '+h+'\");\\nvar arg'+h+\" = argType\"+h+\".readValueFromPointer(args);\\nargs += argType\"+h+\"['argPackAdvance'];\\n\";f=\r\n(new Function(\"requireRegisteredType\",\"Module\",\"__emval_register\",l+(\"var obj = new constructor(\"+f+\");\\nreturn __emval_register(obj);\\n}\\n\")))(gb,e,W);qb[b]=f}return f(a,c,d)},m:function(){return W([])},e:function(a){return W(jb(a))},i:function(){return W({})},n:function(a){for(var b=V[a].value;b.length;){var c=b.pop();b.pop()(c)}bb(a)},f:function(a,b,c){a=X(a);b=X(b);c=X(c);a[b]=c},j:function(a,b){a=gb(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return W(a)},v:function(){C()},J:function(a,\r\nb){if(0===a)a=Date.now();else if(1===a||4===a)a=rb();else return J[Kb()>>2]=28,-1;J[b>>2]=a/1E3|0;J[b+4>>2]=a%1E3*1E6|0;return 0},M:function(a,b){return a-b},ma:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},t:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},na:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\r\nla:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ea:function(){return 2147483648},P:function(a,b,c){H.copyWithin(a,b,b+c)},w:function(a){var b=H.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ia.grow(Math.min(2147483648,d)-ya.byteLength+65535>>>16);Ba();var f=1;break a}catch(h){}f=void 0}if(f)return!0}return!1},\r\nV:function(a){for(var b=rb();rb()-b<a;);},T:function(a,b){var c=0;tb().forEach(function(d,f){var h=b+c;f=J[a+4*f>>2]=h;for(h=0;h<d.length;++h)L[f++>>0]=d.charCodeAt(h);L[f>>0]=0;c+=d.length+1});return 0},U:function(a,b){var c=tb();J[a>>2]=c.length;var d=0;c.forEach(function(f){d+=f.length+1});J[b>>2]=d;return 0},s:function(){return 0},R:function(a,b){a=1==a||2==a?2:C();L[b>>0]=a;return 0},C:function(a,b,c,d){a=R.Cb(a);b=R.Bb(a,b,c);J[d>>2]=b;return 0},N:function(){},E:function(a,b,c,d){for(var f=\r\n0,h=0;h<c;h++){for(var l=J[b+8*h>>2],m=J[b+(8*h+4)>>2],p=0;p<m;p++){var r=H[l+p],q=Ra[a];0===r||10===r?((1===a?ha:D)(la(q,0)),q.length=0):q.push(r)}f+=m}J[d>>2]=f;return 0},fa:function(a){var b=Date.now();J[a>>2]=b/1E3|0;J[a+4>>2]=b%1E3*1E3|0;return 0},S:vb,F:function(a,b){wb();a=new Date(1E3*J[a>>2]);J[b>>2]=a.getSeconds();J[b+4>>2]=a.getMinutes();J[b+8>>2]=a.getHours();J[b+12>>2]=a.getDate();J[b+16>>2]=a.getMonth();J[b+20>>2]=a.getFullYear()-1900;J[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),\r\n0,1);J[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;J[b+36>>2]=-(60*a.getTimezoneOffset());var d=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(d!=c&&a.getTimezoneOffset()==Math.min(c,d))|0;J[b+32>>2]=a;a=J[Z()+(a?4:0)>>2];J[b+40>>2]=a;return b},A:function(a){wb();var b=new Date(J[a+20>>2]+1900,J[a+16>>2],J[a+12>>2],J[a+8>>2],J[a+4>>2],J[a>>2],0),c=J[a+32>>2],d=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\r\nl=f.getTimezoneOffset(),m=Math.min(l,h);0>c?J[a+32>>2]=Number(h!=l&&m==d):0<c!=(m==d)&&(h=Math.max(l,h),b.setTime(b.getTime()+6E4*((0<c?m:h)-d)));J[a+24>>2]=b.getDay();J[a+28>>2]=(b.getTime()-f.getTime())/864E5|0;J[a>>2]=b.getSeconds();J[a+4>>2]=b.getMinutes();J[a+8>>2]=b.getHours();J[a+12>>2]=b.getDate();J[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},ka:Fb,o:function(a,b,c,d){return Fb(a,b,c,d)}};\r\n(function(){function a(f){e.asm=f.exports;ia=e.asm.oa;Ba();Ca=e.asm.Wa;Ea.unshift(e.asm.pa);O--;e.monitorRunDependencies&&e.monitorRunDependencies(O);0==O&&(null!==Ia&&(clearInterval(Ia),Ia=null),P&&(f=P,P=null,f()))}function b(f){a(f.instance)}function c(f){return Ma().then(function(h){return WebAssembly.instantiate(h,d)}).then(f,function(h){D(\"failed to asynchronously prepare wasm: \"+h);C(h)})}var d={a:Lb};O++;e.monitorRunDependencies&&e.monitorRunDependencies(O);if(e.instantiateWasm)try{return e.instantiateWasm(d,\r\na)}catch(f){return D(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return E||\"function\"!==typeof WebAssembly.instantiateStreaming||Ja()||Q.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(Q,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,d).then(b,function(h){D(\"wasm streaming compile failed: \"+h);D(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\ne.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.pa).apply(null,arguments)};e._OrtInit=function(){return(e._OrtInit=e.asm.qa).apply(null,arguments)};e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.ra).apply(null,arguments)};e._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(e._OrtSessionOptionsAppendExecutionProviderWebNN=e.asm.sa).apply(null,arguments)};\r\ne._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.ta).apply(null,arguments)};e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.ua).apply(null,arguments)};e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.va).apply(null,arguments)};e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.wa).apply(null,arguments)};e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.xa).apply(null,arguments)};\r\ne._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.ya).apply(null,arguments)};e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.za).apply(null,arguments)};e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Aa).apply(null,arguments)};e._OrtFree=function(){return(e._OrtFree=e.asm.Ba).apply(null,arguments)};e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ca).apply(null,arguments)};\r\ne._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Da).apply(null,arguments)};e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm.Ea).apply(null,arguments)};e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.Fa).apply(null,arguments)};e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.Ga).apply(null,arguments)};e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.Ha).apply(null,arguments)};\r\ne._OrtRun=function(){return(e._OrtRun=e.asm.Ia).apply(null,arguments)};e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.Ja).apply(null,arguments)};var K=e._malloc=function(){return(K=e._malloc=e.asm.Ka).apply(null,arguments)},Kb=e.___errno_location=function(){return(Kb=e.___errno_location=e.asm.La).apply(null,arguments)},Y=e._free=function(){return(Y=e._free=e.asm.Ma).apply(null,arguments)},hb=e.___getTypeName=function(){return(hb=e.___getTypeName=e.asm.Na).apply(null,arguments)};\r\ne.___embind_register_native_and_builtin_types=function(){return(e.___embind_register_native_and_builtin_types=e.asm.Oa).apply(null,arguments)};\r\nvar Z=e.__get_tzname=function(){return(Z=e.__get_tzname=e.asm.Pa).apply(null,arguments)},zb=e.__get_daylight=function(){return(zb=e.__get_daylight=e.asm.Qa).apply(null,arguments)},yb=e.__get_timezone=function(){return(yb=e.__get_timezone=e.asm.Ra).apply(null,arguments)},Mb=e.stackSave=function(){return(Mb=e.stackSave=e.asm.Sa).apply(null,arguments)},Nb=e.stackRestore=function(){return(Nb=e.stackRestore=e.asm.Ta).apply(null,arguments)},Ob=e.stackAlloc=function(){return(Ob=e.stackAlloc=e.asm.Ua).apply(null,\r\narguments)},Jb=e._memalign=function(){return(Jb=e._memalign=e.asm.Va).apply(null,arguments)};e.UTF8ToString=F;e.stringToUTF8=na;e.lengthBytesUTF8=oa;e.stackSave=Mb;e.stackRestore=Nb;e.stackAlloc=Ob;var Pb;P=function Qb(){Pb||Rb();Pb||(P=Qb)};\r\nfunction Rb(){function a(){if(!Pb&&(Pb=!0,e.calledRun=!0,!ja)){Na(Ea);aa(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();Ga.unshift(b)}Na(Ga)}}if(!(0<O)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)Ha();Na(Da);0<O||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}e.run=Rb;\r\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();Rb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/* eslint-disable import/no-internal-modules */\r\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\r\nimport {Session} from './onnxjs/session';\r\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\r\n\r\nclass OnnxjsBackend implements Backend {\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  async init(): Promise<void> {}\r\n\r\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\r\n      Promise<SessionHandler> {\r\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\r\n    // onnxruntime-common).\r\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\r\n    //       Currently we allow this to happen to make test runner work.\r\n    const session = new Session(options as unknown as Session.Config);\r\n\r\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\r\n    if (typeof pathOrBuffer === 'string') {\r\n      await session.loadModel(pathOrBuffer);\r\n    } else {\r\n      await session.loadModel(pathOrBuffer);\r\n    }\r\n\r\n    return new OnnxjsSessionHandler(session);\r\n  }\r\n}\r\n\r\nexport const onnxjsBackend = new OnnxjsBackend();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {readFile} from 'fs';\r\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\r\nimport {cpus} from 'os';\r\nimport {promisify} from 'util';\r\nimport {initWasm} from './wasm/proxy-wrapper';\r\n\r\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\r\n\r\n/**\r\n * This function initializes all flags for WebAssembly.\r\n *\r\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\r\n * being created, to override default value.\r\n */\r\nexport const initializeFlags = (): void => {\r\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\r\n    env.wasm.initTimeout = 0;\r\n  }\r\n\r\n  if (typeof env.wasm.simd !== 'boolean') {\r\n    env.wasm.simd = true;\r\n  }\r\n\r\n  if (typeof env.wasm.proxy !== 'boolean') {\r\n    env.wasm.proxy = false;\r\n  }\r\n\r\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\r\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\r\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\r\n  }\r\n};\r\n\r\nclass OnnxruntimeWebAssemblyBackend implements Backend {\r\n  async init(): Promise<void> {\r\n    // populate wasm flags\r\n    initializeFlags();\r\n\r\n    // init wasm\r\n    await initWasm();\r\n  }\r\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\r\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\r\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\r\n      Promise<SessionHandler> {\r\n    let buffer: Uint8Array;\r\n    if (typeof pathOrBuffer === 'string') {\r\n      if (typeof fetch === 'undefined') {\r\n        // node\r\n        buffer = await promisify(readFile)(pathOrBuffer);\r\n      } else {\r\n        // browser\r\n        const response = await fetch(pathOrBuffer);\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        buffer = new Uint8Array(arrayBuffer);\r\n      }\r\n    } else {\r\n      buffer = pathOrBuffer;\r\n    }\r\n\r\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\r\n    await handler.loadModel(buffer, options);\r\n    return Promise.resolve(handler);\r\n  }\r\n}\r\n\r\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport * from 'onnxruntime-common';\r\nimport {registerBackend} from 'onnxruntime-common';\r\nimport {onnxjsBackend} from './backend-onnxjs';\r\nimport {wasmBackend} from './backend-wasm';\r\n\r\nregisterBackend('webgl', onnxjsBackend, 1);\r\nregisterBackend('wasm', wasmBackend, 2);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nclass AttributeWithCacheKeyImpl {\r\n  constructor(attribute: Record<string, unknown>) {\r\n    Object.assign(this, attribute);\r\n  }\r\n\r\n  private _cacheKey: string;\r\n  public get cacheKey(): string {\r\n    if (!this._cacheKey) {\r\n      this._cacheKey =\r\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\r\n    }\r\n    return this._cacheKey;\r\n  }\r\n}\r\n\r\nexport interface AttributeWithCacheKey {\r\n  readonly cacheKey: string;\r\n}\r\n\r\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\r\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\n\r\nimport {Tensor} from './tensor';\r\nimport {LongUtil} from './util';\r\n\r\nexport declare namespace Attribute {\r\n  export interface DataTypeMap {\r\n    float: number;\r\n    int: number;\r\n    string: string;\r\n    tensor: Tensor;\r\n    floats: number[];\r\n    ints: number[];\r\n    strings: string[];\r\n    tensors: Tensor[];\r\n  }\r\n\r\n  export type DataType = keyof DataTypeMap;\r\n}\r\n\r\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\r\n\r\ntype Value = [ValueTypes, Attribute.DataType];\r\n\r\nexport class Attribute {\r\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\r\n    this._attributes = new Map();\r\n    if (attributes !== null && attributes !== undefined) {\r\n      for (const attr of attributes) {\r\n        if (attr instanceof onnx.AttributeProto) {\r\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\r\n        } else if (attr instanceof ortFbs.Attribute) {\r\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\r\n        }\r\n      }\r\n      if (this._attributes.size < attributes.length) {\r\n        throw new Error('duplicated attribute names');\r\n      }\r\n    }\r\n  }\r\n\r\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\r\n    this._attributes.set(key, [value, type]);\r\n  }\r\n  delete(key: string): void {\r\n    this._attributes.delete(key);\r\n  }\r\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\r\n    return this.get(key, 'float', defaultValue);\r\n  }\r\n\r\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\r\n    return this.get(key, 'int', defaultValue);\r\n  }\r\n\r\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\r\n    return this.get(key, 'string', defaultValue);\r\n  }\r\n\r\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\r\n    return this.get(key, 'tensor', defaultValue);\r\n  }\r\n\r\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\r\n    return this.get(key, 'floats', defaultValue);\r\n  }\r\n\r\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\r\n    return this.get(key, 'ints', defaultValue);\r\n  }\r\n\r\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\r\n    return this.get(key, 'strings', defaultValue);\r\n  }\r\n\r\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\r\n    return this.get(key, 'tensors', defaultValue);\r\n  }\r\n\r\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\r\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\r\n    const valueAndType = this._attributes.get(key);\r\n    if (valueAndType === undefined) {\r\n      if (defaultValue !== undefined) {\r\n        return defaultValue;\r\n      }\r\n      throw new Error(`required attribute not found: ${key}`);\r\n    }\r\n    if (valueAndType[1] !== type) {\r\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\r\n    }\r\n    return valueAndType[0] as V;\r\n  }\r\n\r\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\r\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\r\n    switch (type) {\r\n      case onnx.AttributeProto.AttributeType.FLOAT:\r\n        return 'float';\r\n      case onnx.AttributeProto.AttributeType.INT:\r\n        return 'int';\r\n      case onnx.AttributeProto.AttributeType.STRING:\r\n        return 'string';\r\n      case onnx.AttributeProto.AttributeType.TENSOR:\r\n        return 'tensor';\r\n      case onnx.AttributeProto.AttributeType.FLOATS:\r\n        return 'floats';\r\n      case onnx.AttributeProto.AttributeType.INTS:\r\n        return 'ints';\r\n      case onnx.AttributeProto.AttributeType.STRINGS:\r\n        return 'strings';\r\n      case onnx.AttributeProto.AttributeType.TENSORS:\r\n        return 'tensors';\r\n      default:\r\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\r\n    }\r\n  }\r\n\r\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\r\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\r\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\r\n      throw new Error('graph attribute is not supported yet');\r\n    }\r\n\r\n    const value = this.getValueNoCheck(attr);\r\n\r\n    // cast LONG to number\r\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\r\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\r\n    }\r\n\r\n    // cast LONG[] to number[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\r\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\r\n      const numberValue: number[] = new Array<number>(arr.length);\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        const maybeLong = arr[i];\r\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\r\n      }\r\n\r\n      return numberValue;\r\n    }\r\n\r\n    // cast onnx.TensorProto to onnxjs.Tensor\r\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\r\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\r\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\r\n    }\r\n\r\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const tensorProtos = value as onnx.ITensorProto[];\r\n        return tensorProtos.map(value => Tensor.fromProto(value));\r\n      } else if (attr instanceof ortFbs.Attribute) {\r\n        const tensorProtos = value as ortFbs.Tensor[];\r\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\r\n      }\r\n    }\r\n\r\n    // cast Uint8Array to string\r\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\r\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\r\n      // string attributes are returned as string, so no conversion is needed.\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const utf8String = value as Uint8Array;\r\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\r\n      }\r\n    }\r\n\r\n    // cast Uint8Array[] to string[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\r\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\r\n      // format strings attributes are returned as string[], so no conversion is needed.\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const utf8Strings = value as Uint8Array[];\r\n        return utf8Strings.map(\r\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\r\n      }\r\n    }\r\n\r\n    return value as ValueTypes;\r\n  }\r\n\r\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\r\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\r\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\r\n  }\r\n\r\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\r\n    switch (attr.type!) {\r\n      case onnx.AttributeProto.AttributeType.FLOAT:\r\n        return attr.f;\r\n      case onnx.AttributeProto.AttributeType.INT:\r\n        return attr.i;\r\n      case onnx.AttributeProto.AttributeType.STRING:\r\n        return attr.s;\r\n      case onnx.AttributeProto.AttributeType.TENSOR:\r\n        return attr.t;\r\n      case onnx.AttributeProto.AttributeType.GRAPH:\r\n        return attr.g;\r\n      case onnx.AttributeProto.AttributeType.FLOATS:\r\n        return attr.floats;\r\n      case onnx.AttributeProto.AttributeType.INTS:\r\n        return attr.ints;\r\n      case onnx.AttributeProto.AttributeType.STRINGS:\r\n        return attr.strings;\r\n      case onnx.AttributeProto.AttributeType.TENSORS:\r\n        return attr.tensors;\r\n      case onnx.AttributeProto.AttributeType.GRAPHS:\r\n        return attr.graphs;\r\n      default:\r\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\r\n    }\r\n  }\r\n\r\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\r\n    switch (attr.type()) {\r\n      case ortFbs.AttributeType.FLOAT:\r\n        return attr.f();\r\n      case ortFbs.AttributeType.INT:\r\n        return attr.i();\r\n      case ortFbs.AttributeType.STRING:\r\n        return attr.s();\r\n      case ortFbs.AttributeType.TENSOR:\r\n        return attr.t();\r\n      case ortFbs.AttributeType.GRAPH:\r\n        return attr.g();\r\n      case ortFbs.AttributeType.FLOATS:\r\n        return attr.floatsArray();\r\n      case ortFbs.AttributeType.INTS: {\r\n        const ints = [];\r\n        for (let i = 0; i < attr.intsLength(); i++) {\r\n          ints.push(attr.ints(i)!);\r\n        }\r\n        return ints;\r\n      }\r\n      case ortFbs.AttributeType.STRINGS: {\r\n        const strings = [];\r\n        for (let i = 0; i < attr.stringsLength(); i++) {\r\n          strings.push(attr.strings(i));\r\n        }\r\n        return strings;\r\n      }\r\n      case ortFbs.AttributeType.TENSORS: {\r\n        const tensors = [];\r\n        for (let i = 0; i < attr.tensorsLength(); i++) {\r\n          tensors.push(attr.tensors(i)!);\r\n        }\r\n        return tensors;\r\n      }\r\n      // case ortFbs.AttributeType.GRAPHS:\r\n      // TODO: Subgraph not supported yet.\r\n      // const graphs = [];\r\n      // for (let i = 0; i < attr.graphsLength(); i++) {\r\n      //   graphs.push(attr.graphs(i)!);\r\n      // }\r\n      // return graphs;\r\n      default:\r\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\r\n    }\r\n  }\r\n\r\n  protected _attributes: Map<string, Value>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {WebGLBackend} from './backends/backend-webgl';\r\nimport {Graph} from './graph';\r\nimport {Operator} from './operators';\r\nimport {OpSet} from './opset';\r\nimport {Session} from './session';\r\n\r\nexport interface InferenceHandler {\r\n  /**\r\n   * dispose the inference handler. it will be called as the last step in Session.run()\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\nexport interface SessionHandler {\r\n  /**\r\n   * transform the graph at initialization time\r\n   * @param graphTransformer the graph transformer to manipulate the model graph\r\n   */\r\n  transformGraph?(graphTransformer: Graph.Transformer): void;\r\n\r\n  /**\r\n   * create an instance of InferenceHandler to use in a Session.run() call\r\n   */\r\n  createInferenceHandler(): InferenceHandler;\r\n\r\n  /**\r\n   * dispose the session handler. it will be called when a session is being disposed explicitly\r\n   */\r\n  dispose(): void;\r\n\r\n  /**\r\n   * Resolves the operator from the name and opset version; backend specific\r\n   * @param node the node to resolve\r\n   * @param opsets a list of opsets that exported from the model\r\n   * @param graph the completely initialized graph\r\n   */\r\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\r\n\r\n  /**\r\n   * This method let's the sessionHandler know that the graph initialization is complete\r\n   * @param graph the completely initialized graph\r\n   */\r\n  onGraphInitialized?(graph: Graph): void;\r\n\r\n  /**\r\n   * a reference to the corresponding backend\r\n   */\r\n  readonly backend: Backend;\r\n\r\n  /**\r\n   * a reference to the session context\r\n   */\r\n  readonly context: Session.Context;\r\n}\r\n\r\nexport interface Backend {\r\n  /**\r\n   * initialize the backend. will be called only once, when the first time the\r\n   * backend it to be used\r\n   */\r\n  initialize(): boolean|Promise<boolean>;\r\n\r\n  /**\r\n   * create an instance of SessionHandler to use in a Session object's lifecycle\r\n   */\r\n  createSessionHandler(context: Session.Context): SessionHandler;\r\n\r\n  /**\r\n   * dispose the backend. currently this will not be called\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\n// caches all initialized backend instances\r\nconst backendsCache: Map<string, Backend> = new Map();\r\n\r\nexport const backend: {[name: string]: Backend} = {\r\n  webgl: new WebGLBackend(),\r\n};\r\n\r\n/**\r\n * Resolve a reference to the backend. If a hint is specified, the corresponding\r\n * backend will be used.\r\n */\r\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\r\n  if (!hint) {\r\n    return resolveBackend(['webgl']);\r\n  } else {\r\n    const hints = typeof hint === 'string' ? [hint] : hint;\r\n\r\n    for (const backendHint of hints) {\r\n      const cache = backendsCache.get(backendHint);\r\n      if (cache) {\r\n        return cache;\r\n      }\r\n\r\n      const backend = await tryLoadBackend(backendHint);\r\n      if (backend) {\r\n        return backend;\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('no available backend to use');\r\n}\r\n\r\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\r\n  const backendObj = backend;\r\n\r\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\r\n    const backend = backendObj[backendHint];\r\n    let init = backend.initialize();\r\n    if (typeof init === 'object' && 'then' in init) {\r\n      init = await init;\r\n    }\r\n    if (init) {\r\n      backendsCache.set(backendHint, backend);\r\n      return backend;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction isBackend(obj: unknown) {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const o = obj as any;\r\n\r\n  // check if an object is a Backend instance\r\n  if (\r\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\r\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\r\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport type BackendType = Backend;\r\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\r\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\nimport {Backend, SessionHandler} from '../backend';\r\nimport {Logger} from '../instrument';\r\nimport {Session} from '../session';\r\n\r\nimport {WebGLSessionHandler} from './webgl/session-handler';\r\nimport {WebGLContext} from './webgl/webgl-context';\r\nimport {createWebGLContext} from './webgl/webgl-context-factory';\r\n\r\n/**\r\n * WebGLBackend is the entry point for all WebGL opeartions\r\n * When it starts it created the WebGLRenderingContext\r\n * and other main framework components such as Program and Texture Managers\r\n */\r\nexport class WebGLBackend implements Backend {\r\n  glContext: WebGLContext;\r\n\r\n  get contextId(): 'webgl'|'webgl2'|undefined {\r\n    return env.webgl.contextId;\r\n  }\r\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\r\n    env.webgl.contextId = value;\r\n  }\r\n\r\n  get matmulMaxBatchSize(): number|undefined {\r\n    return env.webgl.matmulMaxBatchSize;\r\n  }\r\n  set matmulMaxBatchSize(value: number|undefined) {\r\n    env.webgl.matmulMaxBatchSize = value;\r\n  }\r\n\r\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\r\n    return env.webgl.textureCacheMode;\r\n  }\r\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\r\n    env.webgl.textureCacheMode = value;\r\n  }\r\n\r\n  get pack(): boolean|undefined {\r\n    return env.webgl.pack;\r\n  }\r\n  set pack(value: boolean|undefined) {\r\n    env.webgl.pack = value;\r\n  }\r\n\r\n  get async(): boolean|undefined {\r\n    return env.webgl.async;\r\n  }\r\n  set async(value: boolean|undefined) {\r\n    env.webgl.async = value;\r\n  }\r\n\r\n  initialize(): boolean {\r\n    try {\r\n      this.glContext = createWebGLContext(this.contextId);\r\n      if (typeof this.matmulMaxBatchSize !== 'number') {\r\n        this.matmulMaxBatchSize = 16;\r\n      }\r\n      if (typeof this.textureCacheMode !== 'string') {\r\n        this.textureCacheMode = 'full';\r\n      }\r\n      if (typeof this.pack !== 'boolean') {\r\n        this.pack = false;\r\n      }\r\n      if (typeof this.async !== 'boolean') {\r\n        this.async = false;\r\n      }\r\n\r\n      Logger.setWithEnv(env);\r\n\r\n      Logger.verbose(\r\n          'WebGLBackend',\r\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\r\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\r\n              this.async}.`);\r\n      return true;\r\n    } catch (e) {\r\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\r\n      return false;\r\n    }\r\n  }\r\n  createSessionHandler(context: Session.Context): SessionHandler {\r\n    return new WebGLSessionHandler(this, context);\r\n  }\r\n  dispose(): void {\r\n    this.glContext.dispose();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\nimport {getGlsl} from './glsl-source';\r\nimport {squeezeShape} from './texture-layout-strategy';\r\nimport {TextureLayout} from './types';\r\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\r\n\r\n/**\r\n * GLSL Library responsible for data types and routines for manipulating\r\n * coordinates and mapping to/from tensor indices\r\n */\r\nexport class CoordsGlslLib extends GlslLib {\r\n  returnType: string;\r\n\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      ...this.offsetToCoords(),\r\n      ...this.coordsToOffset(),\r\n      ...this.toVec(),\r\n      ...this.valueFrom(),\r\n      // TODO return these only when packing is enabled.\r\n      ...this.getCommonUtilFuncs(),\r\n      ...this.getInputsSamplingSnippets(),\r\n      ...this.getOutputSamplingSnippet()\r\n    };\r\n  }\r\n  getCustomTypes() {\r\n    return {};\r\n  }\r\n  /**\r\n   * Produces a function that can map from\r\n   * 2D normalzied coordinates (s,t) to a flat offset\r\n   */\r\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\r\n    const funcName = 'offsetToCoords';\r\n    return {\r\n      offsetToCoords: new GlslLibRoutine(`\r\n      vec2 ${funcName}(int offset, int width, int height) {\r\n        int t = offset / width;\r\n        int s = offset - t*width;\r\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\r\n        return coords;\r\n      }\r\n      `)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Produces a function that can map from\r\n   * 2D normalzied coordinates (s,t) to a flat offset\r\n   */\r\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\r\n    const funcName = 'coordsToOffset';\r\n    return {\r\n      coordsToOffset: new GlslLibRoutine(`\r\n      int ${funcName}(vec2 coords, int width, int height) {\r\n        float s = coords.s * float(width);\r\n        float t = coords.t * float(height);\r\n        int offset = int(t) * width + int(s);\r\n        return offset;\r\n      }\r\n      `)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generates code for output sampler.\r\n   */\r\n\r\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    if (outputLayout.isPacked) {\r\n      return this.getPackedOutputSamplingSnippet(outputLayout);\r\n    } else {\r\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates code for packed output sampler.\r\n   */\r\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\r\n    const outShape = outputLayout.unpackedShape;\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const funcName = 'getOutputCoords';\r\n    switch (outShape.length) {\r\n      case 0:\r\n        result[funcName] = this.getOutputScalarCoords();\r\n        break;\r\n      case 1:\r\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\r\n        break;\r\n      case 2:\r\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 3:\r\n        result[funcName] =\r\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      default:\r\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    // TODO we need this to properly return a packed vec4 from kernels.\r\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\r\n    const floatTextureSetRGBASource = `\r\n      void setOutput(vec4 val) {\r\n        ${glsl.output} = val;\r\n      }\r\n    `;\r\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\r\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generates code for unpacked output sampler.\r\n   */\r\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\r\n    const outShape = outputLayout.unpackedShape;\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const funcName = 'getOutputCoords';\r\n    switch (outShape.length) {\r\n      case 0:\r\n        result[funcName] = this.getOutputScalarCoords();\r\n        break;\r\n      case 1:\r\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\r\n        break;\r\n      case 2:\r\n        result[funcName] =\r\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 3:\r\n        result[funcName] =\r\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 4:\r\n        result[funcName] = this.getOutputUnpacked4DCoords(\r\n            outShape as [number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 5:\r\n        result[funcName] = this.getOutputUnpacked5DCoords(\r\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 6:\r\n        result[funcName] = this.getOutputUnpacked6DCoords(\r\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    // TODO we need this to properly return a packed vec4 from kernels.\r\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\r\n    const floatTextureSetRSource = `\r\n        void setOutput(float val) {\r\n          ${glsl.output} = vec4(val, 0, 0, 0);\r\n        }\r\n    `;\r\n    const floatTextureSetRFuncName = 'floatTextureSetR';\r\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Scalar output coordinates.\r\n   */\r\n  protected getOutputScalarCoords(): GlslLibRoutine {\r\n    return new GlslLibRoutine(`\r\n      int getOutputCoords() {\r\n        return 0;\r\n      }\r\n    `);\r\n  }\r\n\r\n  /**\r\n   * 1D packed output coordinates.\r\n   */\r\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = texShape;\r\n    let source = '';\r\n    if (packedTexShape[0] === 1) {\r\n      source = `\r\n          int getOutputCoords() {\r\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    if (packedTexShape[1] === 1) {\r\n      source = `\r\n          int getOutputCoords() {\r\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    source = `\r\n        int getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * 2D packed output coordinates.\r\n   */\r\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\r\n    let source = '';\r\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\r\n      source = `\r\n        ivec2 getOutputCoords() {\r\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\r\n        }\r\n      `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    const packedTexShape = texShape;\r\n    // texels needed to accommodate a logical row\r\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\r\n\r\n    /**\r\n     * getOutputCoords\r\n     *\r\n     * resTexRC: The rows and columns of the texels. If you move over one\r\n     * texel to the right in the packed texture, you are moving over one column\r\n     * (not two).\r\n     *\r\n     * index: The texel index\r\n     */\r\n    source = `\r\n        ivec2 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n\r\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n          // reverse r and c order for packed texture\r\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n          int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n          return ivec2(r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * 3D packed output coordinates.\r\n   */\r\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\r\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\r\n    const source = `\r\n        ivec3 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n          int b = index / ${texelsInBatch};\r\n          index -= b * ${texelsInBatch};\r\n\r\n          // reverse r and c order for packed texture\r\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n          int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n          return ivec3(b, r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * ND packed output coordinates.\r\n   */\r\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n\r\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\r\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\r\n    let texelsInBatchN = texelsInBatch;\r\n    let batches = '';\r\n    let coords = 'b, r, c';\r\n\r\n    for (let b = 2; b < shape.length - 1; b++) {\r\n      texelsInBatchN *= shape[shape.length - b - 1];\r\n      batches = `\r\n      int b${b} = index / ${texelsInBatchN};\r\n      index -= b${b} * ${texelsInBatchN};\r\n    ` + batches;\r\n      coords = `b${b}, ` + coords;\r\n    }\r\n    const source = `\r\n      ivec${shape.length} getOutputCoords() {\r\n        ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n        ${batches}\r\n\r\n        int b = index / ${texelsInBatch};\r\n        index -= b * ${texelsInBatch};\r\n\r\n        // reverse r and c order for packed texture\r\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n        int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n        return ivec${shape.length}(${coords});\r\n      }\r\n    `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 1D output coordinates.\r\n   */\r\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\r\n    const source = `\r\n        int getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 2D output coordinates.\r\n   */\r\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\r\n    const source = `\r\n        ivec2 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          int r = index / ${shape[1]};\r\n          int c = index - r * ${shape[1]};\r\n          return ivec2(r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 3D output coordinates.\r\n   */\r\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n        ivec3 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec3(r, c, d);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 4D output coordinates.\r\n   */\r\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\r\n      GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n      ivec4 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec4(r, c, d, d2);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 5D output coordinates.\r\n   */\r\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\r\n      GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n      ivec5 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec5(r, c, d, d2, d3);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 6D output coordinates.\r\n   */\r\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\r\n    number, number\r\n  ]): GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n     ivec6 getOutputCoords() {\r\n         ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                               vec2(${texShape[0]}, ${texShape[1]}));\r\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n         ${coordsFromIndexSnippet}\r\n         return ivec6(r, c, d, d2, d3, d4);\r\n       }\r\n     `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Generates code for common UV coords computation utility functions.\r\n   */\r\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    let funcName = 'uvFromFlat';\r\n    result[funcName] = new GlslLibRoutine(`\r\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\r\n      int texC = index / texNumR;\r\n      int texR = index - texC * texNumR;\r\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\r\n      //       v.\r\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\r\n    }\r\n    `);\r\n    funcName = 'packedUVfrom1D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\r\n        int texelIndex = index / 2;\r\n        int texR = texelIndex / texNumC;\r\n        int texC = texelIndex - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'packedUVfrom2D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\r\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\r\n        int texR = texelIndex / texNumC;\r\n        int texC = texelIndex - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'packedUVfrom3D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\r\n          int texelsInBatch, int texelsInLogicalRow, int b,\r\n          int row, int col) {\r\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\r\n        int texR = index / texNumC;\r\n        int texC = index - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'sampleTexture';\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    result[funcName] = new GlslLibRoutine(`\r\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\r\n            return ${glsl.texture2D}(textureSampler, uv).r;\r\n        }`);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for inputs\r\n   */\r\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\r\n      const inputLayout = this.context.inputTextureLayouts[i];\r\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\r\n      if (inputLayout.isPacked) {\r\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\r\n      } else {\r\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\r\n      }\r\n\r\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\r\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\r\n        if (inputLayout.isPacked) {\r\n          result[outCoordFuncName] =\r\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\r\n        } else {\r\n          result[outCoordFuncName] =\r\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\r\n        }\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for output coordinates of samplers\r\n   */\r\n  protected getPackedSamplerAtOutputCoords(\r\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\r\n    const inShape = inputLayout.unpackedShape;\r\n    const outShape = outputLayout.unpackedShape;\r\n    const texName = name;\r\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\r\n\r\n    const inRank = inShape.length;\r\n    const outRank = outShape.length;\r\n\r\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n\r\n    const type = getCoordsDataType(outRank);\r\n    const rankDiff = outRank - inRank;\r\n    let coordsSnippet: string;\r\n    const fields = getGlChannels();\r\n\r\n    if (inRank === 0) {\r\n      coordsSnippet = '';\r\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\r\n      coordsSnippet = 'coords = 0;';\r\n    } else {\r\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\r\n    }\r\n    let unpackedCoordsSnippet = '';\r\n    if (outRank < 2 && inRank > 0) {\r\n      unpackedCoordsSnippet = 'coords';\r\n    } else {\r\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\r\n    }\r\n\r\n    let output = 'return outputValue;';\r\n    const inSize = ShapeUtil.size(inShape);\r\n    const isInputScalar = inSize === 1;\r\n    const outSize = ShapeUtil.size(outShape);\r\n    const isOutputScalar = outSize === 1;\r\n\r\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\r\n      output = `\r\n        return vec4(outputValue.xy, outputValue.xy);\r\n      `;\r\n    } else if (isInputScalar && !isOutputScalar) {\r\n      if (outRank === 1) {\r\n        output = `\r\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\r\n        `;\r\n      } else {\r\n        output = `\r\n          return vec4(outputValue.x);\r\n        `;\r\n      }\r\n    } else if (broadcastDims.length) {\r\n      const rows = inRank - 2;\r\n      const cols = inRank - 1;\r\n\r\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\r\n        output = 'return vec4(outputValue.x);';\r\n      } else if (broadcastDims.indexOf(rows) > -1) {\r\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\r\n            'outputValue.x, outputValue.y);';\r\n      } else if (broadcastDims.indexOf(cols) > -1) {\r\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\r\n      }\r\n    }\r\n\r\n    const swapLastDimsSnippet = `\r\n        int lastDim = coords.${fields[outRank - 1]};\r\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\r\n        coords.${fields[outRank - 2]} = lastDim;\r\n      `;\r\n    const source = `\r\n      vec4 ${funcName}() {\r\n        ${type} coords = getOutputCoords();\r\n        ${swapLastDimsSnippet}\r\n        ${coordsSnippet}\r\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\r\n        ${output}\r\n      }\r\n    `;\r\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for unpacked output coordinates of samplers\r\n   */\r\n  protected getUnpackedSamplerAtOutputCoords(\r\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const inTexShape = [inputLayout.width, inputLayout.height];\r\n    const inRank = inputLayout.unpackedShape.length;\r\n    const outRank = outputLayout.unpackedShape.length;\r\n    const inShape = inputLayout.unpackedShape;\r\n    const outShape = outputLayout.unpackedShape;\r\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\r\n\r\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\r\n      const source = `\r\n          float ${funcName}() {\r\n            return sampleTexture(${name}, TexCoords);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const type = getCoordsDataType(outRank);\r\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n    const rankDiff = outRank - inRank;\r\n    let coordsSnippet: string;\r\n    const fields = getGlChannels();\r\n\r\n    if (inRank === 0) {\r\n      coordsSnippet = '';\r\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\r\n      coordsSnippet = 'coords = 0;';\r\n    } else {\r\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\r\n    }\r\n    let unpackedCoordsSnippet = '';\r\n    if (outRank < 2 && inRank > 0) {\r\n      unpackedCoordsSnippet = 'coords';\r\n    } else {\r\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\r\n    }\r\n    const source = `\r\n        float ${funcName}() {\r\n          ${type} coords = getOutputCoords();\r\n          ${coordsSnippet}\r\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for packed operations.\r\n   */\r\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    switch (inputLayout.unpackedShape.length) {\r\n      case 0:\r\n        return this.getPackedSamplerScalar(funcName, name);\r\n      case 1:\r\n        return this.getPackedSampler1D(funcName, name, inputLayout);\r\n      case 2:\r\n        return this.getPackedSampler2D(funcName, name, inputLayout);\r\n      case 3:\r\n        return this.getPackedSampler3D(funcName, name, inputLayout);\r\n      default:\r\n        return this.getPackedSamplerND(funcName, name, inputLayout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for unpacked operations.\r\n   */\r\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    switch (shape.length) {\r\n      case 0:\r\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\r\n      case 1:\r\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\r\n      case 2:\r\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\r\n      case 3:\r\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\r\n      case 4:\r\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\r\n      case 5:\r\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\r\n      case 6:\r\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\r\n      default:\r\n        // TODO support more dimensionalities\r\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Packed scalar snippet.\r\n   */\r\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    const source = `\r\n          vec4 ${funcName}() {\r\n            return ${glsl.texture2D}(${name}, halfCR);\r\n          }\r\n        `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Packed 1D snippet.\r\n   */\r\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const packedTexShape = [texShape[1], texShape[0]];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    const packedSampler = `vec4 ${funcName}(int index) {\r\n      vec2 uv = packedUVfrom1D(\r\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\r\n  }\r\n\r\n  /**\r\n   * Packed 2D snippet.\r\n   */\r\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    const texNumR = texShape[0];\r\n    const texNumC = texShape[1];\r\n\r\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\r\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\r\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\r\n        return ${glsl.texture2D}(${name}, uv);\r\n      }`;\r\n\r\n      return new GlslLibRoutine(packedSampler);\r\n    }\r\n    const packedTexShape = texShape;\r\n    const valuesPerRow = Math.ceil(shape[1] / 2);\r\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\r\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\r\n  }\r\n\r\n  /**\r\n   * Packed 3D snippet.\r\n   */\r\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    if (shape[0] === 1) {\r\n      const squeezedShape = shape.slice(1);\r\n      const keptDims = [1, 2];\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      const params = ['b', 'row', 'col'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\r\n      const packedSampler = `${samplerRoutine.routineBody}\r\n      vec4 ${funcName}(int b, int row, int col) {\r\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n      } `;\r\n      const source = packedSampler;\r\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\r\n    }\r\n    const texNumR = packedTexShape[0];\r\n    const texNumC = packedTexShape[1];\r\n\r\n    const valuesPerRow = Math.ceil(shape[2] / 2);\r\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\r\n\r\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\r\n      vec2 uv = packedUVfrom3D(\r\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\r\n      return ${glsl.texture2D}(${name}, uv);}`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\r\n  }\r\n  /*\r\n   * Packed ND snippet.\r\n   */\r\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const rank = shape.length;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const texNumR = packedTexShape[1];\r\n    const texNumC = packedTexShape[0];\r\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\r\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\r\n    let params = 'int b, int row, int col';\r\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\r\n    for (let b = 2; b < rank - 1; b++) {\r\n      params = `int b${b}, ` + params;\r\n      texelsInBatch *= shape[rank - b - 1];\r\n      index = `b${b} * ${texelsInBatch} + ` + index;\r\n    }\r\n    const packedSampler = `vec4 ${funcName}(${params}) {\r\n      int index = ${index};\r\n      int texR = index / ${texNumC};\r\n      int texC = index - texR * ${texNumC};\r\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked scalar snippet.\r\n   */\r\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\r\n    if (texNumR === 1 && texNumC === 1) {\r\n      const source = `\r\n          float ${funcName}() {\r\n            return sampleTexture(${name}, halfCR);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const source = `\r\n        float ${funcName}() {\r\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 1D snippet.\r\n   */\r\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const tNumR = inputLayout.width;\r\n    const tNumC = inputLayout.height;\r\n\r\n    if (tNumC === 1 && tNumR === 1) {\r\n      const source = `\r\n        float ${funcName}(int index) {\r\n          return sampleTexture(${name}, halfCR);\r\n        }\r\n      `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    if (tNumC === 1) {\r\n      const source = `\r\n          float ${funcName}(int index) {\r\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n    if (tNumR === 1) {\r\n      const source = `\r\n          float ${funcName}(int index) {\r\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n    const source = `\r\n        float ${funcName}(int index) {\r\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 2D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n\r\n    // TODO: modify row/col order for other dimensions.\r\n    const texShape = [inputLayout.height, inputLayout.width];\r\n\r\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\r\n      const texNumR = texShape[1];\r\n      const texNumC = texShape[0];\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    const squeezedShape = newShape;\r\n    if (squeezedShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const params = ['col', 'row'];\r\n      const source = `\r\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n          float ${funcName}(int row, int col) {\r\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const texNumR = texShape[1];\r\n    const texNumC = texShape[0];\r\n    if (texNumC === 1) {\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\r\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    }\r\n\r\n    if (texNumR === 1) {\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\r\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    }\r\n\r\n    const source = `\r\n        float ${funcName}(int row, int col) {\r\n          int index = col * ${shape[1]} + row;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 3D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride0 = shape[1] * shape[2];\r\n    const stride1 = shape[2];\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    const squeezedShape = newShape;\r\n    if (squeezedShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      const params = ['batch', 'col', 'row'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\r\n      // TODO: revisit the logic here to make it simpler\r\n      const revDims = keptDims.reverse();\r\n      const source = `\r\n          ${routine.routineBody}\r\n          float ${funcName}(int batch, int row, int col) {\r\n            return ${funcName}(${getSqueezedParams(params, revDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, routine.dependencies);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n          float ${funcName}(int depth, int row, int col) {\r\n            // Explicitly use integer operations as dot() only works on floats.\r\n            int index = depth * ${stride0} + col * ${stride1} + row;\r\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 4D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride2 = shape[3];\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    //\r\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\r\n    //\r\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    // if (newShape.length < shape.length) {\r\n    //   const newInputShape = squeezeInputShape(shape, newShape);\r\n    //   const params = ['row', 'col', 'depth', 'depth2'];\r\n    //   // Deep copy of input texture layout.\r\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n    //   newInputLayout.unpackedShape = newInputShape;\r\n    //   const source = `\r\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\r\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n    //       }\r\n    //     `;\r\n    //   return new GlslLibRoutine(\r\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    // }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n        float ${funcName}(int row, int col, int depth, int depth2) {\r\n          int index = row * ${stride0} + col * ${stride1} +\r\n              depth2 * ${stride2} + depth;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 5D snippet.\r\n   */\r\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride3 = shape[4];\r\n    const stride2 = shape[3] * stride3;\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    if (newShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, newShape);\r\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const source = `\r\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\r\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\r\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\r\n          depth3 * ${stride3} + depth2;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 6D snippet.\r\n   */\r\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride4 = shape[5];\r\n    const stride3 = shape[4] * stride4;\r\n    const stride2 = shape[3] * stride3;\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    if (newShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, newShape);\r\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const source = `\r\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n            float ${funcName}(int row, int col, int depth,\r\n              int depth2, int depth3, int depth4) {\r\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n            }\r\n          `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n          float ${funcName}(int row, int col, int depth,\r\n            int depth2, int depth3, int depth4) {\r\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\r\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\r\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * This is the main function to map from the given texture coordiantes (s,t)\r\n   * to logical indices for the output\r\n   * There will only be one single variation of this\r\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\r\n   */\r\n  protected toVec(): {[name: string]: GlslLibRoutine} {\r\n    const output = this.context.outputTextureLayout;\r\n    const rank = output.shape.length;\r\n    const strides = output.strides;\r\n    const xScale = output.width;\r\n    const yScale = output.height;\r\n\r\n    const stridesBlock = [];\r\n    for (let i = 0; i < rank - 1; ++i) {\r\n      stridesBlock.push(`\r\n        c[${i}] = offset / ${strides[i]};`);\r\n      stridesBlock.push(`\r\n        offset -= c[${i}] * ${strides[i]};`);\r\n    }\r\n    stridesBlock.push(`\r\n        c[${rank - 1}] = offset;`);\r\n    const body = `\r\n      void toVec(vec2 texCoords, out int c[${rank}]) {\r\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\r\n        ${stridesBlock.join('')}\r\n      }\r\n      void toVec(int offset, out int c[${rank}]) {\r\n        ${stridesBlock.join('')}\r\n      }\r\n    `;\r\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\r\n  }\r\n  /**\r\n   * These are value getter functions generated for each input\r\n   * Each function is hardwired to the name and dimensions of the input\r\n   * An '_T' variation is also produced which accesses values as if the\r\n   * input was transposed\r\n   */\r\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const layout = this.context.inputTextureLayouts[i];\r\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\r\n      const rank = shape.length;\r\n      let funcName = `_${name}`;\r\n      result[funcName] = new GlslLibRoutine(\r\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\r\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\r\n      funcName = funcName + '_T';\r\n      result[funcName] = new GlslLibRoutine(\r\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\r\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * Produces one value getter function for the name and rank given\r\n   * If a transpose is set proper offsetToCoords mapping will be used\r\n   * @param name name of the function\r\n   * @param rank rank of the input\r\n   * @param transpose whether or not should generate a transpose variation\r\n   */\r\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\r\n      string {\r\n    let name = `_${varName}`;\r\n    if (transpose) {\r\n      name = name + '_T';\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return `\r\n        float ${name}(int m[${rank}]) {\r\n          int offset = indicesToOffset${name}(m);\r\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\r\n          return value;\r\n        }\r\n        `;\r\n  }\r\n\r\n  /**\r\n   * Produces a packed value getter function for the name and rank given\r\n   * If a transpose is set proper offsetToCoords mapping will be used\r\n   * @param name name of the function\r\n   * @param rank rank of the input\r\n   * @param transpose whether or not should generate a transpose variation\r\n   */\r\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\r\n      string {\r\n    let name = `_${varName}_Pack`;\r\n    if (transpose) {\r\n      name = name + '_T';\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return `\r\n        vec4 ${name}(int m[${rank}]) {\r\n          int offset = indicesToOffset_${varName}(m);\r\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n          return ${glsl.texture2D}(${varName}, coords);\r\n        }\r\n        `;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ProgramInfo, TextureLayout} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nexport enum FunctionType {\r\n  ValueBased,\r\n  Positional\r\n}\r\nexport interface GlslFunction<T extends FunctionType> {\r\n  body: string;\r\n  name: string;\r\n  type: T;\r\n}\r\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\r\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\r\n  inputShape: readonly number[];\r\n  outputShape: readonly number[];\r\n}\r\n\r\nexport class GlslContext {\r\n  constructor(\r\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\r\n      public outputTextureLayout: TextureLayout) {}\r\n}\r\nexport abstract class GlslLib {\r\n  constructor(public context: GlslContext) {}\r\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\r\n  abstract getCustomTypes(): {[name: string]: string};\r\n}\r\n\r\n// abstraction to represent a GLSL library routine and it's dependencies\r\nexport class GlslLibRoutine {\r\n  constructor(public routineBody: string, public dependencies?: string[]) {}\r\n}\r\n\r\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\r\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\r\nexport class GlslLibRoutineNode {\r\n  dependencies: GlslLibRoutineNode[];\r\n  routineBody: string;\r\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\r\n    if (dependencies) {\r\n      this.dependencies = dependencies;\r\n    } else {\r\n      this.dependencies = [];\r\n    }\r\n\r\n    if (routineBody) {\r\n      this.routineBody = routineBody;\r\n    }\r\n  }\r\n  addDependency(node: GlslLibRoutineNode) {\r\n    if (node) {\r\n      this.dependencies.push(node);\r\n    }\r\n  }\r\n}\r\n\r\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\r\nexport class TopologicalSortGlslRoutines {\r\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\r\n    if (!nodes || nodes.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (nodes.length === 1) {\r\n      return nodes;\r\n    }\r\n\r\n    const cycleCheck = new Set<string>();\r\n    const alreadyTraversed = new Set<string>();\r\n    const result = new Array<GlslLibRoutineNode>();\r\n\r\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\r\n    return result;\r\n  }\r\n\r\n  private static createOrderedNodes(\r\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\r\n      result: GlslLibRoutineNode[]) {\r\n    for (let i = 0; i < graphNodes.length; ++i) {\r\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\r\n    }\r\n  }\r\n\r\n  private static dfsTraverse(\r\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\r\n    // if this root has already been traversed return\r\n    if (!root || alreadyTraversed.has(root.name)) {\r\n      return;\r\n    }\r\n\r\n    // cyclic dependency has been detected\r\n    if (cycleCheck.has(root.name)) {\r\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\r\n    }\r\n\r\n    // hold this node to detect cycles if any\r\n    cycleCheck.add(root.name);\r\n\r\n    // traverse children in a dfs fashion\r\n    const dependencies = root.dependencies;\r\n    if (dependencies && dependencies.length > 0) {\r\n      for (let i = 0; i < dependencies.length; ++i) {\r\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\r\n      }\r\n    }\r\n\r\n    // add to result holder\r\n    result.push(root);\r\n\r\n    // mark this node as traversed so that we don't traverse from this again\r\n    alreadyTraversed.add(root.name);\r\n\r\n    // release the hold\r\n    cycleCheck.delete(root.name);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * This GLSL library handles routines converting\r\n * float32 to/from Unsigned byte or float 16\r\n */\r\nexport class EncodingGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\r\n        return vec4(f, 0.0, 0.0, 0.0);\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\r\n        return rgba.r;\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\r\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\r\n   */\r\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\r\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\r\n    return {\r\n      encode: new GlslLibRoutine(`\r\n      highp vec4 encode(highp float f) {\r\n        highp float F = abs(f);\r\n        highp float Sign = step(0.0,-f);\r\n        highp float Exponent = floor(log2(F));\r\n        highp float Mantissa = (exp2(- Exponent) * F);\r\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\r\n        highp vec4 rgba;\r\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\r\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\r\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\r\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\r\n        ${endianness}\r\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\r\n        return rgba;\r\n    }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * returns the routine to encode a vec4 of unsigned bytes to float32\r\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\r\n   */\r\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\r\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\r\n    return {\r\n      decode: new GlslLibRoutine(`\r\n        highp float decode(highp vec4 rgba) {\r\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\r\n          ${endianness}\r\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\r\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\r\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\r\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\r\n          return Result;\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * Determines if the machine is little endian or not\r\n   * @credit: https://gist.github.com/TooTallNate/4750953\r\n   */\r\n  static isLittleEndian(): boolean {\r\n    const b = new ArrayBuffer(4);\r\n    const a = new Uint32Array(b);\r\n    const c = new Uint8Array(b);\r\n    a[0] = 0xdeadbeef;\r\n    if (c[0] === 0xef) {\r\n      return true;\r\n    }\r\n    if (c[0] === 0xde) {\r\n      return false;\r\n    }\r\n    throw new Error('unknown endianness');\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\nimport {getGlsl} from './glsl-source';\r\n\r\n/**\r\n * This GLSL library handles routines around reading a texlet and writing to it\r\n * Reading and writing could be more than just dealing with one channel\r\n * It may require encoding/decoding to/from 4 channels into one\r\n */\r\nexport class FragColorGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return {\r\n      setFragColor: new GlslLibRoutine(\r\n          `\r\n        void setFragColor(float value) {\r\n            ${glsl.output} = encode(value);\r\n        }\r\n        `,\r\n          ['encoding.encode'])\r\n    };\r\n  }\r\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      getColorAsFloat: new GlslLibRoutine(\r\n          `\r\n        float getColorAsFloat(vec4 color) {\r\n            return decode(color);\r\n        }\r\n        `,\r\n          ['encoding.decode'])\r\n    };\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\r\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\r\n/**\r\n * GLSL preprocessor responsible for resolving @inline directives\r\n */\r\nexport function replaceInlines(script: string): string {\r\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\r\n  let match;\r\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\r\n    const params = match[3]\r\n                       .split(',')\r\n                       .map(s => {\r\n                         const tokens = s.trim().split(' ');\r\n                         if (tokens && tokens.length === 2) {\r\n                           return {type: tokens[0], name: tokens[1]};\r\n                         }\r\n                         return null;\r\n                       })\r\n                       .filter(v => v !== null);\r\n    inlineDefs[match[2]] = {params, body: match[4]};\r\n  }\r\n  for (const name in inlineDefs) {\r\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\r\n    const regex = new RegExp(regexString, 'gm');\r\n    while ((match = regex.exec(script)) !== null) {\r\n      const type = match[1];\r\n      const variable = match[2];\r\n      const params = match[3].split(',');\r\n      const declLine = (type) ? `${type} ${variable};` : '';\r\n      let newBody: string = inlineDefs[name].body;\r\n      let paramRedecLine = '';\r\n      inlineDefs[name].params.forEach((v, i) => {\r\n        if (v) {\r\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\r\n        }\r\n      });\r\n      newBody = `${paramRedecLine}\\n ${newBody}`;\r\n      newBody = newBody.replace('return', `${variable} = `);\r\n      const replacement = `\r\n      ${declLine}\r\n      {\r\n        ${newBody}\r\n      }\r\n      `;\r\n      script = script.replace(match[0], replacement);\r\n    }\r\n  }\r\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\r\n  return script;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\r\nimport {replaceInlines} from './glsl-function-inliner';\r\nimport {glslRegistry} from './glsl-registered-libs';\r\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\r\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/**\r\n * Preprocessor for the additions to the GLSL language\r\n * It deals with:\r\n *  @include directives\r\n *  @inline\r\n *  Loop unrolling (not implemented)\r\n *  Macro resolution (not implemented)\r\n */\r\nexport class GlslPreprocessor {\r\n  readonly context: GlslContext;\r\n  readonly libs: {[name: string]: GlslLib} = {};\r\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\r\n\r\n  constructor(\r\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\r\n      outputTextureLayout: TextureLayout) {\r\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\r\n\r\n    // construct GlslLibs\r\n    Object.keys(glslRegistry).forEach((name: string) => {\r\n      const lib = new glslRegistry[name](this.context);\r\n      this.libs[name] = lib;\r\n    });\r\n\r\n    // construct GlslRoutineDependencyGraph\r\n    const map = this.glslLibRoutineDependencyGraph;\r\n    for (const libName in this.libs) {\r\n      const lib = this.libs[libName];\r\n      const routinesInLib = lib.getFunctions();\r\n      for (const routine in routinesInLib) {\r\n        const key = libName + '.' + routine;\r\n        let currentNode: GlslLibRoutineNode;\r\n        if (map[key]) {\r\n          currentNode = map[key];\r\n          currentNode.routineBody = routinesInLib[routine].routineBody;\r\n        } else {\r\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\r\n          map[key] = currentNode;\r\n        }\r\n        const dependencies = routinesInLib[routine].dependencies;\r\n        if (dependencies) {\r\n          for (let i = 0; i < dependencies.length; ++i) {\r\n            if (!map[dependencies[i]]) {\r\n              const node = new GlslLibRoutineNode(dependencies[i]);\r\n              map[dependencies[i]] = node;\r\n              currentNode.addDependency(node);\r\n            } else {\r\n              currentNode.addDependency(map[dependencies[i]]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  preprocess(): string {\r\n    const programInfo = this.context.programInfo;\r\n    let source = programInfo.shaderSource;\r\n\r\n    // append main() function\r\n    if (!this.context.programInfo.hasMain) {\r\n      source = `${source}\r\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\r\n    }\r\n    // replace inlines\r\n    source = replaceInlines(source);\r\n\r\n    // concat final source string\r\n    return `${getFragShaderPreamble(this.context.glContext.version)}\r\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\r\n    ${this.getImports(source)}\r\n    ${source}`;\r\n  }\r\n\r\n  protected getImports(script: string): string {\r\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\r\n\r\n    if (routinesIncluded.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    let routines = '';\r\n    for (let i = 0; i < routinesIncluded.length; ++i) {\r\n      if (routinesIncluded[i].routineBody) {\r\n        routines += routinesIncluded[i].routineBody + '\\n';\r\n      } else {\r\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\r\n      }\r\n    }\r\n\r\n    return routines;\r\n  }\r\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\r\n    const nodes: GlslLibRoutineNode[] = [];\r\n\r\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\r\n      const routine = classAndRoutine.split('.')[1];\r\n      if (script.indexOf(routine) !== -1) {\r\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\r\n      }\r\n    });\r\n\r\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\r\n  }\r\n\r\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\r\n    const uniformLines: string[] = [];\r\n    if (samplers) {\r\n      for (const sampler of samplers) {\r\n        uniformLines.push(`uniform sampler2D ${sampler};`);\r\n      }\r\n    }\r\n    if (variables) {\r\n      for (const variable of variables) {\r\n        uniformLines.push(\r\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\r\n      }\r\n    }\r\n    return uniformLines.join('\\n');\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\r\nimport {GlslContext, GlslLib} from './glsl-definitions';\r\nimport {EncodingGlslLib} from './glsl-encoding-lib';\r\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\r\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\r\nimport {VecGlslLib} from './glsl-vec-lib';\r\n\r\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\r\n  'encoding': EncodingGlslLib,\r\n  'fragcolor': FragColorGlslLib,\r\n  'vec': VecGlslLib,\r\n  'shapeUtils': ShapeUtilsGlslLib,\r\n  'coordinates': CoordsGlslLib,\r\n  //  'arrays': ArrayGlslSLib\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * GLSL Library responsible for data types and routines for manipulating\r\n * coordinates and mapping to/from tensor indices\r\n */\r\nexport class ShapeUtilsGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      ...this.bcastIndex(),\r\n      ...this.bcastMatmulIndex(),\r\n      ...this.offsetToIndices(),\r\n      ...this.indicesToOffset(),\r\n      ...this.incrementIndices()\r\n    };\r\n  }\r\n  getCustomTypes() {\r\n    return {};\r\n  }\r\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\r\n    const outputRank = this.context.outputTextureLayout.shape.length;\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\r\n      if (shape.length <= outputRank) {\r\n        const rank = shape.length;\r\n        const dimOffset = outputRank - rank;\r\n        const funcName = `bcastIndices_${name}`;\r\n        let block = '';\r\n        for (let i = 0; i < rank; ++i) {\r\n          block += `\r\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\r\n          `;\r\n        }\r\n        const body = `\r\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\r\n          ${block}\r\n        }\r\n        `;\r\n        result[funcName] = new GlslLibRoutine(body);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\r\n    const outputRank = this.context.outputTextureLayout.shape.length;\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      if (!(shape.length < 2 || shape.length > outputRank)) {\r\n        const rank = shape.length;\r\n        const dimOffset = outputRank - rank;\r\n        const funcName = `bcastMatmulIndices_${name}`;\r\n        let block = '';\r\n        for (let i = 0; i < rank - 2; ++i) {\r\n          block += `\r\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\r\n          `;\r\n        }\r\n        const body = `\r\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\r\n          ${block}\r\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\r\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\r\n        }\r\n        `;\r\n        result[funcName] = new GlslLibRoutine(body);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const strides = this.context.inputTextureLayouts[i].strides;\r\n      const rank = shape.length;\r\n      let funcName = `indicesToOffset_${name}`;\r\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\r\n      funcName = `indicesToOffset_${name}_T`;\r\n      result[funcName] =\r\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\r\n    });\r\n    return result;\r\n  }\r\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\r\n    let block = '';\r\n    for (let i = rank - 1; i >= 0; --i) {\r\n      block += `\r\n        offset += indices[${i}] * ${strides[i]};\r\n        `;\r\n    }\r\n    return `\r\n      int ${name}(int indices[${rank}]) {\r\n        int offset = 0;\r\n        ${block}\r\n        return offset;\r\n      }\r\n      `;\r\n  }\r\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const strides = this.context.inputTextureLayouts[i].strides;\r\n      const rank = shape.length;\r\n      let funcName = `offsetToIndices_${name}`;\r\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\r\n      funcName = `offsetToIndices_${name}_T`;\r\n      result[funcName] =\r\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\r\n    });\r\n    return result;\r\n  }\r\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\r\n    const stridesBlock = [];\r\n    for (let i = 0; i < rank - 1; ++i) {\r\n      stridesBlock.push(`\r\n      indices[${i}] = offset / ${strides[i]};`);\r\n      stridesBlock.push(`\r\n        offset -= indices[${i}] * ${strides[i]};`);\r\n    }\r\n    stridesBlock.push(`\r\n      indices[${rank - 1}] = offset;`);\r\n    return `\r\n      void ${name}(int offset, out int indices[${rank}]) {\r\n        ${stridesBlock.join('')}\r\n      }\r\n      `;\r\n  }\r\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const rank = shape.length;\r\n      const funcName = `incrementIndices_${name}`;\r\n      let shapeInit = '';\r\n      for (let i = 0; i < rank; ++i) {\r\n        shapeInit += `\r\n        shape[${i}] = ${shape[i]};`;\r\n      }\r\n      const body = `\r\n        void ${funcName}(int axis, out int indices[${rank}]) {\r\n          int shape[${rank}];\r\n          ${shapeInit};\r\n          for(int i = ${rank} -1 ; i >= 0; --i) {\r\n            if(i > axis) continue;\r\n            indices[i] += 1;\r\n            if(indices[i] < shape[i]) {\r\n              break;\r\n            }\r\n            indices[i] = 0;\r\n          }\r\n        }\r\n        `;\r\n      result[funcName] = new GlslLibRoutine(body);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * represent a version irrelevant abstraction of for GLSL source code\r\n */\r\nexport interface Glsl {\r\n  readonly version: string;\r\n  readonly attribute: string;\r\n  readonly varyingVertex: string;\r\n  readonly varyingFrag: string;\r\n  readonly texture2D: string;\r\n  readonly output: string;\r\n  readonly outputDeclaration: string;\r\n}\r\n\r\nconst GLSL_ES_2_0: Glsl = {\r\n  version: '',\r\n  attribute: 'attribute',\r\n  varyingVertex: 'varying',\r\n  varyingFrag: 'varying',\r\n  texture2D: 'texture2D',\r\n  output: 'gl_FragColor',\r\n  outputDeclaration: '',\r\n};\r\nconst GLSL_ES_3_0: Glsl = {\r\n  version: '#version 300 es',\r\n  attribute: 'in',\r\n  varyingVertex: 'out',\r\n  varyingFrag: 'in',\r\n  texture2D: 'texture',\r\n  output: 'outputColor',\r\n  outputDeclaration: 'out vec4 outputColor;',\r\n};\r\n\r\nexport function getGlsl(version: 1|2) {\r\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\r\n}\r\n\r\nexport function getVertexShaderSource(version: 1|2): string {\r\n  const glsl = getGlsl(version);\r\n  return `${glsl.version}\r\n      precision highp float;\r\n      ${glsl.attribute} vec3 position;\r\n      ${glsl.attribute} vec2 textureCoord;\r\n\r\n      ${glsl.varyingVertex} vec2 TexCoords;\r\n\r\n      void main()\r\n      {\r\n          gl_Position = vec4(position, 1.0);\r\n          TexCoords = textureCoord;\r\n      }`;\r\n}\r\n\r\nexport function getFragShaderPreamble(version: 1|2): string {\r\n  const glsl = getGlsl(version);\r\n  return `${glsl.version}\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2D;\r\n    ${glsl.varyingFrag} vec2 TexCoords;\r\n    ${glsl.outputDeclaration}\r\n    const vec2 halfCR = vec2(0.5, 0.5);\r\n\r\n    // Custom vector types to handle higher dimenalities.\r\n    struct ivec5\r\n    {\r\n      int x;\r\n      int y;\r\n      int z;\r\n      int w;\r\n      int u;\r\n    };\r\n\r\n    struct ivec6\r\n    {\r\n      int x;\r\n      int y;\r\n      int z;\r\n      int w;\r\n      int u;\r\n      int v;\r\n    };\r\n\r\n    int imod(int x, int y) {\r\n      return x - y * (x / y);\r\n    }\r\n\r\n    `;\r\n}\r\n\r\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\r\n  const glsl = getGlsl(version);\r\n  return `\r\n  void main() {\r\n    int indices[${outputShapeLength}];\r\n    toVec(TexCoords, indices);\r\n    vec4 result = vec4(process(indices));\r\n    ${glsl.output} = result;\r\n  }\r\n  `;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * GLSL Library responsible for vec routines\r\n * Vec is an varible length int array. The length is fixed at the time of\r\n * generating the library functions from the dimensions of the output.\r\n */\r\nexport class VecGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\r\n  }\r\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    for (const name in nameOp) {\r\n      const fname = `${name}Vec`;\r\n      let assignmentBlock = '';\r\n      for (let i = 0; i < rank; ++i) {\r\n        assignmentBlock += `\r\n          dest[${i}] ${nameOp[name]} src[${i}];\r\n          `;\r\n      }\r\n      const body = `\r\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\r\n          ${assignmentBlock}\r\n        }\r\n        `;\r\n      result[fname] = new GlslLibRoutine(body);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let assignmentBlock = '';\r\n    for (let i = 0; i < rank; ++i) {\r\n      assignmentBlock += `\r\n        dest[${i}] = src[${i}];\r\n        `;\r\n    }\r\n    const body = `\r\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\r\n        ${assignmentBlock}\r\n      }\r\n      `;\r\n    return {copyVec: new GlslLibRoutine(body)};\r\n  }\r\n\r\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let block = `\r\n        if(index < 0)\r\n            index =${rank} + index;\r\n        if (index == 0)\r\n            m[0] = value;\r\n        `;\r\n    for (let i = 1; i < rank - 1; ++i) {\r\n      block += `\r\n        else if (index == ${i})\r\n            m[${i}] = value;\r\n            `;\r\n    }\r\n    block += `\r\n        else\r\n            m[${rank - 1}] = value;\r\n        `;\r\n    const body = `\r\n      void setVecItem(out int m[${rank}], int index, int value) {\r\n        ${block}\r\n      }\r\n        `;\r\n    return {setVecItem: new GlslLibRoutine(body)};\r\n  }\r\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let block = `\r\n        if(index < 0)\r\n            index = ${rank} + index;\r\n        if (index == 0)\r\n            return m[0];\r\n      `;\r\n    for (let i = 1; i < rank - 1; ++i) {\r\n      block += `\r\n        else if (index == ${i})\r\n            return m[${i}];\r\n      `;\r\n    }\r\n    block += `\r\n        else\r\n            return m[${rank - 1}];\r\n        `;\r\n    const body = `\r\n      int getVecItem(int m[${rank}], int index) {\r\n        ${block}\r\n      }\r\n    `;\r\n    return {getVecItem: new GlslLibRoutine(body)};\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceHandler} from '../../backend';\r\nimport {Logger} from '../../instrument';\r\nimport {Tensor} from '../../tensor';\r\nimport {ShapeUtil} from '../../util';\r\nimport {createPackProgramInfoLoader} from './ops/pack';\r\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\r\n\r\nimport {encodeAsUint8} from './ops/uint8-encode';\r\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\r\nimport {WebGLSessionHandler} from './session-handler';\r\nimport {Encoder} from './texture-data-encoder';\r\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\r\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\r\n\r\nconst getProgramInfoUniqueKey =\r\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\r\n      const inputs =\r\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\r\n              .join('_');\r\n      let key = programInfo.name;\r\n      if (programInfo.cacheHint) {\r\n        key += '[' + programInfo.cacheHint + ']';\r\n      }\r\n      key += ':' + inputs;\r\n      return key;\r\n    };\r\n\r\nexport class WebGLInferenceHandler implements InferenceHandler {\r\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  constructor(public session: WebGLSessionHandler) {\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n\r\n  /**\r\n   * @returns [width, height]\r\n   */\r\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\r\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\r\n  }\r\n\r\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\r\n    if (inputs.length < program.inputNames.length) {\r\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\r\n    }\r\n    if (program.inputNames.length !== program.inputTypes.length) {\r\n      throw new Error('input names size does not match input types');\r\n    }\r\n\r\n    // create texture info for input\r\n    const inputTextureDatas: TextureData[] = [];\r\n    for (let i = 0; i < program.inputNames.length; ++i) {\r\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\r\n    }\r\n\r\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\r\n    let artifact = this.session.programManager.getArtifact(key);\r\n    const programInfo = artifact ?\r\n        artifact.programInfo :\r\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\r\n                                                                    (program as ProgramInfo));\r\n\r\n    // create texture info for output\r\n    const outputTextureLayout = createTextureLayoutFromTextureType(\r\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\r\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\r\n\r\n    if (!artifact) {\r\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\r\n      this.session.programManager.setArtifact(key, artifact);\r\n    }\r\n\r\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\r\n    return outputTextureData;\r\n  }\r\n\r\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\r\n    const outputTextureData = this.executeProgram(program, inputs);\r\n    return outputTextureData.tensor;\r\n  }\r\n\r\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\r\n    // input should match\r\n    for (let i = 0; i < inputs.length; ++i) {\r\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\r\n        throw new Error(`input[${i}] property packed inconsistent`);\r\n      }\r\n    }\r\n\r\n    // output should match\r\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\r\n      throw new Error('output property packed inconsistent');\r\n    }\r\n\r\n    this.session.programManager.run(artifact, inputs, output);\r\n  }\r\n\r\n  /**\r\n   * Create a TextureData object from a tensor.\r\n   * Usage = Encoder.Usage.UploadOnly.\r\n   * If a related texture data is found in cache, returns it;\r\n   * Otherwise:\r\n   *   Creates a new texture layout if not provided;\r\n   *   Creates WebGLTexture with the layout;\r\n   *   Upload tensor data to the texture;\r\n   *   Creates a texture data object associated with the given tensor.\r\n   * @param tensor the tensor with data to upload\r\n   */\r\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\r\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\r\n\r\n    if (!td) {\r\n      // check if we have texture data in different type\r\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\r\n      if (td) {\r\n        if (textureType === TextureType.packed) {\r\n          return this.pack(td);\r\n        } else {\r\n          return this.unpack(td);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!td) {\r\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\r\n\r\n      if (textureType === TextureType.packedLastDimension) {\r\n        const group = 1;\r\n        const channels = 4;\r\n        const shape = tensor.dims;\r\n        if (shape.length === 4) {\r\n          // pre-processing for kernel data of Conv.\r\n          //\r\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\r\n          // 1. implement texture based const-folding\r\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\r\n          // 3. run the program before dotProduct.\r\n          //\r\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\r\n          const adjustedLayout =\r\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\r\n          let buffer = tensor.numberData;\r\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\r\n            const numFeatureMaps = shape[0];\r\n            const oldRowSize = shape[1] * shape[2] * shape[3];\r\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\r\n            const newSize = numFeatureMaps * newRowSize;\r\n            buffer = new Float32Array(newSize);\r\n            for (let f = 0; f < numFeatureMaps; ++f) {\r\n              const oldOffset = f * oldRowSize;\r\n              const newOffset = f * newRowSize + f % group * oldRowSize;\r\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\r\n            }\r\n          }\r\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\r\n        }\r\n      }\r\n\r\n      if (textureType === TextureType.packed) {\r\n        const unpackedTextureLayout =\r\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\r\n        const unpackedTextureData = this.createTextureData(\r\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\r\n        td = this.pack(unpackedTextureData);\r\n      } else {\r\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\r\n      }\r\n    }\r\n    return td;\r\n  }\r\n\r\n  /**\r\n   * Create a TextureData object using the given data and bind to the given tensor.\r\n   * Usage = Encoder.Usage.UploadOnly.\r\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\r\n   * implementation by Graph.Transformer\r\n   * @param dataType the tensor data type\r\n   * @param data the actual data to upload\r\n   * @param tensor the tensor to bind. tensor's data is ignored.\r\n   */\r\n  createTextureDataFromLayoutBindTensor(\r\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\r\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\r\n  }\r\n\r\n  private createTextureData(\r\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\r\n      usage?: Encoder.Usage): TextureData {\r\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\r\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\r\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\r\n  }\r\n\r\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\r\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\r\n    const newTextureLayout: TextureLayout = {\r\n      channels: inputTD.channels,\r\n      height: inputTD.height,\r\n      width: inputTD.width,\r\n      // handle reshaping into scalar Tensors\r\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\r\n      strides: ShapeUtil.computeStrides(reshapedDims),\r\n      unpackedShape: reshapedDims,\r\n    };\r\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\r\n    return newTextureData.tensor;\r\n  }\r\n\r\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\r\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\r\n\r\n    // check if the reshape is 'cheap'\r\n    if (isReshapeCheap(input.dims, reshapedDims)) {\r\n      const newTextureLayout: TextureLayout = {\r\n        channels: inputTD.channels,\r\n        height: inputTD.height,\r\n        width: inputTD.width,\r\n        // handle reshaping into scalar Tensors\r\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\r\n        strides: ShapeUtil.computeStrides(reshapedDims),\r\n        unpackedShape: reshapedDims,\r\n        isPacked: true\r\n      };\r\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\r\n      return newTextureData.tensor;\r\n    }\r\n\r\n    const squeezedInputShape = processDims3D(input.dims);\r\n    const squeezedOutputShape = processDims3D(reshapedDims);\r\n\r\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\r\n    const squeezedOutputTensor = this.run(\r\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\r\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\r\n    return outputTensor;\r\n  }\r\n\r\n  private createTextureDataFromTexture(\r\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\r\n    const textureData: TextureData = {\r\n      ...layout,\r\n      tensor: tensor ||\r\n          new Tensor(\r\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\r\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\r\n      texture\r\n    };\r\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\r\n    return textureData;\r\n  }\r\n\r\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\r\n    return this.session.isInitializer(tensorId) ?\r\n        this.session.getTextureData(tensorId, isPacked) :\r\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\r\n  }\r\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\r\n    if (this.session.isInitializer(tensorId)) {\r\n      this.session.setTextureData(tensorId, td, isPacked);\r\n    } else {\r\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\r\n    }\r\n  }\r\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\r\n    return !!this.getTextureData(tensor.dataId, isPacked);\r\n  }\r\n\r\n  dispose(): void {\r\n    this.session.textureManager.clearActiveTextures();\r\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n\r\n  readTexture(textureData: TextureData): Tensor.NumberType {\r\n    if (textureData.isPacked) {\r\n      return this.readTexture(this.unpack(textureData));\r\n    }\r\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\r\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\r\n    }\r\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\r\n  }\r\n\r\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\r\n    if (textureData.isPacked) {\r\n      return this.readTextureAsync(this.unpack(textureData));\r\n    }\r\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\r\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\r\n    }\r\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\r\n  }\r\n\r\n  pack(input: TextureData): TextureData {\r\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\r\n    return outputTextureData;\r\n  }\r\n\r\n  unpack(input: TextureData): TextureData {\r\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\r\n    return outputTextureData;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {OpSet} from '../../opset';\r\n\r\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\r\nimport * as binaryOps from './ops/binary-op';\r\nimport {concat, parseConcatAttributes} from './ops/concat';\r\nimport {conv, parseConvAttributes} from './ops/conv';\r\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\r\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\r\nimport {gather, parseGatherAttributes} from './ops/gather';\r\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\r\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\r\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\r\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\r\nimport {pad, parsePadAttributes} from './ops/pad';\r\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\r\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\r\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\r\nimport {globalMaxPool} from './ops/pool';\r\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\r\nimport {parseReduceAttributes} from './ops/reduce';\r\nimport {reshape} from './ops/reshape';\r\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\r\nimport {shape} from './ops/shape';\r\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\r\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\r\nimport {parseSplitAttributes, split} from './ops/split';\r\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\r\nimport {sum} from './ops/sum';\r\nimport {tile} from './ops/tile';\r\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\r\nimport * as unaryOps from './ops/unary-op';\r\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\r\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\r\n\r\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\r\n  ['Abs', '', '6+', unaryOps.abs],\r\n  ['Acos', '', '7+', unaryOps.acos],\r\n  ['Add', '', '7+', binaryOps.add],\r\n  ['And', '', '7+', binaryOps.and],\r\n  ['Asin', '', '7+', unaryOps.asin],\r\n  ['Atan', '', '7+', unaryOps.atan],\r\n  // TODO: support new attributes for AveragePool-10\r\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\r\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\r\n  ['Ceil', '', '6+', unaryOps.ceil],\r\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\r\n  ['Concat', '', '4+', concat, parseConcatAttributes],\r\n  ['Conv', '', '1+', conv, parseConvAttributes],\r\n  ['Cos', '', '7+', unaryOps.cos],\r\n  ['Div', '', '7+', binaryOps.div],\r\n  ['Dropout', '', '7+', unaryOps.identity],\r\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\r\n  ['Equal', '', '7+', binaryOps.equal],\r\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\r\n  ['Exp', '', '6+', unaryOps.exp],\r\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\r\n  ['Floor', '', '6+', unaryOps.floor],\r\n  ['Gather', '', '1+', gather, parseGatherAttributes],\r\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\r\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\r\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\r\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\r\n  ['Greater', '', '7+', binaryOps.greater],\r\n  ['Identity', '', '1+', unaryOps.identity],\r\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\r\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\r\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\r\n  ['Less', '', '7+', binaryOps.less],\r\n  ['Log', '', '6+', unaryOps.log],\r\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\r\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\r\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\r\n  ['Mul', '', '7+', binaryOps.mul],\r\n  ['Neg', '', '6+', unaryOps.neg],\r\n  ['Not', '', '1+', unaryOps.not],\r\n  ['Or', '', '7+', binaryOps.or],\r\n  ['Pad', '', '2-10', pad, parsePadAttributes],\r\n  ['Pow', '', '7+', binaryOps.pow],\r\n  ['PRelu', '', '7+', binaryOps.pRelu],\r\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\r\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\r\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\r\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\r\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\r\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\r\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\r\n  ['Relu', '', '6+', unaryOps.relu],\r\n  ['Reshape', '', '5+', reshape],\r\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\r\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\r\n  ['Shape', '', '1+', shape],\r\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\r\n  ['Sin', '', '7+', unaryOps.sin],\r\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\r\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\r\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\r\n  // 'Split' operator has an optional attribute 'split'\r\n  // this attribute determines how the specified axis of input data is split.\r\n  // When the attribute is missing, we need the count of number of outputs\r\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\r\n  ['Split', '', '2+', split, parseSplitAttributes],\r\n  ['Sqrt', '', '6+', unaryOps.sqrt],\r\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\r\n  ['Sub', '', '7+', binaryOps.sub],\r\n  ['Sum', '', '6+', sum],\r\n  ['Tan', '', '7+', unaryOps.tan],\r\n  ['Tanh', '', '6+', unaryOps.tanh],\r\n  ['Tile', '', '6+', tile],\r\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\r\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\r\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\r\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\r\n  ['Xor', '', '7+', binaryOps.xor],\r\n];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\r\n  epsilon: number;\r\n  momentum: number;\r\n  spatial: number;\r\n}\r\n\r\nconst batchNormalizationProgramMetadata = {\r\n  name: 'BatchNormalization',\r\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\r\n  inputTypes:\r\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\r\n};\r\n\r\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...batchNormalizationProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\r\n    (node: Graph.Node): BatchNormalizationAttributes => {\r\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\r\n      const momentum = node.attributes.getFloat('momentum', 0.9);\r\n      const spatial = node.attributes.getInt('spatial', 1);\r\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\r\n    };\r\n\r\nconst createBatchNormalizationProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\r\n        ProgramInfo => {\r\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n          const rank = inputs[0].dims.length;\r\n          const [scaleWidth, scaleHeight] =\r\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\r\n          const shaderSource = `\r\n  float process(int[${rank}] indices) {\r\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\r\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\r\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\r\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\r\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\r\n\r\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\r\n  }`;\r\n          return {\r\n            ...batchNormalizationProgramMetadata,\r\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 5) {\r\n    throw new Error('BatchNormalization requires 5 inputs.');\r\n  }\r\n\r\n  const X = inputs[0];\r\n  const scale = inputs[1];\r\n  const B = inputs[2];\r\n  const mean = inputs[3];\r\n  const var_ = inputs[4];\r\n\r\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\r\n  // other inputs can have only one dimensions\r\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\r\n      var_.dims.length !== 1) {\r\n    throw new Error('invalid input shape.');\r\n  }\r\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\r\n      var_.dims[0] !== X.dims[1]) {\r\n    throw new Error('invalid input shape.');\r\n  }\r\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\r\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\r\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\r\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\n\r\nexport function glslAdd(): GlslValueFunction {\r\n  const name = 'add_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a + b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 + v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslDiv(): GlslValueFunction {\r\n  const name = 'div_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a / b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 / v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslMul(): GlslValueFunction {\r\n  const name = 'mul_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a * b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 * v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSub(): GlslValueFunction {\r\n  const name = 'sub_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a - b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 - v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslEqual(): GlslValueFunction {\r\n  const name = 'equal_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a == b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4(equal(v1, v2));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslGreater(): GlslValueFunction {\r\n  const name = 'greater_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a > b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4( v1.r > v2.r ,\r\n      v1.g > v2.g,\r\n      v1.b > v2.b,\r\n      v1.a > v2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLess(): GlslValueFunction {\r\n  const name = 'less_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a < b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4( v1.r < v2.r ,\r\n                v1.g < v2.g,\r\n                v1.b < v2.b,\r\n                v1.a < v2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslAnd(): GlslValueFunction {\r\n  const name = 'and_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) && bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r && b2.r ,\r\n                b1.g && b2.g,\r\n                b1.b && b2.b,\r\n                b1.a && b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslOr(): GlslValueFunction {\r\n  const name = 'or_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) || bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r || b2.r ,\r\n                b1.g || b2.g,\r\n                b1.b || b2.b,\r\n                b1.a || b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslXor(): GlslValueFunction {\r\n  const name = 'xor_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) ^^ bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r ^^ b2.r ,\r\n                b1.g ^^ b2.g,\r\n                b1.b ^^ b2.b,\r\n                b1.a ^^ b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslPow(): GlslValueFunction {\r\n  return glslBuiltinBinary('pow');\r\n}\r\nexport function glslPRelu(): GlslValueFunction {\r\n  const name = 'prelu_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a < 0.0 ? a * b: a;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4(\r\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\r\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\r\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\r\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\r\n      );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\r\n  const name = `${fname}_`;\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return ${fname}(a, b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return ${fname}(v1, v2);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\nconst createBinaryProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\r\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\r\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n      return {\r\n        name: glslFunc.name,\r\n        inputNames: ['A', 'B'],\r\n        inputTypes: [textureType, textureType],\r\n        cacheHint: cacheKey,\r\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\r\n      };\r\n    };\r\n\r\nconst createBinaryProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\r\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\r\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\r\n      let outputShape = inputs[0].dims;\r\n\r\n      const usePackedTexture = handler.session.pack;\r\n\r\n      if (isBroadcast) {\r\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\r\n        if (!calculatedShape) {\r\n          throw new Error('Can\\'t perform binary op on the given tensors');\r\n        }\r\n        outputShape = calculatedShape;\r\n        const outputRank = outputShape.length;\r\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\r\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\r\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\r\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\r\n\r\n        const glsl = getGlsl(handler.session.backend.glContext.version);\r\n        const shaderSource = usePackedTexture ? `\r\n      ${glslFunc.body}\r\n      void main() {\r\n        vec4 a = getAAtOutCoords();\r\n        vec4 b = getBAtOutCoords();\r\n        vec4 result = ${glslFunc.name}(a, b);\r\n        ${glsl.output} = result;\r\n      }` :\r\n                                                `\r\n      ${glslFunc.body}\r\n      float process(int indices[${outputRank}]) {\r\n        int aindices[${aRank}];\r\n        int bindices[${bRank}];\r\n        ${aBcast}\r\n        ${bBcast}\r\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\r\n      }`;\r\n\r\n        return {\r\n          name: glslFunc.name,\r\n          inputNames: ['A', 'B'],\r\n          inputTypes: [textureType, textureType],\r\n          output: {dims: outputShape, type: outputTensorType, textureType},\r\n          shaderSource,\r\n          hasMain: usePackedTexture\r\n        };\r\n      }\r\n      const glsl = getGlsl(handler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n    ${glslFunc.body}\r\n    void main() {\r\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\r\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\r\n      vec4 result = ${glslFunc.name}(v1, v2);\r\n      ${glsl.output} = result;\r\n    }\r\n    `;\r\n\r\n      return {\r\n        name: glslFunc.name,\r\n        inputNames: ['A', 'B'],\r\n        inputTypes: [textureType, textureType],\r\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\r\n\r\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\r\n\r\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\r\n\r\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\r\n\r\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\r\n\r\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\r\n\r\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\r\n\r\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\r\n\r\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\r\n\r\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\r\n\r\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\r\n\r\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\nimport {ConcatAttributes} from './concat';\r\n\r\nimport {getChannels, unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\r\n  name: 'Concat (packed)',\r\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\r\n  inputTypes: Array(inputCount).fill(TextureType.packed),\r\n  cacheHint\r\n});\r\n\r\nconst createPackedConcatProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\r\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\r\n      }\r\n      if (axis < 0) {\r\n        axis = inputShape.length + axis;\r\n      }\r\n      // ensure all of the non-concatenated axes match each other\r\n      // calculate the shape of the output tensor while we do that\r\n      const outputShape = inputShape.slice(0);\r\n      for (let i = 1; i < inputs.length; i++) {\r\n        const dataNShape = inputs[i].dims.slice();\r\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\r\n          // add to the placeholder for computing output shape\r\n          if (axisIndex === axis) {\r\n            outputShape[axis] += dataNShape[axisIndex];\r\n          }\r\n          // ensure all non-cancatenated axes match each other\r\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\r\n            throw new Error('non concat dimensions must match');\r\n          }\r\n        }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const coords = getChannels('coords', rank);\r\n      const dtype = getCoordsDataType(rank);\r\n      const unpackChannel = unpackFromChannel();\r\n\r\n      const shapes = inputs.map(i => i.dims);\r\n      const channels = getGlChannels(rank);\r\n      const offsets: number[] = new Array(shapes.length - 1);\r\n\r\n      offsets[0] = shapes[0][axis];\r\n      for (let i = 1; i < offsets.length; i++) {\r\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\r\n      }\r\n\r\n      const channel = channels[axis];\r\n      const lastChannels = channels.slice(-2);\r\n      const allChannels = channels.join();\r\n\r\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\r\n        return getChannel(\r\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\r\n        }`;\r\n      for (let i = 1; i < offsets.length; i++) {\r\n        const shift = offsets[i - 1];\r\n        getValueSnippet += `\r\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\r\n              return getChannel(\r\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\r\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\r\n            }`;\r\n      }\r\n      const lastIndex = offsets.length;\r\n      const shift = offsets[offsets.length - 1];\r\n      getValueSnippet += `\r\n            return getChannel(\r\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\r\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\r\n\r\n      const glsl = getGlsl(handler.session.backend.glContext.version);\r\n\r\n      const shaderSource = `\r\n          ${unpackChannel}\r\n          float getValue(${channels.map(x => 'int ' + x)}) {\r\n            ${getValueSnippet}\r\n          }\r\n\r\n          void main() {\r\n            ${dtype} coords = getOutputCoords();\r\n            int lastDim = coords.${channels[rank - 1]};\r\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\r\n            coords.${channels[rank - 2]} = lastDim;\r\n\r\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\r\n\r\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\r\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\r\n              result.g = getValue(${coords});\r\n            }\r\n\r\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\r\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\r\n              result.a = getValue(${coords});\r\n            }\r\n\r\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\r\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\r\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\r\n              result.b = getValue(${coords});\r\n            }\r\n            ${glsl.output} = result;\r\n          }\r\n        `;\r\n\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true,\r\n      };\r\n    };\r\n\r\nexport const createPackedConcatProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\r\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\r\n  const channelIdx = channels.indexOf(channel);\r\n  const res = channels.map((c, idx) => {\r\n    if (idx === channelIdx) {\r\n      return `${c} - ${shift}`;\r\n    } else {\r\n      return c;\r\n    }\r\n  });\r\n  return res.join();\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\r\n\r\nexport interface ConcatAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nexport const concat: OperatorImplementation<ConcatAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\r\n        const output =\r\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n        return [output];\r\n      } else {\r\n        const output =\r\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n        return [output];\r\n      }\r\n    };\r\n\r\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\r\n  name: 'Concat',\r\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\r\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\r\n  cacheHint\r\n});\r\n\r\nconst createUnpackedConcatProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\r\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\r\n      }\r\n      if (axis < 0) {\r\n        axis = inputShape.length + axis;\r\n      }\r\n      // ensure all of the non-concatenated axes match each other\r\n      // calculate the shape of the output tensor while we do that\r\n      const outputShape = inputShape.slice(0);\r\n      for (let i = 1; i < inputs.length; i++) {\r\n        const dataNShape = inputs[i].dims.slice();\r\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\r\n          // add to the placeholder for computing output shape\r\n          if (axisIndex === axis) {\r\n            outputShape[axis] += dataNShape[axisIndex];\r\n          }\r\n          // ensure all non-cancatenated axes match each other\r\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\r\n            throw new Error('non concat dimensions must match');\r\n          }\r\n        }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n\r\n      const sizeInConcatAxis = new Array<number>(inputs.length);\r\n      let previousSum = 0;\r\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\r\n        previousSum += inputs[i].dims[axis];\r\n        sizeInConcatAxis[i] = previousSum;\r\n      }\r\n\r\n      let getTextureIndexWhereDataResidesMethod = '';\r\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\r\n      if (inputs.length < 5) {\r\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\r\n      } else {\r\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\r\n      }\r\n\r\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\r\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\r\n      const shaderSource = `\r\n        ${fetchDataFromCorrectTextureMethod}\r\n        ${getSizeInConcatAxisValueFromIndexMethod}\r\n        ${getTextureIndexWhereDataResidesMethod}\r\n        float process(int indices[${rank}]) {\r\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\r\n\r\n          if(textureIndex != 0) {\r\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\r\n          }\r\n\r\n          return fetchDataFromCorrectTexture(textureIndex, indices);\r\n        }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n      };\r\n    };\r\n\r\nconst createUnpackedConcatProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\r\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\r\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\r\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\r\n`);\r\n  return `int getTextureWhereDataResides(int index) {\r\n      ${searchAxis.join('')}\r\n    }`;\r\n};\r\n\r\n// TODO: Implement BinarySearch in GLSL\r\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\r\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\r\n\r\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\r\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\r\n  for (let i = 0; i < numberOfTensors; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\r\n    } else if (i === numberOfTensors - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return _X${i}(indices); }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\r\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\r\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\r\n    } else if (i === sizeInConcatAxis.length - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return ${sizeInConcatAxis[i]}; }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\r\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length < 1) {\r\n    throw new Error('too few inputs');\r\n  }\r\n\r\n  const inputType = inputs[0].type;\r\n  const inputDimensionality = inputs[0].dims.length;\r\n\r\n  // TODO: Support string concat\r\n  if (inputType === 'string') {\r\n    throw new Error('string tensor is not supported yet');\r\n  }\r\n\r\n  for (const input of inputs) {\r\n    // make sure types of all inputs match\r\n    if (input.type !== inputType) {\r\n      throw new Error('input tensors should be one type');\r\n    }\r\n\r\n    // make sure the dimensionality of all inputs are the same\r\n    if (input.dims.length !== inputDimensionality) {\r\n      throw new Error('input tensors should have the same shape');\r\n    }\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../../instrument';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {calculateOutputShape, ConvAttributes} from './conv';\r\nimport {getActicationSnippet} from './fuse-utils';\r\n\r\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\r\n  name: 'GroupedConv',\r\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.unpacked],\r\n  cacheHint\r\n});\r\n\r\nconst createUnpackedGroupedConvProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\r\n     attributes: ConvAttributes): ProgramInfo => {\r\n      const hasBias = inputs.length > 2;\r\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\r\n      const xShape = inputs[0].dims.slice();\r\n      const wShape = inputs[1].dims.slice();\r\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\r\n      Logger.verbose(\r\n          'GroupedConv',\r\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\r\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\r\n      const outputShape =\r\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\r\n\r\n      const shaderSource = `\r\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\r\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\r\n  ${activationFunction}\r\n  void main() {\r\n    ivec4 coords = getOutputCoords();\r\n    int batch = coords.x;\r\n    int output_channel = coords.y;\r\n    ivec2 xRCCorner = coords.zw * strides - pads;\r\n    int group_id = output_channel / ${outputChannelsPerGroup};\r\n\r\n    float value = 0.0;\r\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\r\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\r\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\r\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\r\n\r\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\r\n          continue;\r\n        }\r\n\r\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\r\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\r\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\r\n            continue;\r\n          }\r\n\r\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\r\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\r\n          value += xVal*wVal;\r\n        }\r\n      }\r\n    }\r\n    ${processBias}\r\n    ${applyActivation}\r\n    ${glsl.output} = vec4(value, .0, .0, .0);\r\n  }\r\n`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n        hasMain: true,\r\n      };\r\n    };\r\n\r\nexport const createUnpackedGroupedConvProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\r\n        ProgramInfoLoader => {\r\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\r\n          return {\r\n            ...metadata,\r\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\r\n          };\r\n        };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {calculateOutputShape, ConvAttributes} from './conv';\r\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\r\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\r\n\r\nexport const conv2DPackedPointwise =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\r\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\r\n\r\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\r\n      const matmulOutput = inferenceHandler.run(\r\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\r\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\r\n    };\r\n\r\nexport const conv2DPacked =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n\r\n      // run im2col\r\n      const im2colOutput = inferenceHandler.run(\r\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\r\n          [inputs[0]]);\r\n\r\n      // reshape kernel\r\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\r\n\r\n      // run matmul\r\n      const matmulInputs =\r\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\r\n      const matmulOutput = inferenceHandler.run(\r\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\r\n\r\n      // reshape output\r\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\r\n      return outputReshaped;\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {InferenceHandler} from '../../../backend';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {PoolConvUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\r\nimport {conv2DPacked} from './conv-pack';\r\nimport {createDotProductProgramInfoLoader} from './dot-product';\r\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\r\nimport {createIm2ColProgramInfoLoader} from './im2col';\r\nimport {createMatmulProgramInfoLoader} from './matmul';\r\n\r\n\r\nexport const calculateOutputShape =\r\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\r\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\r\n      const batchSize = inputShape[0];\r\n      const inputSpatialShape = inputShape.slice(2);\r\n      const spatialRank = inputSpatialShape.length;\r\n      const outChannels = kernelShape[0];\r\n      const kernelSpatialShape = kernelShape.slice(2);\r\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\r\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\r\n      const outputSpatialShape =\r\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\r\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\r\n      return outputShape;\r\n    };\r\n\r\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\r\n  readonly autoPad: string;\r\n  readonly dilations: readonly number[];\r\n  readonly group: number;\r\n  readonly kernelShape: readonly number[];\r\n  readonly pads: readonly number[];\r\n  readonly strides: readonly number[];\r\n}\r\n\r\nexport const conv: OperatorImplementation<ConvAttributes> =\r\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\r\n      return conv2d(inferenceHandler, inputs, attributes);\r\n    };\r\n\r\nconst conv2d: OperatorImplementation<ConvAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\r\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\r\n      const packMode = inferenceHandler.session.pack;\r\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\r\n      if (adjustedAttributes.group > 1) {\r\n        const result = inferenceHandler.run(\r\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\r\n        return [result];\r\n      } else if (isPointwise && packMode) {\r\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\r\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\r\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\r\n      } else {\r\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\r\n      }\r\n    };\r\n\r\nconst conv2DUnpackedPointwise =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\r\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\r\n\r\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\r\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\r\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\r\n    };\r\n\r\nconst conv2DUnpacked =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const xIm2Col = inferenceHandler.run(\r\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\r\n\r\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\r\n      const output = inferenceHandler.run(\r\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\r\n      return output;\r\n    };\r\n\r\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\r\n  const kernelShape = attributes.kernelShape.slice();\r\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\r\n  if (attributes.kernelShape.length === 0) {\r\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\r\n      kernelShape.push(inputs[1].dims[i]);\r\n    }\r\n  }\r\n  const pads = attributes.pads.slice();\r\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\r\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\r\n\r\n  // always return a new object so does not modify the original attributes\r\n  const newAttributes: T = Object.assign({}, attributes);\r\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\r\n  return newAttributes;\r\n};\r\n\r\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\r\n  const attributes = node.attributes;\r\n  const activationAttributes = parseInternalActivationAttributes(attributes);\r\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\r\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\r\n  const dilations = attributes.getInts('dilations', [1, 1]);\r\n  const group = attributes.getInt('group', 1);\r\n  const kernelShape = attributes.getInts('kernel_shape', []);\r\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\r\n  const strides = attributes.getInts('strides', [1, 1]);\r\n\r\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\r\n  // Refer to the below link for all input checks\r\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\r\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\r\n    throw new Error('Conv requires 2 or 3 inputs');\r\n  }\r\n\r\n  // TODO : Need to add support for multi-dimensional conv\r\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\r\n    throw new Error('currently only support 2-dimensional conv');\r\n  }\r\n\r\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\r\n  const dataChannel = inputs[0].dims[1];\r\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\r\n  if (dataChannel !== filterInChannel) {\r\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\r\n  }\r\n\r\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\r\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\r\n    throw new Error('invalid bias');\r\n  }\r\n\r\n  const spatialRank = inputs[0].dims.length - 2;\r\n  // wrong dilations dimension\r\n  if (attributes.dilations.length !== spatialRank) {\r\n    throw new Error(`dilations should be ${spatialRank}D`);\r\n  }\r\n\r\n  // Wrong strides dimension\r\n  if (attributes.strides.length !== spatialRank) {\r\n    throw new Error(`strides should be ${spatialRank}D`);\r\n  }\r\n\r\n  // Wrong pads dimension\r\n  if (attributes.pads.length !== spatialRank * 2) {\r\n    throw new Error(`pads should be ${spatialRank * 2}D`);\r\n  }\r\n\r\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\r\n  // (the first 2 dims are batch_size and channels)\r\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\r\n    throw new Error('invalid kernel shape');\r\n  }\r\n\r\n  // TODO : Need to add support for float64\r\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\r\n    throw new Error('Conv input(X,W) should be float tensor');\r\n  }\r\n\r\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\r\n    throw new Error('Conv input(bias) should be float tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nimport {transpose, TransposeAttributes} from './transpose';\r\n\r\nexport interface DepthToSpaceAttributes {\r\n  mode: 'DCR'|'CRD';\r\n  blocksize: number;\r\n}\r\n\r\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const blocksize = attributes.blocksize;\r\n      const blocksizeSqr = blocksize * blocksize;\r\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\r\n      const firstReshapeShape = attributes.mode === 'DCR' ?\r\n          [\r\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\r\n            inputs[0].dims[3]\r\n          ] :\r\n          [\r\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\r\n            inputs[0].dims[3]\r\n          ];\r\n\r\n      // const transpose = new WebGLTranspose();\r\n      // const attributes = new Attribute(undefined);\r\n      // attributes.set('perm', 'ints', transposePerm);\r\n      // transpose.initialize(attributes);\r\n\r\n      // First reshape\r\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\r\n\r\n      // transpose\r\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\r\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\r\n\r\n      // Second reshape\r\n      const secondReshapeShape = [\r\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\r\n        inputs[0].dims[3] * blocksize\r\n      ];\r\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\r\n      return [result];\r\n    };\r\n\r\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\r\n    (node: Graph.Node): DepthToSpaceAttributes => {\r\n      // processing node attributes\r\n      const blocksize = node.attributes.getInt('blocksize');\r\n      if (blocksize < 1) {\r\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\r\n      }\r\n      const mode = node.attributes.getString('mode', 'DCR');\r\n      if (mode !== 'DCR' && mode !== 'CRD') {\r\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\r\n      }\r\n      return {mode, blocksize};\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (inputs.length !== 1) {\r\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\r\n  }\r\n\r\n  // Input has to be a 4-D tensor\r\n  // TODO: Support string depth-to-space.\r\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\r\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\r\nimport {calculateIm2ColDims} from './im2col';\r\n\r\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\r\n  name: 'ConvDotProduct',\r\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.packedLastDimension],\r\n  cacheKey: attributes.activationCacheKey\r\n});\r\n\r\nconst createDotProductProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\r\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\r\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\r\n      const [kWidth, kHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\r\n\r\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\r\n      const [im2colWidth, im2colHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\r\n      const rank = outputShape.length;\r\n\r\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\r\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\r\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n${activationFunction}\r\nfloat process(int indices[${rank}]) {\r\n  int b[1];\r\n  b[0] = indices[1];\r\n  int im2col[4];\r\n  im2col[0] = indices[0];\r\n  im2col[1] = indices[2];\r\n  im2col[2] = indices[3];\r\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\r\n          im2colStrides[2]};\r\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\r\n  float value = ${initValue};\r\n  for (int i = 0; i < ${sharedDim}; ++i) {\r\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\r\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\r\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\r\n    ++im2colOffset;\r\n    ++kernelOffset;\r\n  }\r\n  ${applyActivation}\r\n  return value;\r\n}`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nexport const createDotProductProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\r\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\r\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\r\n      return {\r\n        ...metadata,\r\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const flatten: OperatorImplementation<number> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\r\n      validateInputs(inputs, axis);\r\n\r\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\r\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\r\n    };\r\n\r\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\r\n    node.attributes.getInt('axis', 1);  // default axis is 1\r\n\r\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Flatten requires 1 input.');\r\n  }\r\n\r\n  const r = inputs[0].dims.length;\r\n  if (r === 0) {\r\n    throw new Error('scalar tensor is not supported.');\r\n  }\r\n\r\n  if (axis < -r || axis > r) {\r\n    throw new Error('Invalid axis');\r\n  }\r\n\r\n  // TODO: Support string type\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('string tensor is not supported.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Attribute} from '../../../attribute';\r\nimport {GlslValueFunction} from '../glsl-definitions';\r\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\r\n\r\nexport interface InternalActivationAttributes {\r\n  readonly activation: string;\r\n  readonly clipMin?: number;\r\n  readonly clipMax?: number;\r\n  readonly activationCacheKey: string;\r\n}\r\n\r\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\r\n  let func: GlslValueFunction;\r\n  switch (attributes.activation) {\r\n    case 'Relu':\r\n      func = glslRelu();\r\n      break;\r\n    case 'Sigmoid':\r\n      func = glslSigmoid();\r\n      break;\r\n    case 'Clip':\r\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\r\n      break;\r\n    // TODO: adding other activations that can be fused.\r\n    default:\r\n      return {activationFunction: '', applyActivation: ''};\r\n  }\r\n\r\n  const activationName = func.name;\r\n  const activationFunction = func.body;\r\n  const applyActivation = `value = ${activationName}_(value);`;\r\n  return {activationFunction, applyActivation};\r\n}\r\n\r\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\r\n  const activation = attributes.getString('__internal_activation', '');\r\n\r\n  if (activation === 'Clip') {\r\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\r\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\r\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\r\n  }\r\n  return {activation, activationCacheKey: activation};\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\ninterface GatherAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nexport const gather: OperatorImplementation<GatherAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes.axis);\r\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\r\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\r\n\r\nconst gatherProgramMetadata = {\r\n  name: 'Gather',\r\n  inputNames: ['A', 'B'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst createGatherProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      const indexDataShape = inputs[1].dims.slice();\r\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\r\n\r\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\r\n      const indexCopyOps: string[] = [];\r\n      for (let i = 0; i < outputShape.length; i++) {\r\n        // outputShape is divided into three parts: A, B, C\r\n        // |0        axis|  axis + indexDataShape.length |          end|\r\n        // |     A       |             B                 |      C      |\r\n        //\r\n        // inputIdx: [A, inputs[1][B], C]\r\n        if (i < axis) {  // A\r\n          outputShape[i] = inputShape[i];\r\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\r\n        } else {\r\n          if (i < axis + indexDataShape.length) {  // B\r\n            outputShape[i] = indexDataShape[i - axis];\r\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\r\n          } else {                                                       // C\r\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\r\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\r\n          }\r\n        }\r\n      }\r\n\r\n      const orank = outputShape.length || 1;\r\n      const irank = inputShape.length;\r\n      const iDrank = indexDataShape.length || 1;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${orank}]) {\r\n        int inputIdx[${irank}];\r\n        int indexDataIdx[${iDrank}];\r\n        indexDataIdx[0] = 0;\r\n        ${indexCopyOps.join('\\n        ')}\r\n        int idx = int(_B(indexDataIdx));\r\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\r\n        return _A(inputIdx);\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createGatherProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\r\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\r\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('Gather requires 2 inputs.');\r\n  }\r\n  const tensorRank = inputs[0].dims.length;\r\n  if (tensorRank < 1) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (axis < -tensorRank || axis > tensorRank - 1) {\r\n    throw new Error('Invalid axis.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invaid input type.');\r\n  }\r\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\r\n    throw new Error('Invaid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {GemmUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface GemmAttributes extends AttributeWithCacheKey {\r\n  transA: boolean;\r\n  transB: boolean;\r\n  alpha: number;\r\n  beta: number;\r\n  isOptionalC: boolean;  // in opset 11, C becomes optional\r\n}\r\n\r\nexport const gemm: OperatorImplementation<GemmAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\r\n  const transA = node.attributes.getInt('transA', 0) !== 0;\r\n  const transB = node.attributes.getInt('transB', 0) !== 0;\r\n  const alpha = node.attributes.getFloat('alpha', 1.0);\r\n  const beta = node.attributes.getFloat('beta', 1.0);\r\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\r\n};\r\n\r\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\r\n    parseGemmAttributes(node, false);\r\n\r\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\r\n    parseGemmAttributes(node, true);\r\n\r\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\r\n  const metadata = {\r\n    name: 'Gemm',\r\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\r\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                                      [TextureType.unpacked, TextureType.unpacked],\r\n    key: attributes.cacheKey\r\n  };\r\n\r\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\r\n};\r\n\r\nconst createGemmProgramInfo =\r\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\r\n      const aShape = inputs[0].dims.slice();\r\n      const bShape = inputs[1].dims.slice();\r\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\r\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\r\n      const outputShape = [M, N];\r\n      if (!outputShape) {\r\n        throw new Error('Can\\'t use gemm on the given tensors');\r\n      }\r\n      let sharedDim = aShape[aShape.length - 1];\r\n      let line = '';\r\n      if (attributes.transA) {\r\n        sharedDim = aShape[0];\r\n      }\r\n      if (attributes.transA && attributes.transB) {\r\n        line = 'value += _A_T(a) * _B_T(b);';\r\n      } else if (attributes.transA && !attributes.transB) {\r\n        line = 'value += _A_T(a) * _B(b);';\r\n      } else if (!attributes.transA && attributes.transB) {\r\n        line = 'value += _A(a) * _B_T(b);';\r\n      } else if (!attributes.transA && !attributes.transB) {\r\n        line = 'value += _A(a) * _B(b);';\r\n      }\r\n      const rank = outputShape.length;\r\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\r\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\r\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\r\n      const shaderSource = `\r\n      float process(int indices[${rank}]) {\r\n          int a[${rank}];\r\n          int b[${rank}];\r\n          ${declareC}\r\n\r\n          copyVec(indices, a);\r\n          copyVec(indices, b);\r\n          ${broadcastC}\r\n\r\n          float value = 0.0;\r\n          for (int k=0; k<${sharedDim}; ++k) {\r\n              a[${rank - 1}] = k;\r\n              b[${rank - 2}] = k;\r\n              ${line}\r\n          }\r\n\r\n          value = value * alpha;\r\n          ${calculateC}\r\n          return value;\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        variables: [\r\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\r\n        ],\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\r\n  if (!inputs) {\r\n    throw new Error('Input is missing');\r\n  }\r\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\r\n    throw new Error('Invaid input shape.');\r\n  }\r\n  if (!attributes.isOptionalC && inputs.length !== 3) {\r\n    throw new Error('Gemm requires 3 inputs');\r\n  }\r\n\r\n  // 'C' can be of dimensionality 1 or 2 only\r\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\r\n    throw new Error('Invalid input shape of C');\r\n  }\r\n\r\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\r\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\r\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n\r\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\r\n    throw new Error('Input types are mismatched');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {ConvAttributes} from './conv';\r\nimport {unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\r\n  name: 'Im2Col (packed)',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed],\r\n  cacheHint,\r\n});\r\n\r\nconst createPackedIm2ColProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\r\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\r\n      const xshape = x.dims;\r\n      const wshape = w.dims;\r\n      const rowDim = 2;\r\n      const colDim = 3;\r\n      const rank = outputShape.length;\r\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\r\n      const kernelSize = wshape[2] * wshape[3];\r\n      const unpackChannel = unpackFromChannel();\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      let unrolled = '';\r\n\r\n      for (let row = 0; row <= 1; row++) {\r\n        for (let col = 0; col <= 1; col++) {\r\n          unrolled += `\r\n            blockIndex = rc.x + ${col};\r\n            pos = rc.y + ${row};\r\n\r\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\r\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\r\n              attributes.pads[0]};\r\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\r\n\r\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\r\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\r\n              attributes.pads[1]};\r\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\r\n\r\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\r\n\r\n                  ch = int(float(pos)/ ${kernelSize}.);\r\n                    innerDims = vec2(d0, d1);\r\n                    result[${row * 2 + col}] = getChannel(\r\n                      getA(0, ch, int(innerDims.x),\r\n                      int(innerDims.y)), innerDims);\r\n                }\r\n              }\r\n            }\r\n\r\n          `;\r\n        }\r\n      }\r\n\r\n      const shaderSource = `\r\n      ${unpackChannel}\r\n\r\n      void main() {\r\n        ivec2 rc = getOutputCoords();\r\n          vec4 result = vec4(0.0);\r\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\r\n          vec2 innerDims;\r\n          ${unrolled}\r\n          ${glsl.output} = result;\r\n      }\r\n            `;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const createPackedIm2ColProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\r\n     attributes: ConvAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {ConvAttributes} from './conv';\r\n\r\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\r\n  name: 'Im2Col',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n  cacheHint,\r\n});\r\n\r\nconst createIm2ColProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\r\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\r\n      const xshape = x.dims;\r\n      const wshape = w.dims;\r\n\r\n      const rank = outputShape.length;\r\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\r\n\r\n      const shaderSource = `\r\n        const int XC = ${xshape[1]};\r\n        const int XH = ${xshape[2]};\r\n        const int XW = ${xshape[3]};\r\n        const int KH = ${attributes.kernelShape[0]};\r\n        const int KW = ${attributes.kernelShape[1]};\r\n        const int dilationH = ${attributes.dilations[0]};\r\n        const int dilationW = ${attributes.dilations[1]};\r\n        const int strideH = ${attributes.strides[0]};\r\n        const int strideW = ${attributes.strides[1]};\r\n        const int padH = ${attributes.pads[0]};\r\n        const int padW = ${attributes.pads[1]};\r\n        const int KHKW = KH*KW;\r\n        const int XCKHKW = XC * KHKW;\r\n        const int outputChannels = 4;\r\n        vec4 process(int indices[${rank}]) {\r\n          int b  = indices[0]; // batch size\r\n          int oh = indices[1] * strideH - padH; //output height\r\n          int ow = indices[2] * strideW - padW; //output width\r\n          int p = indices[3] * outputChannels; //patch\r\n          vec4 value = vec4(0.0);\r\n          for(int i=0; i < outputChannels; ++i) {\r\n            if(p < XCKHKW) {\r\n              int patchC = p / KHKW;\r\n              int patchH = (p - patchC*KHKW) / KW;\r\n              int patchW = (p - patchC*KHKW) - patchH * KW;\r\n              int xh2 = oh + patchH * dilationH;\r\n              int xw2 = ow + patchW * dilationW;\r\n              int x[${xshape.length}];\r\n              x[0] = b;\r\n              x[1] = patchC;\r\n              x[2] = xh2;\r\n              x[3] = xw2;\r\n              if(xh2 >= 0 &&\r\n                  xh2 < XH &&\r\n                  xw2 >= 0 &&\r\n                  xw2 < XW) {\r\n                value[i] = _X(x);\r\n              }\r\n            }\r\n            ++p;\r\n          }\r\n          return value;\r\n        }\r\n        `;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nexport const createIm2ColProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\r\n     attributes: ConvAttributes): ProgramInfoLoader => {\r\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\r\n      };\r\n    };\r\n\r\n\r\nexport const calculateIm2ColDims =\r\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\r\n        number[] =>\r\n            [outputShape[0], outputShape[2], outputShape[3],\r\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\r\n  scale: number;\r\n  bias: number[];\r\n}\r\n\r\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output =\r\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\r\n    (node: Graph.Node): ImageScalerAttributes => {\r\n      const scale = node.attributes.getFloat('scale');\r\n      const bias = node.attributes.getFloats('bias');\r\n      return createAttributeWithCacheKey({scale, bias});\r\n    };\r\n\r\nconst imageScalerProgramMetadata = {\r\n  name: 'ImageScaler',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst createImageScalerProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\r\n        ProgramInfo => {\r\n          const outputShape = inputs[0].dims.slice();\r\n          const rank = outputShape.length;\r\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\r\n          const shaderSource = `\r\n      ${getBiasMethod}\r\n      float process(int indices[${rank}]) {\r\n        return _X(indices) * scale + getBias(bias, indices[1]);\r\n      }`;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            variables: [\r\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\r\n              {name: 'scale', type: 'float', data: attributes.scale}\r\n            ],\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst createImageScalerProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\r\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\r\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\r\n    };\r\n\r\nconst createGetBiasMethod = (numChannels: number): string => {\r\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\r\n  for (let i = 0; i < numChannels; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (channel == ${i}) { return bias[${i}]; }`);\r\n    } else if (i === numChannels - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return bias[${i}]; }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (channel == ${i}) { return bias[${i}]; }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('ImageScaler requires 1 input.');\r\n  }\r\n  if (inputs[0].dims.length !== 4) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const instanceNormalization: OperatorImplementation<number> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\r\n      const output = inferenceHandler.run(\r\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\r\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\r\n      return [output];\r\n    };\r\n\r\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\r\n    node.attributes.getFloat('epsilon', 1e-5);\r\n\r\nconst meanAndVarianceProgramMetadata = {\r\n  name: 'InstanceNormalization_MeanAndVariance',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\r\n  const xDims = input.dims.slice();\r\n  const channel = xDims[1];\r\n  const channelSize = xDims[2] * xDims[3];\r\n  const outputShape = [xDims[0], channel];\r\n\r\n  const shaderSource = `\r\n      vec4 process(int[2] indices) {\r\n        vec4 v = vec4(0.0);\r\n        int a[4];\r\n        a[0] = indices[0];\r\n        a[1] = indices[1];\r\n        float temp = 0.0;\r\n        for(int a2=0; a2<${xDims[2]}; a2++) {\r\n          a[2] = a2;\r\n          for(int a3=0; a3<${xDims[3]}; a3++) {\r\n            a[3] = a3;\r\n            float x = _X(a);\r\n            temp += x;\r\n          }\r\n        }\r\n        float mean = temp / float(${channelSize});\r\n        temp = 0.0;\r\n        for(int a2=0; a2<${xDims[2]}; a2++) {\r\n          a[2] = a2;\r\n          for(int a3=0; a3<${xDims[3]}; a3++) {\r\n            a[3] = a3;\r\n            float x = _X(a);\r\n            temp += (x - mean) * (x - mean);\r\n          }\r\n        }\r\n        v.r = mean;\r\n        v.g = temp / float(${channelSize});\r\n\r\n        return v;\r\n      }`;\r\n  return {\r\n    ...metadata,\r\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\r\n  ...meanAndVarianceProgramMetadata,\r\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\r\n});\r\n\r\nconst computeOutputProgramMetadata = {\r\n  name: 'InstanceNormalization_ComputeOutput',\r\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\r\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst createComputeOutputProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\r\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\r\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\r\n      const shaderSource = `\r\n      vec4 get_MeanAndVariance(int[2] mv) {\r\n        int offset = indicesToOffset_MeanAndVariance(mv);\r\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\r\n        return ${glsl.texture2D}(MeanAndVariance, coords);\r\n      }\r\n\r\n      float process(int[4] indices) {\r\n        int mv[2];\r\n        mv[0] = indices[0];\r\n        mv[1] = indices[1];\r\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\r\n        float mean = mean_and_variance.r;\r\n        float variance = mean_and_variance.g;\r\n\r\n        int sb[1];\r\n        sb[0] = indices[1];\r\n        float scale = _Scale(sb);\r\n        float b = _B(sb);\r\n\r\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createComputeOutputProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\r\n        ProgramInfoLoader => {\r\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\r\n          return {\r\n            ...metadata,\r\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 3) {\r\n    throw new Error('InstanceNormalization requires 3 inputs.');\r\n  }\r\n\r\n  const X = inputs[0];\r\n  const scale = inputs[1];\r\n  const B = inputs[2];\r\n\r\n  // input should at least have three dimensions - N,C,dim1,...,dimn\r\n  // other inputs can have only one dimensions\r\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\r\n    throw new Error('Input shapes are mismatched.');\r\n  }\r\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\r\n      (B.type !== 'float32' && B.type !== 'float64')) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[0].dims.length !== 4) {\r\n    throw new Error('Only support 4-D input shape.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil} from '../../../util';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\n\r\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\r\nimport {getBiasForMatmul} from './matmul';\r\n\r\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\r\n  name: 'MatMul (packed)',\r\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\r\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\r\n                        [TextureType.packed, TextureType.packed],\r\n  cacheHint\r\n});\r\n\r\nconst createPackedMatmulProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\r\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\r\n      const hasBias = inputs.length > 2;\r\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\r\n      const aShape = inputs[0].dims;\r\n      const bShape = inputs[1].dims;\r\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\r\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\r\n\r\n      if (!outputShape) {\r\n        throw new Error('Can\\'t use matmul on the given tensors');\r\n      }\r\n      const sharedDim = aShape[aShape.length - 1];\r\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\r\n      const aRank = aShape.length;\r\n      const bRank = bShape.length;\r\n\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const coordsDataType = getCoordsDataType(outputShape.length);\r\n      const outRank = outputShape.length;\r\n      const allGlChannels = getGlChannels();\r\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\r\n\r\n      const getBiasForMatmulSnippet =\r\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\r\n\r\n      const getBcastedSamplerForMatmulSnippet =\r\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\r\n\r\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\r\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\r\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\r\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\r\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\r\n      `;\r\n      const shaderSource = `\r\n            ${getBcastedSamplerForMatmulSnippet}\r\n            ${getBiasForMatmulSnippet}\r\n            ${activationFunction}\r\n            void main() {\r\n              ${getOutputCoordsSnippet}\r\n\r\n              vec4 value = vec4(0);\r\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\r\n                vec4 a = ${getSamplerAInLoopSnippet};\r\n                vec4 b = ${getSamplerBInLoopSnippet};\r\n\r\n                value += (a.rrbb * b.rgrg);\r\n                value += (a.ggaa * b.baba);\r\n              }\r\n              ${processBias}\r\n              ${applyActivation}\r\n              ${glsl.output} = value;\r\n            }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const createPackedMatmulProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\r\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\r\n      };\r\n    };\r\n\r\nfunction getBcastSamplerForMatmul(\r\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\r\n  let unpackedACoordsSnippet = [];\r\n  let unpackedBCoordsSnippet = [];\r\n\r\n  const inAShape = inputs[0].dims;\r\n  const inBShape = inputs[1].dims;\r\n\r\n  const inARank = inAShape.length;\r\n  const inBRank = inBShape.length;\r\n\r\n  const outRank = outShape.length;\r\n  const rankADiff = outRank - inARank;\r\n  const rankBDiff = outRank - inBRank;\r\n\r\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\r\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\r\n  unpackedACoordsSnippet.join(', ');\r\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\r\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\r\n  unpackedBCoordsSnippet.join(', ');\r\n\r\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\r\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\r\n\r\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\r\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\r\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\r\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\r\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\r\n\r\n  const getBcastSamplerMatmulSource = `\r\nvec4 getAAtOutCoordsMatmul(int i) {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${swapDimSnippet}\r\n  ${coordsASnippet}\r\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\r\n  return outputValue;\r\n}\r\n\r\nvec4 getBAtOutCoordsMatmul(int i) {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${swapDimSnippet}\r\n  ${coordsBSnippet}\r\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\r\n  return outputValue;\r\n}`;\r\n\r\n  return getBcastSamplerMatmulSource;\r\n}\r\n\r\nfunction getA(allGlChannels: string[], rank: number): string {\r\n  let res = '';\r\n  for (let i = 0; i < rank - 2; i++) {\r\n    res += `rc.${allGlChannels[i]}, `;\r\n  }\r\n  res += `rc.${allGlChannels[rank - 2]}, ` +\r\n      'i*2';\r\n  return res;\r\n}\r\n\r\nfunction getB(allGlChannels: string[], rank: number): string {\r\n  let res = '';\r\n  for (let i = 0; i < rank - 2; i++) {\r\n    res += `rc.${allGlChannels[i]}, `;\r\n  }\r\n  res += 'i*2, ' +\r\n      `rc.${allGlChannels[rank - 1]}`;\r\n  return res;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\r\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\r\n\r\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      if (inferenceHandler.session.pack) {\r\n        return [inferenceHandler.run(\r\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\r\n      } else {\r\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\r\n      }\r\n    };\r\n\r\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\r\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\r\n\r\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\r\n  name: 'MatMul',\r\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.unpacked],\r\n  cacheHint\r\n});\r\n\r\nfunction createMatmulProgramInfo(\r\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\r\n  const aShape = inputs[0].dims;\r\n  const bShape = inputs[1].dims;\r\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\r\n  if (!outputShape) {\r\n    throw new Error('Can\\'t use matmul on the given tensors');\r\n  }\r\n  const coordsDataType = getCoordsDataType(outputShape.length);\r\n  const allGlChannels = getGlChannels();\r\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\r\n\r\n  const hasBias = inputs.length > 2;\r\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\r\n  const getBiasForMatmulSnippet =\r\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\r\n\r\n  const rank = outputShape.length;\r\n  const arank = aShape.length;\r\n  const brank = bShape.length;\r\n  const sharedDim = aShape[aShape.length - 1];\r\n  const shaderSource = `\r\n    ${activationFunction}\r\n    ${getBiasForMatmulSnippet}\r\n    float process(int indices[${rank}]) {\r\n        int a[${arank}];\r\n        int b[${brank}];\r\n        bcastMatmulIndices_A(indices, a);\r\n        bcastMatmulIndices_B(indices, b);\r\n\r\n        float value;\r\n        for (int k=0; k<${sharedDim}; ++k) {\r\n            a[${arank - 1}] = k;\r\n            b[${brank - 2}] = k;\r\n            value += _A(a) * _B(b);\r\n        }\r\n        ${processBias}\r\n        ${applyActivation}\r\n        return value;\r\n    }`;\r\n  return {\r\n    ...metadata,\r\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n    shaderSource,\r\n  };\r\n}\r\n\r\nexport function createMatmulProgramInfoLoader(\r\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\r\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\r\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\r\n}\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('MatMul requires 2 inputs.');\r\n  }\r\n\r\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\r\n    throw new Error('shared dimension does not match.');\r\n  }\r\n\r\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\r\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\r\n    throw new Error('inputs should be float type');\r\n  }\r\n\r\n  if (inputs[0].type !== inputs[1].type) {\r\n    throw new Error('inputs types should match');\r\n  }\r\n};\r\n\r\nexport function getBiasForMatmul(\r\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\r\n    isPacked: boolean): string {\r\n  let unpackedCoordsSnippet = '';\r\n  const inRank = inShape.length;\r\n  const outRank = outShape.length;\r\n  const rankDiff = outRank - inRank;\r\n  if (outRank < 2 && inRank > 0) {\r\n    unpackedCoordsSnippet = 'coords';\r\n  } else {\r\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\r\n  }\r\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\r\n  const inSize = ShapeUtil.size(inShape);\r\n  const isInputScalar = inSize === 1;\r\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\r\n  if (isInputScalar) {\r\n    output = 'vec4(outputValue.x)';\r\n  }\r\n  const getBiasForMatmulSource = isPacked ? `\r\nvec4 getBiasForMatmul() {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${coordsSnippet}\r\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\r\n  return ${output};\r\n}` :\r\n                                            `\r\nfloat getBiasForMatmul() {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${coordsSnippet}\r\n  return getBias(coords.x);\r\n}`;\r\n\r\n  return getBiasForMatmulSource;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\n\r\nimport {getChannels} from './packing-utils';\r\n\r\nconst packProgramMetadata = {\r\n  name: 'pack',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpackedReversed]\r\n};\r\n\r\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\r\n  const glsl = getGlsl(handler.session.backend.glContext.version);\r\n  const inputShape = input.dims;\r\n\r\n  const inputRank = inputShape.length;\r\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\r\n  const outputRank = input.dims.length;\r\n\r\n  const coordsDataType = getCoordsDataType(outputRank);\r\n  const channels = getChannels('rc', outputRank);\r\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\r\n\r\n  let reversedInputWH;\r\n  if (inputRank === 0) {\r\n    reversedInputWH = [1, 1];\r\n  } else if (inputRank === 1) {\r\n    reversedInputWH = [inputShape[0], 1];\r\n  } else {\r\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\r\n  }\r\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\r\n  const output = getOutput(inputShape, channels);\r\n\r\n  const shaderSource = `\r\n        void main() {\r\n          ${coordsDataType} rc = getOutputCoords();\r\n\r\n          if(${outOfBoundsCondition}) {\r\n            ${glsl.output} = vec4(0);\r\n          } else {\r\n            ${setup}\r\n\r\n            ${glsl.output} = vec4(${output});\r\n          }\r\n        }\r\n      `;\r\n  return {\r\n    ...packProgramMetadata,\r\n    hasMain: true,\r\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\r\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\r\n\r\n/**\r\n * check output coordinate location and return false if it is outside input's width/height boundary\r\n */\r\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\r\n  if (rank === 0) {\r\n    return 'false';\r\n  }\r\n  if (rank === 1) {\r\n    return `rc > ${shape[0]}`;\r\n  }\r\n\r\n  let cond = '';\r\n  for (let i = rank - 2; i < rank; i++) {\r\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\r\n    if (i < rank - 1) {\r\n      cond += '||';\r\n    }\r\n  }\r\n\r\n  return cond;\r\n}\r\n\r\n/**\r\n * code snippet to sample input texture with output coordiantes\r\n */\r\nfunction getOutput(shape: readonly number[], dims: string[]): string {\r\n  const rank = shape.length;\r\n\r\n  if (rank === 0) {\r\n    return 'getA(), 0, 0, 0';\r\n  }\r\n\r\n  if (rank === 1) {\r\n    return `getA(rc),\r\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\r\n            0, 0`;\r\n  }\r\n\r\n  const coord00 = 'r, c';\r\n  const coord01 = 'r, cp1';\r\n  const coord10 = 'rp1, c';\r\n  const coord11 = 'rp1, cp1';\r\n  let D = '';\r\n  if (rank > 2) {\r\n    for (let i = 0; i < rank - 2; ++i) {\r\n      D = D + `${dims[i]},`;\r\n    }\r\n  }\r\n  return `getA(${D}${coord00}),\r\n          rEdge ? 0. : getA(${D}${coord10}),\r\n          cEdge ? 0. : getA(${D}${coord01}),\r\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\r\n}\r\n\r\n/**\r\n * code snippet to setup 4 coordinates and edge conditions\r\n */\r\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\r\n  if (rank === 0 || rank === 1) {\r\n    return '';\r\n  }\r\n  // rank >= 2 for width+height pack.\r\n  else {\r\n    const setup = `\r\n    int r = ${dims[rank - 2]};\r\n    int c = ${dims[rank - 1]};\r\n    int rp1 = ${dims[rank - 2]} + 1;\r\n    int cp1 = ${dims[rank - 1]} + 1;\r\n    bool rEdge = rp1 >= ${cols};\r\n    bool cEdge = cp1 >= ${rows};\r\n    `;\r\n    return setup;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getGlChannels} from '../utils';\r\n\r\nexport function getVecChannels(name: string, rank: number): string[] {\r\n  return getGlChannels(rank).map(d => `${name}.${d}`);\r\n}\r\n\r\nexport function getChannels(name: string, rank: number): string[] {\r\n  if (rank === 1) {\r\n    return [name];\r\n  }\r\n  return getVecChannels(name, rank);\r\n}\r\n\r\nexport function unpackFromChannel(): string {\r\n  return `\r\n    float getChannel(vec4 frag, int dim) {\r\n      int modCoord = imod(dim, 2);\r\n      return modCoord == 0 ? frag.r : frag.g;\r\n    }\r\n\r\n    float getChannel(vec4 frag, vec2 innerDims) {\r\n      vec2 modCoord = mod(innerDims, 2.);\r\n      return modCoord.x == 0. ?\r\n        (modCoord.y == 0. ? frag.r : frag.g) :\r\n        (modCoord.y == 0. ? frag.b : frag.a);\r\n    }\r\n  `;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl, Glsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface PadAttributes extends AttributeWithCacheKey {\r\n  readonly mode: string;\r\n  readonly pads: number[];\r\n  readonly value: number;\r\n}\r\n\r\nconst padProgramMetadata = {\r\n  name: 'Pad',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const pad: OperatorImplementation<PadAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...padProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\r\n  const mode = node.attributes.getString('mode', 'constant');\r\n  const value = node.attributes.getFloat('value', 0.0);\r\n  const pads = node.attributes.getInts('pads');\r\n  return createAttributeWithCacheKey({mode, value, pads});\r\n};\r\n\r\nconst createPadProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\r\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\r\n      const rank = outputShape.length;\r\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\r\n      const shaderSource = `\r\n      ${padFunction}\r\n      float process(int[${rank}] indices) {\r\n          return padA(indices);\r\n      }`;\r\n      return {\r\n        name: 'Pad',\r\n        inputNames: ['A'],\r\n        inputTypes: [TextureType.unpacked],\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Pad requires 1 input');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\r\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n  const strides = ShapeUtil.computeStrides(input.dims);\r\n\r\n  switch (attributes.mode) {\r\n    case 'constant':\r\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\r\n    case 'reflect':\r\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\r\n    case 'edge':\r\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\r\n    default:\r\n      throw new Error('Invalid mode');\r\n  }\r\n};\r\n\r\nconst getPadConstant =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\r\n     value: number): string => {\r\n      const rank = shape.length;\r\n      let block = '';\r\n      for (let i = rank - 1; i >= 0; --i) {\r\n        block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0)  return constant;\r\n        if (k >= ${shape[i]}) return constant;\r\n        offset += k * ${strides[i]};\r\n        `;\r\n      }\r\n      return `\r\n      float padA(int m[${rank}]) {\r\n        const float constant = float(${value});\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n    };\r\n\r\nconst getPadReflect =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\r\n        string => {\r\n          const rank = shape.length;\r\n\r\n          let block = '';\r\n          for (let i = rank - 1; i >= 0; --i) {\r\n            block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0) { k = -k; }\r\n        {\r\n          const int _2n_1 = ${2 * (shape[i] - 1)};\r\n          k = int( mod( float(k), float(_2n_1) ) ) ;\r\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\r\n        }\r\n        offset += k * ${strides[i]};\r\n        `;\r\n          }\r\n          return `\r\n      float padA(int m[${rank}]) {\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n        };\r\n\r\nconst getPadEdge =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\r\n        string => {\r\n          const rank = shape.length;\r\n\r\n          let block = '';\r\n          for (let i = rank - 1; i >= 0; --i) {\r\n            block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0)  k = 0;\r\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\r\n        offset += k * ${strides[i]};\r\n      `;\r\n          }\r\n          return `\r\n      float padA(int m[${rank}]) {\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n        };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\r\n  readonly autoPad: string;\r\n  readonly ceilMode: number;\r\n  readonly countIncludePad: boolean;\r\n  readonly kernelShape: number[];\r\n  readonly strides: number[];\r\n  readonly pads: number[];\r\n}\r\n\r\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata =\r\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\r\n    (node: Graph.Node): AveragePoolAttributes => {\r\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\r\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\r\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\r\n      const kernelShape = node.attributes.getInts('kernel_shape');\r\n      const strides = node.attributes.getInts('strides', []);\r\n      const pads = node.attributes.getInts('pads', []);\r\n\r\n      // TODO: support attribute 'ceil_mode'\r\n      if (ceilMode !== 0) {\r\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\r\n      }\r\n\r\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\r\n    };\r\n\r\nconst createAveragePoolProgramInfo =\r\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\r\n        ProgramInfo => {\r\n          const inputShape = inputs[0].dims.slice();\r\n          PoolConvUtil.adjustPoolAttributes(\r\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\r\n          const outputShape = PoolConvUtil.computePoolOutputShape(\r\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\r\n              attributes.autoPad);\r\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\r\n          const op1 = 'value += _X(x);';\r\n          let op2 = '';\r\n          if (attributes.countIncludePad) {\r\n            op2 += `value /= float(${kernelSize});`;\r\n          } else {\r\n            op2 += `value /= float(${kernelSize} - pad);`;\r\n          }\r\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\r\n          const shaderSource = `\r\n        ${poolingCode}\r\n      `;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata = {\r\n        name: 'GlobalAveragePool',\r\n        inputNames: ['X'],\r\n        inputTypes: [TextureType.unpacked],\r\n        cacheHint: `${attributes.countIncludePad}`\r\n      };\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\r\n    (node: Graph.Node): AveragePoolAttributes => {\r\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\r\n      return createAttributeWithCacheKey(\r\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\r\n    };\r\n\r\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\r\n  readonly storageOrder: number;\r\n}\r\n\r\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata =\r\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\r\n    (node: Graph.Node): MaxPoolAttributes => {\r\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\r\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\r\n      const kernelShape = node.attributes.getInts('kernel_shape');\r\n      const strides = node.attributes.getInts('strides', []);\r\n      const pads = node.attributes.getInts('pads', []);\r\n      const storageOrder = node.attributes.getInt('storage_order', 0);\r\n\r\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\r\n      if (storageOrder !== 0) {\r\n        throw new Error('column major storage order is not yet supported for MaxPool');\r\n      }\r\n      if (ceilMode !== 0) {\r\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\r\n      }\r\n\r\n      return createAttributeWithCacheKey(\r\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\r\n    };\r\n\r\nconst createMaxPoolProgramInfo =\r\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\r\n        ProgramInfo => {\r\n          const inputShape = inputs[0].dims.slice();\r\n          PoolConvUtil.adjustPoolAttributes(\r\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\r\n          const outputShape = PoolConvUtil.computePoolOutputShape(\r\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\r\n              attributes.autoPad);\r\n          const op1 = `\r\n      value = max(_X(x), value);\r\n    `;\r\n          const op2 = '';\r\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\r\n          const shaderSource = `\r\n      ${poolingCode}\r\n    `;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst globalMaxPoolAttributes = {\r\n  autoPad: '',\r\n  ceilMode: 0,\r\n  countIncludePad: false,\r\n  kernelShape: [],\r\n  strides: [],\r\n  pads: [],\r\n  storageOrder: 0,\r\n  cacheKey: ''\r\n};\r\n\r\nconst globalMaxPoolMetadata = {\r\n  name: 'GlobalMaxPool',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n  const output = inferenceHandler.run(\r\n      {\r\n        ...globalMaxPoolMetadata,\r\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\r\n      },\r\n      inputs);\r\n  return [output];\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Pool ops requires 1 input.');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nconst generatePoolingCode =\r\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\r\n        string => {\r\n          const rank = inputDims.length;\r\n          if (attributes.kernelShape.length <= 2) {\r\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\r\n            const sw = attributes.strides[attributes.strides.length - 1];\r\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\r\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\r\n            const dimW = inputDims[rank - 1];\r\n            let codeW = '';\r\n            let codeH = '';\r\n            let codeHEnd = '';\r\n            if (pwStart + pwEnd !== 0) {\r\n              codeW = `\r\n          for (int i = 0; i < ${kw}; i++) {\r\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\r\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\r\n              pad++;\r\n              continue;\r\n            }\r\n            ${op1}\r\n          }`;\r\n            } else {\r\n              codeW = `\r\n          for (int i = 0; i < ${kw}; i++) {\r\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\r\n            ${op1}\r\n          }`;\r\n            }\r\n\r\n            if (attributes.kernelShape.length === 2) {\r\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\r\n              const sh = attributes.strides[attributes.strides.length - 2];\r\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\r\n              const phEnd = attributes.pads[attributes.pads.length - 2];\r\n              const dimH = inputDims[rank - 2];\r\n              if (phStart + phEnd !== 0) {\r\n                codeH = `\r\n            for (int j = 0; j < ${kh}; j++) {\r\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\r\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\r\n                pad+= ${kw};\r\n                continue;\r\n              }\r\n          `;\r\n              } else {\r\n                codeH = `\r\n            for (int j = 0; j < ${kh}; j++) {\r\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\r\n            `;\r\n              }\r\n              codeHEnd = `\r\n          }\r\n        `;\r\n            }\r\n\r\n            const poolingCode = `\r\n        float process(int indices[${rank}]) {\r\n          int x[${rank}];\r\n          copyVec(indices, x);\r\n\r\n          float value = ${start};\r\n          int pad = 0;\r\n          ${codeH}\r\n          ${codeW}\r\n          ${codeHEnd}\r\n          ${op2}\r\n          return value;\r\n        }\r\n      `;\r\n            return poolingCode;\r\n          } else {\r\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\r\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\r\n            const stridesRank = kernelStrides.length;\r\n            const padsRank = attributes.pads.length;\r\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\r\n            const copyInputDims = copyArray(inputDims, 'inputDims');\r\n            const copyPads = copyArray(attributes.pads, 'pads');\r\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\r\n            const copyStrides = copyArray(attributes.strides, 'strides');\r\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\r\n            let padCode = '';\r\n            if (hasPads) {\r\n              padCode = `\r\n            if (x[j] >= inputDims[j] || x[j] < 0) {\r\n              pad++;\r\n              isPad = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!isPad) {\r\n            ${op1}\r\n          }`;\r\n            } else {\r\n              padCode = `\r\n          }\r\n          ${op1}\r\n        `;\r\n            }\r\n            const poolingCode = `\r\n        ${offsetToIndicesFunction}\r\n        float process(int indices[${rank}]) {\r\n          int x[${rank}];\r\n          copyVec(indices, x);\r\n          int offset[${stridesRank}];\r\n          int pads[${padsRank}];\r\n          int inputDims[${rank}];\r\n          int kernelStrides[${stridesRank}];\r\n          int strides[${stridesRank}];\r\n          ${copyPads}\r\n          ${copyInputDims}\r\n          ${copyStrides}\r\n          ${copyKernelStrides}\r\n\r\n          float value = ${start};\r\n          int pad = 0;\r\n          bool isPad = false;\r\n          for (int i = 0; i < ${kernelSize}; i++) {\r\n            offsetToIndices(i, kernelStrides, offset);\r\n            isPad = false;\r\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\r\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\r\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\r\n              ${padCode}\r\n          }\r\n          ${op2}\r\n\r\n          return value;\r\n        }\r\n      `;\r\n            return poolingCode;\r\n          }\r\n        };\r\n\r\nconst copyArray = (array: readonly number[], arrayName: string): string => {\r\n  let block = '';\r\n  for (let i = 0; i < array.length; i++) {\r\n    block += `\r\n      ${arrayName}[${i}] = ${array[i]};\r\n    `;\r\n  }\r\n  return block;\r\n};\r\n\r\nconst offsetToIndices = (rank: number): string => `\r\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\r\n    if (${rank} == 0) {\r\n      return;\r\n    }\r\n    for (int i = 0; i < ${rank} - 1; ++i) {\r\n      indices[i] = offset / strides[i];\r\n      offset -= indices[i] * strides[i];\r\n    }\r\n    indices[${rank} - 1] = offset;\r\n  }`;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface ReduceAttributes extends AttributeWithCacheKey {\r\n  readonly axes: number[];\r\n  readonly keepDims: boolean;\r\n}\r\n\r\n// return [init ops, reduce ops, final ops]\r\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\r\n\r\nconst reduce =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\r\n     reduceOp: ReduceOp): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const reduceProgramMetadata = {\r\n        name,\r\n        inputNames: ['A'],\r\n        inputTypes: [TextureType.unpacked],\r\n      };\r\n\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...reduceProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () =>\r\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\r\n  const axes = node.attributes.getInts('axes', []);\r\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\r\n  return createAttributeWithCacheKey({axes, keepDims});\r\n};\r\n\r\nconst createReduceProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\r\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const outputShape: number[] = [];\r\n      const iRank = inputs[0].dims.length || 1;\r\n\r\n      const idxCopy = [];  // copy output indexes to input indexes\r\n\r\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\r\n      const ops = reduceOp(inputs, axes);\r\n      let reduceOps = ops[1];\r\n\r\n      for (let k = 0; k < inputs[0].dims.length; k++) {\r\n        // if this axis is reduced\r\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n          if (attributes.keepDims) {\r\n            outputShape.push(1);\r\n          }  // else { remove the axis from outputShape; }\r\n\r\n          // loop over the d-th axis\r\n          reduceOps = `\r\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\r\n            inputIdx[${k}] = j${k};\r\n            ${reduceOps}\r\n          }`;\r\n        } else {\r\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\r\n\r\n          outputShape.push(inputs[0].dims[k]);\r\n        }\r\n      }\r\n\r\n      const oRank = outputShape.length || 1;\r\n\r\n      const shaderSource = `\r\n      float process(int outputIdx[${oRank}]) {\r\n        float value;                 // final result\r\n        int inputIdx[${iRank}];      // addressing input data\r\n        ${idxCopy.join('\\n')}\r\n        ${ops[0]}       // init ops for reduce max/min\r\n        ${reduceOps}\r\n        ${ops[2]}       // final computation for reduce mean\r\n        return value;\r\n      }`;\r\n\r\n      return {\r\n        ...reduceProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Reduce op requires 1 input.');\r\n  }\r\n\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\r\n    };\r\n\r\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        let size = 1.0;\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            size *= inputs[0].dims[k];\r\n          }\r\n        }\r\n\r\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\r\n    };\r\n\r\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        const idxZero = [];\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\r\n          }\r\n        }\r\n\r\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\r\n    };\r\n\r\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        const idxZero = [];\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\r\n          }\r\n        }\r\n\r\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\r\n    };\r\n\r\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\r\n    };\r\n\r\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\r\n    };\r\n\r\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\r\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\r\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\r\n\r\nconst createPackedReshape3DProgramInfo =\r\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\r\n        ProgramInfo => {\r\n          const inputShape3D = input3D.dims as [number, number, number];\r\n          const squeezedOutputShape = outputShape3D as [number, number, number];\r\n\r\n          let mainLoop = '';\r\n          for (let i = 0; i < 4; i++) {\r\n            let outputCoords = '';\r\n            switch (i) {\r\n              case 0:\r\n                outputCoords = 'outputCoords = rc;';\r\n                break;\r\n              case 1:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\r\n                break;\r\n              case 2:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\r\n                break;\r\n              case 3:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\r\n                break;\r\n              default:\r\n                throw new Error();\r\n            }\r\n\r\n            mainLoop += `\r\n        ${outputCoords}\r\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\r\n          int flattenedIndex = getFlattenedIndex(outputCoords);\r\n\r\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\r\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\r\n\r\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\r\n\r\n        ${i > 0 ? '}' : ''}\r\n      `;\r\n          }\r\n          const glsl = getGlsl(handler.session.backend.glContext.version);\r\n\r\n          const shaderSource = `\r\n      ${getReshapedInputCoords(inputShape3D)}\r\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\r\n      ${unpackFromChannel()}\r\n\r\n      void main() {\r\n        ivec3 rc = getOutputCoords();\r\n\r\n        vec4 result = vec4(0.0);\r\n\r\n        ivec3 outputCoords;\r\n        int rows = ${squeezedOutputShape[2]};\r\n        int cols = ${squeezedOutputShape[1]};\r\n\r\n        ${mainLoop}\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n\r\n          return {\r\n            ...metadata,\r\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\r\n            shaderSource,\r\n            hasMain: true\r\n          };\r\n        };\r\n\r\nexport const createPackedReshape3DProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\r\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\r\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\r\n    };\r\n\r\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\r\n  if (shape.length === 0) {\r\n    return [1, 1, 1];\r\n  }\r\n  // TODO: squeeze other shapes to 2D case\r\n  let batch = 1;\r\n  for (let i = 0; i < shape.length - 2; ++i) {\r\n    batch *= shape[i];\r\n  }\r\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\r\n}\r\n\r\n// For packed reshape, we need to re-arrange texel data for output shape.\r\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\r\n// for the reshaped new tensor, we just need to re-arrange the last h and\r\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\r\n// first convert it to 3D by collapsing other dimension to batch dim, then\r\n// process with the last two dimensions.\r\n// Note: we only need the shape tensor to calculate output shape, so the\r\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\r\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\r\n// the same between input shape and output shape, the packed reshape can be\r\n// treated as no-op.\r\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\r\n  let isCheapReshape = false;\r\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\r\n    isCheapReshape = true;\r\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\r\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\r\n  } else {  // 2D +\r\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\r\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\r\n  }\r\n\r\n  return isCheapReshape;\r\n}\r\n\r\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\r\n  const strides = ShapeUtil.computeStrides(shape);\r\n  const coords = ['b', 'r', 'c'];\r\n  const index = 'index';\r\n  const coordsFromIndexSnippet = strides\r\n                                     .map((stride, i) => {\r\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\r\n                                       const line2 = i === strides.length - 1 ?\r\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\r\n                                           `index -= ${coords[i]} * ${stride}`;\r\n                                       return `${line1}; ${line2};`;\r\n                                     })\r\n                                     .join('');\r\n\r\n  return `\r\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\r\n      ${coordsFromIndexSnippet}\r\n      return ivec3(b, r, c);\r\n    }\r\n  `;\r\n}\r\n\r\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\r\n  const strides = ShapeUtil.computeStrides(shape);\r\n\r\n  return `\r\n  int getFlattenedIndex(ivec3 coords) {\r\n    // reverse y, z order\r\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\r\n  }\r\n`;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\r\n  if (handler.session.pack) {\r\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\r\n  } else {\r\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\n\r\nimport {unpackFromChannel} from './packing-utils';\r\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\r\n\r\nconst resizeProgramMetadata = {\r\n  name: 'Resize',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed]\r\n};\r\n\r\nexport const resize: OperatorImplementation<UpsampleAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...resizeProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\r\n\r\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\r\n\r\nconst createPackedResizeProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\r\n\r\n      const isSame =\r\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\r\n      if (isSame) {\r\n        return {\r\n          ...resizeProgramMetadata,\r\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n          hasMain: true,\r\n          shaderSource: `void main() {\r\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\r\n                    ${glsl.output} = v;\r\n                }`\r\n        };\r\n      }\r\n\r\n      const dim = outputShape.length;\r\n      if (dim < 2) {\r\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\r\n      }\r\n\r\n      const outputHeight = outputShape[dim - 2];\r\n      const outputWidth = outputShape[dim - 1];\r\n\r\n      const inputShape = inputs[0].dims;\r\n      if (dim !== inputShape.length) {\r\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\r\n      }\r\n      const inputHeight = inputShape[dim - 2];\r\n      const inputWidth = inputShape[dim - 1];\r\n\r\n      const scalesHeight = scales[dim - 2];\r\n      const scalesWidth = scales[dim - 1];\r\n\r\n      let getSourceFracIndex = '';\r\n\r\n      if (attributes.mode !== 'linear') {\r\n        // TODO: support other modes\r\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\r\n      }\r\n      switch (attributes.coordinateTransformMode) {\r\n        case 'asymmetric':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        return vec4(coords) / scaleWHWH;\r\n                    }\r\n                `;\r\n          break;\r\n        case 'half_pixel':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\r\n                    }\r\n                `;\r\n          break;\r\n        case 'align_corners':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\r\n                            ${outputHeight}.0 - 1.0);\r\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\r\n                            ${inputHeight}.0 - 1.0);\r\n                        vec4 new_scale = original / resized;\r\n                        return vec4(coords) * new_scale;\r\n                    }\r\n                `;\r\n          break;\r\n        default:\r\n          // TODO:supporting other coordinateTransformModes\r\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\r\n                                '${attributes.coordinateTransformMode}'`);\r\n      }\r\n\r\n      const coordsDataType = getCoordsDataType(dim);\r\n      const unpackChannel = unpackFromChannel();\r\n      const shaderSource = `\r\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\r\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\r\n            ${unpackChannel}\r\n            ${getSourceFracIndex}\r\n            float getAValue(int x10, int r, int c, int d) {\r\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\r\n            }\r\n            void main() {\r\n                ${coordsDataType} rc = getOutputCoords();\r\n\r\n                int batch = rc[0];\r\n                int depth = rc[1];\r\n\r\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\r\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\r\n\r\n                // calculate the source index in fraction\r\n                vec4 sourceFrac = getSourceFracIndex(coords);\r\n\r\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\r\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\r\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\r\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\r\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\r\n\r\n                bool hasNextRow = rc.w < ${outputHeight - 1};\r\n                bool hasNextCol = rc.z < ${outputWidth - 1};\r\n\r\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\r\n                vec4 topLeft = vec4(\r\n                    getAValue(batch, depth, x00.x, x00.y),\r\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\r\n                vec4 topRight = vec4(\r\n                    getAValue(batch, depth, x00.x, x00.w),\r\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\r\n                vec4 bottomLeft = vec4(\r\n                    getAValue(batch, depth, x00.z, x00.y),\r\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\r\n                vec4 bottomRight = vec4(\r\n                    getAValue(batch, depth, x00.z, x00.w),\r\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\r\n\r\n                // calculate the interpolation fraction on u and v direction\r\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\r\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\r\n\r\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\r\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\r\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\r\n\r\n                ${glsl.output} = vec4(newValue);\r\n            }\r\n        `;\r\n      return {\r\n        ...resizeProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        hasMain: true,\r\n        shaderSource\r\n      };\r\n    };\r\n\r\n\r\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\r\n  const x = inputs[0];\r\n  const xDims = x.dims;\r\n\r\n  let scales = attributes.scales;\r\n  let outputSizes: number[]|undefined;\r\n  if (scales.length === 0) {\r\n    const scalesTensor = inputs[attributes.scalesInputIdx];\r\n    if (scalesTensor && scalesTensor.size !== 0) {\r\n      if (inputs[attributes.sizesInputIdx]) {\r\n        throw new Error('Only one of scales or sizes must be provided as input.');\r\n      }\r\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\r\n    } else {\r\n      const sizesTensor = inputs[attributes.sizesInputIdx];\r\n      if (!sizesTensor || sizesTensor.size === 0) {\r\n        throw new Error('Either scales or sizes MUST be provided as input.');\r\n      }\r\n\r\n      outputSizes = Array.from(sizesTensor.integerData);\r\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\r\n    }\r\n  } else {\r\n    if (inputs[attributes.sizesInputIdx]) {\r\n      throw new Error('Only one of scales or sizes must be provided as input.');\r\n    }\r\n  }\r\n\r\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\r\n\r\n  return [scales, yDims];\r\n};\r\n\r\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\r\n  const scales = Array.from(scale.floatData);\r\n  scalesValidation(scales, mode, isResize);\r\n  return scales;\r\n};\r\n\r\nconst parseScalesDataFromOutputSize =\r\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\r\n      const length = xDims.length;\r\n      const scales = new Array<number>(length);\r\n\r\n      for (let i = 0, end = length; i < end; i++) {\r\n        if (xDims[i] === 0) {\r\n          if (yDims[i] !== 0) {\r\n            throw new Error('Input dim is zero but required output dim is non-zero.');\r\n          }\r\n          scales[i] = 1;\r\n        } else {\r\n          scales[i] = yDims[i] / xDims[i];\r\n        }\r\n      }\r\n      scalesValidation(scales, mode, isResize);\r\n      return scales;\r\n    };\r\n\r\n// roi data is not used yet. but leave here for future usage.\r\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\r\n//     let roi: number[] = [];\r\n//     if (attributes.needRoiInput) {\r\n//         if (attributes.roiInputIdx <= 0) {\r\n//             throw new Error('Invalid roi input index.');\r\n//         }\r\n//         const roiTensor = inputs[attributes.roiInputIdx];\r\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\r\n//     } else {\r\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\r\n//     }\r\n//     return roi;\r\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Shape requires 1 input.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SliceAttributes extends AttributeWithCacheKey {\r\n  readonly axes: number[];\r\n  readonly ends: number[];\r\n  readonly starts: number[];\r\n}\r\n\r\nconst sliceProgramMetadata = {\r\n  name: 'Slice',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const slice: OperatorImplementation<SliceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...sliceProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\r\n  const starts = node.attributes.getInts('starts');\r\n  const ends = node.attributes.getInts('ends');\r\n  const axes = node.attributes.getInts('axes', []);\r\n  return createAttributeWithCacheKey({starts, ends, axes});\r\n};\r\n\r\nconst createSliceProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\r\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\r\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\r\n      const starts = attributes.starts.map((start, i) => {\r\n        if (start > input.dims[normalizedAxes[i]] - 1) {\r\n          return input.dims[normalizedAxes[i]];\r\n        }\r\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\r\n      });\r\n      const ends = attributes.ends.map((end, i) => {\r\n        if (end > input.dims[normalizedAxes[i]] - 1) {\r\n          return input.dims[normalizedAxes[i]];\r\n        }\r\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\r\n      });\r\n\r\n      const outputShape = input.dims.slice();\r\n\r\n      const sliceOps: string[] = [];\r\n      for (let i = 0; i < normalizedAxes.length; i++) {\r\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\r\n        if (starts[i] > 0) {\r\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\r\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${rank}]) {\r\n        ${sliceOps.join('\\n      ')}\r\n        return _A(outputIdx);\r\n      }`;\r\n      return {\r\n        ...sliceProgramMetadata,\r\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Slice requires 1 input.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputsV10(inputs);\r\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\r\n  const output = inferenceHandler.run(\r\n      {\r\n        ...sliceProgramMetadata,\r\n        cacheHint: attributes.cacheKey,\r\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\r\n      },\r\n      [inputs[0]]);\r\n  return [output];\r\n};\r\n\r\nconst generateSliceAttributesFromInputs =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\r\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\r\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\r\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\r\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\r\n        throw new Error('dynamic slice attributes are not allowed');\r\n      }\r\n\r\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\r\n        throw new Error('currently non-1 steps is not supported for Slice');\r\n      }\r\n\r\n      const starts = Array.from(inputs[1].integerData);\r\n      const ends = Array.from(inputs[2].integerData);\r\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\r\n      const cacheKey = `${axes};${starts};${ends}`;\r\n      return {starts, ends, axes, cacheKey};\r\n    };\r\n\r\nconst validateInputsV10 = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\r\n    throw new Error('Invalid input number.');\r\n  }\r\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nconst softmaxComputeMaxProgramMetadata = {\r\n  name: 'SoftmaxComputeMax',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst softmaxComputeScaleProgramMetadata = {\r\n  name: 'SoftmaxComputeScale',\r\n  inputNames: ['A', 'Max'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst softmaxProgramMetadata = {\r\n  name: 'SoftMax',\r\n  inputNames: ['A', 'Max', 'Norm'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const inputShape = inputs[0].dims.slice();\r\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\r\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\r\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\r\n\r\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\r\n      const max = inferenceHandler.run(\r\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\r\n          inputs);\r\n\r\n      const computeScaleProgramInfo =\r\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\r\n      const scale = inferenceHandler.run(\r\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\r\n          [inputs[0], max]);\r\n\r\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\r\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\r\n      const output = inferenceHandler.run(\r\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\r\n          [inputs[0], max, scale]);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\r\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\r\n\r\n/**\r\n * Create a texture that contains the maximum value of each of the 'N' rows\r\n */\r\nconst createComputeMaxProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\r\n        ProgramInfo => {\r\n          const [textureWidth, textureHeight] =\r\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n          const rank = outputShape.length;\r\n\r\n          if (N < 1 || D < 1) {\r\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n          }\r\n\r\n          if (outputShape.length !== 1) {\r\n            throw new Error('Dimensionality of the output should be 1');\r\n          }\r\n\r\n          if (outputShape[0] !== N) {\r\n            throw new Error('Shape of the output should be equal to logical row count');\r\n          }\r\n\r\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n          const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n        int logical_row_start_offset = indices[0] * ${D};\r\n\r\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\r\n        ${textureHeight} )));\r\n        for(int i=1; i<${D}; ++i)\r\n        {\r\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\r\n            ${textureWidth}, ${textureHeight})));\r\n          if(current > max)\r\n          max = current;\r\n        }\r\n\r\n        return max;\r\n      }`;\r\n          return {\r\n            ...softmaxComputeMaxProgramMetadata,\r\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\n/**\r\n * Create a texture that contains the normalization factor for each of the 'N' rows\r\n */\r\nconst createComputScaleProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\r\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n      const rank = outputShape.length;\r\n\r\n      if (N < 1 || D < 1) {\r\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n      }\r\n\r\n      if (outputShape.length !== 1) {\r\n        throw new Error('Dimensionality of the output should be 1');\r\n      }\r\n\r\n      if (outputShape[0] !== N) {\r\n        throw new Error('Shape of the output should be equal to logical row count');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow.length !== 1) {\r\n        throw new Error('Dimensionality of the intermediate results should be 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow[0] !== N) {\r\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\r\n      }\r\n\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n        int logical_row_start_offset = indices[0] * ${D};\r\n\r\n        float norm_factor = 0.0;\r\n        float max = _Max(indices);\r\n        for(int i=0; i<${D}; ++i)\r\n        {\r\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\r\n            ${textureWidth}, ${textureHeight}))) - max);\r\n        }\r\n\r\n        return norm_factor;\r\n      }`;\r\n      return {\r\n        ...softmaxComputeScaleProgramMetadata,\r\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createSoftMaxProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\r\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n      const rank = input.dims.length;\r\n\r\n      if (N < 1 || D < 1) {\r\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\r\n        throw new Error('Dimensionality of the intermediate results should be 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\r\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\r\n      }\r\n\r\n      const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n\r\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\r\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\r\n\r\n      //determine the logical row for this index\r\n      int logical_row_index[1];\r\n      logical_row_index[0] = offset / ${D};\r\n\r\n      float norm_factor = _Norm(logical_row_index);\r\n\r\n      // avoid possible division by 0\r\n      // if norm_facor is 0, all elements are zero\r\n      // if so, return 0\r\n      if(norm_factor == 0.0)\r\n        return 0.0;\r\n\r\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\r\n    }`;\r\n      return {\r\n        ...softmaxProgramMetadata,\r\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Softmax requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil, SplitUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SplitAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n  readonly split: number[];\r\n  readonly numOutputs: number;\r\n}\r\n\r\nconst splitProgramMetadata = {\r\n  name: 'Split',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const split: OperatorImplementation<SplitAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\r\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\r\n      const output: Tensor[] = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        output.push(inferenceHandler.run(\r\n            {\r\n              ...splitProgramMetadata,\r\n              cacheHint: `${attributes.cacheKey};${i}`,\r\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\r\n            },\r\n            inputs));\r\n      }\r\n\r\n      return output;\r\n    };\r\n\r\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\r\n  const axis = node.attributes.getInt('axis', 0);\r\n  const split = node.attributes.getInts('split', []);\r\n  const numOutputs = node.outputs.length;\r\n  return createAttributeWithCacheKey({axis, split, numOutputs});\r\n};\r\n\r\nconst getProgramCount =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\r\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\r\n      return offsets.length;\r\n    };\r\n\r\nconst createSplitProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\r\n        ProgramInfo => {\r\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\r\n          const offset = offsets[index];\r\n          const outputShape = shapes[index];\r\n          const rank = outputShape.length;\r\n          const shaderSource = `\r\n      float process(int indices[${rank}]) {\r\n        indices[${axis}] += ${offset};\r\n        return _A(indices);\r\n      }\r\n    `;\r\n          return {\r\n            ...splitProgramMetadata,\r\n            cacheHint: `${attributes.cacheKey}:${index}`,\r\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Split requires one input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\r\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\r\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const squeeze: OperatorImplementation<number[]> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\r\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\r\n    node.attributes.getInts('axes');\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Squeeze requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n\r\n  const sumProgramMetadata = {\r\n    name: 'Sum',\r\n    inputNames: inputs.map((v, i) => `X${i}`),\r\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\r\n  };\r\n\r\n  const output = inferenceHandler.run(\r\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\r\n  return [output];\r\n};\r\n\r\nconst createSumProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const outputShape = inputs[0].dims.slice();\r\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\r\n      const shaderSource = `\r\n      void main() {\r\n        vec4 result = ${sumLine};\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n      return {\r\n        ...sumProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        hasMain: true,\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length === 0) {\r\n    throw new Error('Sum requires inputs.');\r\n  }\r\n\r\n  const length = inputs[0].dims.length;\r\n  for (let i = 1; i < inputs.length; i++) {\r\n    if (length !== inputs[i].dims.length) {\r\n      throw new Error('Input shapes are mismatched.');\r\n    }\r\n\r\n    for (let j = 0; j < length; j++) {\r\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\r\n        throw new Error('Input shapes are not matched.');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  for (let i = 1; i < inputs.length; i++) {\r\n    if (inputs[0].type !== inputs[i].type) {\r\n      throw new Error('Input types are not matched.');\r\n    }\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {NUMBER_TYPES} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n\r\n  const tileProgramMetadata = {\r\n    name: 'Tile',\r\n    inputNames: ['A'],\r\n    inputTypes: [TextureType.unpacked],\r\n  };\r\n\r\n  const output = inferenceHandler.run(\r\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\r\n      inputs);\r\n  return [output];\r\n};\r\n\r\nconst createTileProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      const outputShape = new Array(inputShape.length);\r\n\r\n      const tileOps: string[] = [];\r\n      for (let i = 0; i < inputShape.length; i++) {\r\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\r\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${rank}]) {\r\n        int inputIdx[${rank}];\r\n        ${tileOps.join('\\n')}\r\n        return _A(inputIdx);\r\n      }\r\n    `;\r\n      return {\r\n        ...tileProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('Tile requires 2 input.');\r\n  }\r\n  if (inputs[1].dims.length !== 1) {\r\n    throw new Error('The second input shape must 1 dimension.');\r\n  }\r\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\r\n    throw new Error('Invalid repeat type.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface TransposeAttributes extends AttributeWithCacheKey {\r\n  readonly perm: number[];\r\n}\r\n\r\nconst transposeProgramMetadata = {\r\n  name: 'Transpose',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const transpose: OperatorImplementation<TransposeAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...transposeProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\r\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\r\n\r\nconst createTransposeProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\r\n      const inputShape = input.dims;\r\n      perm = getAdjustedPerm(inputShape, perm);\r\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\r\n      const rank = inputShape.length;\r\n      // A dims=[${inputs[0].dims.toString()}]\r\n      // out Dims=[${unpackedOutputShape.toString()}]\r\n      // based on perm=[${perm.toString()}]\r\n      const shaderSource = `\r\n      ${getPermFunctionBody('perm', perm, rank)}\r\n      float process(int indices[${rank}]) {\r\n        int a[${rank}];\r\n        perm(a, indices);\r\n        return _A(a);\r\n      }`;\r\n      return {\r\n        ...transposeProgramMetadata,\r\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\r\n  if (perm && perm.length !== inputShape.length) {\r\n    perm = [...(inputShape.keys())].reverse();\r\n  }\r\n  return perm;\r\n};\r\n\r\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\r\n  perm = getAdjustedPerm(inputShape, perm);\r\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\r\n};\r\n\r\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\r\n  const reverseFunc = [];\r\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\r\n  for (let i = 0; i < rank; ++i) {\r\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\r\n  }\r\n  reverseFunc.push('\\t}');\r\n  return reverseFunc.join('\\n');\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Transpose requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('input should be float tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {TextureData, TextureType} from '../types';\r\n\r\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\r\n  const outputShape = input.shape;\r\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n  /**\r\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\r\n   */\r\n  const shaderSource = `\r\n    const float FLOAT_MAX = 1.70141184e38;\r\n    const float FLOAT_MIN = 1.17549435e-38;\r\n\r\n    bool isNaN(float val) {\r\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\r\n    }\r\n\r\n    highp vec4 encodeAsUint8(highp float v) {\r\n      if (isNaN(v)) {\r\n        return vec4(255, 255, 255, 255);\r\n      }\r\n\r\n      highp float av = abs(v);\r\n\r\n      if(av < FLOAT_MIN) {\r\n        return vec4(0.0, 0.0, 0.0, 0.0);\r\n      } else if(v > FLOAT_MAX) {\r\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\r\n      } else if(v < -FLOAT_MAX) {\r\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\r\n      }\r\n\r\n      highp vec4 c = vec4(0,0,0,0);\r\n\r\n      highp float e = floor(log2(av));\r\n      highp float m = exp2(fract(log2(av))) - 1.0;\r\n\r\n      c[2] = floor(128.0 * m);\r\n      m -= c[2] / 128.0;\r\n      c[1] = floor(32768.0 * m);\r\n      m -= c[1] / 32768.0;\r\n      c[0] = floor(8388608.0 * m);\r\n\r\n      highp float ebias = e + 127.0;\r\n      c[3] = floor(ebias / 2.0);\r\n      ebias -= c[3] * 2.0;\r\n      c[2] += floor(ebias) * 128.0;\r\n\r\n      c[3] += 128.0 * step(0.0, -v);\r\n\r\n      return c / 255.0;\r\n    }\r\n\r\n    void main() {\r\n      float value = ${glsl.texture2D}(X,TexCoords).r;\r\n      ${glsl.output} = encodeAsUint8(value);\r\n    }`;\r\n  const programInfo = {\r\n    name: 'Uint8Encode',\r\n    inputTypes: [TextureType.unpacked],\r\n    inputNames: ['X'],\r\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\r\n    shaderSource,\r\n    hasMain: true\r\n  };\r\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {Tensor} from '../../../tensor';\r\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport function glslAbs(): GlslValueFunction {\r\n  return glslBuiltinUnary('abs');\r\n}\r\nexport function glslAcos(): GlslValueFunction {\r\n  return glslBuiltinUnary('acos');\r\n}\r\nexport function glslAsin(): GlslValueFunction {\r\n  return glslBuiltinUnary('asin');\r\n}\r\nexport function glslAtan(): GlslValueFunction {\r\n  return glslBuiltinUnary('atan');\r\n}\r\nexport function glslCeil(): GlslValueFunction {\r\n  return glslBuiltinUnary('ceil');\r\n}\r\nexport function glslCos(): GlslValueFunction {\r\n  return glslBuiltinUnary('cos');\r\n}\r\nexport function glslElu(alpha: number): GlslValueFunction {\r\n  const name = 'elu';\r\n  const body = `\r\n  const float alpha = float(${alpha});\r\n\r\n  float ${name}_(float a) {\r\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslExp(): GlslValueFunction {\r\n  return glslBuiltinUnary('exp');\r\n}\r\nexport function glslFloor(): GlslValueFunction {\r\n  return glslBuiltinUnary('floor');\r\n}\r\nexport function glslClip(min: number, max: number): GlslValueFunction {\r\n  const name = 'clip';\r\n  const body = `\r\n  const float min = float(${min});\r\n  const float max = float(${max});\r\n\r\n  float ${name}_(float a) {\r\n    return clamp(a, min, max);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return clamp(v, min, max);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslIdentity(): GlslValueFunction {\r\n  const name = 'indentity';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return v;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\r\n  const name = 'leakyRelu';\r\n  const body = `\r\n  const float alpha = float(${alpha});\r\n\r\n  float ${name}_(float a) {\r\n    return a < 0.0 ? a * alpha : a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLog(): GlslValueFunction {\r\n  return glslBuiltinUnary('log');\r\n}\r\nexport function glslNeg(): GlslValueFunction {\r\n  const name = 'neg';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return -a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return -v;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslNot(): GlslValueFunction {\r\n  const name = 'not';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return float( ! bool(a) );\r\n  }\r\n  bool ${name}_(bool a) {\r\n    return !a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\r\n  }\r\n  bvec4 ${name}_(bvec4 v) {\r\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSin(): GlslValueFunction {\r\n  return glslBuiltinUnary('sin');\r\n}\r\nexport function glslRelu(): GlslValueFunction {\r\n  const name = 'relu';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return max( a, 0.0 );\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return max( v, 0.0 );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSigmoid(): GlslValueFunction {\r\n  const name = 'sigmoid';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return 1.0 / (1.0 + exp(-a));\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return 1.0 / (1.0 + exp(-v));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSqrt(): GlslValueFunction {\r\n  return glslBuiltinUnary('sqrt');\r\n}\r\nexport function glslTan(): GlslValueFunction {\r\n  return glslBuiltinUnary('tan');\r\n}\r\nexport function glslTanh(): GlslValueFunction {\r\n  const name = 'tanh';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    a = clamp(a, -10., 10.);\r\n    a = exp(2.*a);\r\n    return (a - 1.) / (a + 1.);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    v = clamp(v, -10., 10.);\r\n    v = exp(2.*v);\r\n    return (v - 1.) / (v + 1.);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return ${name}(a);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return ${name}(v);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\n/////\r\n/////\r\n/////\r\n\r\nconst createElementwiseProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\r\n        ProgramInfo => {\r\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n          const glsl = getGlsl(handler.session.backend.glContext.version);\r\n          return {\r\n            ...metadata,\r\n            output: {dims: input.dims, type: input.type, textureType},\r\n            shaderSource: `\r\n     ${glslFunc.body}\r\n     void main() {\r\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\r\n       v = ${glslFunc.name}_(v);\r\n       ${glsl.output} = v;\r\n     }\r\n     `,\r\n            hasMain: true\r\n          };\r\n        };\r\n\r\nconst createElementwiseProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\r\n        ProgramInfoLoader => {\r\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\r\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\r\n        };\r\n\r\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\r\n\r\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\r\n\r\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\r\n\r\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\r\n\r\nexport interface ClipAttributes extends AttributeWithCacheKey {\r\n  readonly min: number;\r\n  readonly max: number;\r\n}\r\n\r\nexport const clip =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(\r\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\r\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\r\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\r\n});\r\n\r\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\r\n\r\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\r\n\r\nexport interface EluAttributes extends AttributeWithCacheKey {\r\n  readonly alpha: number;\r\n}\r\n\r\nexport const elu =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\r\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\r\n\r\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\r\n\r\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\r\n\r\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\r\n\r\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\r\n  readonly alpha: number;\r\n}\r\n\r\nexport const leakyRelu =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\r\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\r\n\r\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\r\n\r\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\r\n\r\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\r\n\r\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\r\n\r\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\r\n\r\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\r\n\r\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\r\n\r\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\r\n\r\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\nimport {getChannels, unpackFromChannel} from './packing-utils';\r\n\r\nconst unpackProgramMetadata = {\r\n  name: 'unpack',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed]\r\n};\r\n\r\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\r\n  const rank = input.dims.length;\r\n\r\n  const channels = getChannels('rc', rank);\r\n  const innerDims = channels.slice(-2);\r\n  const coordsDataType = getCoordsDataType(rank);\r\n  const unpackChannel = unpackFromChannel();\r\n  const isScalar = (input.dims.length === 0);\r\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\r\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\r\n  const glsl = getGlsl(handler.session.backend.glContext.version);\r\n  const shaderSource = `\r\n    ${unpackChannel}\r\n    void main() {\r\n      ${coordsDataType} rc = getOutputCoords();\r\n\r\n       // Sample the texture with the coords to get the rgba channel value.\r\n       vec4 packedInput = getA(${sourceCoords});\r\n\r\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\r\n     }\r\n   `;\r\n\r\n  return {\r\n    ...unpackProgramMetadata,\r\n    hasMain: true,\r\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\r\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\r\n\r\nfunction getSourceCoords(rank: number, dims: string[]): string {\r\n  if (rank === 1) {\r\n    return 'rc';\r\n  }\r\n\r\n  let coords = '';\r\n  for (let i = 0; i < rank; i++) {\r\n    coords += dims[i];\r\n    if (i < rank - 1) {\r\n      coords += ',';\r\n    }\r\n  }\r\n  return coords;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const unsqueeze: OperatorImplementation<number[]> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\r\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\r\n      return [output];\r\n    };\r\n\r\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\r\n    node.attributes.getInts('axes');\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Unsqueeze requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\r\n  readonly opset: number;\r\n  readonly isResize: boolean;\r\n  readonly mode: string;\r\n  readonly scales: number[];\r\n  readonly extrapolationValue: number;\r\n  readonly coordinateTransformMode: string;\r\n  readonly useExtrapolation: boolean;\r\n  readonly needRoiInput: boolean;\r\n  readonly nearestMode: string;\r\n  readonly cubicCoefficientA: number;\r\n  readonly excludeOutside: boolean;\r\n  readonly useNearest2xOptimization: boolean;\r\n  readonly roiInputIdx: number;\r\n  readonly scalesInputIdx: number;\r\n  readonly sizesInputIdx: number;\r\n}\r\n\r\nconst upsampleProgramMetadata = {\r\n  name: 'Upsample',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...upsampleProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\r\n\r\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\r\n\r\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\r\n  const isResize = (opset >= 10);\r\n\r\n  // processing node attributes\r\n  const mode = node.attributes.getString('mode', 'nearest');\r\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\r\n    throw new Error(`unrecognized mode: ${mode}`);\r\n  }\r\n\r\n  let scales: number[] = [];\r\n  if (opset < 9) {\r\n    scales = node.attributes.getFloats('scales');\r\n    scalesValidation(scales, mode, isResize);\r\n  }\r\n\r\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\r\n\r\n  const coordinateTransformMode =\r\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\r\n  if ([\r\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\r\n      ].indexOf(coordinateTransformMode) === -1) {\r\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\r\n  }\r\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\r\n  const useExtrapolation = needRoiInput;\r\n\r\n  const nearestMode =\r\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\r\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\r\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\r\n  }\r\n\r\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\r\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\r\n  if (excludeOutside && mode !== 'cubic') {\r\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\r\n  }\r\n\r\n  const useNearest2xOptimization =\r\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\r\n\r\n  let roiInputIdx = 0;\r\n  let scalesInputIdx = 0;\r\n  let sizesInputIdx = 0;\r\n\r\n  if (opset > 10) {\r\n    roiInputIdx = 1;\r\n    scalesInputIdx = 2;\r\n    sizesInputIdx = 3;\r\n  } else if (opset === 9) {\r\n    scalesInputIdx = 1;\r\n  }\r\n\r\n  return createAttributeWithCacheKey({\r\n    opset,\r\n    isResize,\r\n    mode,\r\n    scales,\r\n    extrapolationValue,\r\n    coordinateTransformMode,\r\n    useExtrapolation,\r\n    needRoiInput,\r\n    nearestMode,\r\n    cubicCoefficientA,\r\n    excludeOutside,\r\n    useNearest2xOptimization,\r\n    roiInputIdx,\r\n    scalesInputIdx,\r\n    sizesInputIdx\r\n  });\r\n};\r\n\r\nconst createUpsampleProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [inputWidth, inputHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\r\n\r\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\r\n      const [outputWidth, outputHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\r\n      const dim = outputShape.length;\r\n\r\n      const outputPitches = new Array<number>(dim);\r\n      const inputPitches = new Array<number>(dim);\r\n      let precalculatedPitches = `\r\n      int output_pitches[${dim}];\r\n      int input_pitches[${dim}];\r\n      `;\r\n      for (let d = dim - 1; d >= 0; d--) {\r\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\r\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\r\n\r\n        precalculatedPitches += `\r\n        output_pitches[${d}] = ${outputPitches[d]};\r\n        input_pitches[${d}] = ${inputPitches[d]};\r\n        `;\r\n      }\r\n      const getInputFloatFunction = `\r\n      float getInputFloat(int index) {\r\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\r\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\r\n        return value;\r\n      }\r\n      `;\r\n\r\n      const shaderSource = attributes.mode === 'nearest' ?\r\n          // nearest\r\n          `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[${dim}]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int d, m;\r\n      for (int dim = 0; dim < ${dim}; ++dim) {\r\n        d = output_index / output_pitches[dim];\r\n        m = output_index - d * output_pitches[dim];\r\n        output_index = m;\r\n\r\n        if (scales[dim] != 1 && d > 0) {\r\n          int d2 = d / scales[dim];\r\n          m = d - d2 * scales[dim];\r\n          d = d2;\r\n        }\r\n        input_index += input_pitches[dim] * d;\r\n      }\r\n\r\n      return getInputFloat(input_index);\r\n    }` :\r\n          dim === 4 ?\r\n          // bilinear 4D\r\n              `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[4]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int m;\r\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\r\n      index_of_dim0 = output_index / output_pitches[0];\r\n      m = output_index - index_of_dim0 * output_pitches[0];\r\n      index_of_dim1 = m / output_pitches[1];\r\n      m = m - index_of_dim1 * output_pitches[1];\r\n      index_of_dim2 = m / output_pitches[2];\r\n      m = m - index_of_dim2 * output_pitches[2];\r\n      index_of_dim3 = m;\r\n\r\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\r\n      index_of_input_dim2 = index_of_dim2 / scales[2];\r\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\r\n      index_of_input_dim3 = index_of_dim3 / scales[3];\r\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\r\n\r\n      input_index = index_of_dim0 * input_pitches[0] +\r\n            index_of_dim1 * input_pitches[1] +\r\n            index_of_input_dim2 * input_pitches[2] +\r\n            index_of_input_dim3;\r\n\r\n      float x00 = getInputFloat(input_index);\r\n      float x10, x01, x11;\r\n\r\n      bool end_of_dim2 = false;\r\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\r\n        // It's the end in dimension 2\r\n        x01 = x00;\r\n        end_of_dim2 = true;\r\n      } else {\r\n        x01 = getInputFloat(input_index + input_pitches[2]);\r\n      }\r\n\r\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\r\n        // It's the end in dimension 3\r\n        x10 = x00;\r\n        x11 = x01;\r\n      }\r\n      else {\r\n        x10 = getInputFloat(input_index + 1);\r\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\r\n      }\r\n\r\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\r\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\r\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\r\n    }` :\r\n              // bilinear 2D\r\n              `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[2]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int m;\r\n      int index_of_dim0, index_of_dim1;\r\n      index_of_dim0 = output_index / output_pitches[0];\r\n      m = output_index - index_of_dim0 * output_pitches[0];\r\n      index_of_dim1 = m;\r\n\r\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\r\n      index_of_input_dim0 = index_of_dim0 / scales[0];\r\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\r\n      index_of_input_dim1 = index_of_dim1 / scales[1];\r\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\r\n\r\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\r\n\r\n      float x00 = getInputFloat(input_index);\r\n      float x10, x01, x11;\r\n\r\n      bool end_of_dim0 = false;\r\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\r\n        // It's the end in dimension 0\r\n        x01 = x00;\r\n        end_of_dim0 = true;\r\n      } else {\r\n        x01 = getInputFloat(input_index + input_pitches[0]);\r\n      }\r\n\r\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\r\n        // It's the end in dimension 1\r\n        x10 = x00;\r\n        x11 = x01;\r\n      }\r\n      else {\r\n        x10 = getInputFloat(input_index + 1);\r\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\r\n      }\r\n\r\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\r\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\r\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\r\n    }`;\r\n      return {\r\n        ...upsampleProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n        variables: [{\r\n          name: 'scales',\r\n          type: 'int',\r\n          arrayLength: attributes.scales.length,\r\n          data: attributes.scales.map(x => Math.ceil(x))\r\n        }]\r\n      };\r\n    };\r\n\r\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\r\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\r\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\r\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\r\n    throw new Error('invalid inputs.');\r\n  }\r\n\r\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('Invalid input tensor types.');\r\n  }\r\n};\r\n\r\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\r\n  if (!isResize) {\r\n    for (const scale of scales) {\r\n      if (scale < 1) {\r\n        throw new Error('Scale value should be greater than or equal to 1.');\r\n      }\r\n    }\r\n  } else {\r\n    for (const scale of scales) {\r\n      if (scale <= 0) {\r\n        throw new Error('Scale value should be greater than 0.');\r\n      }\r\n    }\r\n  }\r\n  if (mode === 'linear' || mode === 'cubic') {\r\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\r\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\r\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\r\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\r\n    }\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\nimport {Logger, Profiler} from '../../instrument';\r\n\r\nimport {GlslPreprocessor} from './glsl-preprocessor';\r\nimport {getVertexShaderSource} from './glsl-source';\r\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/**\r\n * ProgramManager is the main class behind running computations\r\n * It builds ProgramInfo's into Artifacts\r\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\r\n * Uses the artifact to run the computation by calling Draw on\r\n * the WebGL drawing buffer\r\n * ProgramManager automatically maps (binds) input variables to their\r\n * corresponding Location's in the binary program\r\n */\r\nexport class ProgramManager {\r\n  repo: Map<unknown, Artifact>;  // this should be per-session object\r\n  vertexShader: WebGLShader;\r\n  attributesBound: boolean;\r\n\r\n  constructor(\r\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\r\n      public textureLayoutStrategy: TextureLayoutStrategy) {\r\n    this.repo = new Map();\r\n    this.attributesBound = false;\r\n  }\r\n  getArtifact(key: unknown): Artifact|undefined {\r\n    return this.repo.get(key);\r\n  }\r\n  setArtifact(key: unknown, artifact: Artifact): void {\r\n    this.repo.set(key, artifact);\r\n  }\r\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\r\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\r\n      const gl = this.glContext.gl;\r\n      const program = buildArtifact.program;\r\n      gl.useProgram(program);\r\n      try {\r\n        this.bindOutput(output);\r\n        if (!this.attributesBound) {\r\n          this.bindAttributes(buildArtifact.attribLocations);\r\n        }\r\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\r\n      } catch (err) {\r\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\r\n        throw err;\r\n      }\r\n      this.profiler.event('backend', 'GlContext.draw()', () => {\r\n        this.glContext.draw();\r\n      });\r\n    }, this.glContext);\r\n  }\r\n  dispose(): void {\r\n    if (this.vertexShader) {\r\n      this.glContext.deleteShader(this.vertexShader);\r\n    }\r\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\r\n  }\r\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\r\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\r\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\r\n      const fragScript = preprocessor.preprocess();\r\n      const program = this.compile(fragScript);\r\n      const artifact = {\r\n        programInfo,\r\n        program,\r\n        uniformLocations: this.getUniformLocations(\r\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\r\n        attribLocations: this.getAttribLocations(program)\r\n      };\r\n      return artifact;\r\n    });\r\n  }\r\n  protected compile(fragShaderScript: string): WebGLProgram {\r\n    if (!this.vertexShader) {\r\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\r\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\r\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\r\n    }\r\n    if (env.debug) {\r\n      Logger.verbose('ProrgramManager', `FragShader:\r\n${fragShaderScript}\r\n`);\r\n    }\r\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\r\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\r\n    this.glContext.deleteShader(fragShader);\r\n    return program;\r\n  }\r\n  bindOutput(td: TextureData): void {\r\n    const width = td.width;\r\n    const height = td.height;\r\n    Logger.verbose(\r\n        'ProrgramManager',\r\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\r\n    this.glContext.attachFramebuffer(td.texture, width, height);\r\n  }\r\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\r\n    const positionHandle = attribLocations.position;\r\n    const textureCoordHandle = attribLocations.textureCoord;\r\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\r\n    this.attributesBound = true;\r\n  }\r\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\r\n      void {\r\n    const gl = this.glContext.gl;\r\n    let texturePosition = 0;\r\n    for (const {name, type, location, arrayLength} of uniformLocations) {\r\n      const value = variables.find(v => v.name === name)?.data;\r\n      if (type !== 'sampler2D' && !value) {\r\n        throw new Error(`variable '${name}' does not have data defined in program info`);\r\n      }\r\n      switch (type) {\r\n        case 'sampler2D':\r\n          this.bindTexture(textures[texturePosition], location, texturePosition);\r\n          texturePosition++;\r\n          break;\r\n        case 'float':\r\n          if (arrayLength) {\r\n            gl.uniform1fv(location, value as number[]);\r\n          } else {\r\n            gl.uniform1f(location, value as number);\r\n          }\r\n          break;\r\n        case 'int':\r\n          if (arrayLength) {\r\n            gl.uniform1iv(location, value as number[]);\r\n          } else {\r\n            gl.uniform1i(location, value as number);\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Uniform not implemented: ${type}`);\r\n      }\r\n    }\r\n  }\r\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\r\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\r\n  }\r\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\r\n    return {\r\n      position: this.getAttribLocation(program, 'position'),\r\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\r\n    };\r\n  }\r\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\r\n      Artifact.UniformLocations {\r\n    const uniformLocations: Artifact.UniformLocations = [];\r\n    if (samplers) {\r\n      for (const sampler of samplers) {\r\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\r\n      }\r\n    }\r\n    if (variables) {\r\n      for (const variable of variables) {\r\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\r\n      }\r\n    }\r\n    return uniformLocations;\r\n  }\r\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\r\n    const gl = this.glContext.gl;\r\n    const reference = gl.getUniformLocation(program, name);\r\n    if (reference === null) {\r\n      throw new Error(`Uniform ${name} not found.`);\r\n    }\r\n    return reference;\r\n  }\r\n  getAttribLocation(program: WebGLProgram, name: string): number {\r\n    const gl = this.glContext.gl;\r\n    const attributeLocation: number = gl.getAttribLocation(program, name);\r\n    return attributeLocation;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {SessionHandler} from '../../backend';\r\nimport {Graph} from '../../graph';\r\nimport {Logger} from '../../instrument';\r\nimport {Operator} from '../../operators';\r\nimport {OpSet, resolveOperator} from '../../opset';\r\nimport {Session} from '../../session';\r\nimport {Tensor} from '../../tensor';\r\nimport {WebGLBackend} from '../backend-webgl';\r\n\r\nimport {WebGLInferenceHandler} from './inference-handler';\r\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\r\nimport {ProgramManager} from './program-manager';\r\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {TextureManager} from './texture-manager';\r\nimport {TextureData} from './types';\r\n\r\nexport class WebGLSessionHandler implements SessionHandler {\r\n  programManager: ProgramManager;\r\n  textureManager: TextureManager;\r\n  layoutStrategy: TextureLayoutStrategy;\r\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\r\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\r\n  initializers: Set<Tensor.Id>;\r\n  pack?: boolean;\r\n\r\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\r\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\r\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\r\n    this.textureManager = new TextureManager(\r\n        backend.glContext, this.layoutStrategy, this.context.profiler,\r\n        {reuseTextures: backend.textureCacheMode === 'full'});\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache = new Map();\r\n    this.pack = backend.pack;\r\n    this.pack2unpackMap = new Map();\r\n    this.unpack2packMap = new Map();\r\n  }\r\n\r\n  createInferenceHandler() {\r\n    return new WebGLInferenceHandler(this);\r\n  }\r\n  onGraphInitialized(graph: Graph): void {\r\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\r\n    this.initializers = new Set(initializers);\r\n  }\r\n  isInitializer(tensorId: Tensor.Id): boolean {\r\n    return this.initializers ? this.initializers.has(tensorId) : false;\r\n  }\r\n  addInitializer(tensorId: Tensor.Id): void {\r\n    this.initializers.add(tensorId);\r\n  }\r\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\r\n    if (isPacked) {\r\n      return this.packedTextureDataCache.get(tensorId);\r\n    } else {\r\n      return this.unpackedTextureDataCache.get(tensorId);\r\n    }\r\n  }\r\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\r\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\r\n    if (isPacked) {\r\n      this.packedTextureDataCache.set(tensorId, textureData);\r\n    } else {\r\n      this.unpackedTextureDataCache.set(tensorId, textureData);\r\n    }\r\n  }\r\n  dispose(): void {\r\n    this.programManager.dispose();\r\n    this.textureManager.clearActiveTextures();\r\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\r\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\r\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\n\r\nexport declare namespace Encoder {\r\n  export interface DataTypeMap {\r\n    float: Float32Array;\r\n    byte: Uint8Array;\r\n    int: Uint32Array;\r\n  }\r\n  export type DataType = keyof DataTypeMap;\r\n  type DataArrayType = DataTypeMap[DataType];\r\n\r\n  /* eslint-disable @typescript-eslint/naming-convention */\r\n  export const enum Usage {\r\n    Default = 0,\r\n    UploadOnly,\r\n    Download4BytesAsFloat32,\r\n  }\r\n}\r\n\r\n/**\r\n * Abstraction for mapping data types to texture texlets\r\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\r\n * Decoding means how a texlet's channels are mapped to a resulting Float32\r\n */\r\nexport interface DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\r\n  allocate(size: number): Encoder.DataArrayType;\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\r\n}\r\n/**\r\n * WebGL2 data encoder\r\n * Uses R32F as the format for texlet\r\n */\r\nexport class RedFloat32DataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\r\n    if (channels === 1) {\r\n      this.internalFormat = gl.R32F;\r\n      this.format = gl.RED;\r\n      this.textureType = gl.FLOAT;\r\n      this.channelSize = channels;\r\n    } else if (channels === 4) {\r\n      this.internalFormat = gl.RGBA32F;\r\n      this.format = gl.RGBA;\r\n      this.textureType = gl.FLOAT;\r\n      this.channelSize = channels;\r\n    } else {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n  }\r\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\r\n    let result: Float32Array;\r\n    let source: Float32Array;\r\n    if (src.constructor !== Float32Array) {\r\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\r\n      source = new Float32Array(src);\r\n    }\r\n    if (textureSize * this.channelSize > src.length) {\r\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\r\n      source = src as Float32Array;\r\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\r\n      source.forEach((v, i) => result[i] = v);\r\n    } else {\r\n      source = src as Float32Array;\r\n      result = source;\r\n    }\r\n    return result;\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Float32Array(size * 4);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\r\n    if (this.channelSize === 1) {\r\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\r\n      return filteredData;\r\n    }\r\n    return buffer.subarray(0, dataSize) as Float32Array;\r\n  }\r\n}\r\n/**\r\n * Data encoder for WebGL 1 with support for floating point texture\r\n */\r\nexport class RGBAFloatDataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\r\n    if (channels !== 1 && channels !== 4) {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n    this.internalFormat = gl.RGBA;\r\n    this.format = gl.RGBA;\r\n    this.channelSize = channels;\r\n    this.textureType = textureType || gl.FLOAT;\r\n  }\r\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\r\n    let dest = src;\r\n    if (this.channelSize === 1) {\r\n      Logger.verbose('Encoder', 'Exploding into a larger array');\r\n      dest = this.allocate(textureSize) as Float32Array;\r\n      src.forEach((v, i) => dest[i * 4] = v);\r\n    }\r\n    return dest;\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Float32Array(size * 4);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\r\n    if (this.channelSize === 1) {\r\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\r\n      return filteredData;\r\n    }\r\n    return buffer.subarray(0, dataSize) as Float32Array;\r\n  }\r\n}\r\n\r\nexport class Uint8DataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize = 4;\r\n  constructor(gl: WebGLRenderingContext, channels = 1) {\r\n    if (channels === 1) {\r\n      this.internalFormat = gl.ALPHA;\r\n      this.format = gl.ALPHA;  // not tested\r\n      this.textureType = gl.UNSIGNED_BYTE;\r\n      this.channelSize = channels;\r\n    } else if (channels === 4) {\r\n      this.internalFormat = gl.RGBA;\r\n      this.format = gl.RGBA;\r\n      this.textureType = gl.UNSIGNED_BYTE;\r\n      this.channelSize = channels;\r\n    } else {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n  }\r\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\r\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Uint8Array(size * this.channelSize);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\r\n    if (buffer instanceof Uint8Array) {\r\n      return buffer.subarray(0, dataSize);\r\n    }\r\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\nimport {assert} from '../../util';\r\n/** Layout preferences */\r\nexport interface WidthHeightPrefs {\r\n  breakAxis?: number;\r\n  isPacked?: boolean;\r\n  reverseWH?: boolean;\r\n}\r\n/**\r\n * TextureLayoutStrategy is an abstraction for different plans\r\n * for mapping n-dimensional arrays to 2D textures (and back)\r\n */\r\nexport interface TextureLayoutStrategy {\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\r\n}\r\n\r\n/**\r\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\r\n */\r\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\r\n  constructor(public maxTextureSize: number) {}\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    // scalar tensor\r\n    if (shape.length === 0) {\r\n      return [1, 1];\r\n    }\r\n    const maxTextureSize = this.maxTextureSize;\r\n    if (prefs && prefs.breakAxis !== undefined) {\r\n      // check to see if dims fit\r\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\r\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\r\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\r\n        // ignore preferences\r\n        // continue with default layout\r\n        Logger.verbose(\r\n            'TextureLayout',\r\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\r\n      } else {\r\n        return [wsize, hsize];\r\n      }\r\n    }\r\n    const totalSize = shape.reduce((a, b) => a * b);\r\n\r\n    let width = Math.floor(Math.sqrt(totalSize));\r\n\r\n    for (; width < maxTextureSize && width < totalSize; width++) {\r\n      if (totalSize % width === 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (width >= maxTextureSize || totalSize % width !== 0) {\r\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\r\n    }\r\n    return [width, totalSize / width];\r\n  }\r\n}\r\n\r\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\r\n  constructor(public maxTextureSize: number) {}\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    const wh = this.computeTexture(shape, prefs);\r\n    if (prefs && prefs.isPacked) {\r\n      wh[0] /= 2;\r\n      wh[1] /= 2;\r\n    }\r\n    if (prefs && prefs.reverseWH) {\r\n      return [wh[1], wh[0]];\r\n    }\r\n    return wh;\r\n  }\r\n\r\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    const isPacked = prefs && prefs.isPacked;\r\n    // scalar tensor\r\n    if (shape.length === 0) {\r\n      return isPacked ? [2, 2] : [1, 1];\r\n    }\r\n    let maxTextureSize = this.maxTextureSize;\r\n    if (prefs && prefs.breakAxis !== undefined) {\r\n      // check to see if dims fit\r\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\r\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\r\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\r\n        // ignore preferences\r\n        // continue with default layout\r\n        Logger.verbose(\r\n            'TextureLayout',\r\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\r\n      } else {\r\n        return [wsize, hsize];\r\n      }\r\n    }\r\n    let logShape = shape.slice(0);\r\n    if (isPacked) {\r\n      maxTextureSize = maxTextureSize * 2;\r\n\r\n      // This logic ensures we accurately count the number of packed texels needed\r\n      // to accommodate the tensor. We can only pack values in the same texel if\r\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\r\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\r\n      // fact that the texels containing the third row are half empty.\r\n      logShape = logShape.map(\r\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\r\n\r\n      // Packed texture height is at least 2 (the channel height of a single\r\n      // texel).\r\n      if (logShape.length === 1) {\r\n        logShape = [2, logShape[0]];\r\n      }\r\n    }\r\n\r\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\r\n    if (logShape.length !== 2) {\r\n      const squeezeResult = squeezeShape(logShape);\r\n      logShape = squeezeResult.newShape;\r\n    }\r\n\r\n    const size = sizeFromShape(logShape);\r\n    if (logShape.length <= 1 && size <= maxTextureSize) {\r\n      return [1, size];\r\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\r\n      return logShape as [number, number];\r\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\r\n      return [logShape[0] * logShape[1], logShape[2]];\r\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\r\n      return [logShape[0], logShape[1] * logShape[2]];\r\n    } else if (\r\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\r\n        logShape[3] <= maxTextureSize) {\r\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\r\n    } else if (\r\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\r\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\r\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\r\n    } else {\r\n      if (isPacked) {\r\n        // For packed textures size equals the number of channels required to\r\n        // accommodate the texture data. However in order to squarify such that\r\n        // inner dimensions stay even, we rewrite size to equal the number of\r\n        // texels. Then in the return statement we rehydrate the squarified\r\n        // dimensions to channel units.\r\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\r\n      }\r\n      return sizeToSquarishShape(size);\r\n    }\r\n  }\r\n}\r\n\r\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\r\n  const newShape: number[] = [];\r\n  const keptDims: number[] = [];\r\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\r\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\r\n  let j = 0;\r\n  for (let i = 0; i < shape.length; ++i) {\r\n    if (axes != null) {\r\n      if (axes[j] === i && shape[i] !== 1) {\r\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\r\n      }\r\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\r\n        newShape.push(shape[i]);\r\n        keptDims.push(i);\r\n      }\r\n      if (axes[j] <= i) {\r\n        j++;\r\n      }\r\n    }\r\n    if (shape[i] !== 1) {\r\n      newShape.push(shape[i]);\r\n      keptDims.push(i);\r\n    }\r\n  }\r\n  return {newShape, keptDims};\r\n}\r\n\r\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\r\n  const rank = shape.length;\r\n\r\n  // Normalize input\r\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\r\n\r\n  // Check for valid range\r\n  assert(\r\n      axis.every(ax => ax >= -rank && ax < rank),\r\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\r\n          `got axis ${axis}`);\r\n\r\n  // Check for only integers\r\n  assert(\r\n      axis.every(isInt),\r\n      () => 'All values in axis param must be integers but ' +\r\n          `got axis ${axis}`);\r\n\r\n  // Handle negative axis.\r\n  return axis.map(a => a < 0 ? rank + a : a);\r\n}\r\nexport function isInt(a: number): boolean {\r\n  return a % 1 === 0;\r\n}\r\nexport function sizeFromShape(shape: number[]): number {\r\n  if (shape.length === 0) {\r\n    // Scalar.\r\n    return 1;\r\n  }\r\n  let size = shape[0];\r\n  for (let i = 1; i < shape.length; i++) {\r\n    size *= shape[i];\r\n  }\r\n  return size;\r\n}\r\nexport function getRowsCols(shape: number[]): [number, number] {\r\n  if (shape.length === 0) {\r\n    throw Error('Cannot get rows and columns of an empty shape array.');\r\n  }\r\n\r\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\r\n}\r\nexport function sizeToSquarishShape(size: number): [number, number] {\r\n  const width = Math.ceil(Math.sqrt(size));\r\n  return [width, Math.ceil(size / width)];\r\n}\r\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\r\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ShapeUtil} from '../../util';\r\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\r\nimport {TextureLayout, TextureType} from './types';\r\n\r\nexport const createTextureLayoutFromTextureType =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\r\n     textureType: TextureType): TextureLayout => {\r\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\r\n      const isPacked = textureType === TextureType.packed;\r\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\r\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\r\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\r\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\r\n          undefined;\r\n      return createTextureLayoutFromShape(\r\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\r\n    };\r\n\r\nexport const calculateTextureWidthAndHeight =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\r\n        [number, number] => {\r\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\r\n          return [layout.width, layout.height];\r\n        };\r\n\r\n/**\r\n * Create a TextureLayout object from shape.\r\n */\r\nexport const createTextureLayoutFromShape =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\r\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\r\n      const isPacked = !!(prefs && prefs.isPacked);\r\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\r\n      const rank = shape.length;\r\n      let inferredDims = shape.slice(0);\r\n      if (rank === 0) {\r\n        inferredDims = [1];\r\n      }\r\n      if (channels === 1) {\r\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\r\n        unpackedShape = shape;\r\n      } else if (isPacked) {\r\n        if (channels !== 4) {\r\n          throw new Error('a packed texture must be 4-channel');\r\n        }\r\n        unpackedShape = shape;\r\n        if (rank > 0) {\r\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\r\n        }\r\n        if (rank > 1) {\r\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\r\n        }\r\n      } else if (!unpackedShape) {\r\n        throw new Error('Unpacked shape is needed when using channels > 1');\r\n      }\r\n      return {\r\n        width,\r\n        height,\r\n        channels,\r\n        isPacked,\r\n        shape: inferredDims,\r\n        strides: ShapeUtil.computeStrides(inferredDims),\r\n        unpackedShape,\r\n        reversedWH: (prefs && prefs.reverseWH)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger, Profiler} from '../../instrument';\r\nimport {Tensor} from '../../tensor';\r\n\r\nimport {Encoder} from './texture-data-encoder';\r\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {TextureData, TextureLayout} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\nexport interface TextureManagerConfig {\r\n  reuseTextures?: boolean;\r\n}\r\n\r\n/**\r\n * TextureManager is the mainly responsible for caching Textures\r\n * Textures are cached in 2 levels:\r\n *   1. the texures which are associated with a dataId (from Tensor)\r\n *    Caching these is crucial to performance. These are In-use Textures\r\n *   2. textures which are not in use by any current ProgramInfo/Tensor\r\n *     These are called Free Textures\r\n * TextureManager is also used to help creating textures. For this it\r\n * uses WebGLContext and TextureLayoutStrategy\r\n */\r\nexport class TextureManager {\r\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\r\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\r\n  private readonly textureLookup: Map<WebGLTexture, string>;\r\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\r\n\r\n  constructor(\r\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\r\n      private config: TextureManagerConfig) {\r\n    if (config.reuseTextures) {\r\n      this.inUseTextures = new Map();\r\n      this.idleTextures = new Map();\r\n      this.textureLookup = new Map();\r\n    }\r\n  }\r\n  createTextureFromLayout(\r\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\r\n    const textureDataType = this.toEncoderType(dataType);\r\n\r\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\r\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\r\n      throw new Error('not implemented');\r\n    }\r\n    const width = layout.width;\r\n    const height = layout.height;\r\n\r\n    let key: string|undefined;\r\n    let inUseTextures: WebGLTexture[]|undefined;\r\n    if (this.config.reuseTextures) {\r\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\r\n      inUseTextures = this.inUseTextures.get(key);\r\n      if (!inUseTextures) {\r\n        inUseTextures = [];\r\n        this.inUseTextures.set(key, inUseTextures);\r\n      }\r\n\r\n      const idleTextures = this.idleTextures.get(key);\r\n      if (idleTextures && idleTextures.length > 0) {\r\n        const texture = idleTextures.pop()!;\r\n        inUseTextures.push(texture);\r\n        if (usage === Encoder.Usage.UploadOnly) {\r\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\r\n        }\r\n        return texture;\r\n      }\r\n    }\r\n\r\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\r\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\r\n\r\n    if (this.config.reuseTextures) {\r\n      inUseTextures!.push(texture);\r\n      this.textureLookup.set(texture, key!);\r\n    }\r\n    return texture;\r\n  }\r\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\r\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\r\n      const data = this.glContext.readTexture(\r\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\r\n      return this.toTensorData(dataType, data);\r\n    });\r\n  }\r\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\r\n    const dataId = td.tensor.dataId;\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    if (this.pendingRead.has(dataId)) {\r\n      const subscribers = this.pendingRead.get(dataId);\r\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\r\n    }\r\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\r\n      this.pendingRead.set(dataId, []);\r\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\r\n      // add a fence waiting for the data to be ready\r\n      await this.glContext.createAndWaitForFence();\r\n      const data = this.glContext.readTexture(\r\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\r\n      const tensorData = this.toTensorData(dataType, data);\r\n      const subscribers = this.pendingRead.get(dataId);\r\n      this.pendingRead.delete(dataId);\r\n      subscribers?.forEach(resolve => resolve(tensorData));\r\n      return tensorData;\r\n    });\r\n  }\r\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\r\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\r\n      const dataSize = td.shape.reduce((a, b) => a * b);\r\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\r\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\r\n    });\r\n  }\r\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\r\n    let key: string|undefined;\r\n    if (this.config.reuseTextures) {\r\n      key = this.textureLookup.get(textureData.texture);\r\n      if (key) {\r\n        if (deleteTexture) {\r\n          this.textureLookup.delete(key);\r\n        }\r\n        const inUseTextures = this.inUseTextures.get(key);\r\n        if (inUseTextures) {\r\n          const index = inUseTextures.indexOf(textureData.texture);\r\n          if (index !== -1) {\r\n            inUseTextures.splice(index, 1);\r\n            let idleTextures = this.idleTextures.get(key);\r\n            if (!idleTextures) {\r\n              idleTextures = [];\r\n              this.idleTextures.set(key, idleTextures);\r\n            }\r\n            idleTextures.push(textureData.texture);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!key || deleteTexture) {\r\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\r\n      this.glContext.deleteTexture(textureData.texture);\r\n    }\r\n  }\r\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\r\n    switch (dataType) {\r\n      case 'int16':\r\n        return data instanceof Int16Array ? data : Int16Array.from(data);\r\n      case 'int32':\r\n        return data instanceof Int32Array ? data : Int32Array.from(data);\r\n      case 'int8':\r\n        return data instanceof Int8Array ? data : Int8Array.from(data);\r\n      case 'uint16':\r\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\r\n      case 'uint32':\r\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\r\n      case 'uint8':\r\n      case 'bool':\r\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\r\n      case 'float32':\r\n        return data instanceof Float32Array ? data : Float32Array.from(data);\r\n      case 'float64':\r\n        return data instanceof Float64Array ? data : Float64Array.from(data);\r\n      default:\r\n        throw new Error(`TensorData type ${dataType} is not supported`);\r\n    }\r\n  }\r\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\r\n    if (!data) {\r\n      return undefined;\r\n    }\r\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\r\n    /*\r\n    switch (dataType) {\r\n      case 'int16':\r\n      case 'int32':\r\n      case 'uint16':\r\n      case 'uint32':\r\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\r\n      case 'int8':\r\n      case 'uint8':\r\n      case 'bool':\r\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\r\n      case 'float32':\r\n      case 'float64':\r\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\r\n      default:\r\n        throw new Error(`TensorData type ${dataType} is not supported`);\r\n    }\r\n    */\r\n  }\r\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\r\n    return 'float';\r\n    // switch (dataType) {\r\n    //   case 'int16':\r\n    //   case 'int32':\r\n    //   case 'uint16':\r\n    //   case 'uint32':\r\n    //     return 'int';\r\n    //   case 'uint8':\r\n    //   case 'bool':\r\n    //     return 'byte';\r\n    //   case 'float32':\r\n    //   case 'float64':\r\n    //     return 'float';\r\n    //   default:\r\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\r\n    // }\r\n  }\r\n  clearActiveTextures(): void {\r\n    this.glContext.clearActiveTextures();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../tensor';\r\n\r\n/**\r\n * Layout info is used for mapping n-dimensional array to 2D textures\r\n * The layout is created by the TextureLayoutStrategy based on\r\n * the Tensor's dimensions and strides\r\n */\r\nexport interface TextureLayout {\r\n  width: number;\r\n  height: number;\r\n  /**\r\n   * specify the number of value that encoded in a single pixel\r\n   */\r\n  channels: 1|2|3|4;\r\n  /**\r\n   * whether in packed mode or not\r\n   */\r\n  isPacked?: boolean;\r\n  /**\r\n   * the normalized shape\r\n   */\r\n  shape: readonly number[];\r\n  /**\r\n   * the stride of each dimensions, calculated according to shape\r\n   */\r\n  strides: readonly number[];\r\n  /**\r\n   * the original shape(dims) of the corresponding tensor\r\n   */\r\n  unpackedShape: readonly number[];\r\n\r\n  reversedWH?: boolean;\r\n}\r\nexport interface TextureData extends TextureLayout {\r\n  tensor: Tensor;\r\n  texture: WebGLTexture;\r\n}\r\n\r\nexport enum TextureType {\r\n  unpacked,              // <-- normal unpacked texture\r\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\r\n  packed,                // <-- normal packed texture\r\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\r\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\r\n}\r\n\r\nexport interface TensorInfo {\r\n  id?: Tensor.Id;\r\n  dims: readonly number[];\r\n  type: Tensor.DataType;\r\n  textureType: TextureType;\r\n}\r\n\r\nexport interface ProgramVariable {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n  data: number|number[];\r\n}\r\n\r\n/**\r\n * A set of metadata of a shader program.\r\n */\r\nexport interface ProgramMetadata {\r\n  /**\r\n   * the name of the program. used for debugging and profiling\r\n   */\r\n  name: string;\r\n  /**\r\n   * texture types for each input\r\n   */\r\n  inputTypes: TextureType[];\r\n  /**\r\n   * names of each input\r\n   */\r\n  inputNames: string[];\r\n  /**\r\n   * an optional string as a cache hint in the artifact cache\r\n   */\r\n  cacheHint?: string;\r\n}\r\n\r\n/**\r\n * A ProgramInfoLoader allows\r\n */\r\nexport interface ProgramInfoLoader extends ProgramMetadata {\r\n  /**\r\n   * a function to get the program info\r\n   */\r\n  get(): ProgramInfo;\r\n}\r\n\r\n/**\r\n * A set of data that represent a shader program\r\n */\r\nexport interface ProgramInfo extends ProgramMetadata {\r\n  /**\r\n   * information of uniform variables\r\n   */\r\n  variables?: ProgramVariable[];\r\n  /**\r\n   * tensor info for output\r\n   */\r\n  output: TensorInfo;\r\n  /**\r\n   * the shader's processing source code\r\n   */\r\n  shaderSource: string;\r\n  /**\r\n   * whether the shader source contains a customized main function implementation\r\n   */\r\n  hasMain?: boolean;\r\n}\r\n\r\nexport interface VariableInfo {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n}\r\n\r\nexport interface ProgramVariable {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n  data: number|number[];\r\n}\r\n\r\n/**\r\n * Information of uniforms that shader uses\r\n */\r\nexport interface UniformInfo {\r\n  type: 'sampler2D'|VariableInfo['type'];\r\n  name: string;\r\n  arrayLength?: number;\r\n}\r\n\r\nexport interface UniformLocation extends UniformInfo {\r\n  location: WebGLUniformLocation;\r\n}\r\n\r\n/**\r\n * Artifact is the result of compilation\r\n * It does not contain input of output data\r\n * However anything that could be run as a \"program\"\r\n */\r\nexport interface Artifact {\r\n  programInfo: ProgramInfo;\r\n  program: WebGLProgram;\r\n  uniformLocations: UniformLocation[];\r\n  attribLocations: {position: number; textureCoord: number};\r\n}\r\nexport declare namespace Artifact {\r\n  type UniformLocations = Artifact['uniformLocations'];\r\n  type AttribLocations = Artifact['attribLocations'];\r\n}\r\n\r\nexport interface UniformData {\r\n  [name: string]: number|number[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {assert} from '../../util';\r\n/**\r\n * Given a non RGBA shape calculate the R version\r\n * It is assumed that the dimensions are multiples of given channels\r\n * NOTE: it is always the last dim that gets packed.\r\n * @param unpackedShape original shape to create a packed version from\r\n */\r\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\r\n  const len = unpackedShape.length;\r\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\r\n}\r\n\r\nexport async function repeatedTry(\r\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    let tryCount = 0;\r\n\r\n    const tryFn = () => {\r\n      if (checkFn()) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      tryCount++;\r\n\r\n      const nextBackoff = delayFn(tryCount);\r\n\r\n      if (maxCounter != null && tryCount >= maxCounter) {\r\n        reject();\r\n        return;\r\n      }\r\n      setTimeout(tryFn, nextBackoff);\r\n    };\r\n\r\n    tryFn();\r\n  });\r\n}\r\n\r\n/**\r\n * Generates the function name from an input sampler name.\r\n * @param samplerName Name of the sampler.\r\n */\r\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\r\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\r\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\r\n}\r\n\r\n/**\r\n * Generates the function name from an input sampler name at output coordinates.\r\n * @param samplerName Name of the sampler.\r\n */\r\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\r\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\r\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\r\n}\r\n\r\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\r\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\r\n  // Deep copy.\r\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\r\n  newInputShape = squeezedShape;\r\n  return newInputShape;\r\n}\r\n\r\n/** Returns a list of squeezed parameters for shader functions */\r\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\r\n  return keptDims.map(d => params[d]).join(', ');\r\n}\r\n\r\n/** Returns the data type for different ranks. */\r\nexport function getCoordsDataType(rank: number): string {\r\n  if (rank <= 1) {\r\n    return 'int';\r\n  } else if (rank === 2) {\r\n    return 'ivec2';\r\n  } else if (rank === 3) {\r\n    return 'ivec3';\r\n  } else if (rank === 4) {\r\n    return 'ivec4';\r\n  } else if (rank === 5) {\r\n    return 'ivec5';\r\n  } else if (rank === 6) {\r\n    return 'ivec6';\r\n  } else {\r\n    throw Error(`GPU for rank ${rank} is not yet supported`);\r\n  }\r\n}\r\n\r\nexport function getGlChannels(rank = 6): string[] {\r\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\n\r\nimport {WebGLContext} from './webgl-context';\r\n\r\nconst cache: {[contextId: string]: WebGLContext} = {};\r\n\r\n/**\r\n * This factory function creates proper WebGLRenderingContext based on\r\n * the current browsers capabilities\r\n * The order is from higher/most recent versions to most basic\r\n */\r\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\r\n  let context: WebGLContext|undefined;\r\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\r\n    context = cache.webgl2;\r\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\r\n    context = cache.webgl;\r\n  }\r\n\r\n  context = context || createNewWebGLContext(contextId);\r\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\r\n  const gl = context.gl;\r\n\r\n  cache[contextId] = context;\r\n\r\n  if (gl.isContextLost()) {\r\n    delete cache[contextId];\r\n    return createWebGLContext(contextId);\r\n  }\r\n\r\n  gl.disable(gl.DEPTH_TEST);\r\n  gl.disable(gl.STENCIL_TEST);\r\n  gl.disable(gl.BLEND);\r\n  gl.disable(gl.DITHER);\r\n  gl.disable(gl.POLYGON_OFFSET_FILL);\r\n  gl.disable(gl.SAMPLE_COVERAGE);\r\n  gl.enable(gl.SCISSOR_TEST);\r\n  gl.enable(gl.CULL_FACE);\r\n  gl.cullFace(gl.BACK);\r\n\r\n  return context;\r\n}\r\n\r\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\r\n  const canvas = createCanvas();\r\n  const contextAttributes: WebGLContextAttributes = {\r\n    alpha: false,\r\n    depth: false,\r\n    antialias: false,\r\n    stencil: false,\r\n    preserveDrawingBuffer: false,\r\n    premultipliedAlpha: false,\r\n    failIfMajorPerformanceCaveat: false\r\n  };\r\n  let gl: WebGLRenderingContext|null;\r\n  const ca = contextAttributes;\r\n  if (!contextId || contextId === 'webgl2') {\r\n    gl = canvas.getContext('webgl2', ca);\r\n    if (gl) {\r\n      try {\r\n        return new WebGLContext(gl, 2);\r\n      } catch (err) {\r\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\r\n      }\r\n    }\r\n  }\r\n  if (!contextId || contextId === 'webgl') {\r\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\r\n    if (gl) {\r\n      try {\r\n        return new WebGLContext(gl, 1);\r\n      } catch (err) {\r\n        Logger.warning(\r\n            'GlContextFactory',\r\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('WebGL is not supported');\r\n}\r\n\r\nfunction createCanvas(): HTMLCanvasElement {\r\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  return canvas;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\n\r\nimport * as DataEncoders from './texture-data-encoder';\r\nimport {DataEncoder, Encoder} from './texture-data-encoder';\r\nimport {repeatedTry} from './utils';\r\n\r\nexport interface FenceContext {\r\n  query: WebGLSync|null;\r\n  isFencePassed(): boolean;\r\n}\r\n\r\ntype PollItem = {\r\n  isDoneFn: () => boolean; resolveFn: () => void;\r\n};\r\n\r\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\r\n  let i = 0;\r\n  for (; i < arr.length; ++i) {\r\n    const isDone = arr[i]();\r\n    if (!isDone) {\r\n      break;\r\n    }\r\n  }\r\n  return i - 1;\r\n}\r\n\r\n/**\r\n * Abstraction and wrapper around WebGLRenderingContext and its operations\r\n */\r\nexport class WebGLContext {\r\n  gl: WebGLRenderingContext;\r\n  version: 1|2;\r\n\r\n  private vertexbuffer: WebGLBuffer;\r\n  private framebuffer: WebGLFramebuffer;\r\n\r\n  // WebGL flags and vital parameters\r\n  private isFloatTextureAttachableToFrameBuffer: boolean;\r\n  isFloat32DownloadSupported: boolean;\r\n  isRenderFloat32Supported: boolean;\r\n  isBlendSupported: boolean;\r\n  maxTextureSize: number;\r\n  // private maxCombinedTextureImageUnits: number;\r\n  private maxTextureImageUnits: number;\r\n  // private maxCubeMapTextureSize: number;\r\n  // private shadingLanguageVersion: string;\r\n  // private webglVendor: string;\r\n  // private webglVersion: string;\r\n\r\n  // WebGL2 flags and vital parameters\r\n  // private max3DTextureSize: number;\r\n  // private maxArrayTextureLayers: number;\r\n  // private maxColorAttachments: number;\r\n  // private maxDrawBuffers: number;\r\n\r\n  // WebGL extensions\r\n  // eslint-disable-next-line camelcase\r\n  textureFloatExtension: OES_texture_float|null;\r\n  // eslint-disable-next-line camelcase\r\n  textureHalfFloatExtension: OES_texture_half_float|null;\r\n\r\n  // WebGL2 extensions\r\n  colorBufferFloatExtension: unknown|null;\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\r\n\r\n  private disposed: boolean;\r\n  private frameBufferBound = false;\r\n\r\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\r\n    this.gl = gl;\r\n    this.version = version;\r\n\r\n    this.getExtensions();\r\n    this.vertexbuffer = this.createVertexbuffer();\r\n    this.framebuffer = this.createFramebuffer();\r\n    this.queryVitalParameters();\r\n  }\r\n\r\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\r\n    const gl = this.gl;\r\n    // create the texture\r\n    const texture = gl.createTexture();\r\n    // bind the texture so the following methods effect this texture.\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    const buffer = data ? encoder.encode(data, width * height) : null;\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,  // Level of detail.\r\n        encoder.internalFormat, width, height,\r\n        0,  // Always 0 in OpenGL ES.\r\n        encoder.format, encoder.textureType, buffer);\r\n    this.checkError();\r\n    return texture as WebGLTexture;\r\n  }\r\n  updateTexture(\r\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\r\n    const gl = this.gl;\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    const buffer = encoder.encode(data, width * height);\r\n    gl.texSubImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,  // level\r\n        0,  // xoffset\r\n        0,  // yoffset\r\n        width, height, encoder.format, encoder.textureType, buffer);\r\n    this.checkError();\r\n  }\r\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\r\n    const gl = this.gl;\r\n    // Make it the target for framebuffer operations - including rendering.\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\r\n        0);  // 0, we aren't using MIPMAPs\r\n    this.checkError();\r\n    gl.viewport(0, 0, width, height);\r\n    gl.scissor(0, 0, width, height);\r\n  }\r\n  readTexture(\r\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\r\n      channels: number): Encoder.DataArrayType {\r\n    const gl = this.gl;\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    if (!this.frameBufferBound) {\r\n      this.attachFramebuffer(texture, width, height);\r\n    }\r\n    const encoder = this.getEncoder(dataType, channels);\r\n    const buffer = encoder.allocate(width * height);\r\n    // bind texture to framebuffer\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\r\n        0);  // 0, we aren't using MIPMAPs\r\n    // TODO: Check if framebuffer is ready\r\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\r\n    this.checkError();\r\n    // unbind FB\r\n    return encoder.decode(buffer, dataSize);\r\n  }\r\n\r\n  isFramebufferReady(): boolean {\r\n    // TODO: Implement logic to check if the framebuffer is ready\r\n    return true;\r\n  }\r\n  getActiveTexture(): string {\r\n    const gl = this.gl;\r\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\r\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\r\n  }\r\n  getTextureBinding(): WebGLTexture {\r\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\r\n  }\r\n  getFramebufferBinding(): WebGLFramebuffer {\r\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\r\n  }\r\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\r\n    const gl = this.gl;\r\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\r\n    gl.enableVertexAttribArray(positionHandle);\r\n    if (textureCoordHandle !== -1) {\r\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\r\n      gl.enableVertexAttribArray(textureCoordHandle);\r\n    }\r\n    this.checkError();\r\n  }\r\n  createProgram(\r\n      vertexShader: WebGLShader,\r\n      fragShader: WebGLShader,\r\n      ): WebGLProgram {\r\n    const gl = this.gl;\r\n    const program = gl.createProgram()!;\r\n\r\n    // the program consists of our shaders\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n    return program;\r\n  }\r\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(shaderType);\r\n    if (!shader) {\r\n      throw new Error(`createShader() returned null with type ${shaderType}`);\r\n    }\r\n\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\r\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\r\nShader source:\r\n${shaderSource}`);\r\n    }\r\n    return shader;\r\n  }\r\n  deleteShader(shader: WebGLShader): void {\r\n    this.gl.deleteShader(shader);\r\n  }\r\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\r\n    const gl = this.gl;\r\n    gl.activeTexture(gl.TEXTURE0 + position);\r\n    this.checkError();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    this.checkError();\r\n    gl.uniform1i(uniformHandle, position);\r\n    this.checkError();\r\n  }\r\n  draw(): void {\r\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n    this.checkError();\r\n  }\r\n  checkError(): void {\r\n    if (env.debug) {\r\n      const gl = this.gl;\r\n      const error = gl.getError();\r\n      let label = '';\r\n      switch (error) {\r\n        case (gl.NO_ERROR):\r\n          return;\r\n        case (gl.INVALID_ENUM):\r\n          label = 'INVALID_ENUM';\r\n          break;\r\n        case (gl.INVALID_VALUE):\r\n          label = 'INVALID_VALUE';\r\n          break;\r\n        case (gl.INVALID_OPERATION):\r\n          label = 'INVALID_OPERATION';\r\n          break;\r\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\r\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\r\n          break;\r\n        case (gl.OUT_OF_MEMORY):\r\n          label = 'OUT_OF_MEMORY';\r\n          break;\r\n        case (gl.CONTEXT_LOST_WEBGL):\r\n          label = 'CONTEXT_LOST_WEBGL';\r\n          break;\r\n        default:\r\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\r\n      }\r\n      throw new Error(label);\r\n    }\r\n  }\r\n  deleteTexture(texture: WebGLTexture): void {\r\n    this.gl.deleteTexture(texture);\r\n  }\r\n  deleteProgram(program: WebGLProgram): void {\r\n    this.gl.deleteProgram(program);\r\n  }\r\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\r\n    if (this.version === 2) {\r\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\r\n    }\r\n\r\n    switch (dataType) {\r\n      case 'float':\r\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\r\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\r\n        } else {\r\n          return new DataEncoders.RGBAFloatDataEncoder(\r\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\r\n        }\r\n      case 'int':\r\n        throw new Error('not implemented');\r\n      case 'byte':\r\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\r\n      default:\r\n        throw new Error(`Invalid dataType: ${dataType}`);\r\n    }\r\n  }\r\n  clearActiveTextures(): void {\r\n    const gl = this.gl;\r\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\r\n      gl.activeTexture(gl.TEXTURE0 + unit);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n  }\r\n  dispose(): void {\r\n    if (this.disposed) {\r\n      return;\r\n    }\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.deleteFramebuffer(this.framebuffer);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.deleteBuffer(this.vertexbuffer);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    gl.finish();\r\n    this.disposed = true;\r\n  }\r\n\r\n  private createDefaultGeometry(): Float32Array {\r\n    // Sets of x,y,z(=0),s,t coordinates.\r\n    return new Float32Array([\r\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\r\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\r\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\r\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\r\n    ]);\r\n  }\r\n  private createVertexbuffer(): WebGLBuffer {\r\n    const gl = this.gl;\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      throw new Error('createBuffer() returned null');\r\n    }\r\n    const geometry = this.createDefaultGeometry();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\r\n    this.checkError();\r\n    return buffer;\r\n  }\r\n  private createFramebuffer(): WebGLFramebuffer {\r\n    const fb = this.gl.createFramebuffer();\r\n    if (!fb) {\r\n      throw new Error('createFramebuffer returned null');\r\n    }\r\n    return fb;\r\n  }\r\n\r\n  private queryVitalParameters(): void {\r\n    const gl = this.gl;\r\n\r\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\r\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\r\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\r\n\r\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\r\n      throw new Error('both float32 and float16 TextureType are not supported');\r\n    }\r\n\r\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\r\n\r\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\r\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\r\n    // this.webglVersion = gl.getParameter(gl.VERSION);\r\n\r\n    if (this.version === 2) {\r\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\r\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\r\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\r\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\r\n    }\r\n  }\r\n  private getExtensions(): void {\r\n    if (this.version === 2) {\r\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\r\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\r\n    } else {\r\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\r\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\r\n    }\r\n  }\r\n\r\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\r\n    // test whether Float32 texture is supported:\r\n    // STEP.1 create a float texture\r\n    const gl = this.gl;\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\r\n    // STEP.2 bind a frame buffer\r\n    const frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    // STEP.3 attach texture to framebuffer\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n    // STEP.4 test whether framebuffer is complete\r\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.deleteTexture(texture);\r\n    gl.deleteFramebuffer(frameBuffer);\r\n    return isComplete;\r\n  }\r\n\r\n  private checkRenderFloat32(): boolean {\r\n    if (this.version === 2) {\r\n      if (!this.colorBufferFloatExtension) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.textureFloatExtension) {\r\n        return false;\r\n      }\r\n    }\r\n    return this.isFloatTextureAttachableToFrameBuffer;\r\n  }\r\n\r\n  private checkFloat32Download(): boolean {\r\n    if (this.version === 2) {\r\n      if (!this.colorBufferFloatExtension) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.textureFloatExtension) {\r\n        return false;\r\n      }\r\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\r\n        return false;\r\n      }\r\n    }\r\n    return this.isFloatTextureAttachableToFrameBuffer;\r\n  }\r\n\r\n  /**\r\n   * Check whether GL_BLEND is supported\r\n   */\r\n  private checkFloat32Blend(): boolean {\r\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\r\n    // https://github.com/microsoft/onnxjs/issues/145\r\n\r\n    const gl = this.gl;\r\n\r\n    let texture: WebGLTexture|null|undefined;\r\n    let frameBuffer: WebGLFramebuffer|null|undefined;\r\n    let vertexShader: WebGLShader|null|undefined;\r\n    let fragmentShader: WebGLShader|null|undefined;\r\n    let program: WebGLProgram|null|undefined;\r\n\r\n    try {\r\n      texture = gl.createTexture();\r\n      frameBuffer = gl.createFramebuffer();\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n      // eslint-disable-next-line @typescript-eslint/naming-convention\r\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\r\n\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n      gl.enable(gl.BLEND);\r\n\r\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n      if (!vertexShader) {\r\n        return false;\r\n      }\r\n      gl.shaderSource(vertexShader, 'void main(){}');\r\n      gl.compileShader(vertexShader);\r\n\r\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      if (!fragmentShader) {\r\n        return false;\r\n      }\r\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\r\n      gl.compileShader(fragmentShader);\r\n\r\n      program = gl.createProgram();\r\n      if (!program) {\r\n        return false;\r\n      }\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      gl.useProgram(program);\r\n\r\n      gl.drawArrays(gl.POINTS, 0, 1);\r\n      return gl.getError() === gl.NO_ERROR;\r\n\r\n    } finally {\r\n      gl.disable(gl.BLEND);\r\n\r\n      if (program) {\r\n        gl.deleteProgram(program);\r\n      }\r\n      if (vertexShader) {\r\n        gl.deleteShader(vertexShader);\r\n      }\r\n      if (fragmentShader) {\r\n        gl.deleteShader(fragmentShader);\r\n      }\r\n      if (frameBuffer) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.deleteFramebuffer(frameBuffer);\r\n      }\r\n      if (texture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.deleteTexture(texture);\r\n      }\r\n    }\r\n  }\r\n\r\n  beginTimer(): WebGLQuery {\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n\r\n      const query = gl2.createQuery() as WebGLQuery;\r\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\r\n      return query;\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported.');\r\n    }\r\n  }\r\n\r\n  endTimer() {\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\r\n      return;\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n  }\r\n\r\n  isTimerResultAvailable(query: WebGLQuery): boolean {\r\n    let available = false, disjoint = false;\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n\r\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\r\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n\r\n    return available && !disjoint;\r\n  }\r\n\r\n  getTimerResult(query: WebGLQuery): number {\r\n    let timeElapsed = 0;\r\n    if (this.version === 2) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\r\n      gl2.deleteQuery(query);\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n    // return miliseconds\r\n    return timeElapsed / 1000000;\r\n  }\r\n\r\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\r\n    await repeatedTry(() => this.isTimerResultAvailable(query));\r\n    return this.getTimerResult(query);\r\n  }\r\n\r\n  public async createAndWaitForFence(): Promise<void> {\r\n    const fenceContext = this.createFence(this.gl);\r\n    return this.pollFence(fenceContext);\r\n  }\r\n\r\n  private createFence(gl: WebGLRenderingContext): FenceContext {\r\n    let isFencePassed: () => boolean;\r\n    const gl2 = gl as WebGL2RenderingContext;\r\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\r\n    gl.flush();\r\n    if (query === null) {\r\n      isFencePassed = () => true;\r\n    } else {\r\n      isFencePassed = () => {\r\n        const status = gl2.clientWaitSync(query, 0, 0);\r\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\r\n      };\r\n    }\r\n    return {query, isFencePassed};\r\n  }\r\n\r\n  async pollFence(fenceContext: FenceContext) {\r\n    return new Promise<void>(resolve => {\r\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\r\n    });\r\n  }\r\n\r\n  private itemsToPoll: PollItem[] = [];\r\n\r\n  pollItems(): void {\r\n    // Find the last query that has finished.\r\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\r\n    for (let i = 0; i <= index; ++i) {\r\n      const {resolveFn} = this.itemsToPoll[i];\r\n      resolveFn();\r\n    }\r\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\r\n  }\r\n\r\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\r\n    this.itemsToPoll.push({isDoneFn, resolveFn});\r\n    if (this.itemsToPoll.length > 1) {\r\n      // We already have a running loop that polls.\r\n      return;\r\n    }\r\n    // Start a new loop that polls.\r\n    await repeatedTry(() => {\r\n      this.pollItems();\r\n      // End the loop if no more items to poll.\r\n      return this.itemsToPoll.length === 0;\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {SessionHandler} from './backend';\r\nimport {Graph} from './graph';\r\nimport {Logger, Profiler} from './instrument';\r\nimport {Operator} from './operators';\r\nimport {Tensor} from './tensor';\r\n\r\nclass KernelOp {\r\n  constructor(public op: Operator, public node: Graph.Node) {}\r\n}\r\n\r\nexport class ExecutionPlan {\r\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\r\n    this.initialize(ops);\r\n  }\r\n\r\n  initialize(ops: Operator[]) {\r\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\r\n      const graphNodes = this.graph.getNodes();\r\n      if (graphNodes.length !== ops.length) {\r\n        throw new Error('The size of nodes and OPs do not match.');\r\n      }\r\n\r\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\r\n      this.reset();\r\n\r\n      // look for starter node(s)\r\n      this._starter = [];\r\n      this._ops.forEach((op, i) => {\r\n        let resolved = true;\r\n        for (const input of op.node.inputs) {\r\n          if (\r\n              !this._values[input]                                   // not an initialized input\r\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\r\n          ) {\r\n            resolved = false;\r\n            break;\r\n          }\r\n        }\r\n        if (resolved) {\r\n          this._starter.push(i);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this._values = this.graph.getValues().map(i => i.tensor);\r\n  }\r\n\r\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\r\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\r\n      // reset mediem result\r\n      this.reset();\r\n\r\n      // create inference handler\r\n      const inferenceHandler = sessionHandler.createInferenceHandler();\r\n\r\n      // populate inputs value\r\n      const graphInputs = this.graph.getInputIndices();\r\n      if (modelInputs.length !== graphInputs.length) {\r\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\r\n            modelInputs.length} expected: ${graphInputs.length}`);\r\n      }\r\n\r\n      modelInputs.forEach((input, i) => {\r\n        const index = graphInputs[i];\r\n        this._values[index] = input;\r\n      });\r\n\r\n      // prepare running sequence\r\n      const sequence: number[] = this._starter.slice(0);\r\n\r\n      // execution iterations\r\n      const graphValues = this.graph.getValues();\r\n      const graphNodes = this.graph.getNodes();\r\n\r\n      let rear = 0;\r\n      while (rear < sequence.length) {\r\n        const thisOpIndex = sequence[rear++];\r\n        const thisOp = this._ops[thisOpIndex];\r\n\r\n        // check input\r\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\r\n        if (inputList.indexOf(undefined) !== -1) {\r\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\r\n        }\r\n\r\n        // run\r\n        const inputTensors = inputList as Tensor[];\r\n        Logger.verbose(\r\n            'ExecPlan',\r\n            `Runing op:${thisOp.node.name} (${\r\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\r\n\r\n        const outputList = await this.profiler.event(\r\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\r\n\r\n        // check output\r\n        if (outputList.length !== thisOp.node.outputs.length) {\r\n          throw new Error('the size of output does not match model definition.');\r\n        }\r\n\r\n        // fill value\r\n        outputList.forEach((output, i) => {\r\n          const j = thisOp.node.outputs[i];\r\n          if (this._values[j]) {\r\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\r\n          }\r\n          this._values[j] = output;\r\n        });\r\n\r\n        // resolve downstream nodes\r\n        const downstreamNodes = new Set<number>();\r\n        outputList.forEach((output, i) => {\r\n          const j = thisOp.node.outputs[i];\r\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\r\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\r\n            let resolved = true;\r\n            for (const k of currentDownstreamNode.inputs) {\r\n              if (!this._values[k]) {\r\n                resolved = false;\r\n                break;\r\n              }\r\n            }\r\n            if (resolved) {\r\n              downstreamNodes.add(currentDownstreamNodeIndex);\r\n            }\r\n          }\r\n        });\r\n        sequence.push(...downstreamNodes);\r\n      }\r\n\r\n      const output: Tensor[] = [];\r\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\r\n        const outputIndex = this.graph.getOutputIndices()[i];\r\n        const outputTensor = this._values[outputIndex];\r\n        if (outputTensor === undefined) {\r\n          throw new Error(`required output [${outputIndex}] does not have value`);\r\n        }\r\n        if (outputIndex === 0) {\r\n          await outputTensor.getData();\r\n        } else {\r\n          // eslint-disable-next-line no-unused-expressions\r\n          outputTensor.data;\r\n        }\r\n        output.push(outputTensor);\r\n      }\r\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\r\n      inferenceHandler.dispose();\r\n      return output;\r\n    });\r\n  }\r\n\r\n  _values: Array<Tensor|undefined>;\r\n  _ops: KernelOp[];\r\n  _starter: number[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Attribute} from './attribute';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\nimport {Tensor} from './tensor';\r\nimport {LongUtil, ProtoUtil} from './util';\r\n\r\nexport declare namespace Graph {\r\n  export interface Shape {\r\n    readonly dims: readonly number[];\r\n  }\r\n  export interface ValueType {\r\n    readonly tensorType: Tensor.DataType;\r\n    readonly shape: Shape;\r\n  }\r\n  export interface Value {\r\n    // the tensor data. empty for non-initialized inputs\r\n    readonly tensor?: Tensor;\r\n\r\n    // index to the Node where the value comes from. -1 for initializer.\r\n    readonly from: number;\r\n\r\n    // indices to the Nodes where the values go to.\r\n    readonly to: readonly number[];\r\n\r\n    // value type specification. empty for non-input values.\r\n    readonly type?: ValueType;\r\n  }\r\n  export interface Node {\r\n    // name of the node\r\n    readonly name: string;\r\n\r\n    // the operator type\r\n    readonly opType: string;\r\n\r\n    // indices to the Values where the inputs come from.\r\n    readonly inputs: readonly number[];\r\n\r\n    // indices to the Values where the outpus go to.\r\n    readonly outputs: readonly number[];\r\n\r\n    // the attributes that used by the operator\r\n    readonly attributes: Attribute;\r\n  }\r\n\r\n  /**\r\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\r\n   */\r\n  export interface Transformer {\r\n    removeAllIdentityNodes(): void;\r\n    removeAllDropoutNodes(): void;\r\n    fuseConvActivationNodes(): void;\r\n    // TODO: add generic functions to manipulate the graph\r\n  }\r\n\r\n  // an initializer can use transformer to transform the graph\r\n  export interface Initializer {\r\n    transformGraph(transformer: Transformer): void;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport interface Graph {\r\n  getInputIndices(): readonly number[];\r\n  getInputNames(): readonly string[];\r\n  getOutputIndices(): readonly number[];\r\n  getOutputNames(): readonly string[];\r\n  getValues(): readonly Graph.Value[];\r\n  getNodes(): readonly Graph.Node[];\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\r\nexport const Graph = {\r\n  /**\r\n   * construct a graph from a graph protobuf type\r\n   */\r\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\r\n      new GraphImpl(graphProto, initializer),\r\n};\r\n\r\nclass Value implements Graph.Value {\r\n  constructor(valueInfo?: onnx.IValueInfoProto) {\r\n    this._from = undefined;\r\n    this._to = [];\r\n    this.tensor = undefined;\r\n    this.type = undefined;\r\n\r\n    if (valueInfo) {\r\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\r\n    }\r\n  }\r\n\r\n  _from?: number;  // -1 represent from initializer\r\n  get from() {\r\n    return this._from!;\r\n  }\r\n  _to: number[];\r\n  get to() {\r\n    return this._to;\r\n  }\r\n  type?: Graph.ValueType;\r\n  tensor?: Tensor;\r\n}\r\n\r\nclass Node implements Graph.Node {\r\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\r\n    if (_nodeProto instanceof onnx.NodeProto) {\r\n      this.name = _nodeProto.name;\r\n      this.opType = _nodeProto.opType;\r\n      this.attributes = new Attribute(_nodeProto.attribute);\r\n    } else if (_nodeProto instanceof ortFbs.Node) {\r\n      this.name = name ?? _nodeProto.name()!;\r\n      this.opType = _nodeProto.opType()!;\r\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\r\n    }\r\n\r\n    this.inputs = [];\r\n    this.outputs = [];\r\n    this.executeNode = true;\r\n  }\r\n\r\n  name: string;\r\n  opType: string;\r\n  inputs: number[];\r\n  outputs: number[];\r\n  attributes: Attribute;\r\n  executeNode: boolean;\r\n}\r\n\r\nclass GraphImpl implements Graph, Graph.Transformer {\r\n  private _allData: Value[];\r\n\r\n  private _allInputIndices: number[];\r\n  private _allInputNames: string[];\r\n\r\n  private _allOutputIndices: number[];\r\n  private _allOutputNames: string[];\r\n\r\n  private _nodes: Node[];\r\n\r\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\r\n    if (!graph) {\r\n      throw new TypeError('graph is empty');\r\n    }\r\n\r\n    // build the graph - will throw exceptions if something fatal is detected\r\n    this.buildGraph(graph);\r\n\r\n    // execute any transformation logic for the graph (if applicable)\r\n    this.transformGraph(graphInitializer);\r\n\r\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\r\n    this.checkIsAcyclic();\r\n  }\r\n\r\n  getInputIndices(): readonly number[] {\r\n    return this._allInputIndices;\r\n  }\r\n\r\n  getInputNames(): readonly string[] {\r\n    return this._allInputNames;\r\n  }\r\n\r\n  getOutputIndices(): readonly number[] {\r\n    return this._allOutputIndices;\r\n  }\r\n\r\n  getOutputNames(): readonly string[] {\r\n    return this._allOutputNames;\r\n  }\r\n\r\n  getValues(): readonly Graph.Value[] {\r\n    return this._allData;\r\n  }\r\n\r\n  getNodes(): readonly Graph.Node[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\r\n    // build the graph - will throw exceptions if something fatal is detected\r\n    if (graph instanceof onnx.GraphProto) {\r\n      this.buildGraphFromOnnxFormat(graph);\r\n    } else if (graph instanceof ortFbs.Graph) {\r\n      this.buildGraphFromOrtFormat(graph);\r\n    } else {\r\n      throw new TypeError('Graph type is not supported.');\r\n    }\r\n  }\r\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\r\n    const dataIndices = new Map<string, number>();\r\n    this._allData = [];\r\n\r\n    this._allInputIndices = [];\r\n    this._allInputNames = [];\r\n\r\n    this._allOutputIndices = [];\r\n    this._allOutputNames = [];\r\n\r\n    this._nodes = [];\r\n\r\n    const nodesIndices = new Map<string, number>();\r\n\r\n    // scan all inputs\r\n    if (!graph.input) {\r\n      throw new Error('missing information in graph: input');\r\n    }\r\n    const inputValueNames = [];\r\n    for (const i of graph.input) {\r\n      if (dataIndices.has(i.name!)) {\r\n        throw new Error(`duplicated input name: ${i.name}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value(i)) - 1;\r\n      dataIndices.set(i.name!, currentIndex);\r\n      inputValueNames.push(i.name!);\r\n    }\r\n\r\n    // scan all initializers\r\n    if (!graph.initializer) {\r\n      throw new Error('missing information in graph: initializer');\r\n    }\r\n    for (const i of graph.initializer) {\r\n      let index = dataIndices.get(i.name!);\r\n      if (index === undefined) {\r\n        const value = new Value();\r\n        value.type = {\r\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\r\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\r\n        };\r\n        index = this._allData.push(value) - 1;\r\n        dataIndices.set(i.name!, index);\r\n      }\r\n      this._allData[index]._from = -1;\r\n      this._allData[index].tensor = Tensor.fromProto(i);\r\n    }\r\n\r\n    // filter out input indices\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      if (!this._allData[i].tensor) {\r\n        this._allInputIndices.push(i);\r\n        this._allInputNames.push(inputValueNames[i]);\r\n      }\r\n    }\r\n\r\n    // scan all outputs\r\n    if (!graph.output) {\r\n      throw new Error('missing information in graph: output');\r\n    }\r\n    for (const i of graph.output) {\r\n      if (dataIndices.has(i.name!)) {\r\n        throw new Error(`duplicated output name: ${i.name}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value(i)) - 1;\r\n      dataIndices.set(i.name!, currentIndex);\r\n      this._allOutputIndices.push(currentIndex);\r\n      this._allOutputNames.push(i.name!);\r\n    }\r\n\r\n    // scan all nodes\r\n    if (!graph.node) {\r\n      throw new Error('missing information in graph: node');\r\n    }\r\n    for (const nodeProto of graph.node) {\r\n      if (!nodeProto.name) {\r\n        // assign a name to the node if it doesn't have one\r\n        for (let pick = 0;; pick++) {\r\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\r\n          if (!nodesIndices.has(name)) {\r\n            nodeProto.name = name;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nodesIndices.has(nodeProto.name)) {\r\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\r\n      }\r\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\r\n      nodesIndices.set(nodeProto.name, currentIndex);\r\n    }\r\n\r\n    // scan node's outputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.node[i];\r\n      if (!nodeProto.output) {\r\n        throw new Error(`missing output for node: ${nodeProto.name}`);\r\n      }\r\n      for (const output of nodeProto.output) {\r\n        let dataIndex = dataIndices.get(output);\r\n        if (typeof dataIndex === 'undefined') {\r\n          dataIndex = this._allData.push(new Value()) - 1;\r\n          dataIndices.set(output, dataIndex);\r\n        }\r\n        node.outputs.push(dataIndex);\r\n\r\n        if (this._allData[dataIndex]._from !== undefined) {\r\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\r\n        }\r\n        this._allData[dataIndex]._from = i;\r\n\r\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\r\n        // operator and ignore the node from the graph\r\n        if (nodeProto.opType === 'Constant') {\r\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\r\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\r\n          }\r\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\r\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\r\n          }\r\n          node.outputs.pop();\r\n          node.executeNode = false;\r\n\r\n          this._allData[dataIndex]._from = -1;\r\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\r\n        }\r\n      }\r\n    }\r\n\r\n    // scan node's inputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.node[i];\r\n\r\n      if (!nodeProto.input) {\r\n        throw new Error(`missing input for node: ${nodeProto.name}`);\r\n      }\r\n      for (const input of nodeProto.input) {\r\n        const dataIndex = dataIndices.get(input);\r\n        if (typeof dataIndex === 'undefined') {\r\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\r\n        }\r\n        node.inputs.push(dataIndex);\r\n\r\n        this._allData[dataIndex]._to.push(i);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\r\n    const dataIndices = new Map<string, number>();\r\n    this._allData = [];\r\n\r\n    this._allInputIndices = [];\r\n    this._allInputNames = [];\r\n\r\n    this._allOutputIndices = [];\r\n    this._allOutputNames = [];\r\n\r\n    this._nodes = [];\r\n\r\n    const nodesIndices = new Map<string, number>();\r\n\r\n    // scan all inputs\r\n    const inputValueNames = [];\r\n    for (let i = 0; i < graph.inputsLength(); i++) {\r\n      const inputName = graph.inputs(i);\r\n      if (dataIndices.has(inputName)) {\r\n        throw new Error(`duplicated input name: ${inputName}`);\r\n      }\r\n      // Find the input typeInfo from nodeargs\r\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\r\n        if (graph.nodeArgs(j)?.name() === inputName) {\r\n          const value = new Value();\r\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\r\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\r\n            throw new Error('Unexpected value type for the nodeArg.');\r\n          }\r\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\r\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\r\n          const shape = valueInfo.shape()!;\r\n          const dims = [];\r\n          for (let k = 0; k < shape.dimLength()!; k++) {\r\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\r\n          }\r\n          value.type = {shape: {dims}, tensorType: type};\r\n          const currentIndex = this._allData.push(value) - 1;\r\n          dataIndices.set(inputName, currentIndex);\r\n          inputValueNames.push(inputName);\r\n        }\r\n      }\r\n    }\r\n    // check initializers\r\n    for (let i = 0; i < graph.initializersLength(); i++) {\r\n      const initializer = graph.initializers(i)!;\r\n      let index = dataIndices.get(initializer.name()!);\r\n      if (index === undefined) {\r\n        const value = new Value();\r\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\r\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\r\n        value.type = {shape: {dims}, tensorType: type};\r\n        index = this._allData.push(value) - 1;\r\n        dataIndices.set(initializer.name()!, index);\r\n      }\r\n      this._allData[index]._from = -1;\r\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\r\n    }\r\n\r\n    // filter out input indices\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      if (!this._allData[i].tensor) {\r\n        this._allInputIndices.push(i);\r\n        this._allInputNames.push(inputValueNames[i]);\r\n      }\r\n    }\r\n\r\n    // scan all outputs\r\n    for (let i = 0; i < graph.outputsLength(); i++) {\r\n      const outputName = graph.outputs(i);\r\n      if (dataIndices.has(outputName)) {\r\n        throw new Error(`duplicated output name: ${outputName}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value()) - 1;\r\n      dataIndices.set(outputName, currentIndex);\r\n      this._allOutputIndices.push(currentIndex);\r\n      this._allOutputNames.push(outputName);\r\n    }\r\n\r\n    // scan all nodes\r\n    if (!graph.nodes) {\r\n      throw new Error('missing information in graph: node');\r\n    }\r\n    for (let i = 0; i < graph.nodesLength(); i++) {\r\n      const nodeProto = graph.nodes(i);\r\n      let name = nodeProto!.name();\r\n      if (!name) {\r\n        // assign a name to the node if it doesn't have one\r\n        for (let pick = 0;; pick++) {\r\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\r\n          if (!nodesIndices.has(name)) {\r\n            // an unique name is found. break.\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nodesIndices.has(name)) {\r\n        throw new Error(`duplicated node name: ${name}`);\r\n      }\r\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\r\n      nodesIndices.set(name, currentIndex);\r\n    }\r\n\r\n    // scan node's outputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.nodes(i);\r\n      if (nodeProto == null) {\r\n        throw new Error(`No node exists at index ${i}`);\r\n      }\r\n      if (nodeProto?.outputsLength() === 0) {\r\n        throw new Error(`missing output for node: ${nodeProto.name}`);\r\n      }\r\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\r\n        const output = nodeProto?.outputs(j);\r\n        let dataIndex = dataIndices.get(output);\r\n        if (typeof dataIndex === 'undefined') {\r\n          dataIndex = this._allData.push(new Value()) - 1;\r\n          dataIndices.set(output, dataIndex);\r\n        }\r\n        node.outputs.push(dataIndex);\r\n\r\n        if (this._allData[dataIndex]._from !== undefined) {\r\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\r\n        }\r\n        this._allData[dataIndex]._from = i;\r\n\r\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\r\n        // operator and ignore the node from the graph\r\n        if (nodeProto.opType() === 'Constant') {\r\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\r\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\r\n          }\r\n          if (nodeProto.outputsLength() !== 1) {\r\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\r\n          }\r\n          node.outputs.pop();\r\n          node.executeNode = false;\r\n\r\n          this._allData[dataIndex]._from = -1;\r\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\r\n        }\r\n      }\r\n    }\r\n\r\n    // scan node's inputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.nodes(i)!;\r\n\r\n      if (nodeProto.inputsLength() === 0) {\r\n        throw new Error(`missing input for node: ${nodeProto.name}`);\r\n      }\r\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\r\n        const input = nodeProto.inputs(j)!;\r\n        const dataIndex = dataIndices.get(input);\r\n        if (typeof dataIndex === 'undefined') {\r\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\r\n        }\r\n        node.inputs.push(dataIndex);\r\n\r\n        this._allData[dataIndex]._to.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkIsAcyclic() {\r\n    // go through the graph and check for cycles or other fatal inconsistencies\r\n    const starters: Set<number> = new Set<number>();\r\n    this._allInputIndices.forEach(i => {\r\n      const data = this._allData[i];\r\n      data._to.forEach(j => {\r\n        starters.add(j);\r\n      });\r\n    });\r\n\r\n    // Iterative DFS to check for cycles\r\n    const nodesStack = Array.from(starters);\r\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\r\n\r\n    while (nodesStack.length > 0) {\r\n      const nodeIndex = nodesStack.pop()!;\r\n      // this node has now been processed completely. Mark this node 'black' to denote this.\r\n      if (nodesState[nodeIndex] === 'gray') {\r\n        nodesState[nodeIndex] = 'black';\r\n      } else {\r\n        // this node is under processing stage. mark this node 'gray' to denote this.\r\n        nodesStack.push(nodeIndex);\r\n        nodesState[nodeIndex] = 'gray';\r\n\r\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\r\n          const data = this._allData[outgoingEdgeIndex];\r\n          if (typeof data.tensor !== 'undefined') {\r\n            throw new Error('node outputs should not be initialized');\r\n          }\r\n          if (data._from !== nodeIndex) {\r\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\r\n          }\r\n          data._to.forEach((downstreamNodeIndex) => {\r\n            // back edge found - cyclic\r\n            if (nodesState[downstreamNodeIndex] === 'gray') {\r\n              throw new Error('model graph is cyclic');\r\n            }\r\n            // tree edge found - continue processing by adding it to stack\r\n            else if (nodesState[downstreamNodeIndex] === 'white') {\r\n              nodesStack.push(downstreamNodeIndex);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\r\n    // apply common transform\r\n    this.removeAllIdentityNodes();\r\n    this.removeAllDropoutNodes();\r\n    this.fuseConvActivationNodes();\r\n    // apply initializer specific transform\r\n    if (graphInitializer) {\r\n      graphInitializer.transformGraph(this);\r\n    }\r\n\r\n    // finalize graph\r\n    this.finalizeGraph();\r\n  }\r\n\r\n  /**\r\n   * finalize the graph.\r\n   *\r\n   * this function should be called after all the transformation completed.\r\n   * this function removes all unnecessary nodes and values from the graph\r\n   */\r\n  finalizeGraph() {\r\n    let offset = 0;\r\n    // delete all nodes that are not being executed\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (!this._nodes[i].executeNode) {\r\n        // delete this node and shift all subsequent nodes up\r\n        offset++;\r\n        // delete all output values\r\n        this._nodes[i].outputs.forEach(ind => {\r\n          this._allData[ind]._from = -2;\r\n        });\r\n        this._nodes.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      if (offset > 0) {\r\n        // update the value table\r\n        this._nodes[i].inputs.forEach(value => {\r\n          const ind = this._allData[value]._to.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allData[value]._to[ind] = i;\r\n          }\r\n        });\r\n        this._nodes[i].outputs.forEach(value => {\r\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\r\n            this._allData[value]._from! = i;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    offset = 0;\r\n    // delete all values that are not being referenced\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      // if current value is neither linked to next node, nor an output value, remove it.\r\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\r\n        offset++;\r\n        this._allData.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      if (offset > 0) {\r\n        let ind = -1;\r\n        // if current value is neither an input value nor an initializer, find the node it's\r\n        // coming from and update the corresponding node output\r\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\r\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._nodes[this._allData[i].from].outputs[ind] = i;\r\n          }\r\n        } else {\r\n          // if current value is an input value, update its reference in inputIndices\r\n          ind = this._allInputIndices.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allInputIndices[ind] = i;\r\n          }\r\n        }\r\n\r\n        // find the node that the current value is linking to and update its input reference\r\n        this._allData[i].to.forEach(node => {\r\n          ind = this._nodes[node].inputs.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._nodes[node].inputs[ind] = i;\r\n          }\r\n        });\r\n        if (this._allData[i].to.length === 0) {\r\n          // if current value is a graph output, update its reference in outputIndices\r\n          ind = this._allOutputIndices.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allOutputIndices[ind] = i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\r\n   * @param nodeIndex The index of node to be deleted\r\n   */\r\n  private deleteNode(nodeIndex: number) {\r\n    const node = this._nodes[nodeIndex];\r\n    if (node.inputs.length > 1) {\r\n      throw new Error('Node deletion with multiple inputs is not supported. ');\r\n    }\r\n    if (node.outputs.length > 1) {\r\n      for (let i = 1; i < node.outputs.length; i++) {\r\n        if (this._allData[node.outputs[i]].to.length > 0) {\r\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\r\n        }\r\n      }\r\n    }\r\n\r\n    // this node wil not be executed\r\n    node.executeNode = false;\r\n    const inputValueIndex = node.inputs[0];\r\n    const outputValueIndex = node.outputs[0];\r\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\r\n\r\n    // remove this node from the to property of the input Value\r\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\r\n    // should not happen\r\n    if (delIndex === -1) {\r\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\r\n    }\r\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\r\n\r\n    // clear node indices consuming this output Value\r\n    this._allData[outputValueIndex]._to = [];\r\n\r\n    // if the output of this node is a graph output, adjust the index appropriately\r\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\r\n    if (index !== -1) {\r\n      this._allOutputIndices[index] = inputValueIndex;\r\n    }\r\n\r\n    // override the inputs for nodes consuming this node's output with the input to this node\r\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\r\n      for (const nodeIndex of nodesConsumingOutput) {\r\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\r\n        // should not happen\r\n        if (replaceIndex === -1) {\r\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\r\n        }\r\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\r\n        this._allData[inputValueIndex].to.push(nodeIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAllDropoutNodes() {\r\n    let nodeIndex = 0;\r\n    for (const node of this._nodes) {\r\n      // weed out 'Dropout' nodes so that no time is wasted in execution\r\n      if (node.opType === 'Dropout') {\r\n        // the node should have exactly 1 input and 1 or 2 outputs\r\n        if (node.inputs.length !== 1) {\r\n          throw new Error('Dropout nodes should only contain one input. ');\r\n        }\r\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\r\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\r\n        }\r\n        // the second output should not be referenced by any other node\r\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\r\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\r\n        }\r\n        this.deleteNode(nodeIndex);\r\n      }\r\n      nodeIndex++;\r\n    }\r\n  }\r\n\r\n  removeAllIdentityNodes() {\r\n    let nodeIndex = 0;\r\n    for (const node of this._nodes) {\r\n      // weed out 'Identity' nodes so that no time is wasted in execution\r\n      if (node.opType === 'Identity') {\r\n        this.deleteNode(nodeIndex);\r\n      }\r\n      nodeIndex++;\r\n    }\r\n  }\r\n\r\n  isActivation(n: Node): boolean {\r\n    switch (n.opType) {\r\n      // TODO: add other activation methods\r\n      case 'Relu':\r\n      case 'Sigmoid':\r\n      case 'Clip':\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  fuseConvActivationNodes() {\r\n    for (const node of this._nodes) {\r\n      if (node.opType === 'Conv') {\r\n        const next = this._allData[node.outputs[0]]._to;\r\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\r\n          const child = this._nodes[next[0]];\r\n          node.attributes.set('__internal_activation', 'string', (child.opType));\r\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\r\n          if (child.opType === 'Clip') {\r\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\r\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\r\n          }\r\n          this.deleteNode(next[0]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Env} from 'onnxruntime-common';\r\n\r\nimport {WebGLContext} from './backends/webgl/webgl-context';\r\n\r\nexport declare namespace Logger {\r\n  export interface SeverityTypeMap {\r\n    verbose: 'v';\r\n    info: 'i';\r\n    warning: 'w';\r\n    error: 'e';\r\n    fatal: 'f';\r\n  }\r\n\r\n  export type Severity = keyof SeverityTypeMap;\r\n\r\n  export type Provider = 'none'|'console';\r\n\r\n  /**\r\n   * Logging config that used to control the behavior of logger\r\n   */\r\n  export interface Config {\r\n    /**\r\n     * Specify the logging provider. 'console' by default\r\n     */\r\n    provider?: Provider;\r\n    /**\r\n     * Specify the minimal logger serverity. 'warning' by default\r\n     */\r\n    minimalSeverity?: Logger.Severity;\r\n    /**\r\n     * Whether to output date time in log. true by default\r\n     */\r\n    logDateTime?: boolean;\r\n    /**\r\n     * Whether to output source information (Not yet supported). false by default\r\n     */\r\n    logSourceLocation?: boolean;\r\n  }\r\n\r\n  export interface CategorizedLogger {\r\n    verbose(content: string): void;\r\n    info(content: string): void;\r\n    warning(content: string): void;\r\n    error(content: string): void;\r\n    fatal(content: string): void;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport interface Logger {\r\n  (category: string): Logger.CategorizedLogger;\r\n\r\n  verbose(content: string): void;\r\n  verbose(category: string, content: string): void;\r\n  info(content: string): void;\r\n  info(category: string, content: string): void;\r\n  warning(content: string): void;\r\n  warning(category: string, content: string): void;\r\n  error(content: string): void;\r\n  error(category: string, content: string): void;\r\n  fatal(content: string): void;\r\n  fatal(category: string, content: string): void;\r\n\r\n  /**\r\n   * Reset the logger configuration.\r\n   * @param config specify an optional default config\r\n   */\r\n  reset(config?: Logger.Config): void;\r\n  /**\r\n   * Set the logger's behavior on the given category\r\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\r\n   * '' is specified, the default behavior will be updated.\r\n   * @param config the config object to indicate the logger's behavior\r\n   */\r\n  set(category: string, config: Logger.Config): void;\r\n\r\n  /**\r\n   * Set the logger's behavior from ort-common env\r\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\r\n   */\r\n  setWithEnv(env: Env): void;\r\n}\r\n\r\ninterface LoggerProvider {\r\n  log(severity: Logger.Severity, content: string, category?: string): void;\r\n}\r\nclass NoOpLoggerProvider implements LoggerProvider {\r\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\r\n    // do nothing\r\n  }\r\n}\r\nclass ConsoleLoggerProvider implements LoggerProvider {\r\n  log(severity: Logger.Severity, content: string, category?: string) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\r\n  }\r\n\r\n  private color(severity: Logger.Severity) {\r\n    switch (severity) {\r\n      case 'verbose':\r\n        return '\\x1b[34;40mv\\x1b[0m';\r\n      case 'info':\r\n        return '\\x1b[32mi\\x1b[0m';\r\n      case 'warning':\r\n        return '\\x1b[30;43mw\\x1b[0m';\r\n      case 'error':\r\n        return '\\x1b[31;40me\\x1b[0m';\r\n      case 'fatal':\r\n        return '\\x1b[101mf\\x1b[0m';\r\n      default:\r\n        throw new Error(`unsupported severity: ${severity}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst SEVERITY_VALUE = {\r\n  verbose: 1000,\r\n  info: 2000,\r\n  warning: 4000,\r\n  error: 5000,\r\n  fatal: 6000\r\n};\r\n\r\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\r\n  ['none']: new NoOpLoggerProvider(),\r\n  ['console']: new ConsoleLoggerProvider()\r\n};\r\nconst LOGGER_DEFAULT_CONFIG = {\r\n  provider: 'console',\r\n  minimalSeverity: 'warning',\r\n  logDateTime: true,\r\n  logSourceLocation: false\r\n};\r\nlet LOGGER_CONFIG_MAP:\r\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\r\n\r\nfunction log(category: string): Logger.CategorizedLogger;\r\nfunction log(severity: Logger.Severity, content: string): void;\r\nfunction log(severity: Logger.Severity, category: string, content: string): void;\r\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\r\nfunction log(\r\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\r\n  if (arg1 === undefined) {\r\n    // log(category: string): Logger.CategorizedLogger;\r\n    return createCategorizedLogger(arg0);\r\n  } else if (arg2 === undefined) {\r\n    // log(severity, content);\r\n    logInternal(arg0 as Logger.Severity, arg1, 1);\r\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\r\n    // log(severity, content, stack)\r\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\r\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\r\n    // log(severity, category, content)\r\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\r\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\r\n    // log(severity, category, content, stack)\r\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\r\n  } else {\r\n    throw new TypeError('input is valid');\r\n  }\r\n}\r\n\r\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\r\n  return {\r\n    verbose: log.verbose.bind(null, category),\r\n    info: log.info.bind(null, category),\r\n    warning: log.warning.bind(null, category),\r\n    error: log.error.bind(null, category),\r\n    fatal: log.fatal.bind(null, category)\r\n  };\r\n}\r\n\r\n// NOTE: argument 'category' is put the last parameter beacause typescript\r\n// doesn't allow optional argument put in front of required argument. This\r\n// order is different from a usual logging API.\r\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\r\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\r\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\r\n    return;\r\n  }\r\n\r\n  if (config.logDateTime) {\r\n    content = `${new Date().toISOString()}|${content}`;\r\n  }\r\n\r\n  if (config.logSourceLocation) {\r\n    // TODO: calculate source location from 'stack'\r\n  }\r\n\r\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nnamespace log {\r\n  export function verbose(content: string): void;\r\n  export function verbose(category: string, content: string): void;\r\n  export function verbose(arg0: string, arg1?: string) {\r\n    log('verbose', arg0, arg1);\r\n  }\r\n  export function info(content: string): void;\r\n  export function info(category: string, content: string): void;\r\n  export function info(arg0: string, arg1?: string) {\r\n    log('info', arg0, arg1);\r\n  }\r\n  export function warning(content: string): void;\r\n  export function warning(category: string, content: string): void;\r\n  export function warning(arg0: string, arg1?: string) {\r\n    log('warning', arg0, arg1);\r\n  }\r\n  export function error(content: string): void;\r\n  export function error(category: string, content: string): void;\r\n  export function error(arg0: string, arg1?: string) {\r\n    log('error', arg0, arg1);\r\n  }\r\n  export function fatal(content: string): void;\r\n  export function fatal(category: string, content: string): void;\r\n  export function fatal(arg0: string, arg1?: string) {\r\n    log('fatal', arg0, arg1);\r\n  }\r\n\r\n  export function reset(config?: Logger.Config): void {\r\n    LOGGER_CONFIG_MAP = {};\r\n    set('', config || {});\r\n  }\r\n  export function set(category: string, config: Logger.Config): void {\r\n    if (category === '*') {\r\n      reset(config);\r\n    } else {\r\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\r\n      LOGGER_CONFIG_MAP[category] = {\r\n        provider: config.provider || previousConfig.provider,\r\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\r\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\r\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\r\n                                                                      config.logSourceLocation\r\n      };\r\n    }\r\n\r\n    // TODO: we want to support wildcard or regex?\r\n  }\r\n\r\n  export function setWithEnv(env: Env): void {\r\n    const config: Logger.Config = {};\r\n    if (env.logLevel) {\r\n      config.minimalSeverity = env.logLevel as Logger.Severity;\r\n    }\r\n    set('', config);\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\r\nexport const Logger: Logger = log;\r\n\r\nexport declare namespace Profiler {\r\n  export interface Config {\r\n    maxNumberEvents?: number;\r\n    flushBatchSize?: number;\r\n    flushIntervalInMilliseconds?: number;\r\n  }\r\n\r\n  export type EventCategory = 'session'|'node'|'op'|'backend';\r\n\r\n  export interface Event {\r\n    end(): void|Promise<void>;\r\n  }\r\n}\r\n// TODO\r\n// class WebGLEvent implements Profiler.Event {}\r\n\r\nclass Event implements Profiler.Event {\r\n  constructor(\r\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\r\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\r\n\r\n  end() {\r\n    return this.endCallback(this);\r\n  }\r\n\r\n  async checkTimer(): Promise<number> {\r\n    if (this.ctx === undefined || this.timer === undefined) {\r\n      throw new Error('No webgl timer found');\r\n    } else {\r\n      this.ctx.endTimer();\r\n      return this.ctx.waitForQueryAndGetTime(this.timer);\r\n    }\r\n  }\r\n}\r\n\r\nclass EventRecord {\r\n  constructor(\r\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\r\n}\r\n\r\nexport class Profiler {\r\n  static create(config?: Profiler.Config): Profiler {\r\n    if (config === undefined) {\r\n      return new this();\r\n    }\r\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\r\n  }\r\n\r\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\r\n    this._started = false;\r\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\r\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\r\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\r\n  }\r\n\r\n  // start profiling\r\n  start() {\r\n    this._started = true;\r\n    this._timingEvents = [];\r\n    this._flushTime = now();\r\n    this._flushPointer = 0;\r\n  }\r\n\r\n  // stop profiling\r\n  stop() {\r\n    this._started = false;\r\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\r\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\r\n    }\r\n  }\r\n\r\n  // create an event scope for the specific function\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\r\n\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\r\n      |Promise<T> {\r\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\r\n    let isPromise = false;\r\n\r\n    const res = func();\r\n\r\n    // we consider a then-able object is a promise\r\n    if (res && typeof (res as Promise<T>).then === 'function') {\r\n      isPromise = true;\r\n      return new Promise<T>((resolve, reject) => {\r\n        (res as Promise<T>)\r\n            .then(\r\n                async value => {  // fulfilled\r\n                  if (event) {\r\n                    await event.end();\r\n                  }\r\n                  resolve(value);\r\n                },\r\n                async reason => {  // rejected\r\n                  if (event) {\r\n                    await event.end();\r\n                  }\r\n                  reject(reason);\r\n                });\r\n      });\r\n    }\r\n    if (!isPromise && event) {\r\n      const eventRes = event.end();\r\n      if (eventRes && typeof eventRes.then === 'function') {\r\n        return new Promise<T>((resolve, reject) => {\r\n          (eventRes).then(\r\n              () => {  // fulfilled\r\n                resolve(res);\r\n              },\r\n              (reason) => {  // rejected\r\n                reject(reason);\r\n              });\r\n        });\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // begin an event\r\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\r\n    if (!this._started) {\r\n      throw new Error('profiler is not started yet');\r\n    }\r\n    if (ctx === undefined) {\r\n      const startTime = now();\r\n      this.flush(startTime);\r\n      return new Event(category, name, startTime, e => this.endSync(e));\r\n    } else {\r\n      const timer: WebGLQuery = ctx.beginTimer();\r\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\r\n    }\r\n  }\r\n\r\n  // end the specific event\r\n  private async end(event: Event): Promise<void> {\r\n    const endTime: number = await event.checkTimer();\r\n    if (this._timingEvents.length < this._maxNumberEvents) {\r\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\r\n      this.flush(endTime);\r\n    }\r\n  }\r\n\r\n  private endSync(event: Event): void {\r\n    const endTime: number = now();\r\n    if (this._timingEvents.length < this._maxNumberEvents) {\r\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\r\n      this.flush(endTime);\r\n    }\r\n  }\r\n\r\n  private logOneEvent(event: EventRecord) {\r\n    Logger.verbose(\r\n        `Profiler.${event.category}`,\r\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\r\n  }\r\n\r\n  private flush(currentTime: number) {\r\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\r\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\r\n      // should flush when either batch size accumlated or interval elepsed\r\n\r\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\r\n           this._flushPointer < this._timingEvents.length;\r\n           this._flushPointer++) {\r\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\r\n      }\r\n\r\n      this._flushTime = now();\r\n    }\r\n  }\r\n\r\n  get started() {\r\n    return this._started;\r\n  }\r\n  private _started = false;\r\n  private _timingEvents: EventRecord[];\r\n\r\n  private readonly _maxNumberEvents: number;\r\n\r\n  private readonly _flushBatchSize: number;\r\n  private readonly _flushIntervalInMilliseconds: number;\r\n\r\n  private _flushTime: number;\r\n  private _flushPointer = 0;\r\n}\r\n\r\n/**\r\n * returns a number to represent the current timestamp in a resolution as high as possible.\r\n */\r\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Graph} from './graph';\r\nimport {OpSet} from './opset';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\nimport {LongUtil} from './util';\r\n\r\nexport class Model {\r\n  // empty model\r\n  constructor() {}\r\n\r\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\r\n    if (!isOrtFormat) {\r\n      // isOrtFormat === false || isOrtFormat === undefined\r\n      try {\r\n        this.loadFromOnnxFormat(buf, graphInitializer);\r\n        return;\r\n      } catch (e) {\r\n        if (isOrtFormat !== undefined) {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.loadFromOrtFormat(buf, graphInitializer);\r\n  }\r\n\r\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\r\n    const modelProto = onnx.ModelProto.decode(buf);\r\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\r\n    if (irVersion < 3) {\r\n      throw new Error('only support ONNX model with IR_VERSION>=3');\r\n    }\r\n\r\n    this._opsets =\r\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\r\n\r\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\r\n  }\r\n\r\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\r\n    const fb = new flatbuffers.ByteBuffer(buf);\r\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\r\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\r\n    if (irVersion < 3) {\r\n      throw new Error('only support ONNX model with IR_VERSION>=3');\r\n    }\r\n    this._opsets = [];\r\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\r\n      const opsetId = ortModel.opsetImport(i)!;\r\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\r\n    }\r\n\r\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\r\n  }\r\n\r\n  private _graph: Graph;\r\n  get graph(): Graph {\r\n    return this._graph;\r\n  }\r\n\r\n  private _opsets: OpSet[];\r\n  get opsets(): readonly OpSet[] {\r\n    return this._opsets;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceHandler} from './backend';\r\nimport {Graph} from './graph';\r\nimport {Tensor} from './tensor';\r\n\r\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\r\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\r\n\r\nexport interface Operator {\r\n  readonly impl: OperatorImplementation<unknown>;\r\n  readonly context: Graph.Node|unknown;\r\n}\r\n\r\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\r\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\r\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\r\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from './graph';\r\nimport {OperatorImplementation, OperatorInitialization} from './operators';\r\n\r\nexport interface OpSet {\r\n  domain: string;\r\n  version: number;\r\n}\r\n\r\nexport declare namespace OpSet {\r\n  /**\r\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\r\n   */\r\n  type Domain = ''|'ai.onnx.ml';\r\n\r\n  /**\r\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\r\n   * operatorInitialization (optional)\r\n   */\r\n  type ResolveRule = [\r\n    string, Domain, string, OperatorImplementation<Graph.Node>\r\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\r\n}\r\n\r\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\r\n  for (const rule of rules) {\r\n    const opType = rule[0];\r\n    const domain = rule[1];\r\n    const versionSelector = rule[2];\r\n    const opImpl = rule[3];\r\n    const opInit = rule[4];\r\n\r\n    if (node.opType === opType) {  // operator type matches\r\n      for (const opset of opsets) {\r\n        // opset '' and 'ai.onnx' are considered the same.\r\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\r\n          if (matchSelector(opset.version, versionSelector)) {\r\n            return {opImpl, opInit};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\r\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\r\n}\r\n\r\nfunction matchSelector(version: number, selector: string): boolean {\r\n  if (selector.endsWith('+')) {\r\n    // minimum version match ('7+' expects version>=7)\r\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\r\n    return !isNaN(rangeStart) && rangeStart <= version;\r\n  } else if (selector.split('-').length === 2) {\r\n    // range match ('6-8' expects 6<=version<=8)\r\n    const pair = selector.split('-');\r\n    const rangeStart = Number.parseInt(pair[0], 10);\r\n    const rangeEnd = Number.parseInt(pair[1], 10);\r\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\r\n  } else {\r\n    // exact match ('7' expects version===7)\r\n    return Number.parseInt(selector, 10) === version;\r\n  }\r\n}\r\n","// automatically generated by the FlatBuffers compiler, do not modify\r\n/* eslint-disable */\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum AttributeType {\r\n    UNDEFINED = 0,\r\n    FLOAT = 1,\r\n    INT = 2,\r\n    STRING = 3,\r\n    TENSOR = 4,\r\n    GRAPH = 5,\r\n    FLOATS = 6,\r\n    INTS = 7,\r\n    STRINGS = 8,\r\n    TENSORS = 9,\r\n    GRAPHS = 10,\r\n    SPARSE_TENSOR = 11,\r\n    SPARSE_TENSORS = 12\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum TensorDataType {\r\n    UNDEFINED = 0,\r\n    FLOAT = 1,\r\n    UINT8 = 2,\r\n    INT8 = 3,\r\n    UINT16 = 4,\r\n    INT16 = 5,\r\n    INT32 = 6,\r\n    INT64 = 7,\r\n    STRING = 8,\r\n    BOOL = 9,\r\n    FLOAT16 = 10,\r\n    DOUBLE = 11,\r\n    UINT32 = 12,\r\n    UINT64 = 13,\r\n    COMPLEX64 = 14,\r\n    COMPLEX128 = 15,\r\n    BFLOAT16 = 16\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum NodeType {Primitive = 0, Fused = 1}\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\r\n}\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Shape {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Shape\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Shape= obj\r\n     * @returns Shape\r\n     */\r\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\r\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Shape= obj\r\n     * @returns Shape\r\n     */\r\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Dimension= obj\r\n     * @returns onnxruntime.experimental.fbs.Dimension\r\n     */\r\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startShape(builder: flatbuffers.Builder) {\r\n      builder.startObject(1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimOffset\r\n     */\r\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, dimOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Shape.startShape(builder);\r\n      Shape.addDim(builder, dimOffset);\r\n      return Shape.endShape(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Dimension {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Dimension\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Dimension= obj\r\n     * @returns Dimension\r\n     */\r\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\r\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Dimension= obj\r\n     * @returns Dimension\r\n     */\r\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\r\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\r\n     */\r\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    denotation(): string|null;\r\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startDimension(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueOffset\r\n     */\r\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, valueOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset denotationOffset\r\n     */\r\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, denotationOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createDimension(\r\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\r\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Dimension.startDimension(builder);\r\n      Dimension.addValue(builder, valueOffset);\r\n      Dimension.addDenotation(builder, denotationOffset);\r\n      return Dimension.endDimension(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class DimensionValue {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns DimensionValue\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param DimensionValue= obj\r\n     * @returns DimensionValue\r\n     */\r\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\r\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param DimensionValue= obj\r\n     * @returns DimensionValue\r\n     */\r\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\r\n     */\r\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dimValue(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    dimParam(): string|null;\r\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startDimensionValue(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\r\n     */\r\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\r\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long dimValue\r\n     */\r\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\r\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimParamOffset\r\n     */\r\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimParamOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createDimensionValue(\r\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\r\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      DimensionValue.startDimensionValue(builder);\r\n      DimensionValue.addDimType(builder, dimType);\r\n      DimensionValue.addDimValue(builder, dimValue);\r\n      DimensionValue.addDimParam(builder, dimParamOffset);\r\n      return DimensionValue.endDimensionValue(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class TensorTypeAndShape {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TensorTypeAndShape= obj\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\r\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TensorTypeAndShape= obj\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\r\n        TensorTypeAndShape {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Shape= obj\r\n     * @returns onnxruntime.experimental.fbs.Shape|null\r\n     */\r\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\r\n     */\r\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset shapeOffset\r\n     */\r\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, shapeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTensorTypeAndShape(\r\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\r\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\r\n      TensorTypeAndShape.addElemType(builder, elemType);\r\n      TensorTypeAndShape.addShape(builder, shapeOffset);\r\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class MapType {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns MapType\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param MapType= obj\r\n     * @returns MapType\r\n     */\r\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\r\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param MapType= obj\r\n     * @returns MapType\r\n     */\r\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startMapType(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\r\n     */\r\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueTypeOffset\r\n     */\r\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, valueTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createMapType(\r\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\r\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      MapType.startMapType(builder);\r\n      MapType.addKeyType(builder, keyType);\r\n      MapType.addValueType(builder, valueTypeOffset);\r\n      return MapType.endMapType(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SequenceType {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SequenceType\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SequenceType= obj\r\n     * @returns SequenceType\r\n     */\r\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\r\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SequenceType= obj\r\n     * @returns SequenceType\r\n     */\r\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSequenceType(builder: flatbuffers.Builder) {\r\n      builder.startObject(1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset elemTypeOffset\r\n     */\r\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, elemTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SequenceType.startSequenceType(builder);\r\n      SequenceType.addElemType(builder, elemTypeOffset);\r\n      return SequenceType.endSequenceType(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class EdgeEnd {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns EdgeEnd\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndex(): number {\r\n      return this.bb!.readUint32(this.bb_pos);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    srcArgIndex(): number {\r\n      return this.bb!.readInt32(this.bb_pos + 4);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dstArgIndex(): number {\r\n      return this.bb!.readInt32(this.bb_pos + 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number node_index\r\n     * @param number src_arg_index\r\n     * @param number dst_arg_index\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createEdgeEnd(\r\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\r\n        dst_arg_index: number): flatbuffers.Offset {\r\n      builder.prep(4, 12);\r\n      builder.writeInt32(dst_arg_index);\r\n      builder.writeInt32(src_arg_index);\r\n      builder.writeInt32(node_index);\r\n      return builder.offset();\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class NodeEdge {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns NodeEdge\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param NodeEdge= obj\r\n     * @returns NodeEdge\r\n     */\r\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\r\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param NodeEdge= obj\r\n     * @returns NodeEdge\r\n     */\r\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndex(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\r\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\r\n     */\r\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\r\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\r\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\r\n     */\r\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\r\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startNodeEdge(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number nodeIndex\r\n     */\r\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\r\n      builder.addFieldInt32(0, nodeIndex, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputEdgesOffset\r\n     */\r\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(12, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputEdgesOffset\r\n     */\r\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(12, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createNodeEdge(\r\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\r\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      NodeEdge.startNodeEdge(builder);\r\n      NodeEdge.addNodeIndex(builder, nodeIndex);\r\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\r\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\r\n      return NodeEdge.endNodeEdge(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Node {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Node\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Node= obj\r\n     * @returns Node\r\n     */\r\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\r\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Node= obj\r\n     * @returns Node\r\n     */\r\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    sinceVersion(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    index(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    opType(): string|null;\r\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    opType(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.NodeType\r\n     */\r\n    type(): onnxruntime.experimental.fbs.NodeType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    executionProviderType(): string|null;\r\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    inputs(index: number): string;\r\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    outputs(index: number): string;\r\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Attribute= obj\r\n     * @returns onnxruntime.experimental.fbs.Attribute\r\n     */\r\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\r\n        |null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    attributesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    inputArgCounts(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputArgCountsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Int32Array\r\n     */\r\n    inputArgCountsArray(): Int32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ?\r\n          new Int32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    implicitInputs(index: number): string;\r\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    implicitInputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startNode(builder: flatbuffers.Builder) {\r\n      builder.startObject(13);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number sinceVersion\r\n     */\r\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\r\n      builder.addFieldInt32(3, sinceVersion, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number index\r\n     */\r\n    static addIndex(builder: flatbuffers.Builder, index: number) {\r\n      builder.addFieldInt32(4, index, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset opTypeOffset\r\n     */\r\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, opTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.NodeType type\r\n     */\r\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\r\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset executionProviderTypeOffset\r\n     */\r\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputsOffset\r\n     */\r\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, inputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputsOffset\r\n     */\r\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(9, outputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset attributesOffset\r\n     */\r\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(10, attributesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputArgCountsOffset\r\n     */\r\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset implicitInputsOffset\r\n     */\r\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createNode(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\r\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\r\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\r\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Node.startNode(builder);\r\n      Node.addName(builder, nameOffset);\r\n      Node.addDocString(builder, docStringOffset);\r\n      Node.addDomain(builder, domainOffset);\r\n      Node.addSinceVersion(builder, sinceVersion);\r\n      Node.addIndex(builder, index);\r\n      Node.addOpType(builder, opTypeOffset);\r\n      Node.addType(builder, type);\r\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\r\n      Node.addInputs(builder, inputsOffset);\r\n      Node.addOutputs(builder, outputsOffset);\r\n      Node.addAttributes(builder, attributesOffset);\r\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\r\n      Node.addImplicitInputs(builder, implicitInputsOffset);\r\n      return Node.endNode(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class ValueInfo {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns ValueInfo\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param ValueInfo= obj\r\n     * @returns ValueInfo\r\n     */\r\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\r\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param ValueInfo= obj\r\n     * @returns ValueInfo\r\n     */\r\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startValueInfo(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset typeOffset\r\n     */\r\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, typeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createValueInfo(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      ValueInfo.startValueInfo(builder);\r\n      ValueInfo.addName(builder, nameOffset);\r\n      ValueInfo.addDocString(builder, docStringOffset);\r\n      ValueInfo.addType(builder, typeOffset);\r\n      return ValueInfo.endValueInfo(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class TypeInfo {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns TypeInfo\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TypeInfo= obj\r\n     * @returns TypeInfo\r\n     */\r\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\r\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TypeInfo= obj\r\n     * @returns TypeInfo\r\n     */\r\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    denotation(): string|null;\r\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\r\n     */\r\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Table obj\r\n     * @returns ?flatbuffers.Table\r\n     */\r\n    value<T extends flatbuffers.Table>(obj: T): T|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTypeInfo(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset denotationOffset\r\n     */\r\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, denotationOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\r\n     */\r\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\r\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueOffset\r\n     */\r\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, valueOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTypeInfo(\r\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\r\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      TypeInfo.startTypeInfo(builder);\r\n      TypeInfo.addDenotation(builder, denotationOffset);\r\n      TypeInfo.addValueType(builder, valueType);\r\n      TypeInfo.addValue(builder, valueOffset);\r\n      return TypeInfo.endTypeInfo(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class OperatorSetId {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns OperatorSetId\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param OperatorSetId= obj\r\n     * @returns OperatorSetId\r\n     */\r\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\r\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param OperatorSetId= obj\r\n     * @returns OperatorSetId\r\n     */\r\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    version(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startOperatorSetId(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long version\r\n     */\r\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\r\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createOperatorSetId(\r\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\r\n      OperatorSetId.startOperatorSetId(builder);\r\n      OperatorSetId.addDomain(builder, domainOffset);\r\n      OperatorSetId.addVersion(builder, version);\r\n      return OperatorSetId.endOperatorSetId(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Tensor {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Tensor\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Tensor= obj\r\n     * @returns Tensor\r\n     */\r\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\r\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Tensor= obj\r\n     * @returns Tensor\r\n     */\r\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dims(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    rawData(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    rawDataLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Uint8Array\r\n     */\r\n    rawDataArray(): Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ?\r\n          new Uint8Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    stringData(index: number): string;\r\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    stringDataLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTensor(builder: flatbuffers.Builder) {\r\n      builder.startObject(6);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimsOffset\r\n     */\r\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\r\n     */\r\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset rawDataOffset\r\n     */\r\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, rawDataOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(1, data.length, 1);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt8(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(1, numElems, 1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset stringDataOffset\r\n     */\r\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, stringDataOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTensor(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\r\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Tensor.startTensor(builder);\r\n      Tensor.addName(builder, nameOffset);\r\n      Tensor.addDocString(builder, docStringOffset);\r\n      Tensor.addDims(builder, dimsOffset);\r\n      Tensor.addDataType(builder, dataType);\r\n      Tensor.addRawData(builder, rawDataOffset);\r\n      Tensor.addStringData(builder, stringDataOffset);\r\n      return Tensor.endTensor(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SparseTensor {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SparseTensor\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SparseTensor= obj\r\n     * @returns SparseTensor\r\n     */\r\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\r\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SparseTensor= obj\r\n     * @returns SparseTensor\r\n     */\r\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dims(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSparseTensor(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valuesOffset\r\n     */\r\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, valuesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset indicesOffset\r\n     */\r\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, indicesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimsOffset\r\n     */\r\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSparseTensor(\r\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\r\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SparseTensor.startSparseTensor(builder);\r\n      SparseTensor.addValues(builder, valuesOffset);\r\n      SparseTensor.addIndices(builder, indicesOffset);\r\n      SparseTensor.addDims(builder, dimsOffset);\r\n      return SparseTensor.endSparseTensor(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Attribute {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Attribute\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Attribute= obj\r\n     * @returns Attribute\r\n     */\r\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\r\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Attribute= obj\r\n     * @returns Attribute\r\n     */\r\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.AttributeType\r\n     */\r\n    type(): onnxruntime.experimental.fbs.AttributeType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    f(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    i(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    s(): string|null;\r\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    s(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph|null\r\n     */\r\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    floats(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    floatsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Float32Array\r\n     */\r\n    floatsArray(): Float32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ?\r\n          new Float32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    ints(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    intsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    strings(index: number): string;\r\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    stringsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor\r\n     */\r\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    tensorsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph\r\n     */\r\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    graphsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startAttribute(builder: flatbuffers.Builder) {\r\n      builder.startObject(13);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.AttributeType type\r\n     */\r\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\r\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number f\r\n     */\r\n    static addF(builder: flatbuffers.Builder, f: number) {\r\n      builder.addFieldFloat32(3, f, 0.0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long i\r\n     */\r\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\r\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sOffset\r\n     */\r\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, sOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset tOffset\r\n     */\r\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, tOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset gOffset\r\n     */\r\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, gOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset floatsOffset\r\n     */\r\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, floatsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addFloat32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset intsOffset\r\n     */\r\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(9, intsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset stringsOffset\r\n     */\r\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(10, stringsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset tensorsOffset\r\n     */\r\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(11, tensorsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphsOffset\r\n     */\r\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(12, graphsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createAttribute(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\r\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\r\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\r\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Attribute.startAttribute(builder);\r\n      Attribute.addName(builder, nameOffset);\r\n      Attribute.addDocString(builder, docStringOffset);\r\n      Attribute.addType(builder, type);\r\n      Attribute.addF(builder, f);\r\n      Attribute.addI(builder, i);\r\n      Attribute.addS(builder, sOffset);\r\n      Attribute.addT(builder, tOffset);\r\n      Attribute.addG(builder, gOffset);\r\n      Attribute.addFloats(builder, floatsOffset);\r\n      Attribute.addInts(builder, intsOffset);\r\n      Attribute.addStrings(builder, stringsOffset);\r\n      Attribute.addTensors(builder, tensorsOffset);\r\n      Attribute.addGraphs(builder, graphsOffset);\r\n      return Attribute.endAttribute(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Graph {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Graph\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Graph= obj\r\n     * @returns Graph\r\n     */\r\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\r\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Graph= obj\r\n     * @returns Graph\r\n     */\r\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor\r\n     */\r\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    initializersLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.ValueInfo\r\n     */\r\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeArgsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Node= obj\r\n     * @returns onnxruntime.experimental.fbs.Node\r\n     */\r\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    maxNodeIndex(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\r\n     * @returns onnxruntime.experimental.fbs.NodeEdge\r\n     */\r\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    inputs(index: number): string;\r\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    outputs(index: number): string;\r\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\r\n     * @returns onnxruntime.experimental.fbs.SparseTensor\r\n     */\r\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\r\n        onnxruntime.experimental.fbs.SparseTensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    sparseInitializersLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startGraph(builder: flatbuffers.Builder) {\r\n      builder.startObject(8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset initializersOffset\r\n     */\r\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, initializersOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeArgsOffset\r\n     */\r\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodesOffset\r\n     */\r\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, nodesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number maxNodeIndex\r\n     */\r\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\r\n      builder.addFieldInt32(3, maxNodeIndex, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeEdgesOffset\r\n     */\r\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputsOffset\r\n     */\r\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, inputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputsOffset\r\n     */\r\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, outputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sparseInitializersOffset\r\n     */\r\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\r\n        flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createGraph(\r\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\r\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\r\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\r\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Graph.startGraph(builder);\r\n      Graph.addInitializers(builder, initializersOffset);\r\n      Graph.addNodeArgs(builder, nodeArgsOffset);\r\n      Graph.addNodes(builder, nodesOffset);\r\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\r\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\r\n      Graph.addInputs(builder, inputsOffset);\r\n      Graph.addOutputs(builder, outputsOffset);\r\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\r\n      return Graph.endGraph(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Model {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Model\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Model= obj\r\n     * @returns Model\r\n     */\r\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\r\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Model= obj\r\n     * @returns Model\r\n     */\r\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    irVersion(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\r\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\r\n     */\r\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\r\n        onnxruntime.experimental.fbs.OperatorSetId|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    opsetImportLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    producerName(): string|null;\r\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    producerVersion(): string|null;\r\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    modelVersion(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph|null\r\n     */\r\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    graphDocString(): string|null;\r\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startModel(builder: flatbuffers.Builder) {\r\n      builder.startObject(9);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long irVersion\r\n     */\r\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\r\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset opsetImportOffset\r\n     */\r\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, opsetImportOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset producerNameOffset\r\n     */\r\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, producerNameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset producerVersionOffset\r\n     */\r\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(3, producerVersionOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long modelVersion\r\n     */\r\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\r\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphOffset\r\n     */\r\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, graphOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphDocStringOffset\r\n     */\r\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createModel(\r\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\r\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\r\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\r\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Model.startModel(builder);\r\n      Model.addIrVersion(builder, irVersion);\r\n      Model.addOpsetImport(builder, opsetImportOffset);\r\n      Model.addProducerName(builder, producerNameOffset);\r\n      Model.addProducerVersion(builder, producerVersionOffset);\r\n      Model.addDomain(builder, domainOffset);\r\n      Model.addModelVersion(builder, modelVersion);\r\n      Model.addDocString(builder, docStringOffset);\r\n      Model.addGraph(builder, graphOffset);\r\n      Model.addGraphDocString(builder, graphDocStringOffset);\r\n      return Model.endModel(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class KernelCreateInfos {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns KernelCreateInfos\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param KernelCreateInfos= obj\r\n     * @returns KernelCreateInfos\r\n     */\r\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\r\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param KernelCreateInfos= obj\r\n     * @returns KernelCreateInfos\r\n     */\r\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\r\n        KernelCreateInfos {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    nodeIndices(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndicesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Uint32Array\r\n     */\r\n    nodeIndicesArray(): Uint32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ?\r\n          new Uint32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    kernelDefHashes(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    kernelDefHashesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeIndicesOffset\r\n     */\r\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset kernelDefHashesOffset\r\n     */\r\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createKernelCreateInfos(\r\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\r\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      KernelCreateInfos.startKernelCreateInfos(builder);\r\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\r\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\r\n      return KernelCreateInfos.endKernelCreateInfos(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SubGraphSessionState {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SubGraphSessionState\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SubGraphSessionState= obj\r\n     * @returns SubGraphSessionState\r\n     */\r\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\r\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SubGraphSessionState= obj\r\n     * @returns SubGraphSessionState\r\n     */\r\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\r\n        SubGraphSessionState {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    graphId(): string|null;\r\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.SessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SessionState|null\r\n     */\r\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphIdOffset\r\n     */\r\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, graphIdOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sessionStateOffset\r\n     */\r\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, sessionStateOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      builder.requiredField(offset, 4);  // graph_id\r\n      return offset;\r\n    }\r\n\r\n    static createSubGraphSessionState(\r\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\r\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SubGraphSessionState.startSubGraphSessionState(builder);\r\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\r\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\r\n      return SubGraphSessionState.endSubGraphSessionState(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SessionState {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SessionState\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SessionState= obj\r\n     * @returns SessionState\r\n     */\r\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\r\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SessionState= obj\r\n     * @returns SessionState\r\n     */\r\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\r\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\r\n     */\r\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\r\n     */\r\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\r\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    subGraphSessionStatesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSessionState(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset kernelsOffset\r\n     */\r\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, kernelsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\r\n     */\r\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\r\n        flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSessionState(\r\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\r\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SessionState.startSessionState(builder);\r\n      SessionState.addKernels(builder, kernelsOffset);\r\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\r\n      return SessionState.endSessionState(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class InferenceSession {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns InferenceSession\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param InferenceSession= obj\r\n     * @returns InferenceSession\r\n     */\r\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\r\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param InferenceSession= obj\r\n     * @returns InferenceSession\r\n     */\r\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns boolean\r\n     */\r\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\r\n      return bb.__has_identifier('ORTM');\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    ortVersion(): string|null;\r\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Model= obj\r\n     * @returns onnxruntime.experimental.fbs.Model|null\r\n     */\r\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.SessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SessionState|null\r\n     */\r\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startInferenceSession(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset ortVersionOffset\r\n     */\r\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, ortVersionOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset modelOffset\r\n     */\r\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, modelOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sessionStateOffset\r\n     */\r\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, sessionStateOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset offset\r\n     */\r\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\r\n      builder.finish(offset, 'ORTM');\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset offset\r\n     */\r\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\r\n      builder.finish(offset, 'ORTM', true);\r\n    }\r\n\r\n    static createInferenceSession(\r\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\r\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      InferenceSession.startInferenceSession(builder);\r\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\r\n      InferenceSession.addModel(builder, modelOffset);\r\n      InferenceSession.addSessionState(builder, sessionStateOffset);\r\n      return InferenceSession.endInferenceSession(builder);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\r\nimport {Session} from './session';\r\nimport {Tensor as OnnxjsTensor} from './tensor';\r\n\r\nexport class OnnxjsSessionHandler implements SessionHandler {\r\n  constructor(private session: Session) {\r\n    this.inputNames = this.session.inputNames;\r\n    this.outputNames = this.session.outputNames;\r\n  }\r\n\r\n  async dispose(): Promise<void> {}\r\n  inputNames: readonly string[];\r\n  outputNames: readonly string[];\r\n  async run(\r\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\r\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\r\n    const inputMap = new Map<string, OnnxjsTensor>();\r\n    for (const name in feeds) {\r\n      if (Object.hasOwnProperty.call(feeds, name)) {\r\n        const feed = feeds[name];\r\n        inputMap.set(\r\n            name,\r\n            new OnnxjsTensor(\r\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\r\n                feed.data as OnnxjsTensor.NumberType));\r\n      }\r\n    }\r\n    const outputMap = await this.session.run(inputMap);\r\n    const output: SessionHandler.ReturnType = {};\r\n    outputMap.forEach((tensor, name) => {\r\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\r\n    });\r\n    return output;\r\n  }\r\n  startProfiling(): void {\r\n    this.session.startProfiling();\r\n  }\r\n  endProfiling(): void {\r\n    this.session.endProfiling();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {readFile} from 'fs';\r\nimport {promisify} from 'util';\r\n\r\nimport {resolveBackend, SessionHandlerType} from './backend';\r\nimport {ExecutionPlan} from './execution-plan';\r\nimport {Graph} from './graph';\r\nimport {Profiler} from './instrument';\r\nimport {Model} from './model';\r\nimport {Operator} from './operators';\r\nimport {Tensor} from './tensor';\r\n\r\nexport declare namespace Session {\r\n  export interface Config {\r\n    backendHint?: string;\r\n    profiler?: Profiler.Config;\r\n  }\r\n\r\n  export interface Context {\r\n    profiler: Readonly<Profiler>;\r\n    graphInputTypes?: Tensor.DataType[];\r\n    graphInputDims?: Array<readonly number[]>;\r\n  }\r\n}\r\n\r\nexport class Session {\r\n  constructor(config: Session.Config = {}) {\r\n    this._initialized = false;\r\n    this.backendHint = config.backendHint;\r\n    this.profiler = Profiler.create(config.profiler);\r\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\r\n  }\r\n\r\n  get inputNames(): readonly string[] {\r\n    return this._model.graph.getInputNames();\r\n  }\r\n  get outputNames(): readonly string[] {\r\n    return this._model.graph.getOutputNames();\r\n  }\r\n\r\n  startProfiling() {\r\n    this.profiler.start();\r\n  }\r\n\r\n  endProfiling() {\r\n    this.profiler.stop();\r\n  }\r\n\r\n  async loadModel(uri: string): Promise<void>;\r\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\r\n  async loadModel(buffer: Uint8Array): Promise<void>;\r\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\r\n    await this.profiler.event('session', 'Session.loadModel', async () => {\r\n      // resolve backend and session handler\r\n      const backend = await resolveBackend(this.backendHint);\r\n      this.sessionHandler = backend.createSessionHandler(this.context);\r\n\r\n      this._model = new Model();\r\n      if (typeof arg === 'string') {\r\n        const isOrtFormat = arg.endsWith('.ort');\r\n        if (typeof fetch === 'undefined') {\r\n          // node\r\n          const buf = await promisify(readFile)(arg);\r\n          this.initialize(Buffer.from(buf), isOrtFormat);\r\n        } else {\r\n          // browser\r\n          const response = await fetch(arg);\r\n          const buf = await response.arrayBuffer();\r\n          this.initialize(new Uint8Array(buf), isOrtFormat);\r\n        }\r\n      } else if (!ArrayBuffer.isView(arg)) {\r\n        // load model from ArrayBuffer\r\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\r\n        this.initialize(arr);\r\n      } else {\r\n        // load model from Uint8array\r\n        this.initialize(arg);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\r\n    if (this._initialized) {\r\n      throw new Error('already initialized');\r\n    }\r\n\r\n    this.profiler.event('session', 'Session.initialize', () => {\r\n      // load graph\r\n      const graphInitializer =\r\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\r\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\r\n\r\n      // graph is completely initialzied at this stage , let the interested handlers know\r\n      if (this.sessionHandler.onGraphInitialized) {\r\n        this.sessionHandler.onGraphInitialized(this._model.graph);\r\n      }\r\n      // initialize each operator in the graph\r\n      this.initializeOps(this._model.graph);\r\n\r\n      // instantiate an ExecutionPlan object to be used by the Session object\r\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\r\n    });\r\n\r\n    this._initialized = true;\r\n  }\r\n\r\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\r\n    if (!this._initialized) {\r\n      throw new Error('session not initialized yet');\r\n    }\r\n\r\n    return this.profiler.event('session', 'Session.run', async () => {\r\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\r\n\r\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\r\n\r\n      return this.createOutput(outputTensors);\r\n    });\r\n  }\r\n\r\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\r\n    const modelInputNames = this._model.graph.getInputNames();\r\n\r\n    // normalize inputs\r\n    // inputs: Tensor[]\r\n    if (Array.isArray(inputs)) {\r\n      if (inputs.length !== modelInputNames.length) {\r\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\r\n      }\r\n    }\r\n    // convert map to array\r\n    // inputs: Map<string, Tensor>\r\n    else {\r\n      if (inputs.size !== modelInputNames.length) {\r\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\r\n      }\r\n\r\n      const sortedInputs = new Array<Tensor>(inputs.size);\r\n      let sortedInputsIndex = 0;\r\n      for (let i = 0; i < modelInputNames.length; ++i) {\r\n        const tensor = inputs.get(modelInputNames[i]);\r\n        if (!tensor) {\r\n          throw new Error(`missing input tensor for: '${name}'`);\r\n        }\r\n        sortedInputs[sortedInputsIndex++] = tensor;\r\n      }\r\n\r\n      inputs = sortedInputs;\r\n    }\r\n\r\n    // validate dims requirements\r\n    // First session run - graph input data is not cached for the session\r\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\r\n        this.context.graphInputDims.length === 0) {\r\n      const modelInputIndices = this._model.graph.getInputIndices();\r\n      const modelValues = this._model.graph.getValues();\r\n\r\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\r\n\r\n      for (let i = 0; i < modelInputIndices.length; ++i) {\r\n        const graphInput = modelValues[modelInputIndices[i]];\r\n        graphInputDims[i] = graphInput.type!.shape.dims;\r\n\r\n        // cached for second and subsequent runs.\r\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\r\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\r\n        this.context.graphInputDims!.push(inputs[i].dims);\r\n      }\r\n\r\n      this.validateInputTensorDims(graphInputDims, inputs, true);\r\n    }\r\n\r\n    // Second and subsequent session runs - graph input data is cached for the session\r\n    else {\r\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\r\n    }\r\n\r\n    // validate types requirement\r\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\r\n\r\n    return inputs;\r\n  }\r\n\r\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\r\n    for (let i = 0; i < givenInputs.length; i++) {\r\n      const expectedType = graphInputTypes[i];\r\n      const actualType = givenInputs[i].type;\r\n      if (expectedType !== actualType) {\r\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validateInputTensorDims(\r\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\r\n    for (let i = 0; i < givenInputs.length; i++) {\r\n      const expectedDims = graphInputDims[i];\r\n      const actualDims = givenInputs[i].dims;\r\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\r\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\r\n            actualDims.join(',')}]`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\r\n      boolean {\r\n    if (expectedDims.length !== actualDims.length) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < expectedDims.length; ++i) {\r\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\r\n        // data shape mis-match AND not a 'None' dimension.\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\r\n    const modelOutputNames = this._model.graph.getOutputNames();\r\n    if (outputTensors.length !== modelOutputNames.length) {\r\n      throw new Error('expected number of outputs do not match number of generated outputs');\r\n    }\r\n\r\n    const output = new Map<string, Tensor>();\r\n    for (let i = 0; i < modelOutputNames.length; ++i) {\r\n      output.set(modelOutputNames[i], outputTensors[i]);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  private initializeOps(graph: Graph): void {\r\n    const nodes = graph.getNodes();\r\n    this._ops = new Array(nodes.length);\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\r\n    }\r\n  }\r\n\r\n  private _model: Model;\r\n  private _initialized: boolean;\r\n\r\n  private _ops: Operator[];\r\n  private _executionPlan: ExecutionPlan;\r\n\r\n  private backendHint?: string;\r\n\r\n  private sessionHandler: SessionHandlerType;\r\n  private context: Session.Context;\r\n  private profiler: Readonly<Profiler>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Guid} from 'guid-typescript';\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\n\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\n\r\nimport {ProtoUtil, ShapeUtil} from './util';\r\n\r\nexport declare namespace Tensor {\r\n  export interface DataTypeMap {\r\n    bool: Uint8Array;\r\n    float32: Float32Array;\r\n    float64: Float64Array;\r\n    string: string[];\r\n    int8: Int8Array;\r\n    uint8: Uint8Array;\r\n    int16: Int16Array;\r\n    uint16: Uint16Array;\r\n    int32: Int32Array;\r\n    uint32: Uint32Array;\r\n  }\r\n\r\n  export type DataType = keyof DataTypeMap;\r\n\r\n  export type StringType = Tensor.DataTypeMap['string'];\r\n  export type BooleanType = Tensor.DataTypeMap['bool'];\r\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\r\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\r\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\r\n  export type NumberType = BooleanType|IntegerType|FloatType;\r\n\r\n  export type Id = Guid;\r\n}\r\n\r\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\r\n\r\ntype DataProvider = (id: Tensor.Id) => TensorData;\r\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\r\n\r\nexport class Tensor {\r\n  /**\r\n   * get the underlying tensor data\r\n   */\r\n  get data(): TensorData {\r\n    if (this.cache === undefined) {\r\n      const data = this.dataProvider!(this.dataId);\r\n      if (data.length !== this.size) {\r\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\r\n      }\r\n      this.cache = data;\r\n    }\r\n    return this.cache;\r\n  }\r\n\r\n  /**\r\n   * get the underlying string tensor data. Should only use when type is STRING\r\n   */\r\n  get stringData() {\r\n    if (this.type !== 'string') {\r\n      throw new TypeError('data type is not string');\r\n    }\r\n\r\n    return this.data as Tensor.StringType;\r\n  }\r\n\r\n  /**\r\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\r\n   * INT16, INT32, UINT32, BOOL)\r\n   */\r\n  get integerData() {\r\n    switch (this.type) {\r\n      case 'uint8':\r\n      case 'int8':\r\n      case 'uint16':\r\n      case 'int16':\r\n      case 'int32':\r\n      case 'uint32':\r\n      case 'bool':\r\n        return this.data as Tensor.IntegerType;\r\n\r\n      default:\r\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\r\n   */\r\n  get floatData() {\r\n    switch (this.type) {\r\n      case 'float32':\r\n      case 'float64':\r\n        return this.data as Tensor.FloatType;\r\n\r\n      default:\r\n        throw new TypeError('data type is not float (float32, float64)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\r\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\r\n   */\r\n  get numberData() {\r\n    if (this.type !== 'string') {\r\n      return this.data as Tensor.NumberType;\r\n    }\r\n    throw new TypeError('type cannot be non-number (string)');\r\n  }\r\n\r\n  /**\r\n   * get value of an element at the given indices\r\n   */\r\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\r\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\r\n  }\r\n\r\n  /**\r\n   * set value of an element at the given indices\r\n   */\r\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\r\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\r\n  }\r\n\r\n  /**\r\n   * get the underlying tensor data asynchronously\r\n   */\r\n  async getData(): Promise<TensorData> {\r\n    if (this.cache === undefined) {\r\n      this.cache = await this.asyncDataProvider!(this.dataId);\r\n    }\r\n    return this.cache;\r\n  }\r\n\r\n  /**\r\n   * get the number of elements in the tensor\r\n   */\r\n  public readonly size: number;\r\n\r\n  private _strides: readonly number[];\r\n  /**\r\n   * get the strides for each dimension\r\n   */\r\n  get strides(): readonly number[] {\r\n    if (!this._strides) {\r\n      this._strides = ShapeUtil.computeStrides(this.dims);\r\n    }\r\n    return this._strides;\r\n  }\r\n\r\n  constructor(\r\n      /**\r\n       * get the dimensions of the tensor\r\n       */\r\n      public readonly dims: readonly number[],\r\n      /**\r\n       * get the type of the tensor\r\n       */\r\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\r\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\r\n      /**\r\n       * get the data ID that used to map to a tensor data\r\n       */\r\n      public readonly dataId: Guid = Guid.create()) {\r\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\r\n    const size = this.size;\r\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\r\n\r\n    if (cache !== undefined) {\r\n      if (cache.length !== size) {\r\n        throw new RangeError('Input dims doesn\\'t match data length.');\r\n      }\r\n    }\r\n\r\n    if (type === 'string') {\r\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\r\n        throw new TypeError('cache should be a string array');\r\n      }\r\n\r\n      if (empty) {\r\n        this.cache = new Array<string>(size);\r\n      }\r\n    } else {\r\n      if (cache !== undefined) {\r\n        const constructor = dataviewConstructor(type);\r\n        if (!(cache instanceof constructor)) {\r\n          throw new TypeError(`cache should be type ${constructor.name}`);\r\n        }\r\n      }\r\n\r\n      if (empty) {\r\n        const buf = new ArrayBuffer(size * sizeof(type));\r\n        this.cache = createView(buf, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construct new Tensor from a ONNX Tensor object\r\n   * @param tensorProto the ONNX Tensor\r\n   */\r\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\r\n    if (!tensorProto) {\r\n      throw new Error('cannot construct Value from an empty tensor');\r\n    }\r\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\r\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\r\n\r\n    const value = new Tensor(dims, type);\r\n\r\n    if (type === 'string') {\r\n      // When it's STRING type, the value should always be stored in field\r\n      // 'stringData'\r\n      tensorProto.stringData!.forEach((str, i) => {\r\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\r\n        value.data[i] = buf.toString();\r\n      });\r\n\r\n    } else if (\r\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\r\n        tensorProto.rawData.byteLength > 0) {\r\n      // NOT considering segment for now (IMPORTANT)\r\n\r\n      // populate value from rawData\r\n      const dataDest = value.data;\r\n      const dataSource =\r\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\r\n      const elementSize = sizeofProto(tensorProto.dataType!);\r\n      const length = tensorProto.rawData.byteLength / elementSize;\r\n\r\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\r\n        throw new Error('invalid buffer length');\r\n      }\r\n      if (dataDest.length !== length) {\r\n        throw new Error('buffer length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\r\n        dataDest[i] = n;\r\n      }\r\n    } else {\r\n      // populate value from array\r\n      let array: Array<number|Long>;\r\n      switch (tensorProto.dataType) {\r\n        case onnx.TensorProto.DataType.FLOAT:\r\n          array = tensorProto.floatData!;\r\n          break;\r\n        case onnx.TensorProto.DataType.INT32:\r\n        case onnx.TensorProto.DataType.INT16:\r\n        case onnx.TensorProto.DataType.UINT16:\r\n        case onnx.TensorProto.DataType.INT8:\r\n        case onnx.TensorProto.DataType.UINT8:\r\n        case onnx.TensorProto.DataType.BOOL:\r\n          array = tensorProto.int32Data!;\r\n          break;\r\n        case onnx.TensorProto.DataType.INT64:\r\n          array = tensorProto.int64Data!;\r\n          break;\r\n        case onnx.TensorProto.DataType.DOUBLE:\r\n          array = tensorProto.doubleData!;\r\n          break;\r\n        case onnx.TensorProto.DataType.UINT32:\r\n        case onnx.TensorProto.DataType.UINT64:\r\n          array = tensorProto.uint64Data!;\r\n          break;\r\n        default:\r\n          // should never run here\r\n          throw new Error('unspecific error');\r\n      }\r\n\r\n      if (array === null || array === undefined) {\r\n        throw new Error('failed to populate data from a tensorproto value');\r\n      }\r\n\r\n      const data = value.data;\r\n      if (data.length !== array.length) {\r\n        throw new Error('array length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        if (Long.isLong(element)) {\r\n          data[i] = longToNumber(element, tensorProto.dataType);\r\n        } else {\r\n          data[i] = element;\r\n        }\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Construct new Tensor from raw data\r\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\r\n   * for other types of tensor.\r\n   * @param dims the dimensions of the tensor\r\n   * @param type the type of the tensor\r\n   */\r\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\r\n    return new Tensor(dims, type, undefined, undefined, data);\r\n  }\r\n\r\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\r\n    if (!ortTensor) {\r\n      throw new Error('cannot construct Value from an empty tensor');\r\n    }\r\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\r\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\r\n\r\n    const value = new Tensor(dims, type);\r\n\r\n    if (type === 'string') {\r\n      // When it's STRING type, the value should always be stored in field\r\n      // 'stringData'\r\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\r\n        value.data[i] = ortTensor.stringData(i);\r\n      }\r\n\r\n    } else if (\r\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\r\n      // NOT considering segment for now (IMPORTANT)\r\n\r\n      // populate value from rawData\r\n      const dataDest = value.data;\r\n      const dataSource = new DataView(\r\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\r\n      const elementSize = sizeofProto(ortTensor.dataType());\r\n      const length = ortTensor.rawDataLength() / elementSize;\r\n\r\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\r\n        throw new Error('invalid buffer length');\r\n      }\r\n      if (dataDest.length !== length) {\r\n        throw new Error('buffer length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\r\n        dataDest[i] = n;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction sizeof(type: Tensor.DataType): number {\r\n  switch (type) {\r\n    case 'bool':\r\n    case 'int8':\r\n    case 'uint8':\r\n      return 1;\r\n    case 'int16':\r\n    case 'uint16':\r\n      return 2;\r\n    case 'int32':\r\n    case 'uint32':\r\n    case 'float32':\r\n      return 4;\r\n    case 'float64':\r\n      return 8;\r\n    default:\r\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\r\n  }\r\n}\r\n\r\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\r\n  switch (type) {\r\n    case onnx.TensorProto.DataType.UINT8:\r\n    case onnx.TensorProto.DataType.INT8:\r\n    case onnx.TensorProto.DataType.BOOL:\r\n      return 1;\r\n    case onnx.TensorProto.DataType.UINT16:\r\n    case onnx.TensorProto.DataType.INT16:\r\n      return 2;\r\n    case onnx.TensorProto.DataType.FLOAT:\r\n    case onnx.TensorProto.DataType.INT32:\r\n    case onnx.TensorProto.DataType.UINT32:\r\n      return 4;\r\n    case onnx.TensorProto.DataType.INT64:\r\n    case onnx.TensorProto.DataType.DOUBLE:\r\n    case onnx.TensorProto.DataType.UINT64:\r\n      return 8;\r\n    default:\r\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n}\r\n\r\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\r\n  return new (dataviewConstructor(type))(dataBuffer);\r\n}\r\n\r\nfunction dataviewConstructor(type: Tensor.DataType) {\r\n  switch (type) {\r\n    case 'bool':\r\n    case 'uint8':\r\n      return Uint8Array;\r\n    case 'int8':\r\n      return Int8Array;\r\n    case 'int16':\r\n      return Int16Array;\r\n    case 'uint16':\r\n      return Uint16Array;\r\n    case 'int32':\r\n      return Int32Array;\r\n    case 'uint32':\r\n      return Uint32Array;\r\n    case 'float32':\r\n      return Float32Array;\r\n    case 'float64':\r\n      return Float64Array;\r\n    default:\r\n      // should never run to here\r\n      throw new Error('unspecified error');\r\n  }\r\n}\r\n\r\n// convert a long number to a 32-bit integer (cast-down)\r\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\r\n  // INT64, UINT32, UINT64\r\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\r\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\r\n      throw new TypeError('int64 is not supported');\r\n    }\r\n  } else if (\r\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\r\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\r\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\r\n      throw new TypeError('uint64 is not supported');\r\n    }\r\n  } else {\r\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n\r\n  return i.toNumber();\r\n}\r\n\r\n// read one value from TensorProto\r\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\r\n  switch (type) {\r\n    case onnx.TensorProto.DataType.BOOL:\r\n    case onnx.TensorProto.DataType.UINT8:\r\n      return view.getUint8(byteOffset);\r\n    case onnx.TensorProto.DataType.INT8:\r\n      return view.getInt8(byteOffset);\r\n    case onnx.TensorProto.DataType.UINT16:\r\n      return view.getUint16(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT16:\r\n      return view.getInt16(byteOffset, true);\r\n    case onnx.TensorProto.DataType.FLOAT:\r\n      return view.getFloat32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT32:\r\n      return view.getInt32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.UINT32:\r\n      return view.getUint32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT64:\r\n      return longToNumber(\r\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\r\n    case onnx.TensorProto.DataType.DOUBLE:\r\n      return view.getFloat64(byteOffset, true);\r\n    case onnx.TensorProto.DataType.UINT64:\r\n      return longToNumber(\r\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\r\n    default:\r\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Graph} from './graph';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport {Tensor} from './tensor';\r\n\r\n// check the inputs shape before running an OP.\r\n// return true when the inputs pass the check\r\n// return false when the inputs do not fit the requirement\r\n// throw exception when fatal error or not implemented\r\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\r\n  if (!inputs || inputs.length !== expectedDimensions.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Evaluates the given expression and asserts error message if condition is unmet.\r\nexport function assert(expr: boolean, msg: () => string) {\r\n  if (!expr) {\r\n    throw new Error(typeof msg === 'string' ? msg : msg());\r\n  }\r\n}\r\n\r\nexport class ArrayUtil {\r\n  /**\r\n   * Verifies if 2 input arrays contain the same elements.\r\n   * @param n1 Array 1\r\n   * @param n2 Array 2\r\n   * @returns Whether these 2 are equal\r\n   */\r\n  static arraysEqual(\r\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\r\n      Float32Array|Float64Array,\r\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\r\n      Float32Array|Float64Array) {\r\n    if (n1.length !== n2.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < n1.length; i++) {\r\n      if (n1[i] !== n2[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class MatMulUtil {\r\n  /**\r\n   * Fix the input shapes for MatMul operation if they need fixing\r\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\r\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\r\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\r\n   */\r\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\r\n      [readonly number[], readonly number[]] {\r\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\r\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\r\n    // removed.\r\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\r\n\r\n    // If the second argument is 1-D, it is promoted to a matrix by appending\r\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\r\n    // removed.\r\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\r\n\r\n    return [a, b];\r\n  }\r\n\r\n  /**\r\n   * Fix the output shape computed for MatMul operation if it needs fixing\r\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\r\n   * This will be mutated.\r\n   * @param aRank The rank of tensor A.\r\n   * @param bRank The rank of tensor B.\r\n   */\r\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\r\n    // Remove prepended dimension if first input is 1d\r\n    if (aRank === 1) {\r\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\r\n      outputShape.splice(outputShape.length - 2, 1);\r\n    }\r\n    // Remove appended dimension if second input is 1d\r\n    if (bRank === 1) {\r\n      outputShape.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the expected shape when matrix multiplication\r\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\r\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\r\n   * @returns The expected shape of the result, or undefined if N/A\r\n   */\r\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\r\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\r\n  }\r\n}\r\n\r\nexport class BroadcastUtil {\r\n  /**\r\n   * Calculate the expected shape when broadcasting 2 tensors\r\n   * @param a The shape of tensor A. Should be an array of positive integers\r\n   * @param b The shape of tensor B. Should be an array of positive integers\r\n   * @param isMatMul Whether the operation is MatMul\r\n   * @returns The expected shape of the result, or undefined if N/A\r\n   */\r\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\r\n    const arank = adims.length;\r\n    const brank = bdims.length;\r\n    if (arank === 0) {\r\n      return bdims;\r\n    }\r\n    if (brank === 0) {\r\n      return adims;\r\n    }\r\n    const crank = Math.max(adims.length, bdims.length);\r\n    const cdims = new Array<number>(crank);\r\n\r\n    // calculate the last 2 dimension if it is MatMul\r\n    if (isMatMul) {\r\n      if (arank < 2 || brank < 2) {\r\n        return undefined;\r\n      }\r\n      const cShapeMatMul =\r\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\r\n      if (cShapeMatMul === undefined) {\r\n        return undefined;\r\n      }\r\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\r\n    }\r\n\r\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\r\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\r\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\r\n\r\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\r\n        return undefined;\r\n      }\r\n      cdims[crank - i] = Math.max(aLen, bLen);\r\n    }\r\n\r\n    return cdims;\r\n  }\r\n\r\n  /**\r\n   * Given the indices of a broadcasted tensor, calculate the original indices\r\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\r\n   * @param originalShape The original shape of the tensor before broadcas\r\n   * @returns The calculated indices that maps to the original tensor.\r\n   */\r\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\r\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\r\n    // length as the broadcasted shape, and for each dimension the index should\r\n    // not be out of range.\r\n    const originalIndices = new Array(originalShape.length);\r\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\r\n    return originalIndices;\r\n  }\r\n\r\n  /**\r\n   * Given the indices of a broadcasted tensor, calculate the original indices\r\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\r\n   * @param originalShape The original shape of the tensor before broadcast\r\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\r\n   *     mutated).\r\n   */\r\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\r\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\r\n    // broadcasted shape, and for each dimension the index should not be out of range.\r\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\r\n    const dimOffset = broadcastedIndices.length - originalShape.length;\r\n    for (let i = 0; i < originalShape.length; i++) {\r\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform the broadcasting operation on the specific operator\r\n   * @param a The input tensor A\r\n   * @param b The input tensor B\r\n   * @param op The operator lambda function\r\n   * @param inplace Whether to write the result back to A.\r\n   * @returns The result tensor, or undefined if input not broadcastable.\r\n   */\r\n  static calc(\r\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\r\n      resultType?: Tensor.DataType): Tensor|undefined {\r\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\r\n\r\n    if (outputShape) {\r\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\r\n        // B is not broadcastable to A, failed to calculate inplace.\r\n        return undefined;\r\n      }\r\n\r\n      const size = ShapeUtil.size(outputShape);\r\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\r\n\r\n      // both inputs are scalars\r\n      if (outputShape.length === 0) {\r\n        c.set([], op(a.get([]), b.get([])));\r\n      }\r\n\r\n      // atleast one input is a non-scalar\r\n      else {\r\n        const outputIndices = new Array<number>(outputShape.length);\r\n        const originalIndicesA = new Array(a.dims.length);\r\n        const originalIndicesB = new Array(b.dims.length);\r\n        let valA: string|number = 0;\r\n        let valB: string|number = 0;\r\n        let isAScalar = false;\r\n        let isBScalar = false;\r\n        if (a.dims.length === 0) {\r\n          valA = a.get([]);\r\n          isAScalar = true;\r\n        }\r\n        if (b.dims.length === 0) {\r\n          valB = b.get([]);\r\n          isBScalar = true;\r\n        }\r\n        let rest: number;\r\n        for (let i = 0; i < size; i++) {\r\n          // traversal indices\r\n          rest = i;\r\n          for (let j = outputShape.length - 1; j >= 0; j--) {\r\n            outputIndices[j] = rest % outputShape[j];\r\n            rest = Math.floor(rest / outputShape[j]);\r\n          }\r\n\r\n          if (!isAScalar) {\r\n            // map outputIndices (which is actually broadcasted) to the originalIndices\r\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\r\n            valA = a.get(originalIndicesA);\r\n          }\r\n          if (!isBScalar) {\r\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\r\n            valB = b.get(originalIndicesB);\r\n          }\r\n\r\n          c.set(outputIndices, op(valA, valB));\r\n        }\r\n      }\r\n\r\n      return c;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Determine if a shape is unidirectional broadcastable to another shape\r\n   * @param shape The input shape\r\n   * @param finalShape The desired shape after broadcasting\r\n   */\r\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\r\n    // align shape to the right\r\n    const inputRank = shape.length;\r\n    const finalRank = finalShape.length;\r\n    if (inputRank > finalRank) {\r\n      return false;\r\n    }\r\n    for (let i = 1; i <= inputRank; i++) {\r\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determine the broadcasted dims in input shape based on the given output shape.\r\n   * Note that this function only returns the broadcasted dims.\r\n   * @param inputShape The input shape\r\n   * @param outputShape The output shape\r\n   * @returns The broadcasted dims in input shape.\r\n   */\r\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\r\n    const inRank = inputShape.length;\r\n    const dims: number[] = [];\r\n    for (let i = 0; i < inRank; i++) {\r\n      const dim = inRank - 1 - i;\r\n      const a = inputShape[dim] || 1;\r\n      const b = outputShape[outputShape.length - 1 - i] || 1;\r\n      if (b > 1 && a === 1) {\r\n        dims.unshift(dim);\r\n      }\r\n    }\r\n    return dims;\r\n  }\r\n}\r\n\r\n// copy array helper\r\n// mimics memcpy as much as possible\r\nexport function arrayCopyHelper(\r\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n    blockSize: number) {\r\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n    throw new Error('sourceIndex out of bounds');\r\n  }\r\n  if (targetIndex < 0 || targetIndex >= target.length) {\r\n    throw new Error('targetIndex out of bounds');\r\n  }\r\n  if (sourceIndex + blockSize > source.length) {\r\n    throw new Error('source indices to be copied are outside bounds');\r\n  }\r\n  if (targetIndex + blockSize > target.length) {\r\n    throw new Error('target array is too small to hold result');\r\n  }\r\n\r\n  for (let offset = 0; offset < blockSize; offset++) {\r\n    target[targetIndex + offset] = source[sourceIndex + offset];\r\n  }\r\n}\r\n\r\nexport class GemmUtil {\r\n  // will make sure input shapes are compatible for this op\r\n  // and return back the shape of the output in the form of a tuple\r\n  // will throw exception if the input shapes are not compatible\r\n  static getShapeOfGemmResult(\r\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\r\n      biasShape?: readonly number[]): readonly number[] {\r\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\r\n      throw new Error('shape need to be of size 2');\r\n    }\r\n\r\n    let M: number;\r\n    let K: number;\r\n    let N: number;\r\n\r\n    if (transLeft) {\r\n      M = leftShape[1];\r\n      K = leftShape[0];\r\n    } else {\r\n      M = leftShape[0];\r\n      K = leftShape[1];\r\n    }\r\n\r\n    let kDim = -1;\r\n\r\n    if (transRight) {\r\n      N = rightShape[0];\r\n      kDim = 1;\r\n    } else {\r\n      N = rightShape[1];\r\n      kDim = 0;\r\n    }\r\n\r\n    if (rightShape[kDim] !== K) {\r\n      throw new Error('dimension mismatch');\r\n    }\r\n\r\n    if (M <= 0 || N <= 0 || K <= 0) {\r\n      throw new Error('invalid shape specified');\r\n    }\r\n\r\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\r\n      throw new Error('gemm: invalid bias shape for broadcast');\r\n    }\r\n\r\n    return [M, N, K];\r\n  }\r\n}\r\n\r\nexport class ProtoUtil {\r\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\r\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\r\n    switch (typeProto) {\r\n      case onnx.TensorProto.DataType.INT8:\r\n        return 'int8';\r\n      case onnx.TensorProto.DataType.UINT8:\r\n        return 'uint8';\r\n      case onnx.TensorProto.DataType.BOOL:\r\n        return 'bool';\r\n      case onnx.TensorProto.DataType.INT16:\r\n        return 'int16';\r\n      case onnx.TensorProto.DataType.UINT16:\r\n        return 'uint16';\r\n      case onnx.TensorProto.DataType.INT32:\r\n        return 'int32';\r\n      case onnx.TensorProto.DataType.UINT32:\r\n        return 'uint32';\r\n      case onnx.TensorProto.DataType.FLOAT:\r\n        return 'float32';\r\n      case onnx.TensorProto.DataType.DOUBLE:\r\n        return 'float64';\r\n      case onnx.TensorProto.DataType.STRING:\r\n        return 'string';\r\n\r\n      // For INT64/UINT64, reduce their value to 32-bits.\r\n      // Should throw exception when overflow\r\n      case onnx.TensorProto.DataType.INT64:\r\n        return 'int32';\r\n      case onnx.TensorProto.DataType.UINT64:\r\n        return 'uint32';\r\n\r\n      default:\r\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\r\n    }\r\n  }\r\n\r\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\r\n    switch (type) {\r\n      case 'int8':\r\n        return onnx.TensorProto.DataType.INT8;\r\n      case 'uint8':\r\n        return onnx.TensorProto.DataType.UINT8;\r\n      case 'bool':\r\n        return onnx.TensorProto.DataType.BOOL;\r\n      case 'int16':\r\n        return onnx.TensorProto.DataType.INT16;\r\n      case 'uint16':\r\n        return onnx.TensorProto.DataType.UINT16;\r\n      case 'int32':\r\n        return onnx.TensorProto.DataType.INT32;\r\n      case 'uint32':\r\n        return onnx.TensorProto.DataType.UINT32;\r\n      case 'float32':\r\n        return onnx.TensorProto.DataType.FLOAT;\r\n      case 'float64':\r\n        return onnx.TensorProto.DataType.DOUBLE;\r\n      case 'string':\r\n        return onnx.TensorProto.DataType.STRING;\r\n      case 'int64':\r\n        return onnx.TensorProto.DataType.INT64;\r\n      case 'uint64':\r\n        return onnx.TensorProto.DataType.UINT64;\r\n\r\n      default:\r\n        throw new Error(`unsupported data type: ${type}`);\r\n    }\r\n  }\r\n\r\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\r\n    // get rid of Long type for dims\r\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\r\n  }\r\n\r\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\r\n    return {\r\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\r\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\r\n    };\r\n  }\r\n\r\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\r\n    const dims = [];\r\n    for (let i = 0; i < tensor.dimsLength(); i++) {\r\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\r\n    }\r\n    return dims;\r\n  }\r\n\r\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\r\n    const attributes = [];\r\n    for (let i = 0; i < node.attributesLength(); i++) {\r\n      attributes.push(node.attributes(i)!);\r\n    }\r\n    return attributes;\r\n  }\r\n}\r\n\r\nexport class LongUtil {\r\n  static longToNumber(n: Long|flatbuffers.Long|number) {\r\n    if (Long.isLong(n)) {\r\n      return n.toNumber();\r\n    } else if (n instanceof flatbuffers.Long) {\r\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\r\n    }\r\n    return n;\r\n  }\r\n  static isLong(n: unknown) {\r\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\r\n  }\r\n}\r\n\r\nexport class ShapeUtil {\r\n  static size(dims: readonly number[]): number {\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\r\n  }\r\n\r\n  // `axis` inclusive\r\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\r\n    if (axis < 0 || axis > dims.length) {\r\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\r\n    }\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\r\n  }\r\n\r\n  // `axis` exclusive\r\n  static sizeToDimension(dims: readonly number[], axis: number): number {\r\n    if (axis < 0 || axis > dims.length) {\r\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\r\n    }\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\r\n  }\r\n\r\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\r\n    let size = 1;\r\n    for (let i = start; i < end; i++) {\r\n      // safety check as this method is called by multiple other methods requiring size.\r\n      // size cannot be 0 or negative.\r\n      if (dims[i] <= 0) {\r\n        throw new Error(\r\n            // eslint-disable-next-line max-len\r\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\r\n      }\r\n      size *= dims[i];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  static computeStrides(dims: readonly number[]): readonly number[] {\r\n    const rank = dims.length;\r\n    if (rank === 0) {\r\n      return [];\r\n    } else if (rank === 1) {\r\n      return [1];\r\n    }\r\n    const strides = new Array(rank);\r\n    strides[rank - 1] = 1;\r\n    strides[rank - 2] = dims[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * dims[i + 1];\r\n    }\r\n    return strides;\r\n  }\r\n\r\n  static transpose(dims: readonly number[]): readonly number[] {\r\n    const copy = dims.slice();\r\n    return copy.reverse();\r\n  }\r\n\r\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\r\n    if (axis === undefined) {\r\n      axis = indices.length;\r\n    }\r\n    let offset = 0;\r\n    for (let i = 0; i < axis; ++i) {\r\n      offset += strides[i] * indices[i];\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\r\n    const rank = strides.length;\r\n    if (rank === 0) {\r\n      return [];\r\n    } else if (rank === 1) {\r\n      return [offset * strides[0]];\r\n    }\r\n    const indices: number[] = new Array(strides.length);\r\n    for (let i = 0; i < indices.length - 1; ++i) {\r\n      indices[i] = Math.floor(offset / strides[i]);\r\n      offset -= indices[i] * strides[i];\r\n    }\r\n    indices[indices.length - 1] = offset;\r\n    return indices;\r\n  }\r\n\r\n  /**\r\n   * normailze axis of range [-r, r) into [0, r).\r\n   */\r\n  static normalizeAxis(axis: number, tensorRank: number): number {\r\n    if (axis < -tensorRank && axis >= tensorRank) {\r\n      throw new Error('unsupported axis for this operation.');\r\n    }\r\n    return axis < 0 ? axis + tensorRank : axis;\r\n  }\r\n\r\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\r\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\r\n  }\r\n\r\n  // Increment an index into a tensor (in lexicographic\r\n  // ordering), wrapping around the specified upper_bound.\r\n  /**\r\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\r\n   * @param index Given index to increment (Will be mutated)\r\n   * @param dims The dimensions of the tensor for which the given index corresponds to\r\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\r\n   */\r\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\r\n    if (dims.length === 0 || index.length === 0) {\r\n      throw new Error('Index incrementing unsupported for scalar Tensor');\r\n    }\r\n    if (axisToIncrementOn === undefined) {\r\n      axisToIncrementOn = dims.length;\r\n    } else {\r\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\r\n        throw new Error('Incorrect axis to increment on');\r\n      }\r\n    }\r\n\r\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\r\n      index[k]++;\r\n      if (index[k] < dims[k]) {\r\n        break;\r\n      }\r\n      index[k] = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\r\n   * Used in Reshape\r\n   * @param originalDims Original Shape array\r\n   * @param shapeHints array containing values to compute the new dimensions\r\n   * For example:\r\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\r\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\r\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\r\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\r\n   */\r\n\r\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\r\n    // reshape to a Scalar Tensor\r\n    if (shapeHints.length === 0) {\r\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\r\n        return [];\r\n      } else {\r\n        throw new Error('cannot reshape to a scalar Tensor');\r\n      }\r\n    }\r\n\r\n    const nDims = shapeHints.length;\r\n    const reshapedDims = new Array<number>(nDims);\r\n    let unknownDimension = -1;\r\n    let newTensorSize = 1;\r\n    for (let i = 0; i < nDims; i++) {\r\n      if (shapeHints[i] < -1) {\r\n        throw new Error('a dimension in shape hints cannot be less than -1');\r\n      }\r\n      if (shapeHints[i] === -1) {\r\n        if (unknownDimension !== -1) {\r\n          throw new Error('at most one dimension in shape hints can be -1');\r\n        }\r\n        unknownDimension = i;\r\n      } else {\r\n        if (shapeHints[i] === 0) {\r\n          if (i >= originalDims.length) {\r\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\r\n          }\r\n          reshapedDims[i] = originalDims[i];\r\n        } else {\r\n          reshapedDims[i] = shapeHints[i];\r\n        }\r\n        newTensorSize *= reshapedDims[i];\r\n      }\r\n    }\r\n\r\n    const oldTensorSize = ShapeUtil.size(originalDims);\r\n    if (unknownDimension !== -1) {\r\n      if (oldTensorSize % newTensorSize !== 0) {\r\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\r\n            originalDims}] Output shape: [${shapeHints}]`);\r\n      }\r\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\r\n    }\r\n    // validate sizes from originalDims and reshapedDims match\r\n    else {\r\n      if (newTensorSize !== oldTensorSize) {\r\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\r\n      }\r\n    }\r\n    return reshapedDims;\r\n  }\r\n\r\n  /**\r\n   * Sorts a given array based on the indices in the Perm array\r\n   * Used in Transpose\r\n   * @param a Array to be sorted such as dims or strides\r\n   * @param perm Perm given; if null a will be reversed\r\n   */\r\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\r\n    if (perm) {\r\n      return perm.map((v) => a[v]);\r\n    } else {\r\n      return a.slice().reverse();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pads a given shape according to the padding values\r\n   * @param dims shape of the Tensor to be padded\r\n   * @param pad pad values\r\n   */\r\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\r\n    const rank = dims.length;\r\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\r\n  }\r\n\r\n  /**\r\n   * Determines if the two shapes are identical\r\n   * @param shape1\r\n   * @param shape2\r\n   */\r\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\r\n    if (shape1.length !== shape2.length) {\r\n      return false;\r\n    }\r\n    return shape1.every((v, i) => v === shape2[i]);\r\n  }\r\n\r\n  /**\r\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\r\n   * @param dims - input `dims` that needs to be checked\r\n   */\r\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\r\n    if (dims.length > 6) {\r\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\r\n    }\r\n    let size = 1;\r\n    for (const n of dims) {\r\n      if (!Number.isInteger(n)) {\r\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\r\n      }\r\n      if (n < 0 || n > 2147483647) {\r\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\r\n      }\r\n      size *= n;\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = flatten(x, axis)\r\n   * @param dims - shape of input tensor\r\n   * @param axis - flatten axis, in the range [-r, r]\r\n   */\r\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\r\n    if (axis < 0) {\r\n      axis += dims.length;\r\n    }\r\n    const total = dims.reduce((x, y) => x * y, 1);\r\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\r\n    const outputDims = [total / right, right];\r\n\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = squeeze(x, axes)\r\n   * @param dims - shape of input tensor\r\n   * @param axes - squeeze axes\r\n   */\r\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\r\n    const outputDims = new Array<number>();\r\n\r\n    // sanity check\r\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\r\n\r\n    for (let i = 0; i < dims.length; i++) {\r\n      const inSqueezeList = axes.indexOf(i) >= 0;\r\n      if (inSqueezeList && dims[i] !== 1) {\r\n        throw new Error('squeeze an axis of size different than 1');\r\n      }\r\n\r\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\r\n        outputDims.push(dims[i]);\r\n      }\r\n    }\r\n\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\r\n   * @param dims - shape of input tensor\r\n   * @param axes - unsqueeze axes\r\n   */\r\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\r\n    const outputDims = new Array<number>(dims.length + axes.length);\r\n\r\n    // initialize the array elements to 0\r\n    outputDims.fill(0);\r\n\r\n    // set all axes indices to 1 in outputDims and check for duplicates\r\n    for (let i = 0; i < axes.length; i++) {\r\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\r\n      if (axis >= outputDims.length) {\r\n        throw new Error('\\'axes\\' has an out of range axis');\r\n      }\r\n      if (outputDims[axis] !== 0) {\r\n        throw new Error('\\'axes\\' has a duplicate axis');\r\n      }\r\n\r\n      outputDims[axis] = 1;\r\n    }\r\n\r\n    // fill in the zero entries of outputDims with the input tensor's shape\r\n    let inputDimsIterator = 0;\r\n    for (let i = 0; i < outputDims.length; i++) {\r\n      if (outputDims[i] === 0) {\r\n        outputDims[i] = dims[inputDimsIterator++];\r\n      }\r\n    }\r\n\r\n    // sanity check assertion. 'inputDimsIterator'\r\n    // should be equal to the length of 'dims'\r\n    if (inputDimsIterator !== dims.length) {\r\n      throw new Error('the unsqueezed dimension could not be established');\r\n    }\r\n\r\n    return outputDims;\r\n  }\r\n}\r\n\r\n// bunch of helper methods that do a variety of math operations\r\nexport class MathUtil {\r\n  // y = (x*x) + y\r\n  static sqr(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\r\n    }\r\n  }\r\n\r\n  // y = ax + y\r\n  static axpy(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number, alpha: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\r\n    }\r\n  }\r\n\r\n  // y = pow(x, b)\r\n  static powx(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number, b: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\r\n    }\r\n  }\r\n\r\n  // y = x * y\r\n  static mul(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\r\n    }\r\n  }\r\n}\r\n\r\nexport class SplitUtil {\r\n  /**\r\n   * Calculates new Shapes from existing one and the splits given along the axis provides\r\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\r\n   * @param axis The dimension along which the Tensor will be split\r\n   * @param splits Offsets for the start of each split\r\n   */\r\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\r\n      [number[][], number[]] {\r\n    if (split.length === 0) {\r\n      if (!numOutputs) {\r\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\r\n      }\r\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\r\n    }\r\n\r\n    const shapes: number[][] = [];\r\n    const offsets = [0];\r\n    for (let i = 0; i < split.length; ++i) {\r\n      if (i !== 0) {\r\n        offsets.push(offsets[i - 1] + split[i - 1]);\r\n      }\r\n      const shape = dims.slice();\r\n      shape[axis] = split[i];\r\n      shapes.push(shape);\r\n    }\r\n    return [shapes, offsets];\r\n  }\r\n\r\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\r\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\r\n    if (numElementsAlongAxis % numOutputs !== 0) {\r\n      throw new Error('cannot split tensor to equal sized parts');\r\n    }\r\n    for (let i = 0; i < numOutputs; ++i) {\r\n      split.push(numElementsAlongAxis / numOutputs);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ReduceUtil {\r\n  /**\r\n   * Perform reduce operations on the specific operator\r\n   * @param a Input tensor data\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param keepdims If set to true, the axes which are reduced are left in the\r\n   *    result as dimensions with size one.\r\n   * @param op1 The operation to be performed on each element in the tensor\r\n   * @param op2 The operation to be performed between elements in the tensor\r\n   */\r\n  static calcReduce(\r\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\r\n      op2: (a: number, b: number) => number): Tensor {\r\n    const dims = a.dims.slice(0);\r\n    // if axes is not set, perform reduce on all axes\r\n    if (axes.length === 0) {\r\n      dims.forEach((d, ind) => axes.push(ind));\r\n    }\r\n    // get a temporary broadcastable output shape\r\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\r\n\r\n    // loop through the output and calculate result one by one\r\n    const size = ShapeUtil.size(outputDims);\r\n    const y = new Tensor(outputDims, a.type);\r\n    const strides = ShapeUtil.computeStrides(outputDims);\r\n    const inputStrides = ShapeUtil.computeStrides(dims);\r\n    const indicesY = new Array(dims.length);\r\n    for (let i = 0; i < size; i++) {\r\n      const indices = ShapeUtil.offsetToIndices(i, strides);\r\n      // map index\r\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\r\n      y.set(\r\n          indices,\r\n          ReduceUtil.calcReduceByAxis(\r\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\r\n    }\r\n\r\n    if (keepdims) {\r\n      return y;\r\n    } else {\r\n      // keepdims == 0, calculate the expected shape\r\n      return new Tensor(\r\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform reduce operations on the specific operator on specific axes\r\n   * @param a Input tensor data\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param dims The input dimension.\r\n   * @param curAxisInd Index in axes specifying the current dimension along\r\n   *      which the tensor will be reduced\r\n   * @param pos The current index of element to perform operation\r\n   * @param op1 The operation to be performed on each element in the tensor\r\n   * @param op2 The operation to be performed between elements in the tensor\r\n   */\r\n  static calcReduceByAxis(\r\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\r\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\r\n    let res = 0;\r\n    if (curAxisInd >= axes.length) {\r\n      return op1(input[pos]);\r\n    }\r\n    const axis = axes[curAxisInd];\r\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\r\n    for (let i = 0; i < dims[axis]; i++) {\r\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\r\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\r\n      pos += step;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Calculate the expected shape of a reduce operation\r\n   * @param dims The input tensor dimension\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param keepdims If set to true, the axes which are reduced are left in the\r\n   *    result as dimensions with size one.\r\n   */\r\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\r\n    const outputDims = dims.slice();\r\n    for (let i = 0; i < axes.length; i++) {\r\n      if (keepDims) {\r\n        outputDims[axes[i]] = 1;\r\n      } else {\r\n        outputDims[axes[i]] = 0;\r\n      }\r\n    }\r\n    return outputDims.filter(dim => dim !== 0);\r\n  }\r\n}\r\n\r\nexport class PoolConvUtil {\r\n  /**\r\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\r\n   * @param isGlobalOperator If true, perform global pooling.\r\n   * @param inputDims The input tensor dimension.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param strides Stride along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   */\r\n  static adjustPoolAttributes(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\r\n      pads: number[]) {\r\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\r\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\r\n    }\r\n\r\n    if (isGlobalOperator) {\r\n      // adjust kernel shape to cover the input dims\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        if (dim >= kernelShape.length) {\r\n          kernelShape.push(inputDims[dim + 2]);\r\n        } else {\r\n          kernelShape[dim] = inputDims[dim + 2];\r\n        }\r\n      }\r\n    }\r\n\r\n    // adjust strides length to match kernel shape length\r\n    for (let dim = 0; dim < kernelShape.length; dim++) {\r\n      if (dim < strides.length) {\r\n        if (strides[dim] < 0) {\r\n          throw new Error('strides should be greater than or equal to 1');\r\n        }\r\n      } else {\r\n        strides.push(1);\r\n      }\r\n    }\r\n\r\n    // adjust pads length to match 2 * kernel shape length\r\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\r\n      if (dim < pads.length) {\r\n        if (pads[dim] < 0) {\r\n          throw new Error('pad should be greater than or equal to 1');\r\n        }\r\n      } else {\r\n        pads.push(0);\r\n      }\r\n    }\r\n\r\n    // sanity checks for values in kernel shapes and pads\r\n    for (let dim = 0; dim < kernelShape.length; dim++) {\r\n      if (kernelShape[dim] <= 0) {\r\n        throw new Error('kernel shapes need to be greater than 0');\r\n      }\r\n\r\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\r\n        throw new Error('pads should be smaller than kernel');\r\n      }\r\n    }\r\n  }\r\n\r\n  // adjust pad values based on 'autoPad' attribute\r\n  static adjustPadsBasedOnAutoPad(\r\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\r\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\r\n    if (!autoPad) {\r\n      return;\r\n    }\r\n\r\n    if (pads.length !== 2 * (inputDims.length - 2)) {\r\n      throw new Error('length of pads should be twice the length of data dimensions');\r\n    }\r\n\r\n    if (strides.length !== (inputDims.length - 2)) {\r\n      throw new Error('length of strides should be the length of data dimensions');\r\n    }\r\n\r\n    if (kernelShape.length !== (inputDims.length - 2)) {\r\n      throw new Error('length of kernel shapes should be the length of data dimensions');\r\n    }\r\n\r\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n      PoolConvUtil.adjustPadAndReturnShape(\r\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\r\n          autoPad);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\r\n   * @param isGlobalOperator If true, perform global pooling.\r\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\r\n   * @param strides Stride along each axis.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\r\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\r\n   */\r\n  static computePoolOutputShape(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\r\n      autoPad?: string): number[] {\r\n    if (inputDims.length <= 0) {\r\n      throw new Error('input shape must be of size greater than 0');\r\n    }\r\n\r\n    // Add batch size and number of channels of output\r\n    const outputDims = [inputDims[0], inputDims[1]];\r\n\r\n    // TODO: support dilations for pool operators\r\n    const dilations = new Array<number>(kernelShape.length).fill(1);\r\n\r\n    PoolConvUtil.computeShapeHelper(\r\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\r\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\r\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\r\n   * @param strides Stride along each axis.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\r\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\r\n   */\r\n  static computeConvOutputShape(\r\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\r\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\r\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\r\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\r\n    }\r\n\r\n    // Add batch size and number of channels of output\r\n    const outputDims = [inputDims[0], filterDims[0]];\r\n\r\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\r\n    return outputDims;\r\n  }\r\n\r\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\r\n  // called by computePoolOutputShape() and computeConvOutputShape()\r\n  // adjust pads based on 'autoPad' attribute prior to shape computation\r\n  private static computeShapeHelper(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\r\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\r\n    if (isGlobalOperator) {\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        outputDims.push(1);\r\n      }\r\n    } else {\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\r\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\r\n            autoPad));\r\n      }\r\n    }\r\n  }\r\n\r\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\r\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\r\n  private static adjustPadAndReturnShape(\r\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\r\n      padTailIndex: number, autoPad?: string): number {\r\n    const dkernel = dilation * (kernel - 1) + 1;\r\n    if (autoPad && autoPad !== 'NOTSET') {\r\n      switch (autoPad) {\r\n        case 'VALID':\r\n          pads[padHeadIndex] = 0;\r\n          pads[padTailIndex] = 0;\r\n          return Math.floor(((inSize - dkernel) / stride) + 1);\r\n        case 'SAME_LOWER':\r\n        case 'SAME_UPPER':\r\n          if (dilation !== 1) {\r\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\r\n          } else {\r\n            const legacyTargetSize = (inSize + stride - 1) / stride;\r\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\r\n            pads[padHeadIndex] =\r\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\r\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\r\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\r\n          }\r\n        default:\r\n          throw new Error('Unsupported AutoPad type');\r\n      }\r\n    } else {\r\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\ninterface ExtraOptionsHandler {\r\n  (name: string, value: string): void;\r\n}\r\n\r\nexport const iterateExtraOptions =\r\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\r\n     handler: ExtraOptionsHandler): void => {\r\n      if (typeof options == 'object' && options !== null) {\r\n        if (seen.has(options)) {\r\n          throw new Error('Circular reference in options');\r\n        } else {\r\n          seen.add(options);\r\n        }\r\n      }\r\n\r\n      Object.entries(options).forEach(([key, value]) => {\r\n        const name = (prefix) ? prefix + key : key;\r\n        if (typeof value === 'object') {\r\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\r\n        } else if (typeof value === 'string' || typeof value === 'number') {\r\n          handler(name, value.toString());\r\n        } else if (typeof value === 'boolean') {\r\n          handler(name, (value) ? '1' : '0');\r\n        } else {\r\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\r\n        }\r\n      });\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env, InferenceSession} from 'onnxruntime-common';\r\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\r\nimport * as core from './wasm-core-impl';\r\nimport {initializeWebAssembly} from './wasm-factory';\r\n\r\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\r\nlet proxyWorker: Worker|undefined;\r\nlet initializing = false;\r\nlet initialized = false;\r\nlet aborted = false;\r\n\r\n// resolve; reject\r\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\r\n\r\nlet initWasmCallbacks: PromiseCallbacks;\r\nlet initOrtCallbacks: PromiseCallbacks;\r\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\r\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\r\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\r\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\r\n\r\nconst ensureWorker = (): void => {\r\n  if (initializing || !initialized || aborted || !proxyWorker) {\r\n    throw new Error('worker not ready');\r\n  }\r\n};\r\n\r\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\r\n  switch (ev.data.type) {\r\n    case 'init-wasm':\r\n      initializing = false;\r\n      if (ev.data.err) {\r\n        aborted = true;\r\n        initWasmCallbacks[1](ev.data.err);\r\n      } else {\r\n        initialized = true;\r\n        initWasmCallbacks[0]();\r\n      }\r\n      break;\r\n    case 'init-ort':\r\n      if (ev.data.err) {\r\n        initOrtCallbacks[1](ev.data.err);\r\n      } else {\r\n        initOrtCallbacks[0]();\r\n      }\r\n      break;\r\n    case 'create':\r\n      if (ev.data.err) {\r\n        createSessionCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        createSessionCallbacks.shift()![0](ev.data.out!);\r\n      }\r\n      break;\r\n    case 'release':\r\n      if (ev.data.err) {\r\n        releaseSessionCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        releaseSessionCallbacks.shift()![0]();\r\n      }\r\n      break;\r\n    case 'run':\r\n      if (ev.data.err) {\r\n        runCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        runCallbacks.shift()![0](ev.data.out!);\r\n      }\r\n      break;\r\n    case 'end-profiling':\r\n      if (ev.data.err) {\r\n        endProfilingCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        endProfilingCallbacks.shift()![0]();\r\n      }\r\n      break;\r\n    default:\r\n  }\r\n};\r\n\r\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\r\n\r\nexport const initWasm = async(): Promise<void> => {\r\n  if (isProxy()) {\r\n    if (initialized) {\r\n      return;\r\n    }\r\n    if (initializing) {\r\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\r\n    }\r\n    if (aborted) {\r\n      throw new Error('previous call to \\'initWasm()\\' failed.');\r\n    }\r\n\r\n    initializing = true;\r\n\r\n    // overwrite wasm filepaths\r\n    if (env.wasm.wasmPaths === undefined) {\r\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\r\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\r\n      }\r\n    }\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      proxyWorker?.terminate();\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\r\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\r\n      proxyWorker.onmessage = onProxyWorkerMessage;\r\n      initWasmCallbacks = [resolve, reject];\r\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\r\n      proxyWorker.postMessage(message);\r\n    });\r\n\r\n  } else {\r\n    return initializeWebAssembly(env.wasm);\r\n  }\r\n};\r\n\r\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      initOrtCallbacks = [resolve, reject];\r\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.initOrt(numThreads, loggingLevel);\r\n  }\r\n};\r\n\r\nexport const createSession =\r\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\r\n      createSessionCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\r\n      proxyWorker!.postMessage(message, [model.buffer]);\r\n    });\r\n  } else {\r\n    return core.createSession(model, options);\r\n  }\r\n};\r\n\r\nexport const releaseSession = async(sessionId: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      releaseSessionCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.releaseSession(sessionId);\r\n  }\r\n};\r\n\r\nexport const run = async(\r\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\r\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\r\n      runCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\r\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\r\n    });\r\n  } else {\r\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\r\n  }\r\n};\r\n\r\nexport const endProfiling = async(sessionId: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      endProfilingCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.endProfiling(sessionId);\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession} from 'onnxruntime-common';\r\n\r\nimport {iterateExtraOptions} from './options-utils';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\r\n  const wasm = getInstance();\r\n  let runOptionsHandle = 0;\r\n  const allocs: number[] = [];\r\n\r\n  const runOptions: InferenceSession.RunOptions = options || {};\r\n\r\n  try {\r\n    if (options?.logSeverityLevel === undefined) {\r\n      runOptions.logSeverityLevel = 2;  // Default to warning\r\n    } else if (\r\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\r\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\r\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\r\n    }\r\n\r\n    if (options?.logVerbosityLevel === undefined) {\r\n      runOptions.logVerbosityLevel = 0;  // Default to 0\r\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\r\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\r\n    }\r\n\r\n    if (options?.terminate === undefined) {\r\n      runOptions.terminate = false;\r\n    }\r\n\r\n    let tagDataOffset = 0;\r\n    if (options?.tag !== undefined) {\r\n      tagDataOffset = allocWasmString(options.tag, allocs);\r\n    }\r\n\r\n    runOptionsHandle = wasm._OrtCreateRunOptions(\r\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\r\n    if (runOptionsHandle === 0) {\r\n      throw new Error('Can\\'t create run options');\r\n    }\r\n\r\n    if (options?.extra !== undefined) {\r\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\r\n        const keyDataOffset = allocWasmString(key, allocs);\r\n        const valueDataOffset = allocWasmString(value, allocs);\r\n\r\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\r\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    return [runOptionsHandle, allocs];\r\n  } catch (e) {\r\n    if (runOptionsHandle !== 0) {\r\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\r\n    }\r\n    allocs.forEach(wasm._free);\r\n    throw e;\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\r\n\r\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\r\n\r\nlet ortInit: boolean;\r\n\r\n\r\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\r\n  switch (logLevel) {\r\n    case 'verbose':\r\n      return 0;\r\n    case 'info':\r\n      return 1;\r\n    case 'warning':\r\n      return 2;\r\n    case 'error':\r\n      return 3;\r\n    case 'fatal':\r\n      return 4;\r\n    default:\r\n      throw new Error(`unsupported logging level: ${logLevel}`);\r\n  }\r\n};\r\n\r\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\r\n  private sessionId: number;\r\n\r\n  inputNames: string[];\r\n  outputNames: string[];\r\n\r\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\r\n    if (!ortInit) {\r\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\r\n      ortInit = true;\r\n    }\r\n\r\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\r\n  }\r\n\r\n  async dispose(): Promise<void> {\r\n    return releaseSession(this.sessionId);\r\n  }\r\n\r\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\r\n      Promise<SessionHandler.ReturnType> {\r\n    const inputArray: Tensor[] = [];\r\n    const inputIndices: number[] = [];\r\n    Object.entries(feeds).forEach(kvp => {\r\n      const name = kvp[0];\r\n      const tensor = kvp[1];\r\n      const index = this.inputNames.indexOf(name);\r\n      if (index === -1) {\r\n        throw new Error(`invalid input '${name}'`);\r\n      }\r\n      inputArray.push(tensor);\r\n      inputIndices.push(index);\r\n    });\r\n\r\n    const outputIndices: number[] = [];\r\n    Object.entries(fetches).forEach(kvp => {\r\n      const name = kvp[0];\r\n      // TODO: support pre-allocated output\r\n      const index = this.outputNames.indexOf(name);\r\n      if (index === -1) {\r\n        throw new Error(`invalid output '${name}'`);\r\n      }\r\n      outputIndices.push(index);\r\n    });\r\n\r\n    const outputs =\r\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\r\n\r\n    const result: SessionHandler.ReturnType = {};\r\n    for (let i = 0; i < outputs.length; i++) {\r\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  startProfiling(): void {\r\n    // TODO: implement profiling\r\n  }\r\n\r\n  endProfiling(): void {\r\n    void endProfiling(this.sessionId);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession} from 'onnxruntime-common';\r\n\r\nimport {iterateExtraOptions} from './options-utils';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\r\n  switch (graphOptimizationLevel) {\r\n    case 'disabled':\r\n      return 0;\r\n    case 'basic':\r\n      return 1;\r\n    case 'extended':\r\n      return 2;\r\n    case 'all':\r\n      return 99;\r\n    default:\r\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\r\n  }\r\n};\r\n\r\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\r\n  switch (executionMode) {\r\n    case 'sequential':\r\n      return 0;\r\n    case 'parallel':\r\n      return 1;\r\n    default:\r\n      throw new Error(`unsupported execution mode: ${executionMode}`);\r\n  }\r\n};\r\n\r\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\r\n  if (!options.extra) {\r\n    options.extra = {};\r\n  }\r\n  if (!options.extra.session) {\r\n    options.extra.session = {};\r\n  }\r\n  const session = options.extra.session as Record<string, string>;\r\n  if (!session.use_ort_model_bytes_directly) {\r\n    // eslint-disable-next-line camelcase\r\n    session.use_ort_model_bytes_directly = '1';\r\n  }\r\n};\r\n\r\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\r\n  const wasm = getInstance();\r\n  let sessionOptionsHandle = 0;\r\n  const allocs: number[] = [];\r\n\r\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\r\n  appendDefaultOptions(sessionOptions);\r\n\r\n  try {\r\n    if (options?.graphOptimizationLevel === undefined) {\r\n      sessionOptions.graphOptimizationLevel = 'all';\r\n    }\r\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\r\n\r\n    if (options?.enableCpuMemArena === undefined) {\r\n      sessionOptions.enableCpuMemArena = true;\r\n    }\r\n\r\n    if (options?.enableMemPattern === undefined) {\r\n      sessionOptions.enableMemPattern = true;\r\n    }\r\n\r\n    if (options?.executionMode === undefined) {\r\n      sessionOptions.executionMode = 'sequential';\r\n    }\r\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\r\n\r\n    let logIdDataOffset = 0;\r\n    if (options?.logId !== undefined) {\r\n      logIdDataOffset = allocWasmString(options.logId, allocs);\r\n    }\r\n\r\n    if (options?.logSeverityLevel === undefined) {\r\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\r\n    } else if (\r\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\r\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\r\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\r\n    }\r\n\r\n    if (options?.logVerbosityLevel === undefined) {\r\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\r\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\r\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\r\n    }\r\n\r\n    if (options?.enableProfiling === undefined) {\r\n      sessionOptions.enableProfiling = false;\r\n    }\r\n\r\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\r\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\r\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\r\n        sessionOptions.logVerbosityLevel!);\r\n    if (sessionOptionsHandle === 0) {\r\n      throw new Error('Can\\'t create session options');\r\n    }\r\n\r\n    if (options?.extra !== undefined) {\r\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\r\n        const keyDataOffset = allocWasmString(key, allocs);\r\n        const valueDataOffset = allocWasmString(value, allocs);\r\n\r\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\r\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (options?.executionProviders) {\r\n      for (const ep of options.executionProviders) {\r\n        const name = typeof ep === 'string' ? ep : ep.name;\r\n        if (name === 'webnn') {\r\n          let deviceType = 2;\r\n          let powerPreference = 0;\r\n          if (typeof ep !== 'string') {\r\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\r\n            if (webnnOptions?.deviceType) {\r\n              deviceType = webnnOptions.deviceType;\r\n            }\r\n            if (webnnOptions?.powerPreference) {\r\n              powerPreference = webnnOptions.powerPreference;\r\n            }\r\n          }\r\n          const preferenceValues = [0, 1, 2];\r\n          if (!preferenceValues.includes(deviceType)) {\r\n            throw new Error(\"Invalid deviceType value, it shoule be one of {0, 1, 2}\");\r\n          }\r\n          if (!preferenceValues.includes(powerPreference)) {\r\n            throw new Error(\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\");\r\n          }\r\n          const deviceTypeNames = [\"Auto\", \"GPU\", \"CPU\"];\r\n          const powerPreferenceNames = [\"Auto\", \"High-performance\", \"Low-power\"];\r\n          console.log(`webnn device type: ${deviceTypeNames[deviceType]}`);\r\n          console.log(`webnn power preference: ${powerPreferenceNames[powerPreference]}`);\r\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, deviceType, powerPreference) !== 0) {\r\n            throw new Error(`Can't append WebNN execution provider`);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [sessionOptionsHandle, allocs];\r\n  } catch (e) {\r\n    if (sessionOptionsHandle !== 0) {\r\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\r\n    }\r\n    allocs.forEach(wasm._free);\r\n    throw e;\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getInstance} from './wasm-factory';\r\n\r\nexport const allocWasmString = (data: string, allocs: number[]): number => {\r\n  const wasm = getInstance();\r\n\r\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\r\n  const dataOffset = wasm._malloc(dataLength);\r\n  wasm.stringToUTF8(data, dataOffset, dataLength);\r\n  allocs.push(dataOffset);\r\n\r\n  return dataOffset;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\r\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\r\nimport {setRunOptions} from './run-options';\r\nimport {setSessionOptions} from './session-options';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\n/**\r\n * initialize ORT environment.\r\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\r\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\r\n */\r\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\r\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\r\n  if (errorCode !== 0) {\r\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\r\n  }\r\n};\r\n\r\n/**\r\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\r\n */\r\ntype SessionMetadata = [number, number[], number[]];\r\n\r\nconst activeSessions: Array<SessionMetadata|undefined> = [];\r\n\r\n/**\r\n * create an instance of InferenceSession.\r\n * @returns the metadata of InferenceSession. 0-value handle for failure.\r\n */\r\nexport const createSession =\r\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\r\n      const wasm = getInstance();\r\n      const modelDataOffset = wasm._malloc(model.byteLength);\r\n      let sessionHandle = 0;\r\n      let sessionOptionsHandle = 0;\r\n      let allocs: number[] = [];\r\n\r\n      try {\r\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\r\n\r\n        wasm.HEAPU8.set(model, modelDataOffset);\r\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\r\n        if (sessionHandle === 0) {\r\n          throw new Error('Can\\'t create a session');\r\n        }\r\n      } finally {\r\n        wasm._free(modelDataOffset);\r\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\r\n        allocs.forEach(wasm._free);\r\n      }\r\n\r\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\r\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\r\n\r\n      const inputNames = [];\r\n      const inputNamesUTF8Encoded = [];\r\n      const outputNames = [];\r\n      const outputNamesUTF8Encoded = [];\r\n      for (let i = 0; i < inputCount; i++) {\r\n        const name = wasm._OrtGetInputName(sessionHandle, i);\r\n        if (name === 0) {\r\n          throw new Error('Can\\'t get an input name');\r\n        }\r\n        inputNamesUTF8Encoded.push(name);\r\n        inputNames.push(wasm.UTF8ToString(name));\r\n      }\r\n      for (let i = 0; i < outputCount; i++) {\r\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\r\n        if (name === 0) {\r\n          throw new Error('Can\\'t get an output name');\r\n        }\r\n        outputNamesUTF8Encoded.push(name);\r\n        outputNames.push(wasm.UTF8ToString(name));\r\n      }\r\n\r\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\r\n      return [activeSessions.length - 1, inputNames, outputNames];\r\n    };\r\n\r\nexport const releaseSession = (sessionId: number): void => {\r\n  const wasm = getInstance();\r\n  const session = activeSessions[sessionId];\r\n  if (!session) {\r\n    throw new Error('invalid session id');\r\n  }\r\n  const sessionHandle = session[0];\r\n  const inputNamesUTF8Encoded = session[1];\r\n  const outputNamesUTF8Encoded = session[2];\r\n\r\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\r\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\r\n  wasm._OrtReleaseSession(sessionHandle);\r\n  activeSessions[sessionId] = undefined;\r\n};\r\n\r\n/**\r\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\r\n */\r\nconst enum DataType {\r\n  undefined = 0,\r\n  float = 1,\r\n  uint8 = 2,\r\n  int8 = 3,\r\n  uint16 = 4,\r\n  int16 = 5,\r\n  int32 = 6,\r\n  int64 = 7,\r\n  string = 8,\r\n  bool = 9,\r\n  float16 = 10,\r\n  double = 11,\r\n  uint32 = 12,\r\n  uint64 = 13,\r\n  complex64 = 14,\r\n  complex128 = 15,\r\n  bfloat16 = 16\r\n}\r\n\r\n\r\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\r\n  switch (type) {\r\n    case 'int8':\r\n      return DataType.int8;\r\n    case 'uint8':\r\n      return DataType.uint8;\r\n    case 'bool':\r\n      return DataType.bool;\r\n    case 'int16':\r\n      return DataType.int16;\r\n    case 'uint16':\r\n      return DataType.uint16;\r\n    case 'int32':\r\n      return DataType.int32;\r\n    case 'uint32':\r\n      return DataType.uint32;\r\n    case 'float32':\r\n      return DataType.float;\r\n    case 'float64':\r\n      return DataType.double;\r\n    case 'string':\r\n      return DataType.string;\r\n    case 'int64':\r\n      return DataType.int64;\r\n    case 'uint64':\r\n      return DataType.uint64;\r\n\r\n    default:\r\n      throw new Error(`unsupported data type: ${type}`);\r\n  }\r\n};\r\n\r\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\r\n  switch (typeProto) {\r\n    case DataType.int8:\r\n      return 'int8';\r\n    case DataType.uint8:\r\n      return 'uint8';\r\n    case DataType.bool:\r\n      return 'bool';\r\n    case DataType.int16:\r\n      return 'int16';\r\n    case DataType.uint16:\r\n      return 'uint16';\r\n    case DataType.int32:\r\n      return 'int32';\r\n    case DataType.uint32:\r\n      return 'uint32';\r\n    case DataType.float:\r\n      return 'float32';\r\n    case DataType.double:\r\n      return 'float64';\r\n    case DataType.string:\r\n      return 'string';\r\n    case DataType.int64:\r\n      return 'int32';\r\n    case DataType.uint64:\r\n      return 'uint32';\r\n\r\n    default:\r\n      throw new Error(`unsupported data type: ${typeProto}`);\r\n  }\r\n};\r\n\r\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\r\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\r\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\r\n      switch (type) {\r\n        case 'float32':\r\n          return Float32Array;\r\n        case 'uint8':\r\n          return Uint8Array;\r\n        case 'int8':\r\n          return Int8Array;\r\n        case 'uint16':\r\n          return Uint16Array;\r\n        case 'int16':\r\n          return Int16Array;\r\n        case 'int32':\r\n          return Int32Array;\r\n        case 'bool':\r\n          return Uint8Array;\r\n        case 'float64':\r\n          return Float64Array;\r\n        case 'uint32':\r\n          return Uint32Array;\r\n        case 'int64':\r\n          return BigInt64Array;\r\n        case 'uint64':\r\n          return BigUint64Array;\r\n        default:\r\n          throw new Error(`unsupported type: ${type}`);\r\n      }\r\n    };\r\n\r\n/**\r\n * perform inference run\r\n */\r\nexport const run =\r\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\r\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\r\n      const wasm = getInstance();\r\n      const session = activeSessions[sessionId];\r\n      if (!session) {\r\n        throw new Error('invalid session id');\r\n      }\r\n      const sessionHandle = session[0];\r\n      const inputNamesUTF8Encoded = session[1];\r\n      const outputNamesUTF8Encoded = session[2];\r\n\r\n      const inputCount = inputIndices.length;\r\n      const outputCount = outputIndices.length;\r\n\r\n      let runOptionsHandle = 0;\r\n      let runOptionsAllocs: number[] = [];\r\n\r\n      const inputValues: number[] = [];\r\n      const inputAllocs: number[] = [];\r\n\r\n      try {\r\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\r\n\r\n        // create input tensors\r\n        for (let i = 0; i < inputCount; i++) {\r\n          const dataType = inputs[i][0];\r\n          const dims = inputs[i][1];\r\n          const data = inputs[i][2];\r\n\r\n          let dataOffset: number;\r\n          let dataByteLength: number;\r\n\r\n          if (Array.isArray(data)) {\r\n            // string tensor\r\n            dataByteLength = 4 * data.length;\r\n            dataOffset = wasm._malloc(dataByteLength);\r\n            inputAllocs.push(dataOffset);\r\n            let dataIndex = dataOffset / 4;\r\n            for (let i = 0; i < data.length; i++) {\r\n              if (typeof data[i] !== 'string') {\r\n                throw new TypeError(`tensor data at index ${i} is not a string`);\r\n              }\r\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\r\n            }\r\n          } else {\r\n            dataByteLength = data.byteLength;\r\n            dataOffset = wasm._malloc(dataByteLength);\r\n            inputAllocs.push(dataOffset);\r\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\r\n          }\r\n\r\n          const stack = wasm.stackSave();\r\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\r\n          try {\r\n            let dimIndex = dimsOffset / 4;\r\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\r\n            const tensor = wasm._OrtCreateTensor(\r\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\r\n            if (tensor === 0) {\r\n              throw new Error('Can\\'t create a tensor');\r\n            }\r\n            inputValues.push(tensor);\r\n          } finally {\r\n            wasm.stackRestore(stack);\r\n          }\r\n        }\r\n\r\n        const beforeRunStack = wasm.stackSave();\r\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\r\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\r\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\r\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\r\n\r\n        try {\r\n          let inputValuesIndex = inputValuesOffset / 4;\r\n          let inputNamesIndex = inputNamesOffset / 4;\r\n          let outputValuesIndex = outputValuesOffset / 4;\r\n          let outputNamesIndex = outputNamesOffset / 4;\r\n          for (let i = 0; i < inputCount; i++) {\r\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\r\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\r\n          }\r\n          for (let i = 0; i < outputCount; i++) {\r\n            wasm.HEAPU32[outputValuesIndex++] = 0;\r\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\r\n          }\r\n\r\n          // support RunOptions\r\n          let errorCode = wasm._OrtRun(\r\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\r\n              outputValuesOffset, runOptionsHandle);\r\n\r\n          const output: SerializableTensor[] = [];\r\n\r\n          if (errorCode === 0) {\r\n            for (let i = 0; i < outputCount; i++) {\r\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\r\n\r\n              const beforeGetTensorDataStack = wasm.stackSave();\r\n              // stack allocate 4 pointer value\r\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\r\n\r\n              let type: Tensor.Type|undefined, dataOffset = 0;\r\n              try {\r\n                errorCode = wasm._OrtGetTensorData(\r\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\r\n                if (errorCode !== 0) {\r\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\r\n                }\r\n                let tensorDataIndex = tensorDataOffset / 4;\r\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\r\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\r\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\r\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\r\n                const dims = [];\r\n                for (let i = 0; i < dimsLength; i++) {\r\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\r\n                }\r\n                wasm._OrtFree(dimsOffset);\r\n\r\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\r\n                type = tensorDataTypeEnumToString(dataType);\r\n                if (type === 'string') {\r\n                  const stringData: string[] = [];\r\n                  let dataIndex = dataOffset / 4;\r\n                  for (let i = 0; i < size; i++) {\r\n                    const offset = wasm.HEAPU32[dataIndex++];\r\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\r\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\r\n                  }\r\n                  output.push([type, dims, stringData]);\r\n                } else {\r\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\r\n                  const data = new typedArrayConstructor(size);\r\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\r\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\r\n                  output.push([type, dims, data]);\r\n                }\r\n              } finally {\r\n                wasm.stackRestore(beforeGetTensorDataStack);\r\n                if (type === 'string' && dataOffset) {\r\n                  wasm._free(dataOffset);\r\n                }\r\n                wasm._OrtReleaseTensor(tensor);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (errorCode === 0) {\r\n            return output;\r\n          } else {\r\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\r\n          }\r\n        } finally {\r\n          wasm.stackRestore(beforeRunStack);\r\n        }\r\n      } finally {\r\n        inputValues.forEach(wasm._OrtReleaseTensor);\r\n        inputAllocs.forEach(wasm._free);\r\n\r\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\r\n        runOptionsAllocs.forEach(wasm._free);\r\n      }\r\n    };\r\n\r\n/**\r\n * end profiling\r\n */\r\nexport const endProfiling = (sessionId: number): void => {\r\n  const wasm = getInstance();\r\n  const session = activeSessions[sessionId];\r\n  if (!session) {\r\n    throw new Error('invalid session id');\r\n  }\r\n  const sessionHandle = session[0];\r\n\r\n  // profile file name is not used yet, but it must be freed.\r\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\r\n  if (profileFileName === 0) {\r\n    throw new Error('Can\\'t get an profile file name');\r\n  }\r\n  wasm._OrtFree(profileFileName);\r\n};\r\n\r\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\r\n  const buffers: ArrayBufferLike[] = [];\r\n  for (const tensor of tensors) {\r\n    const data = tensor[2];\r\n    if (!Array.isArray(data) && data.buffer) {\r\n      buffers.push(data.buffer);\r\n    }\r\n  }\r\n  return buffers;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Env} from 'onnxruntime-common';\r\nimport * as path from 'path';\r\n\r\nimport {OrtWasmModule} from './binding/ort-wasm';\r\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\r\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\r\nimport ortWasmFactory from './binding/ort-wasm.js';\r\n\r\nlet wasm: OrtWasmModule|undefined;\r\nlet initialized = false;\r\nlet initializing = false;\r\nlet aborted = false;\r\n\r\nconst isMultiThreadSupported = (): boolean => {\r\n  try {\r\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\r\n    if (typeof SharedArrayBuffer === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    // Test for transferability of SABs (for browsers. needed for Firefox)\r\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\r\n    if (typeof MessageChannel !== 'undefined') {\r\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\r\n    }\r\n\r\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\r\n    // This typed array is a WebAssembly program containing threaded instructions.\r\n    return WebAssembly.validate(new Uint8Array([\r\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\r\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\r\n    ]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isSimdSupported = (): boolean => {\r\n  try {\r\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\r\n    // This typed array is a WebAssembly program containing SIMD instructions.\r\n    return WebAssembly.validate(new Uint8Array(\r\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\r\n  if (useThreads) {\r\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\r\n  } else {\r\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\r\n  }\r\n};\r\n\r\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\r\n  if (initialized) {\r\n    return Promise.resolve();\r\n  }\r\n  if (initializing) {\r\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\r\n  }\r\n  if (aborted) {\r\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\r\n  }\r\n\r\n  initializing = true;\r\n\r\n  // wasm flags are already initialized\r\n  const timeout = flags.initTimeout!;\r\n  const numThreads = flags.numThreads!;\r\n  const simd = flags.simd!;\r\n\r\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\r\n  const useSimd = simd && isSimdSupported();\r\n\r\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\r\n  const wasmFileName = getWasmFileName(false, useThreads);\r\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\r\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\r\n\r\n  let isTimeout = false;\r\n\r\n  const tasks: Array<Promise<void>> = [];\r\n\r\n  // promise for timeout\r\n  if (timeout > 0) {\r\n    tasks.push(new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        isTimeout = true;\r\n        resolve();\r\n      }, timeout);\r\n    }));\r\n  }\r\n\r\n  // promise for module initialization\r\n  tasks.push(new Promise((resolve, reject) => {\r\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\r\n    const config: Partial<OrtWasmModule> = {\r\n      locateFile: (fileName: string, scriptDirectory: string) => {\r\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\r\n          return URL.createObjectURL(new Blob(\r\n              [\r\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\r\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\r\n                require('./binding/ort-wasm-threaded.worker.js')\r\n              ],\r\n              {type: 'text/javascript'}));\r\n        }\r\n\r\n        if (fileName === wasmFileName) {\r\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\r\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\r\n        }\r\n\r\n        return scriptDirectory + fileName;\r\n      }\r\n    };\r\n\r\n    if (useThreads) {\r\n      if (typeof Blob === 'undefined') {\r\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\r\n      } else {\r\n        const scriptSourceCode =\r\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\r\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\r\n      }\r\n    }\r\n\r\n    factory(config).then(\r\n        // wasm module initialized successfully\r\n        module => {\r\n          initializing = false;\r\n          initialized = true;\r\n          wasm = module;\r\n          resolve();\r\n        },\r\n        // wasm module failed to initialize\r\n        (what) => {\r\n          initializing = false;\r\n          aborted = true;\r\n          reject(what);\r\n        });\r\n  }));\r\n\r\n  await Promise.race(tasks);\r\n\r\n  if (isTimeout) {\r\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\r\n  }\r\n};\r\n\r\nexport const getInstance = (): OrtWasmModule => {\r\n  if (initialized && wasm) {\r\n    return wasm;\r\n  }\r\n\r\n  throw new Error('WebAssembly is not initialized yet.');\r\n};\r\n\r\nexport const dispose = (): void => {\r\n  if (initialized && !initializing && !aborted) {\r\n    initializing = true;\r\n\r\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\r\n    wasm = undefined;\r\n\r\n    initializing = false;\r\n    initialized = false;\r\n    aborted = true;\r\n  }\r\n};\r\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return F.buffer!=G&&se(F.buffer),V}function r(){return F.buffer!=G&&se(F.buffer),q}function a(){return F.buffer!=G&&se(F.buffer),X}function o(){return F.buffer!=G&&se(F.buffer),J}function i(){return F.buffer!=G&&se(F.buffer),$}function u(){return F.buffer!=G&&se(F.buffer),Z}function s(){return F.buffer!=G&&se(F.buffer),K}var c,f,l;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){f=e,l=t}));var p,d={};for(p in c)c.hasOwnProperty(p)&&(d[p]=c[p]);var h=\\\"./this.program\\\";function m(e,t){throw t}var g,v,y,b,_,w=\\\"object\\\"==typeof window,A=\\\"function\\\"==typeof importScripts,T=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function S(e){return c.locateFile?c.locateFile(e,E):E+e}if(T){if(E=A?n(908).dirname(E)+\\\"/\\\":\\\"//\\\",g=function(e,t){return b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFileSync(e,t?null:\\\"utf8\\\")},y=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),U(e.buffer),e},v=function(e,t,r){b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(h=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof Dn))throw e})),process.on(\\\"unhandledRejection\\\",Ae),m=function(e,t){if(ge())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var k;try{k=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=k.Worker}}else(w||A)&&(A?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",T?(g=function(e,t){return b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFileSync(e,t?null:\\\"utf8\\\")},y=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),U(e.buffer),e},v=function(e,t,r){b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},A&&(y=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));T&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var C,M,P=c.print||console.log.bind(console),x=c.printErr||console.warn.bind(console);for(p in d)d.hasOwnProperty(p)&&(c[p]=d[p]);d=null,c.thisProgram&&(h=c.thisProgram),c.quit&&(m=c.quit),c.wasmBinary&&(M=c.wasmBinary);var D=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&Ae(\\\"no native wasm support detected\\\");var F,R,I,W=!1;function U(e,t){e||Ae(\\\"Assertion failed: \\\"+t)}function j(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var L=\\\"undefined\\\"!=typeof TextDecoder?new j(\\\"utf8\\\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&L)return L.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(e,t){return e?H(r(),e,t):\\\"\\\"}function N(e,t,n,r){if(!(0<r))return 0;var a=n;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++]=i}else{if(2047>=i){if(n+1>=r)break;t[n++]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++]=224|i>>12}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63}t[n++]=128|i>>6&63}t[n++]=128|63&i}}return t[n]=0,n-a}function z(e,t,n){return N(e,r(),t,n)}function B(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}var G,V,q,X,J,$,Z,Q,K,ee=\\\"undefined\\\"!=typeof TextDecoder?new j(\\\"utf-16le\\\"):void 0;function te(e,t){for(var n=e>>1,i=n+t/2;!(n>=i)&&o()[n];)++n;if(32<(n<<=1)-e&&ee)return ee.decode(r().subarray(e,n));for(n=\\\"\\\",i=0;!(i>=t/2);++i){var u=a()[e+2*i>>1];if(0==u)break;n+=String.fromCharCode(u)}return n}function ne(e,t,n){if(void 0===n&&(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var o=0;o<n;++o){var i=e.charCodeAt(o);a()[t>>1]=i,t+=2}return a()[t>>1]=0,t-r}function re(e){return 2*e.length}function ae(e,t){for(var n=0,r=\\\"\\\";!(n>=t/4);){var a=i()[e+4*n>>2];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r}function oe(e,t,n){if(void 0===n&&(n=2147483647),4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),i()[t>>2]=o,(t+=4)+4>n)break}return i()[t>>2]=0,t-r}function ie(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t}function ue(e){var n=B(e)+1,r=an(n);return r&&N(e,t(),r,n),r}function se(e){G=e,c.HEAP8=V=new Int8Array(e),c.HEAP16=X=new Int16Array(e),c.HEAP32=$=new Int32Array(e),c.HEAPU8=q=new Uint8Array(e),c.HEAPU16=J=new Uint16Array(e),c.HEAPU32=Z=new Uint32Array(e),c.HEAPF32=Q=new Float32Array(e),c.HEAPF64=K=new Float64Array(e)}O&&(G=c.buffer);var ce=c.INITIAL_MEMORY||16777216;if(O)F=c.wasmMemory,G=c.buffer;else if(c.wasmMemory)F=c.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:ce/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),T&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");F&&(G=F.buffer),ce=G.byteLength,se(G);var fe,le=[],pe=[],de=[],he=[],me=0;function ge(){return D||0<me}function ve(){var e=c.preRun.shift();le.unshift(e)}var ye,be=0,_e=null,we=null;function Ae(e){throw c.onAbort&&c.onAbort(e),U(!O),x(e),W=!0,I=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function Te(){return ye.startsWith(\\\"data:application/octet-stream;base64,\\\")}function Oe(){var e=ye;try{if(e==ye&&M)return new Uint8Array(M);if(y)return y(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Ae(e)}}c.preloadedImages={},c.preloadedAudios={},ye=\\\"ort-wasm-threaded.wasm\\\",Te()||(ye=S(ye));var Ee={985396:function(){throw\\\"Canceled!\\\"}};function Se(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.qc;\\\"number\\\"==typeof n?void 0===t.Jb?fe.get(n)():fe.get(n)(t.Jb):n(void 0===t.Jb?null:t.Jb)}}}function ke(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),xn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),xn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function Ce(e){if(O)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=Pe.Eb[e];t&&(i()[e+12>>2]=0,Pe.Ub(t.worker))}c._emscripten_futex_wake=ke;var Me,Pe={Hb:[],Gb:[],bc:[],bd:function(){},vc:function(){for(var e=an(228),t=0;57>t;++t)u()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=an(512);for(t=0;128>t;++t)u()[n/4+t]=0;Atomics.store(u(),e+100>>2,n),Atomics.store(u(),e+40>>2,e),bn(e,!A,1),ln(e)},wc:function(){Pe.receiveObjectTransfer=Pe.Cc,Pe.threadInit=Pe.Mc,Pe.threadCancel=Pe.Lc,Pe.threadExit=Pe.kc,Pe.setExitStatus=Pe.Ec},Eb:{},ac:[],hc:function(){for(;0<Pe.ac.length;)Pe.ac.pop()();wn()},ic:function(e,t){Atomics.store(u(),e+56>>2,1),Atomics.store(u(),e+60>>2,0),Pe.hc(),Atomics.store(u(),e+4>>2,t),Atomics.store(u(),e+0>>2,1),ke(e+0,2147483647),bn(0,0,0)},Ec:function(e){I=e},kc:function(e){var t=sn();t&&(Pe.ic(t,e),O&&postMessage({cmd:\\\"exit\\\"}))},Lc:function(){Pe.ic(sn(),-1),postMessage({cmd:\\\"cancelDone\\\"})},jc:function(){for(var e in Pe.Eb){var t=Pe.Eb[e];t&&t.worker&&Pe.Ub(t.worker)}for(Pe.Eb={},e=0;e<Pe.Hb.length;++e){var n=Pe.Hb[e];n.terminate()}for(Pe.Hb=[],e=0;e<Pe.Gb.length;++e)t=(n=Pe.Gb[e]).Db,Pe.Zb(t),n.terminate();Pe.Gb=[]},Zb:function(e){if(e){if(e.Fb){var t=i()[e.Fb+100>>2];i()[e.Fb+100>>2]=0,un(t),un(e.Fb)}e.Fb=0,e.Yb&&e.Ib&&un(e.Ib),e.Ib=0,e.worker&&(e.worker.Db=null)}},Ub:function(e){Pe.Dc((function(){delete Pe.Eb[e.Db.Fb],Pe.Hb.push(e),Pe.Gb.splice(Pe.Gb.indexOf(e),1),Pe.Zb(e.Db),e.Db=void 0}))},Dc:function(e){i()[Pn>>2]=0;try{e()}finally{i()[Pn>>2]=1}},Cc:function(){},Mc:function(){for(var e in Pe.bc)Pe.bc[e]()},zc:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.Db&&(Pe.oc=e.Db.Fb),r.targetThread&&r.targetThread!=sn()){var o=Pe.Eb[r.jd];o?o.worker.postMessage(n.data,r.transferList):x('Internal error! Worker sent a message \\\"'+a+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===a)hn();else if(\\\"spawnThread\\\"===a)Re(n.data);else if(\\\"cleanupThread\\\"===a)Ce(r.thread);else if(\\\"killThread\\\"===a){if(n=r.thread,O)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=Pe.Eb[n],delete Pe.Eb[n],r.worker.terminate(),Pe.Zb(r),Pe.Gb.splice(Pe.Gb.indexOf(r.worker),1),r.worker.Db=void 0}else if(\\\"cancelThread\\\"===a){if(n=r.thread,O)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";Pe.Eb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===a)e.loaded=!0,t&&t(e),e.Ob&&(e.Ob(),delete e.Ob);else if(\\\"print\\\"===a)P(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===a)x(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===a)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===a)e.Db&&Atomics.load(u(),e.Db.Fb+64>>2)&&Pe.Ub(e);else if(\\\"exitProcess\\\"===a)try{Rn(r.returnCode)}catch(e){if(e instanceof Dn)return;throw e}else\\\"cancelDone\\\"===a?Pe.Ub(e):\\\"objectTransfer\\\"!==a&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):x(\\\"worker sent an unknown command \\\"+a));Pe.oc=void 0},e.onerror=function(e){x(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},T&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:F,wasmModule:R})},lc:function(){var e=S(\\\"ort-wasm-threaded.worker.js\\\");Pe.Hb.push(new Worker(e))},rc:function(){return 0==Pe.Hb.length&&(Pe.lc(),Pe.zc(Pe.Hb[0])),Pe.Hb.pop()},Sc:function(e){for(e=performance.now()+e;performance.now()<e;);}};function xe(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[on()>>2]=28,-1;e=Me()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function De(e,t){if(O)return Pt(1,1,e,t);de.unshift({qc:e,Jb:t})}function Fe(e){this.Nb=e-16,this.Jc=function(e){i()[this.Nb+4>>2]=e},this.Gc=function(e){i()[this.Nb+8>>2]=e},this.Hc=function(){i()[this.Nb>>2]=0},this.Fc=function(){t()[this.Nb+12>>0]=0},this.Ic=function(){t()[this.Nb+13>>0]=0},this.tc=function(e,t){this.Jc(e),this.Gc(t),this.Hc(),this.Fc(),this.Ic()}}function Re(e){if(O)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=Pe.rc();if(!t)return 6;if(void 0!==t.Db)throw\\\"Internal error!\\\";if(!e.Tb)throw\\\"Internal error, no pthread ptr!\\\";Pe.Gb.push(t);for(var n=an(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var a=e.Ib+e.Kb,o=(r=Pe.Eb[e.Tb]={worker:t,Ib:e.Ib,Kb:e.Kb,Yb:e.Yb,Fb:e.Tb}).Fb>>2;Atomics.store(u(),o+16,e.detached),Atomics.store(u(),o+25,n),Atomics.store(u(),o+10,r.Fb),Atomics.store(u(),o+20,e.Kb),Atomics.store(u(),o+19,a),Atomics.store(u(),o+26,e.Kb),Atomics.store(u(),o+28,a),Atomics.store(u(),o+29,e.detached),n=_n()+40,Atomics.store(u(),o+43,n),t.Db=r;var s={cmd:\\\"run\\\",start_routine:e.Kc,arg:e.Jb,threadInfoStruct:e.Tb,stackBase:e.Ib,stackSize:e.Kb};return t.Ob=function(){s.time=performance.now(),t.postMessage(s,e.Rc)},t.loaded&&(t.Ob(),delete t.Ob),0}function Ie(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),xn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),xn>>2,0),-73;if(0==(a=Atomics.exchange(i(),xn>>2,0)))break;if(hn(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),xn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function We(){T||A||(C||(C={}),C[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(C[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,x(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){Cn(e,t),Sn(e)},c.invokeEntryPoint=function(e,t){return fe.get(e)(t)},Me=T?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:O?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Ue={},je=[null,[],[]];function Le(e,t){var n=je[e];0===t||10===t?((1===e?P:x)(H(n,0)),n.length=0):n.push(t)}var He={};function Ye(e,t){return O?Pt(2,1,e,t):(e=Y(e),He.Wc(e,t))}function Ne(e,t,n){return O?Pt(3,1,e,t,n):0}function ze(e,t){if(O)return Pt(4,1,e,t)}function Be(e,t,n){if(O)return Pt(5,1,e,t,n)}function Ge(e,t,n){return O?Pt(6,1,e,t,n):0}function Ve(e,t){if(O)return Pt(7,1,e,t)}function qe(e,t){return O?Pt(8,1,e,t):(e=Y(e),He.Xc(e,t))}function Xe(e,t,n,a,o,i){if(O)t=Pt(9,1,e,t,n,a,o,i);else if(i<<=12,0!=(16&a)&&0!=e%65536)t=-28;else if(0!=(32&a)){var u=65536*Math.ceil(t/65536);(e=Mn(65536,u))?r().fill(0,e,e+u):e=0,e?(Ue[e]={Bc:e,yc:t,mc:!0,fd:o,ed:n,flags:a,offset:i},t=e):t=-48}else t=-52;return t}function Je(e,t){if(O)e=Pt(10,1,e,t);else{var n=Ue[e];0!==t&&n?(t===n.yc&&(Ue[e]=null,n.mc&&un(n.Bc)),e=0):e=-28}return e}function $e(e,t,n){if(O)return Pt(11,1,e,t,n)}function Ze(e,t,n){return O?Pt(12,1,e,t,n):(e=Y(e),He.Yc(e,t,n))}function Qe(e){if(O)return Pt(13,1,e)}function Ke(e,t){if(O)return Pt(14,1,e,t)}function et(e){if(O)return Pt(15,1,e)}function tt(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var nt=void 0;function rt(e){for(var t=\\\"\\\";r()[e];)t+=nt[r()[e++]];return t}var at={},ot={},it={};function ut(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return 48<=t&&57>=t?\\\"_\\\"+e:e}function st(e,t){return e=ut(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function ct(e){var t=Error,n=st(e,(function(t){this.name=e,this.message=t,void 0!==(t=Error(t).stack)&&(this.stack=this.toString()+\\\"\\\\n\\\"+t.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var ft=void 0;function lt(e){throw new ft(e)}function pt(e,t,n){if(n=n||{},!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=t.name;if(e||lt('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),ot.hasOwnProperty(e)){if(n.sc)return;lt(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}ot[e]=t,delete it[e],at.hasOwnProperty(e)&&(t=at[e],delete at[e],t.forEach((function(e){e()})))}var dt=[],ht=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function mt(e){4<e&&0==--ht[e].$b&&(ht[e]=void 0,dt.push(e))}function gt(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=dt.length?dt.pop():ht.length;return ht[t]={$b:1,value:e},t}}function vt(e){return this.fromWireType(u()[e>>2])}function yt(e){if(null===e)return\\\"null\\\";var t=typeof e;return\\\"object\\\"===t||\\\"array\\\"===t||\\\"function\\\"===t?e.toString():\\\"\\\"+e}function bt(e,t){switch(t){case 2:return function(e){var t=this.fromWireType;return F.buffer!=G&&se(F.buffer),t.call(this,Q[e>>2])};case 3:return function(e){return this.fromWireType(s()[e>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function _t(e,n,s){switch(n){case 0:return s?function(e){return t()[e]}:function(e){return r()[e]};case 1:return s?function(e){return a()[e>>1]}:function(e){return o()[e>>1]};case 2:return s?function(e){return i()[e>>2]}:function(e){return u()[e>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}function wt(e){return e||lt(\\\"Cannot use deleted val. handle = \\\"+e),ht[e].value}function At(e,t){var n=ot[e];if(void 0===n){var r=rt(e=cn(e));un(e),lt(t+\\\" has unknown type \\\"+r)}return n}var Tt={};function Ot(e){var t=Tt[e];return void 0===t?rt(e):t}var Et=[];function St(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var kt={};function Ct(){if(O)return Pt(16,1);Ae()}var Mt=[];function Pt(e,t){for(var n=arguments.length-2,r=En(),a=kn(8*n),o=a>>3,i=0;i<n;i++){var u=arguments[2+i];s()[o+i]=u}return n=mn(e,n,a,t),Sn(r),n}var xt=[],Dt=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Ft(e){return e=2<e?Y(e):e,Dt[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Rt(e,t,n){var r=Ft(e);if(!r)return-4;if(r.Sb&&(i()[r.Sb>>2]=t,i()[r.Sb+4>>2]=n),!r.fc&&r.Uc){if(r.Sb){r=i()[r.Sb+8>>2],e=e?Y(e):\\\"\\\";var a=En(),o=kn(12),u=0;if(e){u=B(e)+1;var s=an(u);z(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,gn(0,r,657457152,0,u,o),Sn(a),1}return-4}return r.fc&&(r=r.fc),e=!1,r.Rb&&r.Rb.Qb&&(e=0===(e=r.Rb.Qb.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.Rb.Qb.viewport(0,0,t,n),0}function It(e,t,n){return O?Pt(17,1,e,t,n):Rt(e,t,n)}var Wt,Ut=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],jt={};function Lt(){if(!Wt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:h||\\\"./this.program\\\"};for(e in jt)void 0===jt[e]?delete t[e]:t[e]=jt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Wt=n}return Wt}function Ht(e,n){if(O)return Pt(18,1,e,n);var r=0;return Lt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Yt(e,t){if(O)return Pt(19,1,e,t);var n=Lt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function Nt(e){return O?Pt(20,1,e):0}function zt(e,n){return O?Pt(21,1,e,n):(e=1==e||2==e?2:Ae(),t()[n>>0]=e,0)}function Bt(e,t,n,r){return O?Pt(22,1,e,t,n,r):(e=He.$c(e),t=He.Zc(e,t,n),i()[r>>2]=t,0)}function Gt(e,t,n,r,a){if(O)return Pt(23,1,e,t,n,r,a)}function Vt(e,t,n,a){if(O)return Pt(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],f=0;f<c;f++)Le(e,r()[s+f]);o+=c}return i()[a>>2]=o,0}function qt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(O)return Pt(25,1);if(!qt.nc){qt.nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[On()>>2]=60*o,i()[Tn()>>2]=Number(t!=a),n=e(n),r=e(r),n=ue(n),r=ue(r),a<t?(i()[An()>>2]=n,i()[An()+4>>2]=r):(i()[An()>>2]=r,i()[An()+4>>2]=n)}}function Xt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Jt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var $t=[31,29,31,30,31,30,31,31,30,31,30,31],Zt=[31,28,31,30,31,30,31,31,30,31,30,31];function Qt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Xt(e.getFullYear())?$t:Zt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Kt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Qt(new Date(e.Cb+1900,0,1),e.Xb);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=i()[a+40>>2];for(var p in a={Pc:i()[a>>2],Oc:i()[a+4>>2],Vb:i()[a+8>>2],Pb:i()[a+12>>2],Lb:i()[a+16>>2],Cb:i()[a+20>>2],Wb:i()[a+24>>2],Xb:i()[a+28>>2],kd:i()[a+32>>2],Nc:i()[a+36>>2],Qc:l?Y(l):\\\"\\\"},r=Y(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),l[p]);var d=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in l={\\\"%a\\\":function(e){return d[e.Wb].substring(0,3)},\\\"%A\\\":function(e){return d[e.Wb]},\\\"%b\\\":function(e){return h[e.Lb].substring(0,3)},\\\"%B\\\":function(e){return h[e.Lb]},\\\"%C\\\":function(e){return u((e.Cb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.Pb,2)},\\\"%e\\\":function(e){return o(e.Pb,2,\\\" \\\")},\\\"%g\\\":function(e){return f(e).toString().substring(2)},\\\"%G\\\":function(e){return f(e)},\\\"%H\\\":function(e){return u(e.Vb,2)},\\\"%I\\\":function(e){return 0==(e=e.Vb)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.Pb+Jt(Xt(e.Cb+1900)?$t:Zt,e.Lb-1),3)},\\\"%m\\\":function(e){return u(e.Lb+1,2)},\\\"%M\\\":function(e){return u(e.Oc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Vb&&12>e.Vb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.Pc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Wb||7},\\\"%U\\\":function(e){var t=new Date(e.Cb+1900,0,1),n=0===t.getDay()?t:Qt(t,7-t.getDay());return 0>s(n,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-n.getDate()+(Jt(Xt(e.getFullYear())?$t:Zt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Cb+1901,0,4),n=c(new Date(e.Cb+1900,0,4));t=c(t);var r=Qt(new Date(e.Cb+1900,0,1),e.Xb);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Cb+1900?e.Xb+32-n.getDate():e.Xb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Wb},\\\"%W\\\":function(e){var t=new Date(e.Cb,0,1),n=1===t.getDay()?t:Qt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-n.getDate()+(Jt(Xt(e.getFullYear())?$t:Zt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Cb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Nc);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Qc},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),l[p](a)));return(p=function(e){var t=Array(B(e)+1);return N(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(p,e),p.length-1)}for(var en=Array(256),tn=0;256>tn;++tn)en[tn]=String.fromCharCode(tn);nt=en,ft=c.BindingError=ct(\\\"BindingError\\\"),c.InternalError=ct(\\\"InternalError\\\"),c.count_emval_handles=function(){for(var e=0,t=5;t<ht.length;++t)void 0!==ht[t]&&++e;return e},c.get_first_emval=function(){for(var e=5;e<ht.length;++e)if(void 0!==ht[e])return ht[e];return null};var nn=[null,De,Ye,Ne,ze,Be,Ge,Ve,qe,Xe,Je,$e,Ze,Qe,Ke,et,Ct,It,Ht,Yt,Nt,zt,Bt,Gt,Vt,qt],rn={u:function(e,t,n,r){Ae(\\\"Assertion failed: \\\"+Y(e)+\\\", at: \\\"+[t?Y(t):\\\"unknown filename\\\",n,r?Y(r):\\\"unknown function\\\"])},da:function(e,t){return xe(e,t)},b:function(e){return an(e+16)+16},e:function(e,t){return De(e,t)},l:function(e,t){Pe.ac.push((function(){fe.get(e)(t)}))},c:function(e,t,n){throw new Fe(e).tc(t,n),e},ra:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return x(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return x(\\\"pthread_create called with a null thread pointer!\\\"),28;var a=[];if(O&&0===a.length)return dn(687865856,e,t,n,r);var o=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,o=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==o)?o=Mn(16,c):U(0<(o-=c));for(var f=an(228),l=0;57>l;++l)u()[(f>>2)+l]=0;return i()[e>>2]=f,i()[f+12>>2]=f,e=f+152,i()[e>>2]=e,n={Ib:o,Kb:c,Yb:t,detached:s,Kc:n,Tb:f,Jb:r,Rc:a},O?(n.Tc=\\\"spawnThread\\\",postMessage(n,a),0):Re(n)},pa:function(e){throw O?Pe.kc(e):(Pe.hc(),Rn(e)),\\\"unwind\\\"},qa:function(e,t){return function(e,t){if(!e)return x(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(O&&sn()==e)return x(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!O&&pn()==e)return x(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return x(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(u(),e+64>>2))return x(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(We();;){var n=Atomics.load(u(),e+0>>2);if(1==n)return n=Atomics.load(u(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(u(),e+64>>2,1),O?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):Ce(e),0;vn(),O||hn(),Ie(e+0,n,O?100:1)}}(e,t)},ca:Ye,I:Ne,ja:ze,ma:Be,K:function(){return 42},X:Ge,ia:Ve,ha:qe,la:Xe,ka:Je,E:$e,ba:Ze,fa:Qe,L:Ke,ga:et,U:function(){},Ba:function(e,n,r,o,u){var s=tt(r);pt(e,{name:n=rt(n),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?o:u},argPackAdvance:8,readValueFromPointer:function(e){if(1===r)var o=t();else if(2===r)o=a();else{if(4!==r)throw new TypeError(\\\"Unknown boolean type size: \\\"+n);o=i()}return this.fromWireType(o[e>>s])},Mb:null})},Aa:function(e,t){pt(e,{name:t=rt(t),fromWireType:function(e){var t=ht[e].value;return mt(e),t},toWireType:function(e,t){return gt(t)},argPackAdvance:8,readValueFromPointer:vt,Mb:null})},N:function(e,t,n){n=tt(n),pt(e,{name:t=rt(t),fromWireType:function(e){return e},toWireType:function(e,t){if(\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t)throw new TypeError('Cannot convert \\\"'+yt(t)+'\\\" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:bt(t,n),Mb:null})},t:function(e,t,n,r,a){function o(e){return e}t=rt(t),-1===a&&(a=4294967295);var i=tt(n);if(0===r){var u=32-8*n;o=function(e){return e<<u>>>u}}var s=t.includes(\\\"unsigned\\\");pt(e,{name:t,fromWireType:o,toWireType:function(e,n){if(\\\"number\\\"!=typeof n&&\\\"boolean\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+yt(n)+'\\\" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number \\\"'+yt(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+t+'\\\", which is outside the valid range ['+r+\\\", \\\"+a+\\\"]!\\\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:_t(t,i,0!==r),Mb:null})},s:function(e,t,n){function r(e){e>>=2;var t=u();return new a(G,t[e+1],t[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];pt(e,{name:n=rt(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{sc:!0})},O:function(e,t){var n=\\\"std::string\\\"===(t=rt(t));pt(e,{name:t,fromWireType:function(e){var t=u()[e>>2];if(n)for(var a=e+4,o=0;o<=t;++o){var i=e+4+o;if(o==t||0==r()[i]){if(a=Y(a,i-a),void 0===s)var s=a;else s+=String.fromCharCode(0),s+=a;a=i+1}}else{for(s=Array(t),o=0;o<t;++o)s[o]=String.fromCharCode(r()[e+4+o]);s=s.join(\\\"\\\")}return un(e),s},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var a=\\\"string\\\"==typeof t;a||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||lt(\\\"Cannot pass non-string to std::string\\\");var o=(n&&a?function(){return B(t)}:function(){return t.length})(),i=an(4+o+1);if(u()[i>>2]=o,n&&a)z(t,i+4,o+1);else if(a)for(a=0;a<o;++a){var s=t.charCodeAt(a);255<s&&(un(i),lt(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),r()[i+4+a]=s}else for(a=0;a<o;++a)r()[i+4+a]=t[a];return null!==e&&e.push(un,i),i},argPackAdvance:8,readValueFromPointer:vt,Mb:function(e){un(e)}})},F:function(e,t,n){if(n=rt(n),2===t)var r=te,a=ne,i=re,s=function(){return o()},c=1;else 4===t&&(r=ae,a=oe,i=ie,s=function(){return u()},c=2);pt(e,{name:n,fromWireType:function(e){for(var n,a=u()[e>>2],o=s(),i=e+4,f=0;f<=a;++f){var l=e+4+f*t;f!=a&&0!=o[l>>c]||(i=r(i,l-i),void 0===n?n=i:(n+=String.fromCharCode(0),n+=i),i=l+t)}return un(e),n},toWireType:function(e,r){\\\"string\\\"!=typeof r&&lt(\\\"Cannot pass non-string to C++ string type \\\"+n);var o=i(r),s=an(4+o+t);return u()[s>>2]=o>>c,a(r,s+4,o+t),null!==e&&e.push(un,s),s},argPackAdvance:8,readValueFromPointer:vt,Mb:function(e){un(e)}})},Ca:function(e,t){pt(e,{xc:!0,name:t=rt(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},xa:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(O)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=Pe.Eb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},G:function(e,t,n){e=wt(e),t=At(t,\\\"emval::as\\\");var r=[],a=gt(r);return i()[n>>2]=a,t.toWireType(r,e)},r:function(e,t,n,r,a){e=Et[e],t=wt(t),n=Ot(n);var o=[];return i()[r>>2]=gt(o),e(t,n,o,a)},n:function(e,t,n,r){(e=Et[e])(t=wt(t),n=Ot(n),null,r)},d:mt,P:function(e,t){return(e=wt(e))==wt(t)},R:function(e){return 0===e?gt(St()):(e=Ot(e),gt(St()[e]))},i:function(e,t){for(var n=(t=function(e,t){for(var n=Array(e),r=0;r<e;++r)n[r]=At(i()[(t>>2)+r],\\\"parameter \\\"+r);return n}(e,t))[0],r=n.name+\\\"_$\\\"+t.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",a=[\\\"retType\\\"],o=[n],u=\\\"\\\",s=0;s<e-1;++s)u+=(0!==s?\\\", \\\":\\\"\\\")+\\\"arg\\\"+s,a.push(\\\"argType\\\"+s),o.push(t[1+s]);r=\\\"return function \\\"+ut(\\\"methodCaller_\\\"+r)+\\\"(handle, name, destructors, args) {\\\\n\\\";var c=0;for(s=0;s<e-1;++s)r+=\\\"    var arg\\\"+s+\\\" = argType\\\"+s+\\\".readValueFromPointer(args\\\"+(c?\\\"+\\\"+c:\\\"\\\")+\\\");\\\\n\\\",c+=t[s+1].argPackAdvance;for(r+=\\\"    var rv = handle[name](\\\"+u+\\\");\\\\n\\\",s=0;s<e-1;++s)t[s+1].deleteObject&&(r+=\\\"    argType\\\"+s+\\\".deleteObject(arg\\\"+s+\\\");\\\\n\\\");return n.xc||(r+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),a.push(r+\\\"};\\\\n\\\"),function(e){var t=Et.length;return Et.push(e),t}(e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=st(t.name||\\\"unknownFunctionName\\\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a).apply(null,o))},A:function(e,t){return gt((e=wt(e))[t=wt(t)])},h:function(e){4<e&&(ht[e].$b+=1)},Da:function(e,t,n,r){e=wt(e);var a=kt[t];if(!a){a=\\\"\\\";for(var o=0;o<t;++o)a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o;var i=\\\"return function emval_allocator_\\\"+t+\\\"(constructor, argTypes, args) {\\\\n\\\";for(o=0;o<t;++o)i+=\\\"var argType\\\"+o+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \\\"+o+'], \\\"parameter '+o+'\\\");\\\\nvar arg'+o+\\\" = argType\\\"+o+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+o+\\\"['argPackAdvance'];\\\\n\\\";a=new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",i+\\\"var obj = new constructor(\\\"+a+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\")(At,c,gt),kt[t]=a}return a(e,n,r)},o:function(){return gt([])},f:function(e){return gt(Ot(e))},j:function(){return gt({})},p:function(e){for(var t=ht[e].value;t.length;){var n=t.pop();t.pop()(n)}mt(e)},g:function(e,t,n){e=wt(e),t=wt(t),n=wt(n),e[t]=n},k:function(e,t){return gt(e=(e=At(e,\\\"_emval_take_value\\\")).readValueFromPointer(t))},m:Ct,Q:xe,Fa:function(e,t){return e-t},ea:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},z:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},na:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Y:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ya:function(e,t,n){var a;for(Mt.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Mt.push(a?s()[n++>>1]:i()[n]),++n;return Ee[e].apply(null,Mt)},Z:We,B:function(){},x:Ie,w:ke,oa:function(){return 2147483648},v:Me,V:function(e,t,n){r().copyWithin(e,t,t+n)},C:function(){return T?n(993).cpus().length:navigator.hardwareConcurrency},ua:function(e,t,n){xt.length=t,n>>=3;for(var r=0;r<t;r++)xt[r]=s()[n+r];return(0>e?Ee[-e-1]:nn[e]).apply(null,xt)},W:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296),0<(a=Math.max(e,a))%65536&&(a+=65536-a%65536);e:{try{F.grow(Math.min(2147483648,a)-G.byteLength+65535>>>16),se(F.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},va:function(e,t,n){return Ft(e)?Rt(e,t,n):It(e,t,n)},M:function(){},ta:function(e,t,n){return me+=1,setTimeout((function(){--me,function(e){if(!W){try{e()}catch(e){if(e instanceof Dn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&x(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!ge())try{O?yn(I):Rn(I)}catch(e){if(!(e instanceof Dn))throw e}}}((function(){fe.get(e)(n)}))}),t)},wa:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ut[n],failIfMajorPerformanceCaveat:!!i()[t+7],Ac:i()[t+8],cd:i()[t+9],dc:i()[t+10],pc:i()[t+11],gd:i()[t+12],hd:i()[t+13]},!(e=Ft(e))||t.pc?0:function(e,t){e.ec||(e.ec=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.ec(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=an(8);i()[n+4>>2]=sn();var r={ad:n,attributes:t,version:t.Ac,Qb:e};return e.canvas&&(e.canvas.Rb=r),(void 0===t.dc||t.dc)&&function(e){if(e||(e=void 0),!e.uc){e.uc=!0;var t=e.Qb;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,o){t.drawElementsInstancedANGLE(e,n,r,a,o)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.Vc=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.dd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},$:Ht,aa:Yt,y:Nt,_:zt,J:Bt,T:Gt,D:Vt,za:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Ga:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.cc||(e.cc=ue(\\\"GMT\\\")),i()[n+40>>2]=e.cc,n},sa:function(){Pe.vc()},H:function(e,t){qt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[An()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:F||c.wasmMemory,S:function(e){qt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Ea:Kt,q:function(e,t,n,r){return Kt(e,t,n,r)}};!function(){function e(e,t){c.asm=e.exports,fe=c.asm.ab,pe.unshift(c.asm.Ha),Pe.bc.push(c.asm.fb),R=t,O||(be--,c.monitorRunDependencies&&c.monitorRunDependencies(be),0==be&&(null!==_e&&(clearInterval(_e),_e=null),we&&(e=we,we=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!M&&(w||A)){if(\\\"function\\\"==typeof fetch&&!ye.startsWith(\\\"file://\\\"))return fetch(ye,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ye+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return Oe()}));if(v)return new Promise((function(e,t){v(ye,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Oe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){x(\\\"failed to asynchronously prepare wasm: \\\"+e),Ae(e)}))}var r={a:rn};if(O||(be++,c.monitorRunDependencies&&c.monitorRunDependencies(be)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return x(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Te()||ye.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ye,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return x(\\\"wasm streaming compile failed: \\\"+e),x(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.Ha).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.Ia).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.Ja).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.Ka).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.La).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.Ma).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.Na).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.Oa).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.Pa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.Qa).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Ra).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Sa).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.Ta).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Ua).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Va).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.Wa).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.Xa).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.Ya).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Za).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm._a).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.$a).apply(null,arguments)};var an=c._malloc=function(){return(an=c._malloc=c.asm.bb).apply(null,arguments)},on=c.___errno_location=function(){return(on=c.___errno_location=c.asm.cb).apply(null,arguments)},un=c._free=function(){return(un=c._free=c.asm.db).apply(null,arguments)},sn=c._pthread_self=function(){return(sn=c._pthread_self=c.asm.eb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.fb).apply(null,arguments)};var cn=c.___getTypeName=function(){return(cn=c.___getTypeName=c.asm.gb).apply(null,arguments)};c.___embind_register_native_and_builtin_types=function(){return(c.___embind_register_native_and_builtin_types=c.asm.hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.ib).apply(null,arguments)};var fn,ln=c._emscripten_register_main_browser_thread_id=function(){return(ln=c._emscripten_register_main_browser_thread_id=c.asm.jb).apply(null,arguments)},pn=c._emscripten_main_browser_thread_id=function(){return(pn=c._emscripten_main_browser_thread_id=c.asm.kb).apply(null,arguments)},dn=c._emscripten_sync_run_in_main_thread_4=function(){return(dn=c._emscripten_sync_run_in_main_thread_4=c.asm.lb).apply(null,arguments)},hn=c._emscripten_main_thread_process_queued_calls=function(){return(hn=c._emscripten_main_thread_process_queued_calls=c.asm.mb).apply(null,arguments)},mn=c._emscripten_run_in_main_runtime_thread_js=function(){return(mn=c._emscripten_run_in_main_runtime_thread_js=c.asm.nb).apply(null,arguments)},gn=c.__emscripten_call_on_thread=function(){return(gn=c.__emscripten_call_on_thread=c.asm.ob).apply(null,arguments)},vn=c._pthread_testcancel=function(){return(vn=c._pthread_testcancel=c.asm.pb).apply(null,arguments)},yn=c._pthread_exit=function(){return(yn=c._pthread_exit=c.asm.qb).apply(null,arguments)},bn=c.__emscripten_thread_init=function(){return(bn=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)},_n=c._emscripten_get_global_libc=function(){return(_n=c._emscripten_get_global_libc=c.asm.sb).apply(null,arguments)},wn=c.___pthread_tsd_run_dtors=function(){return(wn=c.___pthread_tsd_run_dtors=c.asm.tb).apply(null,arguments)},An=c.__get_tzname=function(){return(An=c.__get_tzname=c.asm.ub).apply(null,arguments)},Tn=c.__get_daylight=function(){return(Tn=c.__get_daylight=c.asm.vb).apply(null,arguments)},On=c.__get_timezone=function(){return(On=c.__get_timezone=c.asm.wb).apply(null,arguments)},En=c.stackSave=function(){return(En=c.stackSave=c.asm.xb).apply(null,arguments)},Sn=c.stackRestore=function(){return(Sn=c.stackRestore=c.asm.yb).apply(null,arguments)},kn=c.stackAlloc=function(){return(kn=c.stackAlloc=c.asm.zb).apply(null,arguments)},Cn=c._emscripten_stack_set_limits=function(){return(Cn=c._emscripten_stack_set_limits=c.asm.Ab).apply(null,arguments)},Mn=c._memalign=function(){return(Mn=c._memalign=c.asm.Bb).apply(null,arguments)},Pn=c.__emscripten_allow_main_runtime_queued_calls=984944,xn=c.__emscripten_main_thread_futex=989072;function Dn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function Fn(){function e(){if(!fn&&(fn=!0,c.calledRun=!0,!W)&&(O||Se(pe),f(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!O)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();he.unshift(e)}Se(he)}}if(!(0<be))if(O)f(c),O||Se(pe),postMessage({cmd:\\\"loaded\\\"});else{if(!O){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ve();Se(le)}0<be||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function Rn(e){if(I=e,O)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new Dn(e);ge()||(Pe.jc(),O||(Se(de),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),je[1].length&&Le(1,10),je[2].length&&Le(2,10))),I=e,ge()||(Pe.jc(),c.onExit&&c.onExit(e),W=!0),m(e,new Dn(e))}if(c.UTF8ToString=Y,c.stringToUTF8=z,c.lengthBytesUTF8=B,c.keepRuntimeAlive=ge,c.PThread=Pe,c.stackSave=En,c.stackRestore=Sn,c.stackAlloc=kn,c.PThread=Pe,c.wasmMemory=F,c.ExitStatus=Dn,we=function e(){fn||Fn(),fn||(we=e)},c.run=Fn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return O&&(D=!1,Pe.wc()),Fn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,o=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,n=a.data.stackBase+a.data.stackSize;e.establishStackSpace(n,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit(),s||(e.___embind_register_native_and_builtin_types(),s=!0);try{var c=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(c):e.PThread.threadExit(c)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(o(\\\"worker.js received unknown command \\\"+a.data.cmd),o(a.data)))}catch(e){throw o(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&o(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,a;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,a=t}));var o,i={};for(o in t)t.hasOwnProperty(o)&&(i[o]=t[o]);var u,s,c,f,l,p=\\\"./this.program\\\",d=\\\"object\\\"==typeof window,h=\\\"function\\\"==typeof importScripts,m=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";m?(g=h?n(908).dirname(g)+\\\"/\\\":\\\"//\\\",u=function(e,t){return f||(f=n(384)),l||(l=n(908)),e=l.normalize(e),f.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||ne(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){f||(f=n(384)),l||(l=n(908)),e=l.normalize(e),f.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",ne),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||h)&&(h?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},h&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,y=t.print||console.log.bind(console),b=t.printErr||console.warn.bind(console);for(o in i)i.hasOwnProperty(o)&&(t[o]=i[o]);i=null,t.thisProgram&&(p=t.thisProgram),t.wasmBinary&&(v=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&ne(\\\"no native wasm support detected\\\");var _,w=!1,A=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function T(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&A)return A.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function O(e,t){return e?T(P,e,t):\\\"\\\"}function E(e,t,n,r){if(!(0<r))return 0;var a=n;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++]=i}else{if(2047>=i){if(n+1>=r)break;t[n++]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++]=224|i>>12}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63}t[n++]=128|i>>6&63}t[n++]=128|63&i}}return t[n]=0,n-a}function S(e,t,n){return E(e,P,t,n)}function k(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}var C,M,P,x,D,F,R,I,W,U=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function j(e,t){for(var n=e>>1,r=n+t/2;!(n>=r)&&D[n];)++n;if(32<(n<<=1)-e&&U)return U.decode(P.subarray(e,n));for(n=\\\"\\\",r=0;!(r>=t/2);++r){var a=x[e+2*r>>1];if(0==a)break;n+=String.fromCharCode(a)}return n}function L(e,t,n){if(void 0===n&&(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var a=0;a<n;++a)x[t>>1]=e.charCodeAt(a),t+=2;return x[t>>1]=0,t-r}function H(e){return 2*e.length}function Y(e,t){for(var n=0,r=\\\"\\\";!(n>=t/4);){var a=F[e+4*n>>2];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r}function N(e,t,n){if(void 0===n&&(n=2147483647),4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),F[t>>2]=o,(t+=4)+4>n)break}return F[t>>2]=0,t-r}function z(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t}function B(e){var t=k(e)+1,n=Ke(t);return n&&E(e,M,n,t),n}function G(){var e=_.buffer;C=e,t.HEAP8=M=new Int8Array(e),t.HEAP16=x=new Int16Array(e),t.HEAP32=F=new Int32Array(e),t.HEAPU8=P=new Uint8Array(e),t.HEAPU16=D=new Uint16Array(e),t.HEAPU32=R=new Uint32Array(e),t.HEAPF32=I=new Float32Array(e),t.HEAPF64=W=new Float64Array(e)}var V,q=[],X=[],J=[],$=[];function Z(){var e=t.preRun.shift();q.unshift(e)}var Q,K=0,ee=null,te=null;function ne(e){throw t.onAbort&&t.onAbort(e),b(e),w=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),a(e),e}function re(){return Q.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},Q=\\\"ort-wasm.wasm\\\",!re()){var ae=Q;Q=t.locateFile?t.locateFile(ae,g):g+ae}function oe(){var e=Q;try{if(e==Q&&v)return new Uint8Array(v);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){ne(e)}}function ie(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.ib;\\\"number\\\"==typeof r?void 0===n.Za?V.get(r)():V.get(r)(n.Za):r(void 0===n.Za?null:n.Za)}}}function ue(e){this.ab=e-16,this.tb=function(e){F[this.ab+4>>2]=e},this.qb=function(e){F[this.ab+8>>2]=e},this.rb=function(){F[this.ab>>2]=0},this.pb=function(){M[this.ab+12>>0]=0},this.sb=function(){M[this.ab+13>>0]=0},this.lb=function(e,t){this.tb(e),this.qb(t),this.rb(),this.pb(),this.sb()}}var se={},ce=[null,[],[]],fe={};function le(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var pe=void 0;function de(e){for(var t=\\\"\\\";P[e];)t+=pe[P[e++]];return t}var he={},me={},ge={};function ve(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return 48<=t&&57>=t?\\\"_\\\"+e:e}function ye(e,t){return e=ve(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function be(e){var t=Error,n=ye(e,(function(t){this.name=e,this.message=t,void 0!==(t=Error(t).stack)&&(this.stack=this.toString()+\\\"\\\\n\\\"+t.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var _e=void 0;function we(e){throw new _e(e)}function Ae(e,t,n){if(n=n||{},!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=t.name;if(e||we('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),me.hasOwnProperty(e)){if(n.kb)return;we(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}me[e]=t,delete ge[e],he.hasOwnProperty(e)&&(t=he[e],delete he[e],t.forEach((function(e){e()})))}var Te=[],Oe=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Ee(e){4<e&&0==--Oe[e].gb&&(Oe[e]=void 0,Te.push(e))}function Se(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=Te.length?Te.pop():Oe.length;return Oe[t]={gb:1,value:e},t}}function ke(e){return this.fromWireType(R[e>>2])}function Ce(e){if(null===e)return\\\"null\\\";var t=typeof e;return\\\"object\\\"===t||\\\"array\\\"===t||\\\"function\\\"===t?e.toString():\\\"\\\"+e}function Me(e,t){switch(t){case 2:return function(e){return this.fromWireType(I[e>>2])};case 3:return function(e){return this.fromWireType(W[e>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function Pe(e,t,n){switch(t){case 0:return n?function(e){return M[e]}:function(e){return P[e]};case 1:return n?function(e){return x[e>>1]}:function(e){return D[e>>1]};case 2:return n?function(e){return F[e>>2]}:function(e){return R[e>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}function xe(e){return e||we(\\\"Cannot use deleted val. handle = \\\"+e),Oe[e].value}function De(e,t){var n=me[e];if(void 0===n){var r=de(e=nt(e));tt(e),we(t+\\\" has unknown type \\\"+r)}return n}var Fe={};function Re(e){var t=Fe[e];return void 0===t?de(e):t}var Ie=[];function We(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var Ue,je={};Ue=m?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var Le,He,Ye={};function Ne(){if(!Le){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in Ye)void 0===Ye[e]?delete t[e]:t[e]=Ye[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Le=n}return Le}function ze(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!He){He=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);F[it()>>2]=60*o,F[ot()>>2]=Number(t!=a),n=e(n),r=e(r),n=B(n),r=B(r),a<t?(F[at()>>2]=n,F[at()+4>>2]=r):(F[at()>>2]=r,F[at()+4>>2]=n)}}function Be(e){return 0==e%4&&(0!=e%100||0==e%400)}function Ge(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ve=[31,29,31,30,31,30,31,31,30,31,30,31],qe=[31,28,31,30,31,30,31,31,30,31,30,31];function Xe(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Be(e.getFullYear())?Ve:qe)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Je(e,t,n,r){function a(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\\\"0\\\")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Xe(new Date(e.Xa+1900,0,1),e.fb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=i(n,e)?0>=i(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=F[r+40>>2];for(var f in r={wb:F[r>>2],vb:F[r+4>>2],cb:F[r+8>>2],bb:F[r+12>>2],Ya:F[r+16>>2],Xa:F[r+20>>2],eb:F[r+24>>2],fb:F[r+28>>2],Eb:F[r+32>>2],ub:F[r+36>>2],xb:c?O(c):\\\"\\\"},n=O(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),c[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in c={\\\"%a\\\":function(e){return l[e.eb].substring(0,3)},\\\"%A\\\":function(e){return l[e.eb]},\\\"%b\\\":function(e){return p[e.Ya].substring(0,3)},\\\"%B\\\":function(e){return p[e.Ya]},\\\"%C\\\":function(e){return o((e.Xa+1900)/100|0,2)},\\\"%d\\\":function(e){return o(e.bb,2)},\\\"%e\\\":function(e){return a(e.bb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return o(e.cb,2)},\\\"%I\\\":function(e){return 0==(e=e.cb)?e=12:12<e&&(e-=12),o(e,2)},\\\"%j\\\":function(e){return o(e.bb+Ge(Be(e.Xa+1900)?Ve:qe,e.Ya-1),3)},\\\"%m\\\":function(e){return o(e.Ya+1,2)},\\\"%M\\\":function(e){return o(e.vb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.cb&&12>e.cb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return o(e.wb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.eb||7},\\\"%U\\\":function(e){var t=new Date(e.Xa+1900,0,1),n=0===t.getDay()?t:Xe(t,7-t.getDay());return 0>i(n,e=new Date(e.Xa+1900,e.Ya,e.bb))?o(Math.ceil((31-n.getDate()+(Ge(Be(e.getFullYear())?Ve:qe,e.getMonth()-1)-31)+e.getDate())/7),2):0===i(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Xa+1901,0,4),n=u(new Date(e.Xa+1900,0,4));t=u(t);var r=Xe(new Date(e.Xa+1900,0,1),e.fb);return 0>i(r,n)?\\\"53\\\":0>=i(t,r)?\\\"01\\\":o(Math.ceil((n.getFullYear()<e.Xa+1900?e.fb+32-n.getDate():e.fb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.eb},\\\"%W\\\":function(e){var t=new Date(e.Xa,0,1),n=1===t.getDay()?t:Xe(t,0===t.getDay()?1:7-t.getDay()+1);return 0>i(n,e=new Date(e.Xa+1900,e.Ya,e.bb))?o(Math.ceil((31-n.getDate()+(Ge(Be(e.getFullYear())?Ve:qe,e.getMonth()-1)-31)+e.getDate())/7),2):0===i(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Xa+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Xa+1900},\\\"%z\\\":function(e){var t=0<=(e=e.ub);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.xb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),c[f](r)));return(f=function(e){var t=Array(k(e)+1);return E(e,t,0,t.length),t}(n)).length>t?0:(M.set(f,e),f.length-1)}for(var $e=Array(256),Ze=0;256>Ze;++Ze)$e[Ze]=String.fromCharCode(Ze);pe=$e,_e=t.BindingError=be(\\\"BindingError\\\"),t.InternalError=be(\\\"InternalError\\\"),t.count_emval_handles=function(){for(var e=0,t=5;t<Oe.length;++t)void 0!==Oe[t]&&++e;return e},t.get_first_emval=function(){for(var e=5;e<Oe.length;++e)if(void 0!==Oe[e])return Oe[e];return null};var Qe={a:function(e){return Ke(e+16)+16},c:function(e,t){J.unshift({ib:e,Za:t})},k:function(e,t){J.unshift({ib:e,Za:t})},b:function(e,t,n){throw new ue(e).lb(t,n),e},X:function(e,t){return e=O(e),fe.yb(e,t)},B:function(){return 0},aa:function(){},da:function(){},D:function(){return 42},Q:function(){return 0},$:function(){},_:function(e,t){return e=O(e),fe.zb(e,t)},ca:function(e,t,n,r,a,o){if(o<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var i=ft(65536,e);i?(P.fill(0,i,i+e),e=i):e=0,e?(se[e]={ob:e,nb:t,jb:!0,fd:a,Db:n,flags:r,offset:o},t=e):t=-48}else t=-52;return t},ba:function(e,t){var n=se[e];return 0!==t&&n?(t===n.nb&&(se[e]=null,n.jb&&tt(n.ob)),e=0):e=-28,e},x:function(){},W:function(e,t,n){return e=O(e),fe.Ab(e,t,n)},Y:function(){},G:function(){},Z:function(){},O:function(){},ha:function(e,t,n,r,a){var o=le(n);Ae(e,{name:t=de(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:a},argPackAdvance:8,readValueFromPointer:function(e){if(1===n)var r=M;else if(2===n)r=x;else{if(4!==n)throw new TypeError(\\\"Unknown boolean type size: \\\"+t);r=F}return this.fromWireType(r[e>>o])},$a:null})},ga:function(e,t){Ae(e,{name:t=de(t),fromWireType:function(e){var t=Oe[e].value;return Ee(e),t},toWireType:function(e,t){return Se(t)},argPackAdvance:8,readValueFromPointer:ke,$a:null})},H:function(e,t,n){n=le(n),Ae(e,{name:t=de(t),fromWireType:function(e){return e},toWireType:function(e,t){if(\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t)throw new TypeError('Cannot convert \\\"'+Ce(t)+'\\\" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Me(t,n),$a:null})},r:function(e,t,n,r,a){function o(e){return e}t=de(t),-1===a&&(a=4294967295);var i=le(n);if(0===r){var u=32-8*n;o=function(e){return e<<u>>>u}}var s=t.includes(\\\"unsigned\\\");Ae(e,{name:t,fromWireType:o,toWireType:function(e,n){if(\\\"number\\\"!=typeof n&&\\\"boolean\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+Ce(n)+'\\\" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number \\\"'+Ce(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+t+'\\\", which is outside the valid range ['+r+\\\", \\\"+a+\\\"]!\\\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Pe(t,i,0!==r),$a:null})},q:function(e,t,n){function r(e){var t=R;return new a(C,t[1+(e>>=2)],t[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];Ae(e,{name:n=de(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{kb:!0})},I:function(e,t){var n=\\\"std::string\\\"===(t=de(t));Ae(e,{name:t,fromWireType:function(e){var t=R[e>>2];if(n)for(var r=e+4,a=0;a<=t;++a){var o=e+4+a;if(a==t||0==P[o]){if(r=O(r,o-r),void 0===i)var i=r;else i+=String.fromCharCode(0),i+=r;r=o+1}}else{for(i=Array(t),a=0;a<t;++a)i[a]=String.fromCharCode(P[e+4+a]);i=i.join(\\\"\\\")}return tt(e),i},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r=\\\"string\\\"==typeof t;r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||we(\\\"Cannot pass non-string to std::string\\\");var a=(n&&r?function(){return k(t)}:function(){return t.length})(),o=Ke(4+a+1);if(R[o>>2]=a,n&&r)S(t,o+4,a+1);else if(r)for(r=0;r<a;++r){var i=t.charCodeAt(r);255<i&&(tt(o),we(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),P[o+4+r]=i}else for(r=0;r<a;++r)P[o+4+r]=t[r];return null!==e&&e.push(tt,o),o},argPackAdvance:8,readValueFromPointer:ke,$a:function(e){tt(e)}})},y:function(e,t,n){if(n=de(n),2===t)var r=j,a=L,o=H,i=function(){return D},u=1;else 4===t&&(r=Y,a=N,o=z,i=function(){return R},u=2);Ae(e,{name:n,fromWireType:function(e){for(var n,a=R[e>>2],o=i(),s=e+4,c=0;c<=a;++c){var f=e+4+c*t;c!=a&&0!=o[f>>u]||(s=r(s,f-s),void 0===n?n=s:(n+=String.fromCharCode(0),n+=s),s=f+t)}return tt(e),n},toWireType:function(e,r){\\\"string\\\"!=typeof r&&we(\\\"Cannot pass non-string to C++ string type \\\"+n);var i=o(r),s=Ke(4+i+t);return R[s>>2]=i>>u,a(r,s+4,i+t),null!==e&&e.push(tt,s),s},argPackAdvance:8,readValueFromPointer:ke,$a:function(e){tt(e)}})},ia:function(e,t){Ae(e,{mb:!0,name:t=de(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},z:function(e,t,n){e=xe(e),t=De(t,\\\"emval::as\\\");var r=[],a=Se(r);return F[n>>2]=a,t.toWireType(r,e)},p:function(e,t,n,r,a){e=Ie[e],t=xe(t),n=Re(n);var o=[];return F[r>>2]=Se(o),e(t,n,o,a)},l:function(e,t,n,r){(e=Ie[e])(t=xe(t),n=Re(n),null,r)},d:Ee,K:function(e,t){return(e=xe(e))==xe(t)},L:function(e){return 0===e?Se(We()):(e=Re(e),Se(We()[e]))},h:function(e,t){for(var n=(t=function(e,t){for(var n=Array(e),r=0;r<e;++r)n[r]=De(F[(t>>2)+r],\\\"parameter \\\"+r);return n}(e,t))[0],r=n.name+\\\"_$\\\"+t.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",a=[\\\"retType\\\"],o=[n],i=\\\"\\\",u=0;u<e-1;++u)i+=(0!==u?\\\", \\\":\\\"\\\")+\\\"arg\\\"+u,a.push(\\\"argType\\\"+u),o.push(t[1+u]);r=\\\"return function \\\"+ve(\\\"methodCaller_\\\"+r)+\\\"(handle, name, destructors, args) {\\\\n\\\";var s=0;for(u=0;u<e-1;++u)r+=\\\"    var arg\\\"+u+\\\" = argType\\\"+u+\\\".readValueFromPointer(args\\\"+(s?\\\"+\\\"+s:\\\"\\\")+\\\");\\\\n\\\",s+=t[u+1].argPackAdvance;for(r+=\\\"    var rv = handle[name](\\\"+i+\\\");\\\\n\\\",u=0;u<e-1;++u)t[u+1].deleteObject&&(r+=\\\"    argType\\\"+u+\\\".deleteObject(arg\\\"+u+\\\");\\\\n\\\");return n.mb||(r+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),a.push(r+\\\"};\\\\n\\\"),function(e){var t=Ie.length;return Ie.push(e),t}(e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=ye(t.name||\\\"unknownFunctionName\\\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a).apply(null,o))},u:function(e,t){return Se((e=xe(e))[t=xe(t)])},g:function(e){4<e&&(Oe[e].gb+=1)},ja:function(e,n,r,a){e=xe(e);var o=je[n];if(!o){o=\\\"\\\";for(var i=0;i<n;++i)o+=(0!==i?\\\", \\\":\\\"\\\")+\\\"arg\\\"+i;var u=\\\"return function emval_allocator_\\\"+n+\\\"(constructor, argTypes, args) {\\\\n\\\";for(i=0;i<n;++i)u+=\\\"var argType\\\"+i+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \\\"+i+'], \\\"parameter '+i+'\\\");\\\\nvar arg'+i+\\\" = argType\\\"+i+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+i+\\\"['argPackAdvance'];\\\\n\\\";o=new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",u+\\\"var obj = new constructor(\\\"+o+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\")(De,t,Se),je[n]=o}return o(e,r,a)},m:function(){return Se([])},e:function(e){return Se(Re(e))},i:function(){return Se({})},n:function(e){for(var t=Oe[e].value;t.length;){var n=t.pop();t.pop()(n)}Ee(e)},f:function(e,t,n){e=xe(e),t=xe(t),n=xe(n),e[t]=n},j:function(e,t){return Se(e=(e=De(e,\\\"_emval_take_value\\\")).readValueFromPointer(t))},v:function(){ne()},J:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return F[et()>>2]=28,-1;e=Ue()}return F[t>>2]=e/1e3|0,F[t+4>>2]=e%1e3*1e6|0,0},M:function(e,t){return e-t},ma:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},t:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},na:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},la:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ea:function(){return 2147483648},P:function(e,t,n){P.copyWithin(e,t,t+n)},w:function(e){var t=P.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{_.grow(Math.min(2147483648,r)-C.byteLength+65535>>>16),G();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},V:function(e){for(var t=Ue();Ue()-t<e;);},T:function(e,t){var n=0;return Ne().forEach((function(r,a){var o=t+n;for(a=F[e+4*a>>2]=o,o=0;o<r.length;++o)M[a++>>0]=r.charCodeAt(o);M[a>>0]=0,n+=r.length+1})),0},U:function(e,t){var n=Ne();F[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),F[t>>2]=r,0},s:function(){return 0},R:function(e,t){return e=1==e||2==e?2:ne(),M[t>>0]=e,0},C:function(e,t,n,r){return e=fe.Cb(e),t=fe.Bb(e,t,n),F[r>>2]=t,0},N:function(){},E:function(e,t,n,r){for(var a=0,o=0;o<n;o++){for(var i=F[t+8*o>>2],u=F[t+(8*o+4)>>2],s=0;s<u;s++){var c=P[i+s],f=ce[e];0===c||10===c?((1===e?y:b)(T(f,0)),f.length=0):f.push(c)}a+=u}return F[r>>2]=a,0},fa:function(e){var t=Date.now();return F[e>>2]=t/1e3|0,F[e+4>>2]=t%1e3*1e3|0,0},S:function e(t,n){return t=new Date(1e3*F[t>>2]),F[n>>2]=t.getUTCSeconds(),F[n+4>>2]=t.getUTCMinutes(),F[n+8>>2]=t.getUTCHours(),F[n+12>>2]=t.getUTCDate(),F[n+16>>2]=t.getUTCMonth(),F[n+20>>2]=t.getUTCFullYear()-1900,F[n+24>>2]=t.getUTCDay(),F[n+36>>2]=0,F[n+32>>2]=0,F[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.hb||(e.hb=B(\\\"GMT\\\")),F[n+40>>2]=e.hb,n},F:function(e,t){ze(),e=new Date(1e3*F[e>>2]),F[t>>2]=e.getSeconds(),F[t+4>>2]=e.getMinutes(),F[t+8>>2]=e.getHours(),F[t+12>>2]=e.getDate(),F[t+16>>2]=e.getMonth(),F[t+20>>2]=e.getFullYear()-1900,F[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);F[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,F[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),F[t+32>>2]=e,e=F[at()+(e?4:0)>>2],F[t+40>>2]=e,t},A:function(e){ze();var t=new Date(F[e+20>>2]+1900,F[e+16>>2],F[e+12>>2],F[e+8>>2],F[e+4>>2],F[e>>2],0),n=F[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=a.getTimezoneOffset(),u=Math.min(i,o);return 0>n?F[e+32>>2]=Number(o!=i&&u==r):0<n!=(u==r)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<n?u:o)-r))),F[e+24>>2]=t.getDay(),F[e+28>>2]=(t.getTime()-a.getTime())/864e5|0,F[e>>2]=t.getSeconds(),F[e+4>>2]=t.getMinutes(),F[e+8>>2]=t.getHours(),F[e+12>>2]=t.getDate(),F[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},ka:Je,o:function(e,t,n,r){return Je(e,t,n,r)}};!function(){function e(e){t.asm=e.exports,_=t.asm.oa,G(),V=t.asm.Wa,X.unshift(t.asm.pa),K--,t.monitorRunDependencies&&t.monitorRunDependencies(K),0==K&&(null!==ee&&(clearInterval(ee),ee=null),te&&(e=te,te=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!v&&(d||h)){if(\\\"function\\\"==typeof fetch&&!Q.startsWith(\\\"file://\\\"))return fetch(Q,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+Q+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return oe()}));if(s)return new Promise((function(e,t){s(Q,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return oe()}))}().then((function(e){return WebAssembly.instantiate(e,o)})).then(e,(function(e){b(\\\"failed to asynchronously prepare wasm: \\\"+e),ne(e)}))}var o={a:Qe};if(K++,t.monitorRunDependencies&&t.monitorRunDependencies(K),t.instantiateWasm)try{return t.instantiateWasm(o,e)}catch(e){return b(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(v||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||re()||Q.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(Q,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,o).then(n,(function(e){return b(\\\"wasm streaming compile failed: \\\"+e),b(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.pa).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.qa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.ra).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.sa).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.ta).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.ua).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.va).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.wa).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.xa).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.ya).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.za).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Aa).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Ba).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Ca).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Da).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ea).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Fa).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Ga).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Ha).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Ia).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Ja).apply(null,arguments)};var Ke=t._malloc=function(){return(Ke=t._malloc=t.asm.Ka).apply(null,arguments)},et=t.___errno_location=function(){return(et=t.___errno_location=t.asm.La).apply(null,arguments)},tt=t._free=function(){return(tt=t._free=t.asm.Ma).apply(null,arguments)},nt=t.___getTypeName=function(){return(nt=t.___getTypeName=t.asm.Na).apply(null,arguments)};t.___embind_register_native_and_builtin_types=function(){return(t.___embind_register_native_and_builtin_types=t.asm.Oa).apply(null,arguments)};var rt,at=t.__get_tzname=function(){return(at=t.__get_tzname=t.asm.Pa).apply(null,arguments)},ot=t.__get_daylight=function(){return(ot=t.__get_daylight=t.asm.Qa).apply(null,arguments)},it=t.__get_timezone=function(){return(it=t.__get_timezone=t.asm.Ra).apply(null,arguments)},ut=t.stackSave=function(){return(ut=t.stackSave=t.asm.Sa).apply(null,arguments)},st=t.stackRestore=function(){return(st=t.stackRestore=t.asm.Ta).apply(null,arguments)},ct=t.stackAlloc=function(){return(ct=t.stackAlloc=t.asm.Ua).apply(null,arguments)},ft=t._memalign=function(){return(ft=t._memalign=t.asm.Va).apply(null,arguments)};function lt(){function e(){if(!rt&&(rt=!0,t.calledRun=!0,!w)){if(ie(X),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();$.unshift(e)}ie($)}}if(!(0<K)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)Z();ie(q),0<K||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=O,t.stringToUTF8=S,t.lengthBytesUTF8=k,t.stackSave=ut,t.stackRestore=st,t.stackAlloc=ct,te=function e(){rt||lt(),rt||(te=e)},t.run=lt,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return lt(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,a,o){if(\\\"object\\\"==typeof e&&null!==e){if(a.has(e))throw new Error(\\\"Circular reference in options\\\");a.add(e)}Object.entries(e).forEach((function(e){var i=n(e,2),u=i[0],s=i[1],c=r?r+u:u;if(\\\"object\\\"==typeof s)t.iterateExtraOptions(s,c+\\\".\\\",a,o);else if(\\\"string\\\"==typeof s||\\\"number\\\"==typeof s)o(c,s.toString());else{if(\\\"boolean\\\"!=typeof s)throw new Error(\\\"Can't handle extra config type: \\\"+typeof s);o(c,s?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),a=n(983),o=n(361);t.setRunOptions=function(e){var t=o.getInstance(),n=0,i=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var s=0;if(void 0!==(null==e?void 0:e.tag)&&(s=a.allocWasmString(e.tag,i)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,s)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var o=a.allocWasmString(e,i),u=a.allocWasmString(r,i);if(0!==t._OrtAddRunConfigEntry(n,o,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),i.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var a=n(967),o=n(983),i=n(361);t.setSessionOptions=function(e){var t,n,u=i.getInstance(),s=0,c=[],f=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(f);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(f.graphOptimizationLevel=\\\"all\\\");var l=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(f.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(f.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(f.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(f.executionMode=\\\"sequential\\\");var p=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(f.executionMode),d=0;if(void 0!==(null==e?void 0:e.logId)&&(d=o.allocWasmString(e.logId,c)),void 0===(null==e?void 0:e.logSeverityLevel))f.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))f.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(f.enableProfiling=!1),0===(s=u._OrtCreateSessionOptions(l,!!f.enableCpuMemArena,!!f.enableMemPattern,p,!!f.enableProfiling,0,d,f.logSeverityLevel,f.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&a.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=o.allocWasmString(e,c),r=o.allocWasmString(t,c);if(0!==u._OrtAddSessionConfigEntry(s,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var h=r(e.executionProviders),m=h.next();!m.done;m=h.next()){var g=m.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof g?g:g.name)){var v=2,y=0;if(\\\"string\\\"!=typeof g){var b=g;(null==b?void 0:b.deviceType)&&(v=b.deviceType),(null==b?void 0:b.powerPreference)&&(y=b.powerPreference)}var _=[0,1,2];if(!_.includes(v))throw new Error(\\\"Invalid deviceType value, it shoule be one of {0, 1, 2}\\\");if(!_.includes(y))throw new Error(\\\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\\\");if(console.log(\\\"webnn device type: \\\"+[\\\"Auto\\\",\\\"GPU\\\",\\\"CPU\\\"][v]),console.log(\\\"webnn power preference: \\\"+[\\\"Auto\\\",\\\"High-performance\\\",\\\"Low-power\\\"][y]),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(s,v,y))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{m&&!m.done&&(n=h.return)&&n.call(h)}finally{if(t)throw t.error}}return[s,c]}catch(e){throw 0!==s&&u._OrtReleaseSessionOptions(s),c.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),a=n.lengthBytesUTF8(e)+1,o=n._malloc(a);return n.stringToUTF8(e,o,a),t.push(o),o}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i},a=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var o=n(586),i=n(919),u=n(983),s=n(361);t.initOrt=function(e,t){var n=s.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var c=[];t.createSession=function(e,t){var n,a=s.getInstance(),o=a._malloc(e.byteLength),u=0,f=0,l=[];try{if(f=(n=r(i.setSessionOptions(t),2))[0],l=n[1],a.HEAPU8.set(e,o),0===(u=a._OrtCreateSession(o,e.byteLength,f)))throw new Error(\\\"Can't create a session\\\")}finally{a._free(o),a._OrtReleaseSessionOptions(f),l.forEach(a._free)}for(var p=a._OrtGetInputCount(u),d=a._OrtGetOutputCount(u),h=[],m=[],g=[],v=[],y=0;y<p;y++){var b=a._OrtGetInputName(u,y);if(0===b)throw new Error(\\\"Can't get an input name\\\");m.push(b),h.push(a.UTF8ToString(b))}for(y=0;y<d;y++){var _=a._OrtGetOutputName(u,y);if(0===_)throw new Error(\\\"Can't get an output name\\\");v.push(_),g.push(a.UTF8ToString(_))}return c.push([u,m,v]),[c.length-1,h,g]},t.releaseSession=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=n[1],o=n[2];a.forEach(t._OrtFree),o.forEach(t._OrtFree),t._OrtReleaseSession(r),c[e]=void 0};var f=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},l=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,a,i){var p,d=s.getInstance(),h=c[e];if(!h)throw new Error(\\\"invalid session id\\\");var m=h[0],g=h[1],v=h[2],y=t.length,b=a.length,_=0,w=[],A=[],T=[];try{_=(p=r(o.setRunOptions(i),2))[0],w=p[1];for(var O=function(e){var t=n[e][0],r=n[e][1],a=n[e][2],o=void 0,i=void 0;if(Array.isArray(a)){i=4*a.length,o=d._malloc(i),T.push(o);for(var s=o/4,c=0;c<a.length;c++){if(\\\"string\\\"!=typeof a[c])throw new TypeError(\\\"tensor data at index \\\"+c+\\\" is not a string\\\");d.HEAPU32[s++]=u.allocWasmString(a[c],T)}}else i=a.byteLength,o=d._malloc(i),T.push(o),d.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,i),o);var f=d.stackSave(),l=d.stackAlloc(4*r.length);try{var p=l/4;r.forEach((function(e){return d.HEAP32[p++]=e}));var h=d._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),o,i,l,r.length);if(0===h)throw new Error(\\\"Can't create a tensor\\\");A.push(h)}finally{d.stackRestore(f)}},E=0;E<y;E++)O(E);var S=d.stackSave(),k=d.stackAlloc(4*y),C=d.stackAlloc(4*y),M=d.stackAlloc(4*b),P=d.stackAlloc(4*b);try{var x=k/4,D=C/4,F=M/4,R=P/4;for(E=0;E<y;E++)d.HEAPU32[x++]=A[E],d.HEAPU32[D++]=g[t[E]];for(E=0;E<b;E++)d.HEAPU32[F++]=0,d.HEAPU32[R++]=v[a[E]];var I=d._OrtRun(m,C,k,y,P,b,M,_),W=[];if(0===I)for(E=0;E<b;E++){var U=d.HEAPU32[M/4+E],j=d.stackSave(),L=d.stackAlloc(16),H=void 0,Y=0;try{if(0!==(I=d._OrtGetTensorData(U,L,L+4,L+8,L+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+I);var N=L/4,z=d.HEAPU32[N++];Y=d.HEAPU32[N++];for(var B=d.HEAPU32[N++],G=d.HEAPU32[N++],V=[],q=0;q<G;q++)V.push(d.HEAPU32[B/4+q]);d._OrtFree(B);var X=0===V.length?1:V.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(H=f(z))){for(var J=[],$=Y/4,Z=0;Z<X;Z++){var Q=d.HEAPU32[$++],K=Z===X-1?void 0:d.HEAPU32[$]-Q;J.push(d.UTF8ToString(Q,K))}W.push([H,V,J])}else{var ee=new(l(H))(X);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(d.HEAPU8.subarray(Y,Y+ee.byteLength)),W.push([H,V,ee])}}finally{d.stackRestore(j),\\\"string\\\"===H&&Y&&d._free(Y),d._OrtReleaseTensor(U)}}if(0===I)return W;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+I+\\\".\\\")}finally{d.stackRestore(S)}}finally{A.forEach(d._OrtReleaseTensor),T.forEach(d._free),d._OrtReleaseRunOptions(_),w.forEach(d._free)}},t.endProfiling=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=t._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(a)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var o=a(e),i=o.next();!i.done;i=o.next()){var u=i.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function u(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var c,f=o(n(449)),l=s(n(474)),p=s(n(932)),d=!1,h=!1,m=!1,g=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return i(void 0,void 0,void 0,(function(){var t,r,a,o,i,s,v,y,b,_,w;return u(this,(function(u){switch(u.label){case 0:if(d)return[2,Promise.resolve()];if(h)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(m)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return h=!0,t=e.initTimeout,r=e.numThreads,a=e.simd,o=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),i=a&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),s=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,v=g(!1,o),y=g(i,o),b=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[y]:void 0,_=!1,w=[],t>0&&w.push(new Promise((function(e){setTimeout((function(){_=!0,e()}),t)}))),w.push(new Promise((function(e,t){var r=o?l.default:p.default,a={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===v?null!=b?b:(null!=s?s:t)+y:t+e}};if(o)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=f.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var i=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+l.default.toString()+\\\"})();\\\";a.mainScriptUrlOrBlob=new Blob([i],{type:\\\"text/javascript\\\"})}r(a).then((function(t){h=!1,d=!0,c=t,e()}),(function(e){h=!1,m=!0,t(e)}))}))),[4,Promise.race(w)];case 1:if(u.sent(),_)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(d&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!d||h||m||(h=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,h=!1,d=!1,m=!0)}},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,a=r.numThreads,o=r.loggingLevel;e.initOrt(a,o),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var i=n.data.in,u=i.model,s=i.options,c=e.createSession(u,s);postMessage({type:\\\"create\\\",out:c})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var f=n.data.in;e.releaseSession(f),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var l=n.data.in,p=l.sessionId,d=l.inputIndices,h=l.inputs,m=l.outputIndices,g=(s=l.options,e.run(p,d,h,m,s));postMessage({type:\\\"run\\\",out:g},e.extractTransferableBuffers(g))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{f=n.data.in,e.endProfiling(f),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}