{"version":3,"sources":["webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external \"fs\"","webpack://onnxruntime-web/external \"os\"","webpack://onnxruntime-web/external \"path\"","webpack://onnxruntime-web/external \"perf_hooks\"","webpack://onnxruntime-web/external \"util\"","webpack://onnxruntime-web/external \"worker_threads\"","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["_scriptDir","e","document","currentScript","src","__filename","n","F","buffer","B","ue","L","r","z","t","V","a","J","o","X","i","Q","u","Z","c","f","s","ready","Promise","l","p","hasOwnProperty","d","m","h","b","g","y","_","v","window","w","importScripts","A","process","versions","node","T","ENVIRONMENT_IS_PTHREAD","E","k","locateFile","__dirname","normalize","readFileSync","Uint8Array","W","readFile","argv","length","replace","slice","on","xr","we","he","exitCode","exit","inspect","global","Worker","O","console","error","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","C","S","M","print","log","bind","D","printErr","warn","thisProgram","quit","wasmBinary","x","noExitRuntime","WebAssembly","I","P","R","U","TextDecoder","this","decode","SharedArrayBuffer","call","j","H","subarray","String","fromCharCode","Y","G","charCodeAt","N","q","K","$","ee","ne","re","te","ae","oe","ie","ar","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","ce","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","fe","se","le","pe","de","me","be","preRun","shift","unshift","ge","ye","_e","ve","onAbort","RuntimeError","Ae","startsWith","Te","preloadedImages","preloadedAudios","Ee","985396","ke","qc","Jb","get","Oe","Atomics","load","Dr","compareExchange","notify","Ce","Me","Eb","Ub","worker","_emscripten_futex_wake","Se","Hb","Gb","bc","bd","vc","store","yr","sr","wc","receiveObjectTransfer","Cc","threadInit","Mc","threadCancel","Lc","threadExit","kc","setExitStatus","Ec","ac","hc","pop","vr","ic","ur","postMessage","cmd","jc","terminate","Db","Zb","Fb","ir","Yb","Ib","Dc","push","splice","Mr","zc","onmessage","data","oc","targetThread","jd","transferList","dr","Ie","thread","loaded","Ob","threadId","text","alert","Ir","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","lc","rc","Sc","now","De","Date","or","xe","Dn","Fe","Nb","Jc","Gc","Hc","Fc","Ic","tc","Tb","Kb","detached","_r","start_routine","Kc","arg","threadInfoStruct","stackBase","stackSize","time","Rc","Pe","exchange","wait","Re","establishStackSpace","Cr","kr","invokeEntryPoint","hrtime","__performance_now_clock_drift","We","Ue","je","He","Ye","Wc","Ge","Ne","qe","Be","Le","ze","Xc","Ve","Math","ceil","Sr","fill","Bc","yc","mc","fd","ed","flags","offset","Je","Xe","Qe","Yc","Ke","Ze","$e","en","TypeError","nn","rn","tn","an","un","cn","Function","fn","name","stack","toString","prototype","Object","create","constructor","sn","ln","pn","sc","forEach","dn","mn","value","hn","$b","bn","gn","fromWireType","yn","_n","vn","wn","An","cr","Tn","En","kn","On","globalThis","Cn","Sn","Mn","arguments","Er","Or","mr","xn","Fn","In","querySelector","Pn","Sb","fc","Uc","hr","Rb","Qb","getParameter","width","height","viewport","Rn","Wn","Un","jn","Hn","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Yn","Gn","Nn","qn","Bn","$c","Zc","Ln","zn","Vn","toTimeString","match","nc","getFullYear","getTimezoneOffset","max","Tr","Ar","Number","wr","Jn","Xn","Qn","Kn","Zn","getTime","getMonth","getDate","setDate","setMonth","setFullYear","$n","getDay","Cb","Xb","Pc","Oc","Vb","Pb","Lb","Wb","kd","Nc","Qc","RegExp","split","substring","abs","includes","Array","set","er","nr","BindingError","InternalError","count_emval_handles","get_first_emval","rr","tr","da","ra","pr","Tc","pa","qa","lr","br","ca","ja","ma","ia","ha","la","ka","ba","fa","ga","Ba","toWireType","argPackAdvance","readValueFromPointer","Mb","Aa","join","ArrayBuffer","Uint8ClampedArray","Ca","xc","xa","map","deleteObject","apply","Da","Fa","ea","na","ya","oa","copyWithin","hardwareConcurrency","ua","min","grow","va","ta","setTimeout","gr","wa","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Ac","cd","dc","pc","gd","hd","ec","getContext","WebGLRenderingContext","ad","attributes","version","canvas","uc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","Vc","dd","getSupportedExtensions","aa","za","Ga","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","cc","sa","getSeconds","getMinutes","getHours","setTime","Ea","asm","exports","ab","Ha","fb","monitorRunDependencies","clearInterval","instance","module","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Ia","_OrtCreateSessionOptions","Ja","_OrtSessionOptionsAppendExecutionProviderWebNN","Ka","_OrtAddSessionConfigEntry","La","_OrtReleaseSessionOptions","Ma","_OrtCreateSession","Na","_OrtReleaseSession","Oa","_OrtGetInputCount","Pa","_OrtGetOutputCount","Qa","_OrtGetInputName","Ra","_OrtGetOutputName","Sa","_OrtFree","Ta","_OrtCreateTensor","Ua","_OrtGetTensorData","Va","_OrtReleaseTensor","Wa","_OrtCreateRunOptions","Xa","_OrtAddRunConfigEntry","Ya","_OrtReleaseRunOptions","Za","_OrtRun","_a","_OrtEndProfiling","$a","_malloc","bb","___errno_location","cb","_free","db","_pthread_self","eb","_emscripten_tls_init","___getTypeName","gb","___embind_register_native_and_builtin_types","hb","_emscripten_current_thread_process_queued_calls","ib","fr","_emscripten_register_main_browser_thread_id","jb","_emscripten_main_browser_thread_id","kb","_emscripten_sync_run_in_main_thread_4","lb","_emscripten_main_thread_process_queued_calls","mb","_emscripten_run_in_main_runtime_thread_js","nb","__emscripten_call_on_thread","ob","_pthread_testcancel","pb","_pthread_exit","qb","__emscripten_thread_init","rb","_emscripten_get_global_libc","sb","___pthread_tsd_run_dtors","tb","__get_tzname","ub","__get_daylight","vb","__get_timezone","wb","stackSave","xb","stackRestore","yb","stackAlloc","zb","_emscripten_stack_set_limits","Ab","_memalign","Bb","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","Fr","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","args","factory","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","type","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","object","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","init","createSessionHandler","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","registerBackend","assign","_cacheKey","getOwnPropertyNames","sort","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","Map","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","dispose","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","root","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","clip","parseClipAttributes","concat","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","momentum","spatial","scale","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","autoPad","dilations","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","bias","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","scales","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","deviceType","webnnOptions","preferenceValues","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort-web.node.js","sourcesContent":["var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function n(){return F.buffer!=B&&ue(F.buffer),L}function r(){return F.buffer!=B&&ue(F.buffer),z}function t(){return F.buffer!=B&&ue(F.buffer),V}function a(){return F.buffer!=B&&ue(F.buffer),J}function o(){return F.buffer!=B&&ue(F.buffer),X}function i(){return F.buffer!=B&&ue(F.buffer),Q}function u(){return F.buffer!=B&&ue(F.buffer),Z}var c,f,s;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,n){f=e,s=n}));var l,p={};for(l in c)c.hasOwnProperty(l)&&(p[l]=c[l]);var d=\"./this.program\";function m(e,n){throw n}var h,b,g,y,_,v=\"object\"==typeof window,w=\"function\"==typeof importScripts,A=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,T=c.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function k(e){return c.locateFile?c.locateFile(e,E):E+e}if(A){if(E=w?require(\"path\").dirname(E)+\"/\":__dirname+\"/\",h=function(e,n){return y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFileSync(e,n?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),W(e.buffer),e},b=function(e,n,r){y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFile(e,(function(e,t){e?r(e):n(t.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof xr))throw e})),process.on(\"unhandledRejection\",we),m=function(e,n){if(he())throw process.exitCode=e,n;process.exit(e)},c.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var O;try{O=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=O.Worker}}else(v||w)&&(w?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\"blob:\")?E.substr(0,E.lastIndexOf(\"/\")+1):\"\",A?(h=function(e,n){return y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFileSync(e,n?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),W(e.buffer),e},b=function(e,n,r){y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFile(e,(function(e,t){e?r(e):n(t.buffer)}))}):(h=function(e){var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(null),n.responseText},w&&(g=function(e){var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),b=function(e,n,r){var t=new XMLHttpRequest;t.open(\"GET\",e,!0),t.responseType=\"arraybuffer\",t.onload=function(){200==t.status||0==t.status&&t.response?n(t.response):r()},t.onerror=r,t.send(null)}));A&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var C,S,M=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(l in p)p.hasOwnProperty(l)&&(c[l]=p[l]);p=null,c.thisProgram&&(d=c.thisProgram),c.quit&&(m=c.quit),c.wasmBinary&&(S=c.wasmBinary);var x=c.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&we(\"no native wasm support detected\");var F,I,P,R=!1;function W(e,n){e||we(\"Assertion failed: \"+n)}function U(e){var n=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),n.decode.call(n,e)}}var j=\"undefined\"!=typeof TextDecoder?new U(\"utf8\"):void 0;function H(e,n,r){var t=n+r;for(r=n;e[r]&&!(r>=t);)++r;if(16<r-n&&e.subarray&&j)return j.decode(e.subarray(n,r));for(t=\"\";n<r;){var a=e[n++];if(128&a){var o=63&e[n++];if(192==(224&a))t+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[n++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[n++])?t+=String.fromCharCode(a):(a-=65536,t+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else t+=String.fromCharCode(a)}return t}function Y(e,n){return e?H(r(),e,n):\"\"}function G(e,n,r,t){if(!(0<t))return 0;var a=r;t=r+t-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(r>=t)break;n[r++]=i}else{if(2047>=i){if(r+1>=t)break;n[r++]=192|i>>6}else{if(65535>=i){if(r+2>=t)break;n[r++]=224|i>>12}else{if(r+3>=t)break;n[r++]=240|i>>18,n[r++]=128|i>>12&63}n[r++]=128|i>>6&63}n[r++]=128|63&i}}return n[r]=0,r-a}function N(e,n,t){return G(e,r(),n,t)}function q(e){for(var n=0,r=0;r<e.length;++r){var t=e.charCodeAt(r);55296<=t&&57343>=t&&(t=65536+((1023&t)<<10)|1023&e.charCodeAt(++r)),127>=t?++n:n=2047>=t?n+2:65535>=t?n+3:n+4}return n}var B,L,z,V,J,X,Q,K,Z,$=\"undefined\"!=typeof TextDecoder?new U(\"utf-16le\"):void 0;function ee(e,n){for(var o=e>>1,i=o+n/2;!(o>=i)&&a()[o];)++o;if(32<(o<<=1)-e&&$)return $.decode(r().subarray(e,o));for(o=\"\",i=0;!(i>=n/2);++i){var u=t()[e+2*i>>1];if(0==u)break;o+=String.fromCharCode(u)}return o}function ne(e,n,r){if(void 0===r&&(r=2147483647),2>r)return 0;var a=n;r=(r-=2)<2*e.length?r/2:e.length;for(var o=0;o<r;++o){var i=e.charCodeAt(o);t()[n>>1]=i,n+=2}return t()[n>>1]=0,n-a}function re(e){return 2*e.length}function te(e,n){for(var r=0,t=\"\";!(r>=n/4);){var a=o()[e+4*r>>2];if(0==a)break;++r,65536<=a?(a-=65536,t+=String.fromCharCode(55296|a>>10,56320|1023&a)):t+=String.fromCharCode(a)}return t}function ae(e,n,r){if(void 0===r&&(r=2147483647),4>r)return 0;var t=n;r=t+r-4;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),o()[n>>2]=i,(n+=4)+4>r)break}return o()[n>>2]=0,n-t}function oe(e){for(var n=0,r=0;r<e.length;++r){var t=e.charCodeAt(r);55296<=t&&57343>=t&&++r,n+=4}return n}function ie(e){var r=q(e)+1,t=ar(r);return t&&G(e,n(),t,r),t}function ue(e){B=e,c.HEAP8=L=new Int8Array(e),c.HEAP16=V=new Int16Array(e),c.HEAP32=X=new Int32Array(e),c.HEAPU8=z=new Uint8Array(e),c.HEAPU16=J=new Uint16Array(e),c.HEAPU32=Q=new Uint32Array(e),c.HEAPF32=K=new Float32Array(e),c.HEAPF64=Z=new Float64Array(e)}T&&(B=c.buffer);var ce=c.INITIAL_MEMORY||16777216;if(T)F=c.wasmMemory,B=c.buffer;else if(c.wasmMemory)F=c.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:ce/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),A&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");F&&(B=F.buffer),ce=B.byteLength,ue(B);var fe,se=[],le=[],pe=[],de=[],me=0;function he(){return x||0<me}function be(){var e=c.preRun.shift();se.unshift(e)}var ge,ye=0,_e=null,ve=null;function we(e){throw c.onAbort&&c.onAbort(e),W(!T),D(e),R=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function Ae(){return ge.startsWith(\"data:application/octet-stream;base64,\")}function Te(){var e=ge;try{if(e==ge&&S)return new Uint8Array(S);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){we(e)}}c.preloadedImages={},c.preloadedAudios={},ge=\"ort-wasm-threaded.wasm\",Ae()||(ge=k(ge));var Ee={985396:function(){throw\"Canceled!\"}};function ke(e){for(;0<e.length;){var n=e.shift();if(\"function\"==typeof n)n(c);else{var r=n.qc;\"number\"==typeof r?void 0===n.Jb?fe.get(r)():fe.get(r)(n.Jb):r(void 0===n.Jb?null:n.Jb)}}}function Oe(e,r){if(0>=e||e>n().length||1&e||0>r)return-28;if(0==r)return 0;2147483647<=r&&(r=1/0);var t=Atomics.load(o(),Dr>>2),a=0;if(t==e&&Atomics.compareExchange(o(),Dr>>2,t,0)==t&&(a=1,0>=--r))return 1;if(0<=(e=Atomics.notify(o(),e>>2,r)))return e+a;throw\"Atomics.notify returned an unexpected value \"+e}function Ce(e){if(T)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var n=Me.Eb[e];n&&(o()[e+12>>2]=0,Me.Ub(n.worker))}c._emscripten_futex_wake=Oe;var Se,Me={Hb:[],Gb:[],bc:[],bd:function(){},vc:function(){for(var e=ar(228),n=0;57>n;++n)i()[e/4+n]=0;o()[e+12>>2]=e,n=e+152,o()[n>>2]=n;var r=ar(512);for(n=0;128>n;++n)i()[r/4+n]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),yr(e,!w,1),sr(e)},wc:function(){Me.receiveObjectTransfer=Me.Cc,Me.threadInit=Me.Mc,Me.threadCancel=Me.Lc,Me.threadExit=Me.kc,Me.setExitStatus=Me.Ec},Eb:{},ac:[],hc:function(){for(;0<Me.ac.length;)Me.ac.pop()();vr()},ic:function(e,n){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Me.hc(),Atomics.store(i(),e+4>>2,n),Atomics.store(i(),e+0>>2,1),Oe(e+0,2147483647),yr(0,0,0)},Ec:function(e){P=e},kc:function(e){var n=ur();n&&(Me.ic(n,e),T&&postMessage({cmd:\"exit\"}))},Lc:function(){Me.ic(ur(),-1),postMessage({cmd:\"cancelDone\"})},jc:function(){for(var e in Me.Eb){var n=Me.Eb[e];n&&n.worker&&Me.Ub(n.worker)}for(Me.Eb={},e=0;e<Me.Hb.length;++e){var r=Me.Hb[e];r.terminate()}for(Me.Hb=[],e=0;e<Me.Gb.length;++e)n=(r=Me.Gb[e]).Db,Me.Zb(n),r.terminate();Me.Gb=[]},Zb:function(e){if(e){if(e.Fb){var n=o()[e.Fb+100>>2];o()[e.Fb+100>>2]=0,ir(n),ir(e.Fb)}e.Fb=0,e.Yb&&e.Ib&&ir(e.Ib),e.Ib=0,e.worker&&(e.worker.Db=null)}},Ub:function(e){Me.Dc((function(){delete Me.Eb[e.Db.Fb],Me.Hb.push(e),Me.Gb.splice(Me.Gb.indexOf(e),1),Me.Zb(e.Db),e.Db=void 0}))},Dc:function(e){o()[Mr>>2]=0;try{e()}finally{o()[Mr>>2]=1}},Cc:function(){},Mc:function(){for(var e in Me.bc)Me.bc[e]()},zc:function(e,n){e.onmessage=function(r){var t=r.data,a=t.cmd;if(e.Db&&(Me.oc=e.Db.Fb),t.targetThread&&t.targetThread!=ur()){var u=Me.Eb[t.jd];u?u.worker.postMessage(r.data,t.transferList):D('Internal error! Worker sent a message \"'+a+'\" to target pthread '+t.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)dr();else if(\"spawnThread\"===a)Ie(r.data);else if(\"cleanupThread\"===a)Ce(t.thread);else if(\"killThread\"===a){if(r=t.thread,T)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!r)throw\"Internal Error! Null pthread_ptr in killThread!\";o()[r+12>>2]=0,t=Me.Eb[r],delete Me.Eb[r],t.worker.terminate(),Me.Zb(t),Me.Gb.splice(Me.Gb.indexOf(t.worker),1),t.worker.Db=void 0}else if(\"cancelThread\"===a){if(r=t.thread,T)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!r)throw\"Internal Error! Null pthread_ptr in cancelThread!\";Me.Eb[r].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,n&&n(e),e.Ob&&(e.Ob(),delete e.Ob);else if(\"print\"===a)M(\"Thread \"+t.threadId+\": \"+t.text);else if(\"printErr\"===a)D(\"Thread \"+t.threadId+\": \"+t.text);else if(\"alert\"===a)alert(\"Thread \"+t.threadId+\": \"+t.text);else if(\"exit\"===a)e.Db&&Atomics.load(i(),e.Db.Fb+64>>2)&&Me.Ub(e);else if(\"exitProcess\"===a)try{Ir(t.returnCode)}catch(e){if(e instanceof xr)return;throw e}else\"cancelDone\"===a?Me.Ub(e):\"objectTransfer\"!==a&&(\"setimmediate\"===r.data.target?e.postMessage(r.data):D(\"worker sent an unknown command \"+a));Me.oc=void 0},e.onerror=function(e){D(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},A&&void 0!==e.on&&(e.on(\"message\",(function(n){e.onmessage({data:n})})),e.on(\"error\",(function(n){e.onerror(n)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:F,wasmModule:I})},lc:function(){var e=k(\"ort-wasm-threaded.worker.js\");Me.Hb.push(new Worker(e))},rc:function(){return 0==Me.Hb.length&&(Me.lc(),Me.zc(Me.Hb[0])),Me.Hb.pop()},Sc:function(e){for(e=performance.now()+e;performance.now()<e;);}};function De(e,n){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return o()[or()>>2]=28,-1;e=Se()}return o()[n>>2]=e/1e3|0,o()[n+4>>2]=e%1e3*1e6|0,0}function xe(e,n){if(T)return Dn(1,1,e,n);pe.unshift({qc:e,Jb:n})}function Fe(e){this.Nb=e-16,this.Jc=function(e){o()[this.Nb+4>>2]=e},this.Gc=function(e){o()[this.Nb+8>>2]=e},this.Hc=function(){o()[this.Nb>>2]=0},this.Fc=function(){n()[this.Nb+12>>0]=0},this.Ic=function(){n()[this.Nb+13>>0]=0},this.tc=function(e,n){this.Jc(e),this.Gc(n),this.Hc(),this.Fc(),this.Ic()}}function Ie(e){if(T)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var n=Me.rc();if(!n)return 6;if(void 0!==n.Db)throw\"Internal error!\";if(!e.Tb)throw\"Internal error, no pthread ptr!\";Me.Gb.push(n);for(var r=ar(512),t=0;128>t;++t)o()[r+4*t>>2]=0;var a=e.Ib+e.Kb,u=(t=Me.Eb[e.Tb]={worker:n,Ib:e.Ib,Kb:e.Kb,Yb:e.Yb,Fb:e.Tb}).Fb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,r),Atomics.store(i(),u+10,t.Fb),Atomics.store(i(),u+20,e.Kb),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.Kb),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached),r=_r()+40,Atomics.store(i(),u+43,r),n.Db=t;var c={cmd:\"run\",start_routine:e.Kc,arg:e.Jb,threadInfoStruct:e.Tb,stackBase:e.Ib,stackSize:e.Kb};return n.Ob=function(){c.time=performance.now(),n.postMessage(c,e.Rc)},n.loaded&&(n.Ob(),delete n.Ob),0}function Pe(e,r,t){if(0>=e||e>n().length||1&e)return-28;if(v){if(Atomics.load(o(),e>>2)!=r)return-6;var a=performance.now();for(t=a+t,Atomics.exchange(o(),Dr>>2,e);;){if((a=performance.now())>t)return Atomics.exchange(o(),Dr>>2,0),-73;if(0==(a=Atomics.exchange(o(),Dr>>2,0)))break;if(dr(),Atomics.load(o(),e>>2)!=r)return-6;Atomics.exchange(o(),Dr>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(o(),e>>2,r,t)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function Re(){A||w||(C||(C={}),C[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(C[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,D(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}c.establishStackSpace=function(e,n){Cr(e,n),kr(e)},c.invokeEntryPoint=function(e,n){return fe.get(e)(n)},Se=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:T?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var We={},Ue=[null,[],[]];function je(e,n){var r=Ue[e];0===n||10===n?((1===e?M:D)(H(r,0)),r.length=0):r.push(n)}var He={};function Ye(e,n){return T?Dn(2,1,e,n):(e=Y(e),He.Wc(e,n))}function Ge(e,n,r){return T?Dn(3,1,e,n,r):0}function Ne(e,n){if(T)return Dn(4,1,e,n)}function qe(e,n,r){if(T)return Dn(5,1,e,n,r)}function Be(e,n,r){return T?Dn(6,1,e,n,r):0}function Le(e,n){if(T)return Dn(7,1,e,n)}function ze(e,n){return T?Dn(8,1,e,n):(e=Y(e),He.Xc(e,n))}function Ve(e,n,t,a,o,i){if(T)n=Dn(9,1,e,n,t,a,o,i);else if(i<<=12,0!=(16&a)&&0!=e%65536)n=-28;else if(0!=(32&a)){var u=65536*Math.ceil(n/65536);(e=Sr(65536,u))?r().fill(0,e,e+u):e=0,e?(We[e]={Bc:e,yc:n,mc:!0,fd:o,ed:t,flags:a,offset:i},n=e):n=-48}else n=-52;return n}function Je(e,n){if(T)e=Dn(10,1,e,n);else{var r=We[e];0!==n&&r?(n===r.yc&&(We[e]=null,r.mc&&ir(r.Bc)),e=0):e=-28}return e}function Xe(e,n,r){if(T)return Dn(11,1,e,n,r)}function Qe(e,n,r){return T?Dn(12,1,e,n,r):(e=Y(e),He.Yc(e,n,r))}function Ke(e){if(T)return Dn(13,1,e)}function Ze(e,n){if(T)return Dn(14,1,e,n)}function $e(e){if(T)return Dn(15,1,e)}function en(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+e)}}var nn=void 0;function rn(e){for(var n=\"\";r()[e];)n+=nn[r()[e++]];return n}var tn={},an={},on={};function un(e){if(void 0===e)return\"_unknown\";var n=(e=e.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return 48<=n&&57>=n?\"_\"+e:e}function cn(e,n){return e=un(e),new Function(\"body\",\"return function \"+e+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(n)}function fn(e){var n=Error,r=cn(e,(function(n){this.name=e,this.message=n,void 0!==(n=Error(n).stack)&&(this.stack=this.toString()+\"\\n\"+n.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},r}var sn=void 0;function ln(e){throw new sn(e)}function pn(e,n,r){if(r=r||{},!(\"argPackAdvance\"in n))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var t=n.name;if(e||ln('type \"'+t+'\" must have a positive integer typeid pointer'),an.hasOwnProperty(e)){if(r.sc)return;ln(\"Cannot register type '\"+t+\"' twice\")}an[e]=n,delete on[e],tn.hasOwnProperty(e)&&(n=tn[e],delete tn[e],n.forEach((function(e){e()})))}var dn=[],mn=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function hn(e){4<e&&0==--mn[e].$b&&(mn[e]=void 0,dn.push(e))}function bn(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var n=dn.length?dn.pop():mn.length;return mn[n]={$b:1,value:e},n}}function gn(e){return this.fromWireType(i()[e>>2])}function yn(e){if(null===e)return\"null\";var n=typeof e;return\"object\"===n||\"array\"===n||\"function\"===n?e.toString():\"\"+e}function _n(e,n){switch(n){case 2:return function(e){var n=this.fromWireType;return F.buffer!=B&&ue(F.buffer),n.call(this,K[e>>2])};case 3:return function(e){return this.fromWireType(u()[e>>3])};default:throw new TypeError(\"Unknown float type: \"+e)}}function vn(e,u,c){switch(u){case 0:return c?function(e){return n()[e]}:function(e){return r()[e]};case 1:return c?function(e){return t()[e>>1]}:function(e){return a()[e>>1]};case 2:return c?function(e){return o()[e>>2]}:function(e){return i()[e>>2]};default:throw new TypeError(\"Unknown integer type: \"+e)}}function wn(e){return e||ln(\"Cannot use deleted val. handle = \"+e),mn[e].value}function An(e,n){var r=an[e];if(void 0===r){var t=rn(e=cr(e));ir(e),ln(n+\" has unknown type \"+t)}return r}var Tn={};function En(e){var n=Tn[e];return void 0===n?rn(e):n}var kn=[];function On(){return\"object\"==typeof globalThis?globalThis:Function(\"return this\")()}var Cn={};function Sn(){if(T)return Dn(16,1);we()}var Mn=[];function Dn(e,n){for(var r=arguments.length-2,t=Er(),a=Or(8*r),o=a>>3,i=0;i<r;i++){var c=arguments[2+i];u()[o+i]=c}return r=mr(e,r,a,n),kr(t),r}var xn=[],Fn=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function In(e){return e=2<e?Y(e):e,Fn[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Pn(e,n,r){var t=In(e);if(!t)return-4;if(t.Sb&&(o()[t.Sb>>2]=n,o()[t.Sb+4>>2]=r),!t.fc&&t.Uc){if(t.Sb){t=o()[t.Sb+8>>2],e=e?Y(e):\"\";var a=Er(),i=Or(12),u=0;if(e){u=q(e)+1;var c=ar(u);N(e,c,u),u=c}return o()[i>>2]=u,o()[i+4>>2]=n,o()[i+8>>2]=r,hr(0,t,657457152,0,u,i),kr(a),1}return-4}return t.fc&&(t=t.fc),e=!1,t.Rb&&t.Rb.Qb&&(e=0===(e=t.Rb.Qb.getParameter(2978))[0]&&0===e[1]&&e[2]===t.width&&e[3]===t.height),t.width=n,t.height=r,e&&t.Rb.Qb.viewport(0,0,n,r),0}function Rn(e,n,r){return T?Dn(17,1,e,n,r):Pn(e,n,r)}var Wn,Un=[\"default\",\"low-power\",\"high-performance\"],jn={};function Hn(){if(!Wn){var e,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in jn)void 0===jn[e]?delete n[e]:n[e]=jn[e];var r=[];for(e in n)r.push(e+\"=\"+n[e]);Wn=r}return Wn}function Yn(e,r){if(T)return Dn(18,1,e,r);var t=0;return Hn().forEach((function(a,i){var u=r+t;for(i=o()[e+4*i>>2]=u,u=0;u<a.length;++u)n()[i++>>0]=a.charCodeAt(u);n()[i>>0]=0,t+=a.length+1})),0}function Gn(e,n){if(T)return Dn(19,1,e,n);var r=Hn();o()[e>>2]=r.length;var t=0;return r.forEach((function(e){t+=e.length+1})),o()[n>>2]=t,0}function Nn(e){return T?Dn(20,1,e):0}function qn(e,r){return T?Dn(21,1,e,r):(e=1==e||2==e?2:we(),n()[r>>0]=e,0)}function Bn(e,n,r,t){return T?Dn(22,1,e,n,r,t):(e=He.$c(e),n=He.Zc(e,n,r),o()[t>>2]=n,0)}function Ln(e,n,r,t,a){if(T)return Dn(23,1,e,n,r,t,a)}function zn(e,n,t,a){if(T)return Dn(24,1,e,n,t,a);for(var i=0,u=0;u<t;u++){for(var c=o()[n+8*u>>2],f=o()[n+(8*u+4)>>2],s=0;s<f;s++)je(e,r()[c+s]);i+=f}return o()[a>>2]=i,0}function Vn(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(T)return Dn(25,1);if(!Vn.nc){Vn.nc=!0;var n=(new Date).getFullYear(),r=new Date(n,0,1),t=new Date(n,6,1);n=r.getTimezoneOffset();var a=t.getTimezoneOffset(),i=Math.max(n,a);o()[Tr()>>2]=60*i,o()[Ar()>>2]=Number(n!=a),r=e(r),t=e(t),r=ie(r),t=ie(t),a<n?(o()[wr()>>2]=r,o()[wr()+4>>2]=t):(o()[wr()>>2]=t,o()[wr()+4>>2]=r)}}function Jn(e){return 0==e%4&&(0!=e%100||0==e%400)}function Xn(e,n){for(var r=0,t=0;t<=n;r+=e[t++]);return r}var Qn=[31,29,31,30,31,30,31,31,30,31,30,31],Kn=[31,28,31,30,31,30,31,31,30,31,30,31];function Zn(e,n){for(e=new Date(e.getTime());0<n;){var r=e.getMonth(),t=(Jn(e.getFullYear())?Qn:Kn)[r];if(!(n>t-e.getDate())){e.setDate(e.getDate()+n);break}n-=t-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function $n(e,r,t,a){function i(e,n,r){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<n;)e=r[0]+e;return e}function u(e,n){return i(e,n,\"0\")}function c(e,n){function r(e){return 0>e?-1:0<e?1:0}var t;return 0===(t=r(e.getFullYear()-n.getFullYear()))&&0===(t=r(e.getMonth()-n.getMonth()))&&(t=r(e.getDate()-n.getDate())),t}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Zn(new Date(e.Cb+1900,0,1),e.Xb);var n=new Date(e.getFullYear()+1,0,4),r=f(new Date(e.getFullYear(),0,4));return n=f(n),0>=c(r,e)?0>=c(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=o()[a+40>>2];for(var p in a={Pc:o()[a>>2],Oc:o()[a+4>>2],Vb:o()[a+8>>2],Pb:o()[a+12>>2],Lb:o()[a+16>>2],Cb:o()[a+20>>2],Wb:o()[a+24>>2],Xb:o()[a+28>>2],kd:o()[a+32>>2],Nc:o()[a+36>>2],Qc:l?Y(l):\"\"},t=Y(t),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})t=t.replace(new RegExp(p,\"g\"),l[p]);var d=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(e){return d[e.Wb].substring(0,3)},\"%A\":function(e){return d[e.Wb]},\"%b\":function(e){return m[e.Lb].substring(0,3)},\"%B\":function(e){return m[e.Lb]},\"%C\":function(e){return u((e.Cb+1900)/100|0,2)},\"%d\":function(e){return u(e.Pb,2)},\"%e\":function(e){return i(e.Pb,2,\" \")},\"%g\":function(e){return s(e).toString().substring(2)},\"%G\":function(e){return s(e)},\"%H\":function(e){return u(e.Vb,2)},\"%I\":function(e){return 0==(e=e.Vb)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.Pb+Xn(Jn(e.Cb+1900)?Qn:Kn,e.Lb-1),3)},\"%m\":function(e){return u(e.Lb+1,2)},\"%M\":function(e){return u(e.Oc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.Vb&&12>e.Vb?\"AM\":\"PM\"},\"%S\":function(e){return u(e.Pc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.Wb||7},\"%U\":function(e){var n=new Date(e.Cb+1900,0,1),r=0===n.getDay()?n:Zn(n,7-n.getDay());return 0>c(r,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-r.getDate()+(Xn(Jn(e.getFullYear())?Qn:Kn,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(r,n)?\"01\":\"00\"},\"%V\":function(e){var n=new Date(e.Cb+1901,0,4),r=f(new Date(e.Cb+1900,0,4));n=f(n);var t=Zn(new Date(e.Cb+1900,0,1),e.Xb);return 0>c(t,r)?\"53\":0>=c(n,t)?\"01\":u(Math.ceil((r.getFullYear()<e.Cb+1900?e.Xb+32-r.getDate():e.Xb+1-r.getDate())/7),2)},\"%w\":function(e){return e.Wb},\"%W\":function(e){var n=new Date(e.Cb,0,1),r=1===n.getDay()?n:Zn(n,0===n.getDay()?1:7-n.getDay()+1);return 0>c(r,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-r.getDate()+(Xn(Jn(e.getFullYear())?Qn:Kn,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(r,n)?\"01\":\"00\"},\"%y\":function(e){return(e.Cb+1900).toString().substring(2)},\"%Y\":function(e){return e.Cb+1900},\"%z\":function(e){var n=0<=(e=e.Nc);return e=Math.abs(e)/60,(n?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.Qc},\"%%\":function(){return\"%\"}})t.includes(p)&&(t=t.replace(new RegExp(p,\"g\"),l[p](a)));return(p=function(e){var n=Array(q(e)+1);return G(e,n,0,n.length),n}(t)).length>r?0:(function(e,r){n().set(e,r)}(p,e),p.length-1)}for(var er=Array(256),nr=0;256>nr;++nr)er[nr]=String.fromCharCode(nr);nn=er,sn=c.BindingError=fn(\"BindingError\"),c.InternalError=fn(\"InternalError\"),c.count_emval_handles=function(){for(var e=0,n=5;n<mn.length;++n)void 0!==mn[n]&&++e;return e},c.get_first_emval=function(){for(var e=5;e<mn.length;++e)if(void 0!==mn[e])return mn[e];return null};var rr=[null,xe,Ye,Ge,Ne,qe,Be,Le,ze,Ve,Je,Xe,Qe,Ke,Ze,$e,Sn,Rn,Yn,Gn,Nn,qn,Bn,Ln,zn,Vn],tr={u:function(e,n,r,t){we(\"Assertion failed: \"+Y(e)+\", at: \"+[n?Y(n):\"unknown filename\",r,t?Y(t):\"unknown function\"])},da:function(e,n){return De(e,n)},b:function(e){return ar(e+16)+16},e:function(e,n){return xe(e,n)},l:function(e,n){Me.ac.push((function(){fe.get(e)(n)}))},c:function(e,n,r){throw new Fe(e).tc(n,r),e},ra:function(e,n,r,t){if(\"undefined\"==typeof SharedArrayBuffer)return D(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return D(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(T&&0===a.length)return pr(687865856,e,n,r,t);var u=0,c=0;if(n&&-1!=n){var f=o()[n>>2];f+=81920,u=o()[n+8>>2],c=0!==o()[n+12>>2]}else f=2097152;(n=0==u)?u=Sr(16,f):W(0<(u-=f));for(var s=ar(228),l=0;57>l;++l)i()[(s>>2)+l]=0;return o()[e>>2]=s,o()[s+12>>2]=s,e=s+152,o()[e>>2]=e,r={Ib:u,Kb:f,Yb:n,detached:c,Kc:r,Tb:s,Jb:t,Rc:a},T?(r.Tc=\"spawnThread\",postMessage(r,a),0):Ie(r)},pa:function(e){throw T?Me.kc(e):(Me.hc(),Ir(e)),\"unwind\"},qa:function(e,n){return function(e,n){if(!e)return D(\"pthread_join attempted on a null thread pointer!\"),71;if(T&&ur()==e)return D(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!T&&lr()==e)return D(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(o()[e+12>>2]!==e)return D(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return D(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(Re();;){var r=Atomics.load(i(),e+0>>2);if(1==r)return r=Atomics.load(i(),e+4>>2),n&&(o()[n>>2]=r),Atomics.store(i(),e+64>>2,1),T?postMessage({cmd:\"cleanupThread\",thread:e}):Ce(e),0;br(),T||dr(),Pe(e+0,r,T?100:1)}}(e,n)},ca:Ye,I:Ge,ja:Ne,ma:qe,K:function(){return 42},X:Be,ia:Le,ha:ze,la:Ve,ka:Je,E:Xe,ba:Qe,fa:Ke,L:Ze,ga:$e,U:function(){},Ba:function(e,r,a,i,u){var c=en(a);pn(e,{name:r=rn(r),fromWireType:function(e){return!!e},toWireType:function(e,n){return n?i:u},argPackAdvance:8,readValueFromPointer:function(e){if(1===a)var i=n();else if(2===a)i=t();else{if(4!==a)throw new TypeError(\"Unknown boolean type size: \"+r);i=o()}return this.fromWireType(i[e>>c])},Mb:null})},Aa:function(e,n){pn(e,{name:n=rn(n),fromWireType:function(e){var n=mn[e].value;return hn(e),n},toWireType:function(e,n){return bn(n)},argPackAdvance:8,readValueFromPointer:gn,Mb:null})},N:function(e,n,r){r=en(r),pn(e,{name:n=rn(n),fromWireType:function(e){return e},toWireType:function(e,n){if(\"number\"!=typeof n&&\"boolean\"!=typeof n)throw new TypeError('Cannot convert \"'+yn(n)+'\" to '+this.name);return n},argPackAdvance:8,readValueFromPointer:_n(n,r),Mb:null})},t:function(e,n,r,t,a){function o(e){return e}n=rn(n),-1===a&&(a=4294967295);var i=en(r);if(0===t){var u=32-8*r;o=function(e){return e<<u>>>u}}var c=n.includes(\"unsigned\");pn(e,{name:n,fromWireType:o,toWireType:function(e,r){if(\"number\"!=typeof r&&\"boolean\"!=typeof r)throw new TypeError('Cannot convert \"'+yn(r)+'\" to '+this.name);if(r<t||r>a)throw new TypeError('Passing a number \"'+yn(r)+'\" from JS side to C/C++ side to an argument of type \"'+n+'\", which is outside the valid range ['+t+\", \"+a+\"]!\");return c?r>>>0:0|r},argPackAdvance:8,readValueFromPointer:vn(n,i,0!==t),Mb:null})},s:function(e,n,r){function t(e){e>>=2;var n=i();return new a(B,n[e+1],n[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][n];pn(e,{name:r=rn(r),fromWireType:t,argPackAdvance:8,readValueFromPointer:t},{sc:!0})},O:function(e,n){var t=\"std::string\"===(n=rn(n));pn(e,{name:n,fromWireType:function(e){var n=i()[e>>2];if(t)for(var a=e+4,o=0;o<=n;++o){var u=e+4+o;if(o==n||0==r()[u]){if(a=Y(a,u-a),void 0===c)var c=a;else c+=String.fromCharCode(0),c+=a;a=u+1}}else{for(c=Array(n),o=0;o<n;++o)c[o]=String.fromCharCode(r()[e+4+o]);c=c.join(\"\")}return ir(e),c},toWireType:function(e,n){n instanceof ArrayBuffer&&(n=new Uint8Array(n));var a=\"string\"==typeof n;a||n instanceof Uint8Array||n instanceof Uint8ClampedArray||n instanceof Int8Array||ln(\"Cannot pass non-string to std::string\");var o=(t&&a?function(){return q(n)}:function(){return n.length})(),u=ar(4+o+1);if(i()[u>>2]=o,t&&a)N(n,u+4,o+1);else if(a)for(a=0;a<o;++a){var c=n.charCodeAt(a);255<c&&(ir(u),ln(\"String has UTF-16 code units that do not fit in 8 bits\")),r()[u+4+a]=c}else for(a=0;a<o;++a)r()[u+4+a]=n[a];return null!==e&&e.push(ir,u),u},argPackAdvance:8,readValueFromPointer:gn,Mb:function(e){ir(e)}})},F:function(e,n,r){if(r=rn(r),2===n)var t=ee,o=ne,u=re,c=function(){return a()},f=1;else 4===n&&(t=te,o=ae,u=oe,c=function(){return i()},f=2);pn(e,{name:r,fromWireType:function(e){for(var r,a=i()[e>>2],o=c(),u=e+4,s=0;s<=a;++s){var l=e+4+s*n;s!=a&&0!=o[l>>f]||(u=t(u,l-u),void 0===r?r=u:(r+=String.fromCharCode(0),r+=u),u=l+n)}return ir(e),r},toWireType:function(e,t){\"string\"!=typeof t&&ln(\"Cannot pass non-string to C++ string type \"+r);var a=u(t),c=ar(4+a+n);return i()[c>>2]=a>>f,o(t,c+4,a+n),null!==e&&e.push(ir,c),c},argPackAdvance:8,readValueFromPointer:gn,Mb:function(e){ir(e)}})},Ca:function(e,n){pn(e,{xc:!0,name:n=rn(n),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},xa:function(e,n){if(e==n)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(T)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=Me.Eb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},G:function(e,n,r){e=wn(e),n=An(n,\"emval::as\");var t=[],a=bn(t);return o()[r>>2]=a,n.toWireType(t,e)},r:function(e,n,r,t,a){e=kn[e],n=wn(n),r=En(r);var i=[];return o()[t>>2]=bn(i),e(n,r,i,a)},n:function(e,n,r,t){(e=kn[e])(n=wn(n),r=En(r),null,t)},d:hn,P:function(e,n){return(e=wn(e))==wn(n)},R:function(e){return 0===e?bn(On()):(e=En(e),bn(On()[e]))},i:function(e,n){for(var r=(n=function(e,n){for(var r=Array(e),t=0;t<e;++t)r[t]=An(o()[(n>>2)+t],\"parameter \"+t);return r}(e,n))[0],t=r.name+\"_$\"+n.slice(1).map((function(e){return e.name})).join(\"_\")+\"$\",a=[\"retType\"],i=[r],u=\"\",c=0;c<e-1;++c)u+=(0!==c?\", \":\"\")+\"arg\"+c,a.push(\"argType\"+c),i.push(n[1+c]);t=\"return function \"+un(\"methodCaller_\"+t)+\"(handle, name, destructors, args) {\\n\";var f=0;for(c=0;c<e-1;++c)t+=\"    var arg\"+c+\" = argType\"+c+\".readValueFromPointer(args\"+(f?\"+\"+f:\"\")+\");\\n\",f+=n[c+1].argPackAdvance;for(t+=\"    var rv = handle[name](\"+u+\");\\n\",c=0;c<e-1;++c)n[c+1].deleteObject&&(t+=\"    argType\"+c+\".deleteObject(arg\"+c+\");\\n\");return r.xc||(t+=\"    return retType.toWireType(destructors, rv);\\n\"),a.push(t+\"};\\n\"),function(e){var n=kn.length;return kn.push(e),n}(e=function(e){var n=Function;if(!(n instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof n+\" which is not a function\");var r=cn(n.name||\"unknownFunctionName\",(function(){}));return r.prototype=n.prototype,r=new r,(e=n.apply(r,e))instanceof Object?e:r}(a).apply(null,i))},A:function(e,n){return bn((e=wn(e))[n=wn(n)])},h:function(e){4<e&&(mn[e].$b+=1)},Da:function(e,n,r,t){e=wn(e);var a=Cn[n];if(!a){a=\"\";for(var o=0;o<n;++o)a+=(0!==o?\", \":\"\")+\"arg\"+o;var i=\"return function emval_allocator_\"+n+\"(constructor, argTypes, args) {\\n\";for(o=0;o<n;++o)i+=\"var argType\"+o+\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \"+o+'], \"parameter '+o+'\");\\nvar arg'+o+\" = argType\"+o+\".readValueFromPointer(args);\\nargs += argType\"+o+\"['argPackAdvance'];\\n\";a=new Function(\"requireRegisteredType\",\"Module\",\"__emval_register\",i+\"var obj = new constructor(\"+a+\");\\nreturn __emval_register(obj);\\n}\\n\")(An,c,bn),Cn[n]=a}return a(e,r,t)},o:function(){return bn([])},f:function(e){return bn(En(e))},j:function(){return bn({})},p:function(e){for(var n=mn[e].value;n.length;){var r=n.pop();n.pop()(r)}hn(e)},g:function(e,n,r){e=wn(e),n=wn(n),r=wn(r),e[n]=r},k:function(e,n){return bn(e=(e=An(e,\"_emval_take_value\")).readValueFromPointer(n))},m:Sn,Q:De,Fa:function(e,n){return e-n},ea:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},z:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},na:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Y:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ya:function(e,n,t){var a;for(Mn.length=0,t>>=2;a=r()[n++];)(a=105>a)&&1&t&&t++,Mn.push(a?u()[t++>>1]:o()[t]),++t;return Ee[e].apply(null,Mn)},Z:Re,B:function(){},x:Pe,w:Oe,oa:function(){return 2147483648},v:Se,V:function(e,n,t){r().copyWithin(e,n,n+t)},C:function(){return A?require(\"os\").cpus().length:navigator.hardwareConcurrency},ua:function(e,n,r){xn.length=n,r>>=3;for(var t=0;t<n;t++)xn[t]=u()[r+t];return(0>e?Ee[-e-1]:rr[e]).apply(null,xn)},W:function(e){var n=r().length;if((e>>>=0)<=n||2147483648<e)return!1;for(var t=1;4>=t;t*=2){var a=n*(1+.2/t);a=Math.min(a,e+100663296),0<(a=Math.max(e,a))%65536&&(a+=65536-a%65536);e:{try{F.grow(Math.min(2147483648,a)-B.byteLength+65535>>>16),ue(F.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},va:function(e,n,r){return In(e)?Pn(e,n,r):Rn(e,n,r)},M:function(){},ta:function(e,n,r){return me+=1,setTimeout((function(){--me,function(e){if(!R){try{e()}catch(e){if(e instanceof xr)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&D(\"exception thrown: \"+[e,e.stack]),e}if(!he())try{T?gr(P):Ir(P)}catch(e){if(!(e instanceof xr))throw e}}}((function(){fe.get(e)(r)}))}),n)},wa:function(e,n){n>>=2;var r=o()[n+6];return n={alpha:!!o()[n],depth:!!o()[n+1],stencil:!!o()[n+2],antialias:!!o()[n+3],premultipliedAlpha:!!o()[n+4],preserveDrawingBuffer:!!o()[n+5],powerPreference:Un[r],failIfMajorPerformanceCaveat:!!o()[n+7],Ac:o()[n+8],cd:o()[n+9],dc:o()[n+10],pc:o()[n+11],gd:o()[n+12],hd:o()[n+13]},!(e=In(e))||n.pc?0:function(e,n){e.ec||(e.ec=e.getContext,e.getContext=function(n,r){return\"webgl\"==n==(r=e.ec(n,r))instanceof WebGLRenderingContext?r:null});var r=e.getContext(\"webgl\",n);return r?function(e,n){var r=ar(8);o()[r+4>>2]=ur();var t={ad:r,attributes:n,version:n.Ac,Qb:e};return e.canvas&&(e.canvas.Rb=t),(void 0===n.dc||n.dc)&&function(e){if(e||(e=void 0),!e.uc){e.uc=!0;var n=e.Qb;!function(e){var n=e.getExtension(\"ANGLE_instanced_arrays\");n&&(e.vertexAttribDivisor=function(e,r){n.vertexAttribDivisorANGLE(e,r)},e.drawArraysInstanced=function(e,r,t,a){n.drawArraysInstancedANGLE(e,r,t,a)},e.drawElementsInstanced=function(e,r,t,a,o){n.drawElementsInstancedANGLE(e,r,t,a,o)})}(n),function(e){var n=e.getExtension(\"OES_vertex_array_object\");n&&(e.createVertexArray=function(){return n.createVertexArrayOES()},e.deleteVertexArray=function(e){n.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){n.bindVertexArrayOES(e)},e.isVertexArray=function(e){return n.isVertexArrayOES(e)})}(n),function(e){var n=e.getExtension(\"WEBGL_draw_buffers\");n&&(e.drawBuffers=function(e,r){n.drawBuffersWEBGL(e,r)})}(n),n.Vc=n.getExtension(\"EXT_disjoint_timer_query\"),n.dd=n.getExtension(\"WEBGL_multi_draw\"),(n.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||n.getExtension(e)}))}}(t),r}(r,n):0}(e,n)},$:Yn,aa:Gn,y:Nn,_:qn,J:Bn,T:Ln,D:zn,za:function(e){var n=Date.now();return o()[e>>2]=n/1e3|0,o()[e+4>>2]=n%1e3*1e3|0,0},Ga:function e(n,r){return n=new Date(1e3*o()[n>>2]),o()[r>>2]=n.getUTCSeconds(),o()[r+4>>2]=n.getUTCMinutes(),o()[r+8>>2]=n.getUTCHours(),o()[r+12>>2]=n.getUTCDate(),o()[r+16>>2]=n.getUTCMonth(),o()[r+20>>2]=n.getUTCFullYear()-1900,o()[r+24>>2]=n.getUTCDay(),o()[r+36>>2]=0,o()[r+32>>2]=0,n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[r+28>>2]=n,e.cc||(e.cc=ie(\"GMT\")),o()[r+40>>2]=e.cc,r},sa:function(){Me.vc()},H:function(e,n){Vn(),e=new Date(1e3*o()[e>>2]),o()[n>>2]=e.getSeconds(),o()[n+4>>2]=e.getMinutes(),o()[n+8>>2]=e.getHours(),o()[n+12>>2]=e.getDate(),o()[n+16>>2]=e.getMonth(),o()[n+20>>2]=e.getFullYear()-1900,o()[n+24>>2]=e.getDay();var r=new Date(e.getFullYear(),0,1),t=(e.getTime()-r.getTime())/864e5|0;return o()[n+28>>2]=t,o()[n+36>>2]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(t!=(r=r.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(r,t)),o()[n+32>>2]=e,e=o()[wr()+(e?4:0)>>2],o()[n+40>>2]=e,n},a:F||c.wasmMemory,S:function(e){Vn();var n=new Date(o()[e+20>>2]+1900,o()[e+16>>2],o()[e+12>>2],o()[e+8>>2],o()[e+4>>2],o()[e>>2],0),r=o()[e+32>>2],t=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),i=new Date(n.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,i);return 0>r?o()[e+32>>2]=Number(i!=u&&c==t):0<r!=(c==t)&&(i=Math.max(u,i),n.setTime(n.getTime()+6e4*((0<r?c:i)-t))),o()[e+24>>2]=n.getDay(),r=(n.getTime()-a.getTime())/864e5|0,o()[e+28>>2]=r,o()[e>>2]=n.getSeconds(),o()[e+4>>2]=n.getMinutes(),o()[e+8>>2]=n.getHours(),o()[e+12>>2]=n.getDate(),o()[e+16>>2]=n.getMonth(),n.getTime()/1e3|0},Ea:$n,q:function(e,n,r,t){return $n(e,n,r,t)}};!function(){function e(e,n){c.asm=e.exports,fe=c.asm.ab,le.unshift(c.asm.Ha),Me.bc.push(c.asm.fb),I=n,T||(ye--,c.monitorRunDependencies&&c.monitorRunDependencies(ye),0==ye&&(null!==_e&&(clearInterval(_e),_e=null),ve&&(e=ve,ve=null,e())))}function n(n){e(n.instance,n.module)}function r(e){return function(){if(!S&&(v||w)){if(\"function\"==typeof fetch&&!ge.startsWith(\"file://\"))return fetch(ge,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ge+\"'\";return e.arrayBuffer()})).catch((function(){return Te()}));if(b)return new Promise((function(e,n){b(ge,(function(n){e(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return Te()}))}().then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(e){D(\"failed to asynchronously prepare wasm: \"+e),we(e)}))}var t={a:tr};if(T||(ye++,c.monitorRunDependencies&&c.monitorRunDependencies(ye)),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(e){return D(\"Module.instantiateWasm callback failed with error: \"+e),!1}(S||\"function\"!=typeof WebAssembly.instantiateStreaming||Ae()||ge.startsWith(\"file://\")||\"function\"!=typeof fetch?r(n):fetch(ge,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(e){return D(\"wasm streaming compile failed: \"+e),D(\"falling back to ArrayBuffer instantiation\"),r(n)}))}))).catch(s)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.Ha).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.Ia).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.Ja).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.Ka).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.La).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.Ma).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.Na).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.Oa).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.Pa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.Qa).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Ra).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Sa).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.Ta).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Ua).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Va).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.Wa).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.Xa).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.Ya).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Za).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm._a).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.$a).apply(null,arguments)};var ar=c._malloc=function(){return(ar=c._malloc=c.asm.bb).apply(null,arguments)},or=c.___errno_location=function(){return(or=c.___errno_location=c.asm.cb).apply(null,arguments)},ir=c._free=function(){return(ir=c._free=c.asm.db).apply(null,arguments)},ur=c._pthread_self=function(){return(ur=c._pthread_self=c.asm.eb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.fb).apply(null,arguments)};var cr=c.___getTypeName=function(){return(cr=c.___getTypeName=c.asm.gb).apply(null,arguments)};c.___embind_register_native_and_builtin_types=function(){return(c.___embind_register_native_and_builtin_types=c.asm.hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.ib).apply(null,arguments)};var fr,sr=c._emscripten_register_main_browser_thread_id=function(){return(sr=c._emscripten_register_main_browser_thread_id=c.asm.jb).apply(null,arguments)},lr=c._emscripten_main_browser_thread_id=function(){return(lr=c._emscripten_main_browser_thread_id=c.asm.kb).apply(null,arguments)},pr=c._emscripten_sync_run_in_main_thread_4=function(){return(pr=c._emscripten_sync_run_in_main_thread_4=c.asm.lb).apply(null,arguments)},dr=c._emscripten_main_thread_process_queued_calls=function(){return(dr=c._emscripten_main_thread_process_queued_calls=c.asm.mb).apply(null,arguments)},mr=c._emscripten_run_in_main_runtime_thread_js=function(){return(mr=c._emscripten_run_in_main_runtime_thread_js=c.asm.nb).apply(null,arguments)},hr=c.__emscripten_call_on_thread=function(){return(hr=c.__emscripten_call_on_thread=c.asm.ob).apply(null,arguments)},br=c._pthread_testcancel=function(){return(br=c._pthread_testcancel=c.asm.pb).apply(null,arguments)},gr=c._pthread_exit=function(){return(gr=c._pthread_exit=c.asm.qb).apply(null,arguments)},yr=c.__emscripten_thread_init=function(){return(yr=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)},_r=c._emscripten_get_global_libc=function(){return(_r=c._emscripten_get_global_libc=c.asm.sb).apply(null,arguments)},vr=c.___pthread_tsd_run_dtors=function(){return(vr=c.___pthread_tsd_run_dtors=c.asm.tb).apply(null,arguments)},wr=c.__get_tzname=function(){return(wr=c.__get_tzname=c.asm.ub).apply(null,arguments)},Ar=c.__get_daylight=function(){return(Ar=c.__get_daylight=c.asm.vb).apply(null,arguments)},Tr=c.__get_timezone=function(){return(Tr=c.__get_timezone=c.asm.wb).apply(null,arguments)},Er=c.stackSave=function(){return(Er=c.stackSave=c.asm.xb).apply(null,arguments)},kr=c.stackRestore=function(){return(kr=c.stackRestore=c.asm.yb).apply(null,arguments)},Or=c.stackAlloc=function(){return(Or=c.stackAlloc=c.asm.zb).apply(null,arguments)},Cr=c._emscripten_stack_set_limits=function(){return(Cr=c._emscripten_stack_set_limits=c.asm.Ab).apply(null,arguments)},Sr=c._memalign=function(){return(Sr=c._memalign=c.asm.Bb).apply(null,arguments)},Mr=c.__emscripten_allow_main_runtime_queued_calls=984944,Dr=c.__emscripten_main_thread_futex=989072;function xr(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function Fr(){function e(){if(!fr&&(fr=!0,c.calledRun=!0,!R)&&(T||ke(le),f(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!T)){if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();de.unshift(e)}ke(de)}}if(!(0<ye))if(T)f(c),T||ke(le),postMessage({cmd:\"loaded\"});else{if(!T){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)be();ke(se)}0<ye||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){c.setStatus(\"\")}),1),e()}),1)):e())}}function Ir(e){if(P=e,T)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new xr(e);he()||(Me.jc(),T||(ke(pe),\"undefined\"!=typeof _fflush&&_fflush(0),Ue[1].length&&je(1,10),Ue[2].length&&je(2,10))),P=e,he()||(Me.jc(),c.onExit&&c.onExit(e),R=!0),m(e,new xr(e))}if(c.UTF8ToString=Y,c.stringToUTF8=N,c.lengthBytesUTF8=q,c.keepRuntimeAlive=he,c.PThread=Me,c.stackSave=Er,c.stackRestore=kr,c.stackAlloc=Or,c.PThread=Me,c.wasmMemory=F,c.ExitStatus=xr,ve=function e(){fr||Fr(),fr||(ve=e)},c.run=Fr,c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return T&&(x=!1,Me.wc()),Fr(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\r\nvar ortWasm = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar e;e||(e=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;e.ready=new Promise(function(a,b){aa=a;ba=b});var k={},u;for(u in e)e.hasOwnProperty(u)&&(k[u]=e[u]);var ca=\"./this.program\",da=\"object\"===typeof window,v=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,x=\"\",fa,y,z,A,B;\r\nif(ea)x=v?require(\"path\").dirname(x)+\"/\":__dirname+\"/\",fa=function(a,b){A||(A=require(\"fs\"));B||(B=require(\"path\"));a=B.normalize(a);return A.readFileSync(a,b?null:\"utf8\")},z=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||C(\"Assertion failed: undefined\");return a},y=function(a,b,c){A||(A=require(\"fs\"));B||(B=require(\"path\"));a=B.normalize(a);A.readFile(a,function(d,f){d?c(d):b(f.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\r\nfunction(a){throw a;}),process.on(\"unhandledRejection\",C),e.inspect=function(){return\"[Emscripten Module object]\"};else if(da||v)v?x=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.lastIndexOf(\"/\")+1):x=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},v&&(z=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\r\nb.send(null);return new Uint8Array(b.response)}),y=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ha=e.print||console.log.bind(console),D=e.printErr||console.warn.bind(console);for(u in k)k.hasOwnProperty(u)&&(e[u]=k[u]);k=null;e.thisProgram&&(ca=e.thisProgram);var E;e.wasmBinary&&(E=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!1;\r\n\"object\"!==typeof WebAssembly&&C(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction la(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(d=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))d+=String.fromCharCode((f&31)<<6|h);else{var l=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|l:(f&7)<<18|h<<12|l<<6|a[b++]&63;65536>f?d+=String.fromCharCode(f):(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else d+=String.fromCharCode(f)}return d}function F(a,b){return a?la(H,a,b):\"\"}\r\nfunction ma(a,b,c,d){if(!(0<d))return 0;var f=c;d=c+d-1;for(var h=0;h<a.length;++h){var l=a.charCodeAt(h);if(55296<=l&&57343>=l){var m=a.charCodeAt(++h);l=65536+((l&1023)<<10)|m&1023}if(127>=l){if(c>=d)break;b[c++]=l}else{if(2047>=l){if(c+1>=d)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=d)break;b[c++]=224|l>>12}else{if(c+3>=d)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-f}function na(a,b,c){return ma(a,H,b,c)}\r\nfunction oa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}var pa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function qa(a,b){var c=a>>1;for(var d=c+b/2;!(c>=d)&&ra[c];)++c;c<<=1;if(32<c-a&&pa)return pa.decode(H.subarray(a,c));c=\"\";for(d=0;!(d>=b/2);++d){var f=I[a+2*d>>1];if(0==f)break;c+=String.fromCharCode(f)}return c}\r\nfunction sa(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var f=0;f<c;++f)I[b>>1]=a.charCodeAt(f),b+=2;I[b>>1]=0;return b-d}function ta(a){return 2*a.length}function ua(a,b){for(var c=0,d=\"\";!(c>=b/4);){var f=J[a+4*c>>2];if(0==f)break;++c;65536<=f?(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023)):d+=String.fromCharCode(f)}return d}\r\nfunction va(a,b,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var f=0;f<a.length;++f){var h=a.charCodeAt(f);if(55296<=h&&57343>=h){var l=a.charCodeAt(++f);h=65536+((h&1023)<<10)|l&1023}J[b>>2]=h;b+=4;if(b+4>c)break}J[b>>2]=0;return b-d}function wa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}function xa(a){var b=oa(a)+1,c=K(b);c&&ma(a,L,c,b);return c}var ya,L,H,I,ra,J,N,za,Aa;\r\nfunction Ba(){var a=ia.buffer;ya=a;e.HEAP8=L=new Int8Array(a);e.HEAP16=I=new Int16Array(a);e.HEAP32=J=new Int32Array(a);e.HEAPU8=H=new Uint8Array(a);e.HEAPU16=ra=new Uint16Array(a);e.HEAPU32=N=new Uint32Array(a);e.HEAPF32=za=new Float32Array(a);e.HEAPF64=Aa=new Float64Array(a)}var Ca,Da=[],Ea=[],Fa=[],Ga=[];function Ha(){var a=e.preRun.shift();Da.unshift(a)}var O=0,Ia=null,P=null;e.preloadedImages={};e.preloadedAudios={};\r\nfunction C(a){if(e.onAbort)e.onAbort(a);D(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Ja(){return Q.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!Ja()){var Ka=Q;Q=e.locateFile?e.locateFile(Ka,x):x+Ka}function La(){var a=Q;try{if(a==Q&&E)return new Uint8Array(E);if(z)return z(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){C(b)}}\r\nfunction Ma(){if(!E&&(da||v)){if(\"function\"===typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return a.arrayBuffer()}).catch(function(){return La()});if(y)return new Promise(function(a,b){y(Q,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return La()})}\r\nfunction Na(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(e);else{var c=b.ib;\"number\"===typeof c?void 0===b.Za?Ca.get(c)():Ca.get(c)(b.Za):c(void 0===b.Za?null:b.Za)}}}function Oa(a){this.ab=a-16;this.tb=function(b){J[this.ab+4>>2]=b};this.qb=function(b){J[this.ab+8>>2]=b};this.rb=function(){J[this.ab>>2]=0};this.pb=function(){L[this.ab+12>>0]=0};this.sb=function(){L[this.ab+13>>0]=0};this.lb=function(b,c){this.tb(b);this.qb(c);this.rb();this.pb();this.sb()}}\r\nvar Pa=0,Qa={},Ra=[null,[],[]],R={};function Sa(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var Ta=void 0;function S(a){for(var b=\"\";H[a];)b+=Ta[H[a++]];return b}var Ua={},Va={},Wa={};function Xa(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}\r\nfunction Ya(a,b){a=Xa(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}function Za(a){var b=Error,c=Ya(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}\r\nvar $a=void 0;function T(a){throw new $a(a);}function U(a,b,c){c=c||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||T('type \"'+d+'\" must have a positive integer typeid pointer');if(Va.hasOwnProperty(a)){if(c.kb)return;T(\"Cannot register type '\"+d+\"' twice\")}Va[a]=b;delete Wa[a];Ua.hasOwnProperty(a)&&(b=Ua[a],delete Ua[a],b.forEach(function(f){f()}))}var ab=[],V=[{},{value:void 0},{value:null},{value:!0},{value:!1}];\r\nfunction bb(a){4<a&&0===--V[a].gb&&(V[a]=void 0,ab.push(a))}function W(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=ab.length?ab.pop():V.length;V[b]={gb:1,value:a};return b}}function cb(a){return this.fromWireType(N[a>>2])}function db(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}\r\nfunction eb(a,b){switch(b){case 2:return function(c){return this.fromWireType(za[c>>2])};case 3:return function(c){return this.fromWireType(Aa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\r\nfunction fb(a,b,c){switch(b){case 0:return c?function(d){return L[d]}:function(d){return H[d]};case 1:return c?function(d){return I[d>>1]}:function(d){return ra[d>>1]};case 2:return c?function(d){return J[d>>2]}:function(d){return N[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function X(a){a||T(\"Cannot use deleted val. handle = \"+a);return V[a].value}function gb(a,b){var c=Va[a];if(void 0===c){a=hb(a);var d=S(a);Y(a);T(b+\" has unknown type \"+d)}return c}var ib={};\r\nfunction jb(a){var b=ib[a];return void 0===b?S(a):b}var kb=[];function lb(){return\"object\"===typeof globalThis?globalThis:Function(\"return this\")()}function mb(a){var b=kb.length;kb.push(a);return b}function nb(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=gb(J[(b>>2)+d],\"parameter \"+d);return c}\r\nfunction ob(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var c=Ya(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}var qb={},rb;rb=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var sb={};\r\nfunction tb(){if(!ub){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in sb)void 0===sb[b]?delete a[b]:a[b]=sb[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);ub=c}return ub}var ub;\r\nfunction vb(a,b){a=new Date(1E3*J[a>>2]);J[b>>2]=a.getUTCSeconds();J[b+4>>2]=a.getUTCMinutes();J[b+8>>2]=a.getUTCHours();J[b+12>>2]=a.getUTCDate();J[b+16>>2]=a.getUTCMonth();J[b+20>>2]=a.getUTCFullYear()-1900;J[b+24>>2]=a.getUTCDay();J[b+36>>2]=0;J[b+32>>2]=0;J[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;vb.hb||(vb.hb=xa(\"GMT\"));J[b+40>>2]=vb.hb;return b}\r\nfunction wb(){function a(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}if(!xb){xb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),d=new Date(b,6,1);b=c.getTimezoneOffset();var f=d.getTimezoneOffset(),h=Math.max(b,f);J[yb()>>2]=60*h;J[zb()>>2]=Number(b!=f);c=a(c);d=a(d);c=xa(c);d=xa(d);f<b?(J[Z()>>2]=c,J[Z()+4>>2]=d):(J[Z()>>2]=d,J[Z()+4>>2]=c)}}var xb;function Ab(a){return 0===a%4&&(0!==a%100||0===a%400)}function Bb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\r\nvar Cb=[31,29,31,30,31,30,31,31,30,31,30,31],Db=[31,28,31,30,31,30,31,31,30,31,30,31];function Eb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(Ab(a.getFullYear())?Cb:Db)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\r\nfunction Fb(a,b,c,d){function f(g,n,t){for(g=\"number\"===typeof g?g.toString():g||\"\";g.length<n;)g=t[0]+g;return g}function h(g,n){return f(g,n,\"0\")}function l(g,n){function t(pb){return 0>pb?-1:0<pb?1:0}var M;0===(M=t(g.getFullYear()-n.getFullYear()))&&0===(M=t(g.getMonth()-n.getMonth()))&&(M=t(g.getDate()-n.getDate()));return M}function m(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function p(g){g=Eb(new Date(g.Xa+1900,0,1),g.fb);var n=new Date(g.getFullYear()+1,0,4),t=m(new Date(g.getFullYear(),0,4));n=m(n);return 0>=l(t,g)?0>=l(n,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var r=J[d+40>>2];d={wb:J[d>>2],vb:J[d+4>>2],cb:J[d+8>>2],bb:J[d+12>>2],Ya:J[d+16>>2],Xa:J[d+20>>2],eb:J[d+24>>2],fb:J[d+28>>2],Eb:J[d+32>>2],ub:J[d+\r\n36>>2],xb:r?F(r):\"\"};c=F(c);r={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var q in r)c=c.replace(new RegExp(q,\"g\"),r[q]);var w=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\r\nG=\"January February March April May June July August September October November December\".split(\" \");r={\"%a\":function(g){return w[g.eb].substring(0,3)},\"%A\":function(g){return w[g.eb]},\"%b\":function(g){return G[g.Ya].substring(0,3)},\"%B\":function(g){return G[g.Ya]},\"%C\":function(g){return h((g.Xa+1900)/100|0,2)},\"%d\":function(g){return h(g.bb,2)},\"%e\":function(g){return f(g.bb,2,\" \")},\"%g\":function(g){return p(g).toString().substring(2)},\"%G\":function(g){return p(g)},\"%H\":function(g){return h(g.cb,\r\n2)},\"%I\":function(g){g=g.cb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){return h(g.bb+Bb(Ab(g.Xa+1900)?Cb:Db,g.Ya-1),3)},\"%m\":function(g){return h(g.Ya+1,2)},\"%M\":function(g){return h(g.vb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.cb&&12>g.cb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.wb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.eb||7},\"%U\":function(g){var n=new Date(g.Xa+1900,0,1),t=0===n.getDay()?n:Eb(n,7-n.getDay());g=new Date(g.Xa+1900,g.Ya,g.bb);return 0>\r\nl(t,g)?h(Math.ceil((31-t.getDate()+(Bb(Ab(g.getFullYear())?Cb:Db,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(t,n)?\"01\":\"00\"},\"%V\":function(g){var n=new Date(g.Xa+1901,0,4),t=m(new Date(g.Xa+1900,0,4));n=m(n);var M=Eb(new Date(g.Xa+1900,0,1),g.fb);return 0>l(M,t)?\"53\":0>=l(n,M)?\"01\":h(Math.ceil((t.getFullYear()<g.Xa+1900?g.fb+32-t.getDate():g.fb+1-t.getDate())/7),2)},\"%w\":function(g){return g.eb},\"%W\":function(g){var n=new Date(g.Xa,0,1),t=1===n.getDay()?n:Eb(n,0===n.getDay()?1:7-n.getDay()+1);g=\r\nnew Date(g.Xa+1900,g.Ya,g.bb);return 0>l(t,g)?h(Math.ceil((31-t.getDate()+(Bb(Ab(g.getFullYear())?Cb:Db,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(t,n)?\"01\":\"00\"},\"%y\":function(g){return(g.Xa+1900).toString().substring(2)},\"%Y\":function(g){return g.Xa+1900},\"%z\":function(g){g=g.ub;var n=0<=g;g=Math.abs(g)/60;return(n?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.xb},\"%%\":function(){return\"%\"}};for(q in r)c.includes(q)&&(c=c.replace(new RegExp(q,\"g\"),r[q](d)));q=Gb(c);\r\nif(q.length>b)return 0;L.set(q,a);return q.length-1}for(var Hb=Array(256),Ib=0;256>Ib;++Ib)Hb[Ib]=String.fromCharCode(Ib);Ta=Hb;$a=e.BindingError=Za(\"BindingError\");e.InternalError=Za(\"InternalError\");e.count_emval_handles=function(){for(var a=0,b=5;b<V.length;++b)void 0!==V[b]&&++a;return a};e.get_first_emval=function(){for(var a=5;a<V.length;++a)if(void 0!==V[a])return V[a];return null};function Gb(a){var b=Array(oa(a)+1);ma(a,b,0,b.length);return b}\r\nvar Lb={a:function(a){return K(a+16)+16},c:function(a,b){Fa.unshift({ib:a,Za:b})},k:function(a,b){Fa.unshift({ib:a,Za:b})},b:function(a,b,c){(new Oa(a)).lb(b,c);Pa++;throw a;},X:function(a,b){a=F(a);return R.yb(a,b)},B:function(){return 0},aa:function(){},da:function(){},D:function(){return 42},Q:function(){return 0},$:function(){},_:function(a,b){a=F(a);return R.zb(a,b)},ca:function(a,b,c,d,f,h){h<<=12;if(0!==(d&16)&&0!==a%65536)b=-28;else if(0!==(d&32)){a=65536*Math.ceil(b/65536);var l=Jb(65536,\r\na);l?(H.fill(0,l,l+a),a=l):a=0;a?(Qa[a]={ob:a,nb:b,jb:!0,fd:f,Db:c,flags:d,offset:h},b=a):b=-48}else b=-52;return b},ba:function(a,b){var c=Qa[a];0!==b&&c?(b===c.nb&&(Qa[a]=null,c.jb&&Y(c.ob)),a=0):a=-28;return a},x:function(){},W:function(a,b,c){a=F(a);return R.Ab(a,b,c)},Y:function(){},G:function(){},Z:function(){},O:function(){},ha:function(a,b,c,d,f){var h=Sa(c);b=S(b);U(a,{name:b,fromWireType:function(l){return!!l},toWireType:function(l,m){return m?d:f},argPackAdvance:8,readValueFromPointer:function(l){if(1===\r\nc)var m=L;else if(2===c)m=I;else if(4===c)m=J;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(m[l>>h])},$a:null})},ga:function(a,b){b=S(b);U(a,{name:b,fromWireType:function(c){var d=V[c].value;bb(c);return d},toWireType:function(c,d){return W(d)},argPackAdvance:8,readValueFromPointer:cb,$a:null})},H:function(a,b,c){c=Sa(c);b=S(b);U(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,f){if(\"number\"!==typeof f&&\"boolean\"!==typeof f)throw new TypeError('Cannot convert \"'+\r\ndb(f)+'\" to '+this.name);return f},argPackAdvance:8,readValueFromPointer:eb(b,c),$a:null})},r:function(a,b,c,d,f){function h(r){return r}b=S(b);-1===f&&(f=4294967295);var l=Sa(c);if(0===d){var m=32-8*c;h=function(r){return r<<m>>>m}}var p=b.includes(\"unsigned\");U(a,{name:b,fromWireType:h,toWireType:function(r,q){if(\"number\"!==typeof q&&\"boolean\"!==typeof q)throw new TypeError('Cannot convert \"'+db(q)+'\" to '+this.name);if(q<d||q>f)throw new TypeError('Passing a number \"'+db(q)+'\" from JS side to C/C++ side to an argument of type \"'+\r\nb+'\", which is outside the valid range ['+d+\", \"+f+\"]!\");return p?q>>>0:q|0},argPackAdvance:8,readValueFromPointer:fb(b,l,0!==d),$a:null})},q:function(a,b,c){function d(h){h>>=2;var l=N;return new f(ya,l[h+1],l[h])}var f=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=S(c);U(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{kb:!0})},I:function(a,b){b=S(b);var c=\"std::string\"===b;U(a,{name:b,fromWireType:function(d){var f=N[d>>2];\r\nif(c)for(var h=d+4,l=0;l<=f;++l){var m=d+4+l;if(l==f||0==H[m]){h=F(h,m-h);if(void 0===p)var p=h;else p+=String.fromCharCode(0),p+=h;h=m+1}}else{p=Array(f);for(l=0;l<f;++l)p[l]=String.fromCharCode(H[d+4+l]);p=p.join(\"\")}Y(d);return p},toWireType:function(d,f){f instanceof ArrayBuffer&&(f=new Uint8Array(f));var h=\"string\"===typeof f;h||f instanceof Uint8Array||f instanceof Uint8ClampedArray||f instanceof Int8Array||T(\"Cannot pass non-string to std::string\");var l=(c&&h?function(){return oa(f)}:function(){return f.length})(),\r\nm=K(4+l+1);N[m>>2]=l;if(c&&h)na(f,m+4,l+1);else if(h)for(h=0;h<l;++h){var p=f.charCodeAt(h);255<p&&(Y(m),T(\"String has UTF-16 code units that do not fit in 8 bits\"));H[m+4+h]=p}else for(h=0;h<l;++h)H[m+4+h]=f[h];null!==d&&d.push(Y,m);return m},argPackAdvance:8,readValueFromPointer:cb,$a:function(d){Y(d)}})},y:function(a,b,c){c=S(c);if(2===b){var d=qa;var f=sa;var h=ta;var l=function(){return ra};var m=1}else 4===b&&(d=ua,f=va,h=wa,l=function(){return N},m=2);U(a,{name:c,fromWireType:function(p){for(var r=\r\nN[p>>2],q=l(),w,G=p+4,g=0;g<=r;++g){var n=p+4+g*b;if(g==r||0==q[n>>m])G=d(G,n-G),void 0===w?w=G:(w+=String.fromCharCode(0),w+=G),G=n+b}Y(p);return w},toWireType:function(p,r){\"string\"!==typeof r&&T(\"Cannot pass non-string to C++ string type \"+c);var q=h(r),w=K(4+q+b);N[w>>2]=q>>m;f(r,w+4,q+b);null!==p&&p.push(Y,w);return w},argPackAdvance:8,readValueFromPointer:cb,$a:function(p){Y(p)}})},ia:function(a,b){b=S(b);U(a,{mb:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},\r\nz:function(a,b,c){a=X(a);b=gb(b,\"emval::as\");var d=[],f=W(d);J[c>>2]=f;return b.toWireType(d,a)},p:function(a,b,c,d,f){a=kb[a];b=X(b);c=jb(c);var h=[];J[d>>2]=W(h);return a(b,c,h,f)},l:function(a,b,c,d){a=kb[a];b=X(b);c=jb(c);a(b,c,null,d)},d:bb,K:function(a,b){a=X(a);b=X(b);return a==b},L:function(a){if(0===a)return W(lb());a=jb(a);return W(lb()[a])},h:function(a,b){b=nb(a,b);for(var c=b[0],d=c.name+\"_$\"+b.slice(1).map(function(r){return r.name}).join(\"_\")+\"$\",f=[\"retType\"],h=[c],l=\"\",m=0;m<a-1;++m)l+=\r\n(0!==m?\", \":\"\")+\"arg\"+m,f.push(\"argType\"+m),h.push(b[1+m]);d=\"return function \"+Xa(\"methodCaller_\"+d)+\"(handle, name, destructors, args) {\\n\";var p=0;for(m=0;m<a-1;++m)d+=\"    var arg\"+m+\" = argType\"+m+\".readValueFromPointer(args\"+(p?\"+\"+p:\"\")+\");\\n\",p+=b[m+1].argPackAdvance;d+=\"    var rv = handle[name](\"+l+\");\\n\";for(m=0;m<a-1;++m)b[m+1].deleteObject&&(d+=\"    argType\"+m+\".deleteObject(arg\"+m+\");\\n\");c.mb||(d+=\"    return retType.toWireType(destructors, rv);\\n\");f.push(d+\"};\\n\");a=ob(f).apply(null,\r\nh);return mb(a)},u:function(a,b){a=X(a);b=X(b);return W(a[b])},g:function(a){4<a&&(V[a].gb+=1)},ja:function(a,b,c,d){a=X(a);var f=qb[b];if(!f){f=\"\";for(var h=0;h<b;++h)f+=(0!==h?\", \":\"\")+\"arg\"+h;var l=\"return function emval_allocator_\"+b+\"(constructor, argTypes, args) {\\n\";for(h=0;h<b;++h)l+=\"var argType\"+h+\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \"+h+'], \"parameter '+h+'\");\\nvar arg'+h+\" = argType\"+h+\".readValueFromPointer(args);\\nargs += argType\"+h+\"['argPackAdvance'];\\n\";f=\r\n(new Function(\"requireRegisteredType\",\"Module\",\"__emval_register\",l+(\"var obj = new constructor(\"+f+\");\\nreturn __emval_register(obj);\\n}\\n\")))(gb,e,W);qb[b]=f}return f(a,c,d)},m:function(){return W([])},e:function(a){return W(jb(a))},i:function(){return W({})},n:function(a){for(var b=V[a].value;b.length;){var c=b.pop();b.pop()(c)}bb(a)},f:function(a,b,c){a=X(a);b=X(b);c=X(c);a[b]=c},j:function(a,b){a=gb(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return W(a)},v:function(){C()},J:function(a,\r\nb){if(0===a)a=Date.now();else if(1===a||4===a)a=rb();else return J[Kb()>>2]=28,-1;J[b>>2]=a/1E3|0;J[b+4>>2]=a%1E3*1E6|0;return 0},M:function(a,b){return a-b},ma:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},t:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},na:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\r\nla:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ea:function(){return 2147483648},P:function(a,b,c){H.copyWithin(a,b,b+c)},w:function(a){var b=H.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ia.grow(Math.min(2147483648,d)-ya.byteLength+65535>>>16);Ba();var f=1;break a}catch(h){}f=void 0}if(f)return!0}return!1},\r\nV:function(a){for(var b=rb();rb()-b<a;);},T:function(a,b){var c=0;tb().forEach(function(d,f){var h=b+c;f=J[a+4*f>>2]=h;for(h=0;h<d.length;++h)L[f++>>0]=d.charCodeAt(h);L[f>>0]=0;c+=d.length+1});return 0},U:function(a,b){var c=tb();J[a>>2]=c.length;var d=0;c.forEach(function(f){d+=f.length+1});J[b>>2]=d;return 0},s:function(){return 0},R:function(a,b){a=1==a||2==a?2:C();L[b>>0]=a;return 0},C:function(a,b,c,d){a=R.Cb(a);b=R.Bb(a,b,c);J[d>>2]=b;return 0},N:function(){},E:function(a,b,c,d){for(var f=\r\n0,h=0;h<c;h++){for(var l=J[b+8*h>>2],m=J[b+(8*h+4)>>2],p=0;p<m;p++){var r=H[l+p],q=Ra[a];0===r||10===r?((1===a?ha:D)(la(q,0)),q.length=0):q.push(r)}f+=m}J[d>>2]=f;return 0},fa:function(a){var b=Date.now();J[a>>2]=b/1E3|0;J[a+4>>2]=b%1E3*1E3|0;return 0},S:vb,F:function(a,b){wb();a=new Date(1E3*J[a>>2]);J[b>>2]=a.getSeconds();J[b+4>>2]=a.getMinutes();J[b+8>>2]=a.getHours();J[b+12>>2]=a.getDate();J[b+16>>2]=a.getMonth();J[b+20>>2]=a.getFullYear()-1900;J[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),\r\n0,1);J[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;J[b+36>>2]=-(60*a.getTimezoneOffset());var d=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(d!=c&&a.getTimezoneOffset()==Math.min(c,d))|0;J[b+32>>2]=a;a=J[Z()+(a?4:0)>>2];J[b+40>>2]=a;return b},A:function(a){wb();var b=new Date(J[a+20>>2]+1900,J[a+16>>2],J[a+12>>2],J[a+8>>2],J[a+4>>2],J[a>>2],0),c=J[a+32>>2],d=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\r\nl=f.getTimezoneOffset(),m=Math.min(l,h);0>c?J[a+32>>2]=Number(h!=l&&m==d):0<c!=(m==d)&&(h=Math.max(l,h),b.setTime(b.getTime()+6E4*((0<c?m:h)-d)));J[a+24>>2]=b.getDay();J[a+28>>2]=(b.getTime()-f.getTime())/864E5|0;J[a>>2]=b.getSeconds();J[a+4>>2]=b.getMinutes();J[a+8>>2]=b.getHours();J[a+12>>2]=b.getDate();J[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},ka:Fb,o:function(a,b,c,d){return Fb(a,b,c,d)}};\r\n(function(){function a(f){e.asm=f.exports;ia=e.asm.oa;Ba();Ca=e.asm.Wa;Ea.unshift(e.asm.pa);O--;e.monitorRunDependencies&&e.monitorRunDependencies(O);0==O&&(null!==Ia&&(clearInterval(Ia),Ia=null),P&&(f=P,P=null,f()))}function b(f){a(f.instance)}function c(f){return Ma().then(function(h){return WebAssembly.instantiate(h,d)}).then(f,function(h){D(\"failed to asynchronously prepare wasm: \"+h);C(h)})}var d={a:Lb};O++;e.monitorRunDependencies&&e.monitorRunDependencies(O);if(e.instantiateWasm)try{return e.instantiateWasm(d,\r\na)}catch(f){return D(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return E||\"function\"!==typeof WebAssembly.instantiateStreaming||Ja()||Q.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(Q,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,d).then(b,function(h){D(\"wasm streaming compile failed: \"+h);D(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\ne.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.pa).apply(null,arguments)};e._OrtInit=function(){return(e._OrtInit=e.asm.qa).apply(null,arguments)};e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.ra).apply(null,arguments)};e._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(e._OrtSessionOptionsAppendExecutionProviderWebNN=e.asm.sa).apply(null,arguments)};\r\ne._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.ta).apply(null,arguments)};e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.ua).apply(null,arguments)};e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.va).apply(null,arguments)};e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.wa).apply(null,arguments)};e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.xa).apply(null,arguments)};\r\ne._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.ya).apply(null,arguments)};e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.za).apply(null,arguments)};e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Aa).apply(null,arguments)};e._OrtFree=function(){return(e._OrtFree=e.asm.Ba).apply(null,arguments)};e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ca).apply(null,arguments)};\r\ne._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Da).apply(null,arguments)};e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm.Ea).apply(null,arguments)};e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.Fa).apply(null,arguments)};e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.Ga).apply(null,arguments)};e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.Ha).apply(null,arguments)};\r\ne._OrtRun=function(){return(e._OrtRun=e.asm.Ia).apply(null,arguments)};e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.Ja).apply(null,arguments)};var K=e._malloc=function(){return(K=e._malloc=e.asm.Ka).apply(null,arguments)},Kb=e.___errno_location=function(){return(Kb=e.___errno_location=e.asm.La).apply(null,arguments)},Y=e._free=function(){return(Y=e._free=e.asm.Ma).apply(null,arguments)},hb=e.___getTypeName=function(){return(hb=e.___getTypeName=e.asm.Na).apply(null,arguments)};\r\ne.___embind_register_native_and_builtin_types=function(){return(e.___embind_register_native_and_builtin_types=e.asm.Oa).apply(null,arguments)};\r\nvar Z=e.__get_tzname=function(){return(Z=e.__get_tzname=e.asm.Pa).apply(null,arguments)},zb=e.__get_daylight=function(){return(zb=e.__get_daylight=e.asm.Qa).apply(null,arguments)},yb=e.__get_timezone=function(){return(yb=e.__get_timezone=e.asm.Ra).apply(null,arguments)},Mb=e.stackSave=function(){return(Mb=e.stackSave=e.asm.Sa).apply(null,arguments)},Nb=e.stackRestore=function(){return(Nb=e.stackRestore=e.asm.Ta).apply(null,arguments)},Ob=e.stackAlloc=function(){return(Ob=e.stackAlloc=e.asm.Ua).apply(null,\r\narguments)},Jb=e._memalign=function(){return(Jb=e._memalign=e.asm.Va).apply(null,arguments)};e.UTF8ToString=F;e.stringToUTF8=na;e.lengthBytesUTF8=oa;e.stackSave=Mb;e.stackRestore=Nb;e.stackAlloc=Ob;var Pb;P=function Qb(){Pb||Rb();Pb||(P=Qb)};\r\nfunction Rb(){function a(){if(!Pb&&(Pb=!0,e.calledRun=!0,!ja)){Na(Ea);aa(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();Ga.unshift(b)}Na(Ga)}}if(!(0<O)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)Ha();Na(Da);0<O||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}e.run=Rb;\r\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();Rb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/* eslint-disable import/no-internal-modules */\r\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\r\nimport {Session} from './onnxjs/session';\r\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\r\n\r\nclass OnnxjsBackend implements Backend {\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  async init(): Promise<void> {}\r\n\r\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\r\n      Promise<SessionHandler> {\r\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\r\n    // onnxruntime-common).\r\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\r\n    //       Currently we allow this to happen to make test runner work.\r\n    const session = new Session(options as unknown as Session.Config);\r\n\r\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\r\n    if (typeof pathOrBuffer === 'string') {\r\n      await session.loadModel(pathOrBuffer);\r\n    } else {\r\n      await session.loadModel(pathOrBuffer);\r\n    }\r\n\r\n    return new OnnxjsSessionHandler(session);\r\n  }\r\n}\r\n\r\nexport const onnxjsBackend = new OnnxjsBackend();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {readFile} from 'fs';\r\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\r\nimport {cpus} from 'os';\r\nimport {promisify} from 'util';\r\nimport {initWasm} from './wasm/proxy-wrapper';\r\n\r\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\r\n\r\n/**\r\n * This function initializes all flags for WebAssembly.\r\n *\r\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\r\n * being created, to override default value.\r\n */\r\nexport const initializeFlags = (): void => {\r\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\r\n    env.wasm.initTimeout = 0;\r\n  }\r\n\r\n  if (typeof env.wasm.simd !== 'boolean') {\r\n    env.wasm.simd = true;\r\n  }\r\n\r\n  if (typeof env.wasm.proxy !== 'boolean') {\r\n    env.wasm.proxy = false;\r\n  }\r\n\r\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\r\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\r\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\r\n  }\r\n};\r\n\r\nclass OnnxruntimeWebAssemblyBackend implements Backend {\r\n  async init(): Promise<void> {\r\n    // populate wasm flags\r\n    initializeFlags();\r\n\r\n    // init wasm\r\n    await initWasm();\r\n  }\r\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\r\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\r\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\r\n      Promise<SessionHandler> {\r\n    let buffer: Uint8Array;\r\n    if (typeof pathOrBuffer === 'string') {\r\n      if (typeof fetch === 'undefined') {\r\n        // node\r\n        buffer = await promisify(readFile)(pathOrBuffer);\r\n      } else {\r\n        // browser\r\n        const response = await fetch(pathOrBuffer);\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        buffer = new Uint8Array(arrayBuffer);\r\n      }\r\n    } else {\r\n      buffer = pathOrBuffer;\r\n    }\r\n\r\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\r\n    await handler.loadModel(buffer, options);\r\n    return Promise.resolve(handler);\r\n  }\r\n}\r\n\r\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport * from 'onnxruntime-common';\r\nimport {registerBackend} from 'onnxruntime-common';\r\nimport {onnxjsBackend} from './backend-onnxjs';\r\nimport {wasmBackend} from './backend-wasm';\r\n\r\nregisterBackend('webgl', onnxjsBackend, 1);\r\nregisterBackend('wasm', wasmBackend, 2);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nclass AttributeWithCacheKeyImpl {\r\n  constructor(attribute: Record<string, unknown>) {\r\n    Object.assign(this, attribute);\r\n  }\r\n\r\n  private _cacheKey: string;\r\n  public get cacheKey(): string {\r\n    if (!this._cacheKey) {\r\n      this._cacheKey =\r\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\r\n    }\r\n    return this._cacheKey;\r\n  }\r\n}\r\n\r\nexport interface AttributeWithCacheKey {\r\n  readonly cacheKey: string;\r\n}\r\n\r\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\r\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\n\r\nimport {Tensor} from './tensor';\r\nimport {LongUtil} from './util';\r\n\r\nexport declare namespace Attribute {\r\n  export interface DataTypeMap {\r\n    float: number;\r\n    int: number;\r\n    string: string;\r\n    tensor: Tensor;\r\n    floats: number[];\r\n    ints: number[];\r\n    strings: string[];\r\n    tensors: Tensor[];\r\n  }\r\n\r\n  export type DataType = keyof DataTypeMap;\r\n}\r\n\r\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\r\n\r\ntype Value = [ValueTypes, Attribute.DataType];\r\n\r\nexport class Attribute {\r\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\r\n    this._attributes = new Map();\r\n    if (attributes !== null && attributes !== undefined) {\r\n      for (const attr of attributes) {\r\n        if (attr instanceof onnx.AttributeProto) {\r\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\r\n        } else if (attr instanceof ortFbs.Attribute) {\r\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\r\n        }\r\n      }\r\n      if (this._attributes.size < attributes.length) {\r\n        throw new Error('duplicated attribute names');\r\n      }\r\n    }\r\n  }\r\n\r\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\r\n    this._attributes.set(key, [value, type]);\r\n  }\r\n  delete(key: string): void {\r\n    this._attributes.delete(key);\r\n  }\r\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\r\n    return this.get(key, 'float', defaultValue);\r\n  }\r\n\r\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\r\n    return this.get(key, 'int', defaultValue);\r\n  }\r\n\r\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\r\n    return this.get(key, 'string', defaultValue);\r\n  }\r\n\r\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\r\n    return this.get(key, 'tensor', defaultValue);\r\n  }\r\n\r\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\r\n    return this.get(key, 'floats', defaultValue);\r\n  }\r\n\r\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\r\n    return this.get(key, 'ints', defaultValue);\r\n  }\r\n\r\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\r\n    return this.get(key, 'strings', defaultValue);\r\n  }\r\n\r\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\r\n    return this.get(key, 'tensors', defaultValue);\r\n  }\r\n\r\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\r\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\r\n    const valueAndType = this._attributes.get(key);\r\n    if (valueAndType === undefined) {\r\n      if (defaultValue !== undefined) {\r\n        return defaultValue;\r\n      }\r\n      throw new Error(`required attribute not found: ${key}`);\r\n    }\r\n    if (valueAndType[1] !== type) {\r\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\r\n    }\r\n    return valueAndType[0] as V;\r\n  }\r\n\r\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\r\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\r\n    switch (type) {\r\n      case onnx.AttributeProto.AttributeType.FLOAT:\r\n        return 'float';\r\n      case onnx.AttributeProto.AttributeType.INT:\r\n        return 'int';\r\n      case onnx.AttributeProto.AttributeType.STRING:\r\n        return 'string';\r\n      case onnx.AttributeProto.AttributeType.TENSOR:\r\n        return 'tensor';\r\n      case onnx.AttributeProto.AttributeType.FLOATS:\r\n        return 'floats';\r\n      case onnx.AttributeProto.AttributeType.INTS:\r\n        return 'ints';\r\n      case onnx.AttributeProto.AttributeType.STRINGS:\r\n        return 'strings';\r\n      case onnx.AttributeProto.AttributeType.TENSORS:\r\n        return 'tensors';\r\n      default:\r\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\r\n    }\r\n  }\r\n\r\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\r\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\r\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\r\n      throw new Error('graph attribute is not supported yet');\r\n    }\r\n\r\n    const value = this.getValueNoCheck(attr);\r\n\r\n    // cast LONG to number\r\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\r\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\r\n    }\r\n\r\n    // cast LONG[] to number[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\r\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\r\n      const numberValue: number[] = new Array<number>(arr.length);\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        const maybeLong = arr[i];\r\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\r\n      }\r\n\r\n      return numberValue;\r\n    }\r\n\r\n    // cast onnx.TensorProto to onnxjs.Tensor\r\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\r\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\r\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\r\n    }\r\n\r\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const tensorProtos = value as onnx.ITensorProto[];\r\n        return tensorProtos.map(value => Tensor.fromProto(value));\r\n      } else if (attr instanceof ortFbs.Attribute) {\r\n        const tensorProtos = value as ortFbs.Tensor[];\r\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\r\n      }\r\n    }\r\n\r\n    // cast Uint8Array to string\r\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\r\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\r\n      // string attributes are returned as string, so no conversion is needed.\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const utf8String = value as Uint8Array;\r\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\r\n      }\r\n    }\r\n\r\n    // cast Uint8Array[] to string[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\r\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\r\n      // format strings attributes are returned as string[], so no conversion is needed.\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const utf8Strings = value as Uint8Array[];\r\n        return utf8Strings.map(\r\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\r\n      }\r\n    }\r\n\r\n    return value as ValueTypes;\r\n  }\r\n\r\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\r\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\r\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\r\n  }\r\n\r\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\r\n    switch (attr.type!) {\r\n      case onnx.AttributeProto.AttributeType.FLOAT:\r\n        return attr.f;\r\n      case onnx.AttributeProto.AttributeType.INT:\r\n        return attr.i;\r\n      case onnx.AttributeProto.AttributeType.STRING:\r\n        return attr.s;\r\n      case onnx.AttributeProto.AttributeType.TENSOR:\r\n        return attr.t;\r\n      case onnx.AttributeProto.AttributeType.GRAPH:\r\n        return attr.g;\r\n      case onnx.AttributeProto.AttributeType.FLOATS:\r\n        return attr.floats;\r\n      case onnx.AttributeProto.AttributeType.INTS:\r\n        return attr.ints;\r\n      case onnx.AttributeProto.AttributeType.STRINGS:\r\n        return attr.strings;\r\n      case onnx.AttributeProto.AttributeType.TENSORS:\r\n        return attr.tensors;\r\n      case onnx.AttributeProto.AttributeType.GRAPHS:\r\n        return attr.graphs;\r\n      default:\r\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\r\n    }\r\n  }\r\n\r\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\r\n    switch (attr.type()) {\r\n      case ortFbs.AttributeType.FLOAT:\r\n        return attr.f();\r\n      case ortFbs.AttributeType.INT:\r\n        return attr.i();\r\n      case ortFbs.AttributeType.STRING:\r\n        return attr.s();\r\n      case ortFbs.AttributeType.TENSOR:\r\n        return attr.t();\r\n      case ortFbs.AttributeType.GRAPH:\r\n        return attr.g();\r\n      case ortFbs.AttributeType.FLOATS:\r\n        return attr.floatsArray();\r\n      case ortFbs.AttributeType.INTS: {\r\n        const ints = [];\r\n        for (let i = 0; i < attr.intsLength(); i++) {\r\n          ints.push(attr.ints(i)!);\r\n        }\r\n        return ints;\r\n      }\r\n      case ortFbs.AttributeType.STRINGS: {\r\n        const strings = [];\r\n        for (let i = 0; i < attr.stringsLength(); i++) {\r\n          strings.push(attr.strings(i));\r\n        }\r\n        return strings;\r\n      }\r\n      case ortFbs.AttributeType.TENSORS: {\r\n        const tensors = [];\r\n        for (let i = 0; i < attr.tensorsLength(); i++) {\r\n          tensors.push(attr.tensors(i)!);\r\n        }\r\n        return tensors;\r\n      }\r\n      // case ortFbs.AttributeType.GRAPHS:\r\n      // TODO: Subgraph not supported yet.\r\n      // const graphs = [];\r\n      // for (let i = 0; i < attr.graphsLength(); i++) {\r\n      //   graphs.push(attr.graphs(i)!);\r\n      // }\r\n      // return graphs;\r\n      default:\r\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\r\n    }\r\n  }\r\n\r\n  protected _attributes: Map<string, Value>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {WebGLBackend} from './backends/backend-webgl';\r\nimport {Graph} from './graph';\r\nimport {Operator} from './operators';\r\nimport {OpSet} from './opset';\r\nimport {Session} from './session';\r\n\r\nexport interface InferenceHandler {\r\n  /**\r\n   * dispose the inference handler. it will be called as the last step in Session.run()\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\nexport interface SessionHandler {\r\n  /**\r\n   * transform the graph at initialization time\r\n   * @param graphTransformer the graph transformer to manipulate the model graph\r\n   */\r\n  transformGraph?(graphTransformer: Graph.Transformer): void;\r\n\r\n  /**\r\n   * create an instance of InferenceHandler to use in a Session.run() call\r\n   */\r\n  createInferenceHandler(): InferenceHandler;\r\n\r\n  /**\r\n   * dispose the session handler. it will be called when a session is being disposed explicitly\r\n   */\r\n  dispose(): void;\r\n\r\n  /**\r\n   * Resolves the operator from the name and opset version; backend specific\r\n   * @param node the node to resolve\r\n   * @param opsets a list of opsets that exported from the model\r\n   * @param graph the completely initialized graph\r\n   */\r\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\r\n\r\n  /**\r\n   * This method let's the sessionHandler know that the graph initialization is complete\r\n   * @param graph the completely initialized graph\r\n   */\r\n  onGraphInitialized?(graph: Graph): void;\r\n\r\n  /**\r\n   * a reference to the corresponding backend\r\n   */\r\n  readonly backend: Backend;\r\n\r\n  /**\r\n   * a reference to the session context\r\n   */\r\n  readonly context: Session.Context;\r\n}\r\n\r\nexport interface Backend {\r\n  /**\r\n   * initialize the backend. will be called only once, when the first time the\r\n   * backend it to be used\r\n   */\r\n  initialize(): boolean|Promise<boolean>;\r\n\r\n  /**\r\n   * create an instance of SessionHandler to use in a Session object's lifecycle\r\n   */\r\n  createSessionHandler(context: Session.Context): SessionHandler;\r\n\r\n  /**\r\n   * dispose the backend. currently this will not be called\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\n// caches all initialized backend instances\r\nconst backendsCache: Map<string, Backend> = new Map();\r\n\r\nexport const backend: {[name: string]: Backend} = {\r\n  webgl: new WebGLBackend(),\r\n};\r\n\r\n/**\r\n * Resolve a reference to the backend. If a hint is specified, the corresponding\r\n * backend will be used.\r\n */\r\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\r\n  if (!hint) {\r\n    return resolveBackend(['webgl']);\r\n  } else {\r\n    const hints = typeof hint === 'string' ? [hint] : hint;\r\n\r\n    for (const backendHint of hints) {\r\n      const cache = backendsCache.get(backendHint);\r\n      if (cache) {\r\n        return cache;\r\n      }\r\n\r\n      const backend = await tryLoadBackend(backendHint);\r\n      if (backend) {\r\n        return backend;\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('no available backend to use');\r\n}\r\n\r\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\r\n  const backendObj = backend;\r\n\r\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\r\n    const backend = backendObj[backendHint];\r\n    let init = backend.initialize();\r\n    if (typeof init === 'object' && 'then' in init) {\r\n      init = await init;\r\n    }\r\n    if (init) {\r\n      backendsCache.set(backendHint, backend);\r\n      return backend;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction isBackend(obj: unknown) {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const o = obj as any;\r\n\r\n  // check if an object is a Backend instance\r\n  if (\r\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\r\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\r\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport type BackendType = Backend;\r\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\r\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\nimport {Backend, SessionHandler} from '../backend';\r\nimport {Logger} from '../instrument';\r\nimport {Session} from '../session';\r\n\r\nimport {WebGLSessionHandler} from './webgl/session-handler';\r\nimport {WebGLContext} from './webgl/webgl-context';\r\nimport {createWebGLContext} from './webgl/webgl-context-factory';\r\n\r\n/**\r\n * WebGLBackend is the entry point for all WebGL opeartions\r\n * When it starts it created the WebGLRenderingContext\r\n * and other main framework components such as Program and Texture Managers\r\n */\r\nexport class WebGLBackend implements Backend {\r\n  glContext: WebGLContext;\r\n\r\n  get contextId(): 'webgl'|'webgl2'|undefined {\r\n    return env.webgl.contextId;\r\n  }\r\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\r\n    env.webgl.contextId = value;\r\n  }\r\n\r\n  get matmulMaxBatchSize(): number|undefined {\r\n    return env.webgl.matmulMaxBatchSize;\r\n  }\r\n  set matmulMaxBatchSize(value: number|undefined) {\r\n    env.webgl.matmulMaxBatchSize = value;\r\n  }\r\n\r\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\r\n    return env.webgl.textureCacheMode;\r\n  }\r\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\r\n    env.webgl.textureCacheMode = value;\r\n  }\r\n\r\n  get pack(): boolean|undefined {\r\n    return env.webgl.pack;\r\n  }\r\n  set pack(value: boolean|undefined) {\r\n    env.webgl.pack = value;\r\n  }\r\n\r\n  get async(): boolean|undefined {\r\n    return env.webgl.async;\r\n  }\r\n  set async(value: boolean|undefined) {\r\n    env.webgl.async = value;\r\n  }\r\n\r\n  initialize(): boolean {\r\n    try {\r\n      this.glContext = createWebGLContext(this.contextId);\r\n      if (typeof this.matmulMaxBatchSize !== 'number') {\r\n        this.matmulMaxBatchSize = 16;\r\n      }\r\n      if (typeof this.textureCacheMode !== 'string') {\r\n        this.textureCacheMode = 'full';\r\n      }\r\n      if (typeof this.pack !== 'boolean') {\r\n        this.pack = false;\r\n      }\r\n      if (typeof this.async !== 'boolean') {\r\n        this.async = false;\r\n      }\r\n\r\n      Logger.setWithEnv(env);\r\n\r\n      Logger.verbose(\r\n          'WebGLBackend',\r\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\r\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\r\n              this.async}.`);\r\n      return true;\r\n    } catch (e) {\r\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\r\n      return false;\r\n    }\r\n  }\r\n  createSessionHandler(context: Session.Context): SessionHandler {\r\n    return new WebGLSessionHandler(this, context);\r\n  }\r\n  dispose(): void {\r\n    this.glContext.dispose();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\nimport {getGlsl} from './glsl-source';\r\nimport {squeezeShape} from './texture-layout-strategy';\r\nimport {TextureLayout} from './types';\r\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\r\n\r\n/**\r\n * GLSL Library responsible for data types and routines for manipulating\r\n * coordinates and mapping to/from tensor indices\r\n */\r\nexport class CoordsGlslLib extends GlslLib {\r\n  returnType: string;\r\n\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      ...this.offsetToCoords(),\r\n      ...this.coordsToOffset(),\r\n      ...this.toVec(),\r\n      ...this.valueFrom(),\r\n      // TODO return these only when packing is enabled.\r\n      ...this.getCommonUtilFuncs(),\r\n      ...this.getInputsSamplingSnippets(),\r\n      ...this.getOutputSamplingSnippet()\r\n    };\r\n  }\r\n  getCustomTypes() {\r\n    return {};\r\n  }\r\n  /**\r\n   * Produces a function that can map from\r\n   * 2D normalzied coordinates (s,t) to a flat offset\r\n   */\r\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\r\n    const funcName = 'offsetToCoords';\r\n    return {\r\n      offsetToCoords: new GlslLibRoutine(`\r\n      vec2 ${funcName}(int offset, int width, int height) {\r\n        int t = offset / width;\r\n        int s = offset - t*width;\r\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\r\n        return coords;\r\n      }\r\n      `)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Produces a function that can map from\r\n   * 2D normalzied coordinates (s,t) to a flat offset\r\n   */\r\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\r\n    const funcName = 'coordsToOffset';\r\n    return {\r\n      coordsToOffset: new GlslLibRoutine(`\r\n      int ${funcName}(vec2 coords, int width, int height) {\r\n        float s = coords.s * float(width);\r\n        float t = coords.t * float(height);\r\n        int offset = int(t) * width + int(s);\r\n        return offset;\r\n      }\r\n      `)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generates code for output sampler.\r\n   */\r\n\r\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    if (outputLayout.isPacked) {\r\n      return this.getPackedOutputSamplingSnippet(outputLayout);\r\n    } else {\r\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates code for packed output sampler.\r\n   */\r\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\r\n    const outShape = outputLayout.unpackedShape;\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const funcName = 'getOutputCoords';\r\n    switch (outShape.length) {\r\n      case 0:\r\n        result[funcName] = this.getOutputScalarCoords();\r\n        break;\r\n      case 1:\r\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\r\n        break;\r\n      case 2:\r\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 3:\r\n        result[funcName] =\r\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      default:\r\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    // TODO we need this to properly return a packed vec4 from kernels.\r\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\r\n    const floatTextureSetRGBASource = `\r\n      void setOutput(vec4 val) {\r\n        ${glsl.output} = val;\r\n      }\r\n    `;\r\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\r\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generates code for unpacked output sampler.\r\n   */\r\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\r\n    const outShape = outputLayout.unpackedShape;\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const funcName = 'getOutputCoords';\r\n    switch (outShape.length) {\r\n      case 0:\r\n        result[funcName] = this.getOutputScalarCoords();\r\n        break;\r\n      case 1:\r\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\r\n        break;\r\n      case 2:\r\n        result[funcName] =\r\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 3:\r\n        result[funcName] =\r\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 4:\r\n        result[funcName] = this.getOutputUnpacked4DCoords(\r\n            outShape as [number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 5:\r\n        result[funcName] = this.getOutputUnpacked5DCoords(\r\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 6:\r\n        result[funcName] = this.getOutputUnpacked6DCoords(\r\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    // TODO we need this to properly return a packed vec4 from kernels.\r\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\r\n    const floatTextureSetRSource = `\r\n        void setOutput(float val) {\r\n          ${glsl.output} = vec4(val, 0, 0, 0);\r\n        }\r\n    `;\r\n    const floatTextureSetRFuncName = 'floatTextureSetR';\r\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Scalar output coordinates.\r\n   */\r\n  protected getOutputScalarCoords(): GlslLibRoutine {\r\n    return new GlslLibRoutine(`\r\n      int getOutputCoords() {\r\n        return 0;\r\n      }\r\n    `);\r\n  }\r\n\r\n  /**\r\n   * 1D packed output coordinates.\r\n   */\r\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = texShape;\r\n    let source = '';\r\n    if (packedTexShape[0] === 1) {\r\n      source = `\r\n          int getOutputCoords() {\r\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    if (packedTexShape[1] === 1) {\r\n      source = `\r\n          int getOutputCoords() {\r\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    source = `\r\n        int getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * 2D packed output coordinates.\r\n   */\r\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\r\n    let source = '';\r\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\r\n      source = `\r\n        ivec2 getOutputCoords() {\r\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\r\n        }\r\n      `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    const packedTexShape = texShape;\r\n    // texels needed to accommodate a logical row\r\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\r\n\r\n    /**\r\n     * getOutputCoords\r\n     *\r\n     * resTexRC: The rows and columns of the texels. If you move over one\r\n     * texel to the right in the packed texture, you are moving over one column\r\n     * (not two).\r\n     *\r\n     * index: The texel index\r\n     */\r\n    source = `\r\n        ivec2 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n\r\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n          // reverse r and c order for packed texture\r\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n          int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n          return ivec2(r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * 3D packed output coordinates.\r\n   */\r\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\r\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\r\n    const source = `\r\n        ivec3 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n          int b = index / ${texelsInBatch};\r\n          index -= b * ${texelsInBatch};\r\n\r\n          // reverse r and c order for packed texture\r\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n          int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n          return ivec3(b, r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * ND packed output coordinates.\r\n   */\r\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n\r\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\r\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\r\n    let texelsInBatchN = texelsInBatch;\r\n    let batches = '';\r\n    let coords = 'b, r, c';\r\n\r\n    for (let b = 2; b < shape.length - 1; b++) {\r\n      texelsInBatchN *= shape[shape.length - b - 1];\r\n      batches = `\r\n      int b${b} = index / ${texelsInBatchN};\r\n      index -= b${b} * ${texelsInBatchN};\r\n    ` + batches;\r\n      coords = `b${b}, ` + coords;\r\n    }\r\n    const source = `\r\n      ivec${shape.length} getOutputCoords() {\r\n        ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n        ${batches}\r\n\r\n        int b = index / ${texelsInBatch};\r\n        index -= b * ${texelsInBatch};\r\n\r\n        // reverse r and c order for packed texture\r\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n        int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n        return ivec${shape.length}(${coords});\r\n      }\r\n    `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 1D output coordinates.\r\n   */\r\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\r\n    const source = `\r\n        int getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 2D output coordinates.\r\n   */\r\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\r\n    const source = `\r\n        ivec2 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          int r = index / ${shape[1]};\r\n          int c = index - r * ${shape[1]};\r\n          return ivec2(r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 3D output coordinates.\r\n   */\r\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n        ivec3 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec3(r, c, d);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 4D output coordinates.\r\n   */\r\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\r\n      GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n      ivec4 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec4(r, c, d, d2);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 5D output coordinates.\r\n   */\r\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\r\n      GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n      ivec5 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec5(r, c, d, d2, d3);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 6D output coordinates.\r\n   */\r\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\r\n    number, number\r\n  ]): GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n     ivec6 getOutputCoords() {\r\n         ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                               vec2(${texShape[0]}, ${texShape[1]}));\r\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n         ${coordsFromIndexSnippet}\r\n         return ivec6(r, c, d, d2, d3, d4);\r\n       }\r\n     `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Generates code for common UV coords computation utility functions.\r\n   */\r\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    let funcName = 'uvFromFlat';\r\n    result[funcName] = new GlslLibRoutine(`\r\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\r\n      int texC = index / texNumR;\r\n      int texR = index - texC * texNumR;\r\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\r\n      //       v.\r\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\r\n    }\r\n    `);\r\n    funcName = 'packedUVfrom1D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\r\n        int texelIndex = index / 2;\r\n        int texR = texelIndex / texNumC;\r\n        int texC = texelIndex - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'packedUVfrom2D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\r\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\r\n        int texR = texelIndex / texNumC;\r\n        int texC = texelIndex - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'packedUVfrom3D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\r\n          int texelsInBatch, int texelsInLogicalRow, int b,\r\n          int row, int col) {\r\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\r\n        int texR = index / texNumC;\r\n        int texC = index - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'sampleTexture';\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    result[funcName] = new GlslLibRoutine(`\r\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\r\n            return ${glsl.texture2D}(textureSampler, uv).r;\r\n        }`);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for inputs\r\n   */\r\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\r\n      const inputLayout = this.context.inputTextureLayouts[i];\r\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\r\n      if (inputLayout.isPacked) {\r\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\r\n      } else {\r\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\r\n      }\r\n\r\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\r\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\r\n        if (inputLayout.isPacked) {\r\n          result[outCoordFuncName] =\r\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\r\n        } else {\r\n          result[outCoordFuncName] =\r\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\r\n        }\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for output coordinates of samplers\r\n   */\r\n  protected getPackedSamplerAtOutputCoords(\r\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\r\n    const inShape = inputLayout.unpackedShape;\r\n    const outShape = outputLayout.unpackedShape;\r\n    const texName = name;\r\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\r\n\r\n    const inRank = inShape.length;\r\n    const outRank = outShape.length;\r\n\r\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n\r\n    const type = getCoordsDataType(outRank);\r\n    const rankDiff = outRank - inRank;\r\n    let coordsSnippet: string;\r\n    const fields = getGlChannels();\r\n\r\n    if (inRank === 0) {\r\n      coordsSnippet = '';\r\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\r\n      coordsSnippet = 'coords = 0;';\r\n    } else {\r\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\r\n    }\r\n    let unpackedCoordsSnippet = '';\r\n    if (outRank < 2 && inRank > 0) {\r\n      unpackedCoordsSnippet = 'coords';\r\n    } else {\r\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\r\n    }\r\n\r\n    let output = 'return outputValue;';\r\n    const inSize = ShapeUtil.size(inShape);\r\n    const isInputScalar = inSize === 1;\r\n    const outSize = ShapeUtil.size(outShape);\r\n    const isOutputScalar = outSize === 1;\r\n\r\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\r\n      output = `\r\n        return vec4(outputValue.xy, outputValue.xy);\r\n      `;\r\n    } else if (isInputScalar && !isOutputScalar) {\r\n      if (outRank === 1) {\r\n        output = `\r\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\r\n        `;\r\n      } else {\r\n        output = `\r\n          return vec4(outputValue.x);\r\n        `;\r\n      }\r\n    } else if (broadcastDims.length) {\r\n      const rows = inRank - 2;\r\n      const cols = inRank - 1;\r\n\r\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\r\n        output = 'return vec4(outputValue.x);';\r\n      } else if (broadcastDims.indexOf(rows) > -1) {\r\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\r\n            'outputValue.x, outputValue.y);';\r\n      } else if (broadcastDims.indexOf(cols) > -1) {\r\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\r\n      }\r\n    }\r\n\r\n    const swapLastDimsSnippet = `\r\n        int lastDim = coords.${fields[outRank - 1]};\r\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\r\n        coords.${fields[outRank - 2]} = lastDim;\r\n      `;\r\n    const source = `\r\n      vec4 ${funcName}() {\r\n        ${type} coords = getOutputCoords();\r\n        ${swapLastDimsSnippet}\r\n        ${coordsSnippet}\r\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\r\n        ${output}\r\n      }\r\n    `;\r\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for unpacked output coordinates of samplers\r\n   */\r\n  protected getUnpackedSamplerAtOutputCoords(\r\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const inTexShape = [inputLayout.width, inputLayout.height];\r\n    const inRank = inputLayout.unpackedShape.length;\r\n    const outRank = outputLayout.unpackedShape.length;\r\n    const inShape = inputLayout.unpackedShape;\r\n    const outShape = outputLayout.unpackedShape;\r\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\r\n\r\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\r\n      const source = `\r\n          float ${funcName}() {\r\n            return sampleTexture(${name}, TexCoords);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const type = getCoordsDataType(outRank);\r\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n    const rankDiff = outRank - inRank;\r\n    let coordsSnippet: string;\r\n    const fields = getGlChannels();\r\n\r\n    if (inRank === 0) {\r\n      coordsSnippet = '';\r\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\r\n      coordsSnippet = 'coords = 0;';\r\n    } else {\r\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\r\n    }\r\n    let unpackedCoordsSnippet = '';\r\n    if (outRank < 2 && inRank > 0) {\r\n      unpackedCoordsSnippet = 'coords';\r\n    } else {\r\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\r\n    }\r\n    const source = `\r\n        float ${funcName}() {\r\n          ${type} coords = getOutputCoords();\r\n          ${coordsSnippet}\r\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for packed operations.\r\n   */\r\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    switch (inputLayout.unpackedShape.length) {\r\n      case 0:\r\n        return this.getPackedSamplerScalar(funcName, name);\r\n      case 1:\r\n        return this.getPackedSampler1D(funcName, name, inputLayout);\r\n      case 2:\r\n        return this.getPackedSampler2D(funcName, name, inputLayout);\r\n      case 3:\r\n        return this.getPackedSampler3D(funcName, name, inputLayout);\r\n      default:\r\n        return this.getPackedSamplerND(funcName, name, inputLayout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for unpacked operations.\r\n   */\r\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    switch (shape.length) {\r\n      case 0:\r\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\r\n      case 1:\r\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\r\n      case 2:\r\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\r\n      case 3:\r\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\r\n      case 4:\r\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\r\n      case 5:\r\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\r\n      case 6:\r\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\r\n      default:\r\n        // TODO support more dimensionalities\r\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Packed scalar snippet.\r\n   */\r\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    const source = `\r\n          vec4 ${funcName}() {\r\n            return ${glsl.texture2D}(${name}, halfCR);\r\n          }\r\n        `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Packed 1D snippet.\r\n   */\r\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const packedTexShape = [texShape[1], texShape[0]];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    const packedSampler = `vec4 ${funcName}(int index) {\r\n      vec2 uv = packedUVfrom1D(\r\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\r\n  }\r\n\r\n  /**\r\n   * Packed 2D snippet.\r\n   */\r\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    const texNumR = texShape[0];\r\n    const texNumC = texShape[1];\r\n\r\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\r\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\r\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\r\n        return ${glsl.texture2D}(${name}, uv);\r\n      }`;\r\n\r\n      return new GlslLibRoutine(packedSampler);\r\n    }\r\n    const packedTexShape = texShape;\r\n    const valuesPerRow = Math.ceil(shape[1] / 2);\r\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\r\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\r\n  }\r\n\r\n  /**\r\n   * Packed 3D snippet.\r\n   */\r\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    if (shape[0] === 1) {\r\n      const squeezedShape = shape.slice(1);\r\n      const keptDims = [1, 2];\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      const params = ['b', 'row', 'col'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\r\n      const packedSampler = `${samplerRoutine.routineBody}\r\n      vec4 ${funcName}(int b, int row, int col) {\r\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n      } `;\r\n      const source = packedSampler;\r\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\r\n    }\r\n    const texNumR = packedTexShape[0];\r\n    const texNumC = packedTexShape[1];\r\n\r\n    const valuesPerRow = Math.ceil(shape[2] / 2);\r\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\r\n\r\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\r\n      vec2 uv = packedUVfrom3D(\r\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\r\n      return ${glsl.texture2D}(${name}, uv);}`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\r\n  }\r\n  /*\r\n   * Packed ND snippet.\r\n   */\r\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const rank = shape.length;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const texNumR = packedTexShape[1];\r\n    const texNumC = packedTexShape[0];\r\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\r\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\r\n    let params = 'int b, int row, int col';\r\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\r\n    for (let b = 2; b < rank - 1; b++) {\r\n      params = `int b${b}, ` + params;\r\n      texelsInBatch *= shape[rank - b - 1];\r\n      index = `b${b} * ${texelsInBatch} + ` + index;\r\n    }\r\n    const packedSampler = `vec4 ${funcName}(${params}) {\r\n      int index = ${index};\r\n      int texR = index / ${texNumC};\r\n      int texC = index - texR * ${texNumC};\r\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked scalar snippet.\r\n   */\r\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\r\n    if (texNumR === 1 && texNumC === 1) {\r\n      const source = `\r\n          float ${funcName}() {\r\n            return sampleTexture(${name}, halfCR);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const source = `\r\n        float ${funcName}() {\r\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 1D snippet.\r\n   */\r\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const tNumR = inputLayout.width;\r\n    const tNumC = inputLayout.height;\r\n\r\n    if (tNumC === 1 && tNumR === 1) {\r\n      const source = `\r\n        float ${funcName}(int index) {\r\n          return sampleTexture(${name}, halfCR);\r\n        }\r\n      `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    if (tNumC === 1) {\r\n      const source = `\r\n          float ${funcName}(int index) {\r\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n    if (tNumR === 1) {\r\n      const source = `\r\n          float ${funcName}(int index) {\r\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n    const source = `\r\n        float ${funcName}(int index) {\r\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 2D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n\r\n    // TODO: modify row/col order for other dimensions.\r\n    const texShape = [inputLayout.height, inputLayout.width];\r\n\r\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\r\n      const texNumR = texShape[1];\r\n      const texNumC = texShape[0];\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    const squeezedShape = newShape;\r\n    if (squeezedShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const params = ['col', 'row'];\r\n      const source = `\r\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n          float ${funcName}(int row, int col) {\r\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const texNumR = texShape[1];\r\n    const texNumC = texShape[0];\r\n    if (texNumC === 1) {\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\r\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    }\r\n\r\n    if (texNumR === 1) {\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\r\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    }\r\n\r\n    const source = `\r\n        float ${funcName}(int row, int col) {\r\n          int index = col * ${shape[1]} + row;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 3D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride0 = shape[1] * shape[2];\r\n    const stride1 = shape[2];\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    const squeezedShape = newShape;\r\n    if (squeezedShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      const params = ['batch', 'col', 'row'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\r\n      // TODO: revisit the logic here to make it simpler\r\n      const revDims = keptDims.reverse();\r\n      const source = `\r\n          ${routine.routineBody}\r\n          float ${funcName}(int batch, int row, int col) {\r\n            return ${funcName}(${getSqueezedParams(params, revDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, routine.dependencies);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n          float ${funcName}(int depth, int row, int col) {\r\n            // Explicitly use integer operations as dot() only works on floats.\r\n            int index = depth * ${stride0} + col * ${stride1} + row;\r\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 4D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride2 = shape[3];\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    //\r\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\r\n    //\r\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    // if (newShape.length < shape.length) {\r\n    //   const newInputShape = squeezeInputShape(shape, newShape);\r\n    //   const params = ['row', 'col', 'depth', 'depth2'];\r\n    //   // Deep copy of input texture layout.\r\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n    //   newInputLayout.unpackedShape = newInputShape;\r\n    //   const source = `\r\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\r\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n    //       }\r\n    //     `;\r\n    //   return new GlslLibRoutine(\r\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    // }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n        float ${funcName}(int row, int col, int depth, int depth2) {\r\n          int index = row * ${stride0} + col * ${stride1} +\r\n              depth2 * ${stride2} + depth;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 5D snippet.\r\n   */\r\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride3 = shape[4];\r\n    const stride2 = shape[3] * stride3;\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    if (newShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, newShape);\r\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const source = `\r\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\r\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\r\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\r\n          depth3 * ${stride3} + depth2;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 6D snippet.\r\n   */\r\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride4 = shape[5];\r\n    const stride3 = shape[4] * stride4;\r\n    const stride2 = shape[3] * stride3;\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    if (newShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, newShape);\r\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const source = `\r\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n            float ${funcName}(int row, int col, int depth,\r\n              int depth2, int depth3, int depth4) {\r\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n            }\r\n          `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n          float ${funcName}(int row, int col, int depth,\r\n            int depth2, int depth3, int depth4) {\r\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\r\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\r\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * This is the main function to map from the given texture coordiantes (s,t)\r\n   * to logical indices for the output\r\n   * There will only be one single variation of this\r\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\r\n   */\r\n  protected toVec(): {[name: string]: GlslLibRoutine} {\r\n    const output = this.context.outputTextureLayout;\r\n    const rank = output.shape.length;\r\n    const strides = output.strides;\r\n    const xScale = output.width;\r\n    const yScale = output.height;\r\n\r\n    const stridesBlock = [];\r\n    for (let i = 0; i < rank - 1; ++i) {\r\n      stridesBlock.push(`\r\n        c[${i}] = offset / ${strides[i]};`);\r\n      stridesBlock.push(`\r\n        offset -= c[${i}] * ${strides[i]};`);\r\n    }\r\n    stridesBlock.push(`\r\n        c[${rank - 1}] = offset;`);\r\n    const body = `\r\n      void toVec(vec2 texCoords, out int c[${rank}]) {\r\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\r\n        ${stridesBlock.join('')}\r\n      }\r\n      void toVec(int offset, out int c[${rank}]) {\r\n        ${stridesBlock.join('')}\r\n      }\r\n    `;\r\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\r\n  }\r\n  /**\r\n   * These are value getter functions generated for each input\r\n   * Each function is hardwired to the name and dimensions of the input\r\n   * An '_T' variation is also produced which accesses values as if the\r\n   * input was transposed\r\n   */\r\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const layout = this.context.inputTextureLayouts[i];\r\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\r\n      const rank = shape.length;\r\n      let funcName = `_${name}`;\r\n      result[funcName] = new GlslLibRoutine(\r\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\r\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\r\n      funcName = funcName + '_T';\r\n      result[funcName] = new GlslLibRoutine(\r\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\r\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * Produces one value getter function for the name and rank given\r\n   * If a transpose is set proper offsetToCoords mapping will be used\r\n   * @param name name of the function\r\n   * @param rank rank of the input\r\n   * @param transpose whether or not should generate a transpose variation\r\n   */\r\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\r\n      string {\r\n    let name = `_${varName}`;\r\n    if (transpose) {\r\n      name = name + '_T';\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return `\r\n        float ${name}(int m[${rank}]) {\r\n          int offset = indicesToOffset${name}(m);\r\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\r\n          return value;\r\n        }\r\n        `;\r\n  }\r\n\r\n  /**\r\n   * Produces a packed value getter function for the name and rank given\r\n   * If a transpose is set proper offsetToCoords mapping will be used\r\n   * @param name name of the function\r\n   * @param rank rank of the input\r\n   * @param transpose whether or not should generate a transpose variation\r\n   */\r\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\r\n      string {\r\n    let name = `_${varName}_Pack`;\r\n    if (transpose) {\r\n      name = name + '_T';\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return `\r\n        vec4 ${name}(int m[${rank}]) {\r\n          int offset = indicesToOffset_${varName}(m);\r\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n          return ${glsl.texture2D}(${varName}, coords);\r\n        }\r\n        `;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ProgramInfo, TextureLayout} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nexport enum FunctionType {\r\n  ValueBased,\r\n  Positional\r\n}\r\nexport interface GlslFunction<T extends FunctionType> {\r\n  body: string;\r\n  name: string;\r\n  type: T;\r\n}\r\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\r\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\r\n  inputShape: readonly number[];\r\n  outputShape: readonly number[];\r\n}\r\n\r\nexport class GlslContext {\r\n  constructor(\r\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\r\n      public outputTextureLayout: TextureLayout) {}\r\n}\r\nexport abstract class GlslLib {\r\n  constructor(public context: GlslContext) {}\r\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\r\n  abstract getCustomTypes(): {[name: string]: string};\r\n}\r\n\r\n// abstraction to represent a GLSL library routine and it's dependencies\r\nexport class GlslLibRoutine {\r\n  constructor(public routineBody: string, public dependencies?: string[]) {}\r\n}\r\n\r\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\r\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\r\nexport class GlslLibRoutineNode {\r\n  dependencies: GlslLibRoutineNode[];\r\n  routineBody: string;\r\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\r\n    if (dependencies) {\r\n      this.dependencies = dependencies;\r\n    } else {\r\n      this.dependencies = [];\r\n    }\r\n\r\n    if (routineBody) {\r\n      this.routineBody = routineBody;\r\n    }\r\n  }\r\n  addDependency(node: GlslLibRoutineNode) {\r\n    if (node) {\r\n      this.dependencies.push(node);\r\n    }\r\n  }\r\n}\r\n\r\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\r\nexport class TopologicalSortGlslRoutines {\r\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\r\n    if (!nodes || nodes.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (nodes.length === 1) {\r\n      return nodes;\r\n    }\r\n\r\n    const cycleCheck = new Set<string>();\r\n    const alreadyTraversed = new Set<string>();\r\n    const result = new Array<GlslLibRoutineNode>();\r\n\r\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\r\n    return result;\r\n  }\r\n\r\n  private static createOrderedNodes(\r\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\r\n      result: GlslLibRoutineNode[]) {\r\n    for (let i = 0; i < graphNodes.length; ++i) {\r\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\r\n    }\r\n  }\r\n\r\n  private static dfsTraverse(\r\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\r\n    // if this root has already been traversed return\r\n    if (!root || alreadyTraversed.has(root.name)) {\r\n      return;\r\n    }\r\n\r\n    // cyclic dependency has been detected\r\n    if (cycleCheck.has(root.name)) {\r\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\r\n    }\r\n\r\n    // hold this node to detect cycles if any\r\n    cycleCheck.add(root.name);\r\n\r\n    // traverse children in a dfs fashion\r\n    const dependencies = root.dependencies;\r\n    if (dependencies && dependencies.length > 0) {\r\n      for (let i = 0; i < dependencies.length; ++i) {\r\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\r\n      }\r\n    }\r\n\r\n    // add to result holder\r\n    result.push(root);\r\n\r\n    // mark this node as traversed so that we don't traverse from this again\r\n    alreadyTraversed.add(root.name);\r\n\r\n    // release the hold\r\n    cycleCheck.delete(root.name);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * This GLSL library handles routines converting\r\n * float32 to/from Unsigned byte or float 16\r\n */\r\nexport class EncodingGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\r\n        return vec4(f, 0.0, 0.0, 0.0);\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\r\n        return rgba.r;\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\r\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\r\n   */\r\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\r\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\r\n    return {\r\n      encode: new GlslLibRoutine(`\r\n      highp vec4 encode(highp float f) {\r\n        highp float F = abs(f);\r\n        highp float Sign = step(0.0,-f);\r\n        highp float Exponent = floor(log2(F));\r\n        highp float Mantissa = (exp2(- Exponent) * F);\r\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\r\n        highp vec4 rgba;\r\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\r\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\r\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\r\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\r\n        ${endianness}\r\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\r\n        return rgba;\r\n    }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * returns the routine to encode a vec4 of unsigned bytes to float32\r\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\r\n   */\r\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\r\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\r\n    return {\r\n      decode: new GlslLibRoutine(`\r\n        highp float decode(highp vec4 rgba) {\r\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\r\n          ${endianness}\r\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\r\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\r\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\r\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\r\n          return Result;\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * Determines if the machine is little endian or not\r\n   * @credit: https://gist.github.com/TooTallNate/4750953\r\n   */\r\n  static isLittleEndian(): boolean {\r\n    const b = new ArrayBuffer(4);\r\n    const a = new Uint32Array(b);\r\n    const c = new Uint8Array(b);\r\n    a[0] = 0xdeadbeef;\r\n    if (c[0] === 0xef) {\r\n      return true;\r\n    }\r\n    if (c[0] === 0xde) {\r\n      return false;\r\n    }\r\n    throw new Error('unknown endianness');\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\nimport {getGlsl} from './glsl-source';\r\n\r\n/**\r\n * This GLSL library handles routines around reading a texlet and writing to it\r\n * Reading and writing could be more than just dealing with one channel\r\n * It may require encoding/decoding to/from 4 channels into one\r\n */\r\nexport class FragColorGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return {\r\n      setFragColor: new GlslLibRoutine(\r\n          `\r\n        void setFragColor(float value) {\r\n            ${glsl.output} = encode(value);\r\n        }\r\n        `,\r\n          ['encoding.encode'])\r\n    };\r\n  }\r\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      getColorAsFloat: new GlslLibRoutine(\r\n          `\r\n        float getColorAsFloat(vec4 color) {\r\n            return decode(color);\r\n        }\r\n        `,\r\n          ['encoding.decode'])\r\n    };\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\r\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\r\n/**\r\n * GLSL preprocessor responsible for resolving @inline directives\r\n */\r\nexport function replaceInlines(script: string): string {\r\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\r\n  let match;\r\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\r\n    const params = match[3]\r\n                       .split(',')\r\n                       .map(s => {\r\n                         const tokens = s.trim().split(' ');\r\n                         if (tokens && tokens.length === 2) {\r\n                           return {type: tokens[0], name: tokens[1]};\r\n                         }\r\n                         return null;\r\n                       })\r\n                       .filter(v => v !== null);\r\n    inlineDefs[match[2]] = {params, body: match[4]};\r\n  }\r\n  for (const name in inlineDefs) {\r\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\r\n    const regex = new RegExp(regexString, 'gm');\r\n    while ((match = regex.exec(script)) !== null) {\r\n      const type = match[1];\r\n      const variable = match[2];\r\n      const params = match[3].split(',');\r\n      const declLine = (type) ? `${type} ${variable};` : '';\r\n      let newBody: string = inlineDefs[name].body;\r\n      let paramRedecLine = '';\r\n      inlineDefs[name].params.forEach((v, i) => {\r\n        if (v) {\r\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\r\n        }\r\n      });\r\n      newBody = `${paramRedecLine}\\n ${newBody}`;\r\n      newBody = newBody.replace('return', `${variable} = `);\r\n      const replacement = `\r\n      ${declLine}\r\n      {\r\n        ${newBody}\r\n      }\r\n      `;\r\n      script = script.replace(match[0], replacement);\r\n    }\r\n  }\r\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\r\n  return script;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\r\nimport {replaceInlines} from './glsl-function-inliner';\r\nimport {glslRegistry} from './glsl-registered-libs';\r\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\r\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/**\r\n * Preprocessor for the additions to the GLSL language\r\n * It deals with:\r\n *  @include directives\r\n *  @inline\r\n *  Loop unrolling (not implemented)\r\n *  Macro resolution (not implemented)\r\n */\r\nexport class GlslPreprocessor {\r\n  readonly context: GlslContext;\r\n  readonly libs: {[name: string]: GlslLib} = {};\r\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\r\n\r\n  constructor(\r\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\r\n      outputTextureLayout: TextureLayout) {\r\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\r\n\r\n    // construct GlslLibs\r\n    Object.keys(glslRegistry).forEach((name: string) => {\r\n      const lib = new glslRegistry[name](this.context);\r\n      this.libs[name] = lib;\r\n    });\r\n\r\n    // construct GlslRoutineDependencyGraph\r\n    const map = this.glslLibRoutineDependencyGraph;\r\n    for (const libName in this.libs) {\r\n      const lib = this.libs[libName];\r\n      const routinesInLib = lib.getFunctions();\r\n      for (const routine in routinesInLib) {\r\n        const key = libName + '.' + routine;\r\n        let currentNode: GlslLibRoutineNode;\r\n        if (map[key]) {\r\n          currentNode = map[key];\r\n          currentNode.routineBody = routinesInLib[routine].routineBody;\r\n        } else {\r\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\r\n          map[key] = currentNode;\r\n        }\r\n        const dependencies = routinesInLib[routine].dependencies;\r\n        if (dependencies) {\r\n          for (let i = 0; i < dependencies.length; ++i) {\r\n            if (!map[dependencies[i]]) {\r\n              const node = new GlslLibRoutineNode(dependencies[i]);\r\n              map[dependencies[i]] = node;\r\n              currentNode.addDependency(node);\r\n            } else {\r\n              currentNode.addDependency(map[dependencies[i]]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  preprocess(): string {\r\n    const programInfo = this.context.programInfo;\r\n    let source = programInfo.shaderSource;\r\n\r\n    // append main() function\r\n    if (!this.context.programInfo.hasMain) {\r\n      source = `${source}\r\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\r\n    }\r\n    // replace inlines\r\n    source = replaceInlines(source);\r\n\r\n    // concat final source string\r\n    return `${getFragShaderPreamble(this.context.glContext.version)}\r\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\r\n    ${this.getImports(source)}\r\n    ${source}`;\r\n  }\r\n\r\n  protected getImports(script: string): string {\r\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\r\n\r\n    if (routinesIncluded.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    let routines = '';\r\n    for (let i = 0; i < routinesIncluded.length; ++i) {\r\n      if (routinesIncluded[i].routineBody) {\r\n        routines += routinesIncluded[i].routineBody + '\\n';\r\n      } else {\r\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\r\n      }\r\n    }\r\n\r\n    return routines;\r\n  }\r\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\r\n    const nodes: GlslLibRoutineNode[] = [];\r\n\r\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\r\n      const routine = classAndRoutine.split('.')[1];\r\n      if (script.indexOf(routine) !== -1) {\r\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\r\n      }\r\n    });\r\n\r\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\r\n  }\r\n\r\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\r\n    const uniformLines: string[] = [];\r\n    if (samplers) {\r\n      for (const sampler of samplers) {\r\n        uniformLines.push(`uniform sampler2D ${sampler};`);\r\n      }\r\n    }\r\n    if (variables) {\r\n      for (const variable of variables) {\r\n        uniformLines.push(\r\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\r\n      }\r\n    }\r\n    return uniformLines.join('\\n');\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\r\nimport {GlslContext, GlslLib} from './glsl-definitions';\r\nimport {EncodingGlslLib} from './glsl-encoding-lib';\r\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\r\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\r\nimport {VecGlslLib} from './glsl-vec-lib';\r\n\r\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\r\n  'encoding': EncodingGlslLib,\r\n  'fragcolor': FragColorGlslLib,\r\n  'vec': VecGlslLib,\r\n  'shapeUtils': ShapeUtilsGlslLib,\r\n  'coordinates': CoordsGlslLib,\r\n  //  'arrays': ArrayGlslSLib\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * GLSL Library responsible for data types and routines for manipulating\r\n * coordinates and mapping to/from tensor indices\r\n */\r\nexport class ShapeUtilsGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      ...this.bcastIndex(),\r\n      ...this.bcastMatmulIndex(),\r\n      ...this.offsetToIndices(),\r\n      ...this.indicesToOffset(),\r\n      ...this.incrementIndices()\r\n    };\r\n  }\r\n  getCustomTypes() {\r\n    return {};\r\n  }\r\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\r\n    const outputRank = this.context.outputTextureLayout.shape.length;\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\r\n      if (shape.length <= outputRank) {\r\n        const rank = shape.length;\r\n        const dimOffset = outputRank - rank;\r\n        const funcName = `bcastIndices_${name}`;\r\n        let block = '';\r\n        for (let i = 0; i < rank; ++i) {\r\n          block += `\r\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\r\n          `;\r\n        }\r\n        const body = `\r\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\r\n          ${block}\r\n        }\r\n        `;\r\n        result[funcName] = new GlslLibRoutine(body);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\r\n    const outputRank = this.context.outputTextureLayout.shape.length;\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      if (!(shape.length < 2 || shape.length > outputRank)) {\r\n        const rank = shape.length;\r\n        const dimOffset = outputRank - rank;\r\n        const funcName = `bcastMatmulIndices_${name}`;\r\n        let block = '';\r\n        for (let i = 0; i < rank - 2; ++i) {\r\n          block += `\r\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\r\n          `;\r\n        }\r\n        const body = `\r\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\r\n          ${block}\r\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\r\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\r\n        }\r\n        `;\r\n        result[funcName] = new GlslLibRoutine(body);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const strides = this.context.inputTextureLayouts[i].strides;\r\n      const rank = shape.length;\r\n      let funcName = `indicesToOffset_${name}`;\r\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\r\n      funcName = `indicesToOffset_${name}_T`;\r\n      result[funcName] =\r\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\r\n    });\r\n    return result;\r\n  }\r\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\r\n    let block = '';\r\n    for (let i = rank - 1; i >= 0; --i) {\r\n      block += `\r\n        offset += indices[${i}] * ${strides[i]};\r\n        `;\r\n    }\r\n    return `\r\n      int ${name}(int indices[${rank}]) {\r\n        int offset = 0;\r\n        ${block}\r\n        return offset;\r\n      }\r\n      `;\r\n  }\r\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const strides = this.context.inputTextureLayouts[i].strides;\r\n      const rank = shape.length;\r\n      let funcName = `offsetToIndices_${name}`;\r\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\r\n      funcName = `offsetToIndices_${name}_T`;\r\n      result[funcName] =\r\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\r\n    });\r\n    return result;\r\n  }\r\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\r\n    const stridesBlock = [];\r\n    for (let i = 0; i < rank - 1; ++i) {\r\n      stridesBlock.push(`\r\n      indices[${i}] = offset / ${strides[i]};`);\r\n      stridesBlock.push(`\r\n        offset -= indices[${i}] * ${strides[i]};`);\r\n    }\r\n    stridesBlock.push(`\r\n      indices[${rank - 1}] = offset;`);\r\n    return `\r\n      void ${name}(int offset, out int indices[${rank}]) {\r\n        ${stridesBlock.join('')}\r\n      }\r\n      `;\r\n  }\r\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const rank = shape.length;\r\n      const funcName = `incrementIndices_${name}`;\r\n      let shapeInit = '';\r\n      for (let i = 0; i < rank; ++i) {\r\n        shapeInit += `\r\n        shape[${i}] = ${shape[i]};`;\r\n      }\r\n      const body = `\r\n        void ${funcName}(int axis, out int indices[${rank}]) {\r\n          int shape[${rank}];\r\n          ${shapeInit};\r\n          for(int i = ${rank} -1 ; i >= 0; --i) {\r\n            if(i > axis) continue;\r\n            indices[i] += 1;\r\n            if(indices[i] < shape[i]) {\r\n              break;\r\n            }\r\n            indices[i] = 0;\r\n          }\r\n        }\r\n        `;\r\n      result[funcName] = new GlslLibRoutine(body);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * represent a version irrelevant abstraction of for GLSL source code\r\n */\r\nexport interface Glsl {\r\n  readonly version: string;\r\n  readonly attribute: string;\r\n  readonly varyingVertex: string;\r\n  readonly varyingFrag: string;\r\n  readonly texture2D: string;\r\n  readonly output: string;\r\n  readonly outputDeclaration: string;\r\n}\r\n\r\nconst GLSL_ES_2_0: Glsl = {\r\n  version: '',\r\n  attribute: 'attribute',\r\n  varyingVertex: 'varying',\r\n  varyingFrag: 'varying',\r\n  texture2D: 'texture2D',\r\n  output: 'gl_FragColor',\r\n  outputDeclaration: '',\r\n};\r\nconst GLSL_ES_3_0: Glsl = {\r\n  version: '#version 300 es',\r\n  attribute: 'in',\r\n  varyingVertex: 'out',\r\n  varyingFrag: 'in',\r\n  texture2D: 'texture',\r\n  output: 'outputColor',\r\n  outputDeclaration: 'out vec4 outputColor;',\r\n};\r\n\r\nexport function getGlsl(version: 1|2) {\r\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\r\n}\r\n\r\nexport function getVertexShaderSource(version: 1|2): string {\r\n  const glsl = getGlsl(version);\r\n  return `${glsl.version}\r\n      precision highp float;\r\n      ${glsl.attribute} vec3 position;\r\n      ${glsl.attribute} vec2 textureCoord;\r\n\r\n      ${glsl.varyingVertex} vec2 TexCoords;\r\n\r\n      void main()\r\n      {\r\n          gl_Position = vec4(position, 1.0);\r\n          TexCoords = textureCoord;\r\n      }`;\r\n}\r\n\r\nexport function getFragShaderPreamble(version: 1|2): string {\r\n  const glsl = getGlsl(version);\r\n  return `${glsl.version}\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2D;\r\n    ${glsl.varyingFrag} vec2 TexCoords;\r\n    ${glsl.outputDeclaration}\r\n    const vec2 halfCR = vec2(0.5, 0.5);\r\n\r\n    // Custom vector types to handle higher dimenalities.\r\n    struct ivec5\r\n    {\r\n      int x;\r\n      int y;\r\n      int z;\r\n      int w;\r\n      int u;\r\n    };\r\n\r\n    struct ivec6\r\n    {\r\n      int x;\r\n      int y;\r\n      int z;\r\n      int w;\r\n      int u;\r\n      int v;\r\n    };\r\n\r\n    int imod(int x, int y) {\r\n      return x - y * (x / y);\r\n    }\r\n\r\n    `;\r\n}\r\n\r\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\r\n  const glsl = getGlsl(version);\r\n  return `\r\n  void main() {\r\n    int indices[${outputShapeLength}];\r\n    toVec(TexCoords, indices);\r\n    vec4 result = vec4(process(indices));\r\n    ${glsl.output} = result;\r\n  }\r\n  `;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * GLSL Library responsible for vec routines\r\n * Vec is an varible length int array. The length is fixed at the time of\r\n * generating the library functions from the dimensions of the output.\r\n */\r\nexport class VecGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\r\n  }\r\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    for (const name in nameOp) {\r\n      const fname = `${name}Vec`;\r\n      let assignmentBlock = '';\r\n      for (let i = 0; i < rank; ++i) {\r\n        assignmentBlock += `\r\n          dest[${i}] ${nameOp[name]} src[${i}];\r\n          `;\r\n      }\r\n      const body = `\r\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\r\n          ${assignmentBlock}\r\n        }\r\n        `;\r\n      result[fname] = new GlslLibRoutine(body);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let assignmentBlock = '';\r\n    for (let i = 0; i < rank; ++i) {\r\n      assignmentBlock += `\r\n        dest[${i}] = src[${i}];\r\n        `;\r\n    }\r\n    const body = `\r\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\r\n        ${assignmentBlock}\r\n      }\r\n      `;\r\n    return {copyVec: new GlslLibRoutine(body)};\r\n  }\r\n\r\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let block = `\r\n        if(index < 0)\r\n            index =${rank} + index;\r\n        if (index == 0)\r\n            m[0] = value;\r\n        `;\r\n    for (let i = 1; i < rank - 1; ++i) {\r\n      block += `\r\n        else if (index == ${i})\r\n            m[${i}] = value;\r\n            `;\r\n    }\r\n    block += `\r\n        else\r\n            m[${rank - 1}] = value;\r\n        `;\r\n    const body = `\r\n      void setVecItem(out int m[${rank}], int index, int value) {\r\n        ${block}\r\n      }\r\n        `;\r\n    return {setVecItem: new GlslLibRoutine(body)};\r\n  }\r\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let block = `\r\n        if(index < 0)\r\n            index = ${rank} + index;\r\n        if (index == 0)\r\n            return m[0];\r\n      `;\r\n    for (let i = 1; i < rank - 1; ++i) {\r\n      block += `\r\n        else if (index == ${i})\r\n            return m[${i}];\r\n      `;\r\n    }\r\n    block += `\r\n        else\r\n            return m[${rank - 1}];\r\n        `;\r\n    const body = `\r\n      int getVecItem(int m[${rank}], int index) {\r\n        ${block}\r\n      }\r\n    `;\r\n    return {getVecItem: new GlslLibRoutine(body)};\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceHandler} from '../../backend';\r\nimport {Logger} from '../../instrument';\r\nimport {Tensor} from '../../tensor';\r\nimport {ShapeUtil} from '../../util';\r\nimport {createPackProgramInfoLoader} from './ops/pack';\r\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\r\n\r\nimport {encodeAsUint8} from './ops/uint8-encode';\r\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\r\nimport {WebGLSessionHandler} from './session-handler';\r\nimport {Encoder} from './texture-data-encoder';\r\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\r\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\r\n\r\nconst getProgramInfoUniqueKey =\r\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\r\n      const inputs =\r\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\r\n              .join('_');\r\n      let key = programInfo.name;\r\n      if (programInfo.cacheHint) {\r\n        key += '[' + programInfo.cacheHint + ']';\r\n      }\r\n      key += ':' + inputs;\r\n      return key;\r\n    };\r\n\r\nexport class WebGLInferenceHandler implements InferenceHandler {\r\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  constructor(public session: WebGLSessionHandler) {\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n\r\n  /**\r\n   * @returns [width, height]\r\n   */\r\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\r\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\r\n  }\r\n\r\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\r\n    if (inputs.length < program.inputNames.length) {\r\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\r\n    }\r\n    if (program.inputNames.length !== program.inputTypes.length) {\r\n      throw new Error('input names size does not match input types');\r\n    }\r\n\r\n    // create texture info for input\r\n    const inputTextureDatas: TextureData[] = [];\r\n    for (let i = 0; i < program.inputNames.length; ++i) {\r\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\r\n    }\r\n\r\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\r\n    let artifact = this.session.programManager.getArtifact(key);\r\n    const programInfo = artifact ?\r\n        artifact.programInfo :\r\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\r\n                                                                    (program as ProgramInfo));\r\n\r\n    // create texture info for output\r\n    const outputTextureLayout = createTextureLayoutFromTextureType(\r\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\r\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\r\n\r\n    if (!artifact) {\r\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\r\n      this.session.programManager.setArtifact(key, artifact);\r\n    }\r\n\r\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\r\n    return outputTextureData;\r\n  }\r\n\r\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\r\n    const outputTextureData = this.executeProgram(program, inputs);\r\n    return outputTextureData.tensor;\r\n  }\r\n\r\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\r\n    // input should match\r\n    for (let i = 0; i < inputs.length; ++i) {\r\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\r\n        throw new Error(`input[${i}] property packed inconsistent`);\r\n      }\r\n    }\r\n\r\n    // output should match\r\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\r\n      throw new Error('output property packed inconsistent');\r\n    }\r\n\r\n    this.session.programManager.run(artifact, inputs, output);\r\n  }\r\n\r\n  /**\r\n   * Create a TextureData object from a tensor.\r\n   * Usage = Encoder.Usage.UploadOnly.\r\n   * If a related texture data is found in cache, returns it;\r\n   * Otherwise:\r\n   *   Creates a new texture layout if not provided;\r\n   *   Creates WebGLTexture with the layout;\r\n   *   Upload tensor data to the texture;\r\n   *   Creates a texture data object associated with the given tensor.\r\n   * @param tensor the tensor with data to upload\r\n   */\r\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\r\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\r\n\r\n    if (!td) {\r\n      // check if we have texture data in different type\r\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\r\n      if (td) {\r\n        if (textureType === TextureType.packed) {\r\n          return this.pack(td);\r\n        } else {\r\n          return this.unpack(td);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!td) {\r\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\r\n\r\n      if (textureType === TextureType.packedLastDimension) {\r\n        const group = 1;\r\n        const channels = 4;\r\n        const shape = tensor.dims;\r\n        if (shape.length === 4) {\r\n          // pre-processing for kernel data of Conv.\r\n          //\r\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\r\n          // 1. implement texture based const-folding\r\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\r\n          // 3. run the program before dotProduct.\r\n          //\r\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\r\n          const adjustedLayout =\r\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\r\n          let buffer = tensor.numberData;\r\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\r\n            const numFeatureMaps = shape[0];\r\n            const oldRowSize = shape[1] * shape[2] * shape[3];\r\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\r\n            const newSize = numFeatureMaps * newRowSize;\r\n            buffer = new Float32Array(newSize);\r\n            for (let f = 0; f < numFeatureMaps; ++f) {\r\n              const oldOffset = f * oldRowSize;\r\n              const newOffset = f * newRowSize + f % group * oldRowSize;\r\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\r\n            }\r\n          }\r\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\r\n        }\r\n      }\r\n\r\n      if (textureType === TextureType.packed) {\r\n        const unpackedTextureLayout =\r\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\r\n        const unpackedTextureData = this.createTextureData(\r\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\r\n        td = this.pack(unpackedTextureData);\r\n      } else {\r\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\r\n      }\r\n    }\r\n    return td;\r\n  }\r\n\r\n  /**\r\n   * Create a TextureData object using the given data and bind to the given tensor.\r\n   * Usage = Encoder.Usage.UploadOnly.\r\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\r\n   * implementation by Graph.Transformer\r\n   * @param dataType the tensor data type\r\n   * @param data the actual data to upload\r\n   * @param tensor the tensor to bind. tensor's data is ignored.\r\n   */\r\n  createTextureDataFromLayoutBindTensor(\r\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\r\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\r\n  }\r\n\r\n  private createTextureData(\r\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\r\n      usage?: Encoder.Usage): TextureData {\r\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\r\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\r\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\r\n  }\r\n\r\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\r\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\r\n    const newTextureLayout: TextureLayout = {\r\n      channels: inputTD.channels,\r\n      height: inputTD.height,\r\n      width: inputTD.width,\r\n      // handle reshaping into scalar Tensors\r\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\r\n      strides: ShapeUtil.computeStrides(reshapedDims),\r\n      unpackedShape: reshapedDims,\r\n    };\r\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\r\n    return newTextureData.tensor;\r\n  }\r\n\r\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\r\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\r\n\r\n    // check if the reshape is 'cheap'\r\n    if (isReshapeCheap(input.dims, reshapedDims)) {\r\n      const newTextureLayout: TextureLayout = {\r\n        channels: inputTD.channels,\r\n        height: inputTD.height,\r\n        width: inputTD.width,\r\n        // handle reshaping into scalar Tensors\r\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\r\n        strides: ShapeUtil.computeStrides(reshapedDims),\r\n        unpackedShape: reshapedDims,\r\n        isPacked: true\r\n      };\r\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\r\n      return newTextureData.tensor;\r\n    }\r\n\r\n    const squeezedInputShape = processDims3D(input.dims);\r\n    const squeezedOutputShape = processDims3D(reshapedDims);\r\n\r\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\r\n    const squeezedOutputTensor = this.run(\r\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\r\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\r\n    return outputTensor;\r\n  }\r\n\r\n  private createTextureDataFromTexture(\r\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\r\n    const textureData: TextureData = {\r\n      ...layout,\r\n      tensor: tensor ||\r\n          new Tensor(\r\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\r\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\r\n      texture\r\n    };\r\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\r\n    return textureData;\r\n  }\r\n\r\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\r\n    return this.session.isInitializer(tensorId) ?\r\n        this.session.getTextureData(tensorId, isPacked) :\r\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\r\n  }\r\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\r\n    if (this.session.isInitializer(tensorId)) {\r\n      this.session.setTextureData(tensorId, td, isPacked);\r\n    } else {\r\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\r\n    }\r\n  }\r\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\r\n    return !!this.getTextureData(tensor.dataId, isPacked);\r\n  }\r\n\r\n  dispose(): void {\r\n    this.session.textureManager.clearActiveTextures();\r\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n\r\n  readTexture(textureData: TextureData): Tensor.NumberType {\r\n    if (textureData.isPacked) {\r\n      return this.readTexture(this.unpack(textureData));\r\n    }\r\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\r\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\r\n    }\r\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\r\n  }\r\n\r\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\r\n    if (textureData.isPacked) {\r\n      return this.readTextureAsync(this.unpack(textureData));\r\n    }\r\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\r\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\r\n    }\r\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\r\n  }\r\n\r\n  pack(input: TextureData): TextureData {\r\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\r\n    return outputTextureData;\r\n  }\r\n\r\n  unpack(input: TextureData): TextureData {\r\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\r\n    return outputTextureData;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {OpSet} from '../../opset';\r\n\r\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\r\nimport * as binaryOps from './ops/binary-op';\r\nimport {concat, parseConcatAttributes} from './ops/concat';\r\nimport {conv, parseConvAttributes} from './ops/conv';\r\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\r\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\r\nimport {gather, parseGatherAttributes} from './ops/gather';\r\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\r\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\r\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\r\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\r\nimport {pad, parsePadAttributes} from './ops/pad';\r\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\r\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\r\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\r\nimport {globalMaxPool} from './ops/pool';\r\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\r\nimport {parseReduceAttributes} from './ops/reduce';\r\nimport {reshape} from './ops/reshape';\r\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\r\nimport {shape} from './ops/shape';\r\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\r\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\r\nimport {parseSplitAttributes, split} from './ops/split';\r\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\r\nimport {sum} from './ops/sum';\r\nimport {tile} from './ops/tile';\r\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\r\nimport * as unaryOps from './ops/unary-op';\r\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\r\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\r\n\r\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\r\n  ['Abs', '', '6+', unaryOps.abs],\r\n  ['Acos', '', '7+', unaryOps.acos],\r\n  ['Add', '', '7+', binaryOps.add],\r\n  ['And', '', '7+', binaryOps.and],\r\n  ['Asin', '', '7+', unaryOps.asin],\r\n  ['Atan', '', '7+', unaryOps.atan],\r\n  // TODO: support new attributes for AveragePool-10\r\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\r\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\r\n  ['Ceil', '', '6+', unaryOps.ceil],\r\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\r\n  ['Concat', '', '4+', concat, parseConcatAttributes],\r\n  ['Conv', '', '1+', conv, parseConvAttributes],\r\n  ['Cos', '', '7+', unaryOps.cos],\r\n  ['Div', '', '7+', binaryOps.div],\r\n  ['Dropout', '', '7+', unaryOps.identity],\r\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\r\n  ['Equal', '', '7+', binaryOps.equal],\r\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\r\n  ['Exp', '', '6+', unaryOps.exp],\r\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\r\n  ['Floor', '', '6+', unaryOps.floor],\r\n  ['Gather', '', '1+', gather, parseGatherAttributes],\r\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\r\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\r\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\r\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\r\n  ['Greater', '', '7+', binaryOps.greater],\r\n  ['Identity', '', '1+', unaryOps.identity],\r\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\r\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\r\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\r\n  ['Less', '', '7+', binaryOps.less],\r\n  ['Log', '', '6+', unaryOps.log],\r\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\r\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\r\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\r\n  ['Mul', '', '7+', binaryOps.mul],\r\n  ['Neg', '', '6+', unaryOps.neg],\r\n  ['Not', '', '1+', unaryOps.not],\r\n  ['Or', '', '7+', binaryOps.or],\r\n  ['Pad', '', '2-10', pad, parsePadAttributes],\r\n  ['Pow', '', '7+', binaryOps.pow],\r\n  ['PRelu', '', '7+', binaryOps.pRelu],\r\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\r\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\r\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\r\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\r\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\r\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\r\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\r\n  ['Relu', '', '6+', unaryOps.relu],\r\n  ['Reshape', '', '5+', reshape],\r\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\r\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\r\n  ['Shape', '', '1+', shape],\r\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\r\n  ['Sin', '', '7+', unaryOps.sin],\r\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\r\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\r\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\r\n  // 'Split' operator has an optional attribute 'split'\r\n  // this attribute determines how the specified axis of input data is split.\r\n  // When the attribute is missing, we need the count of number of outputs\r\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\r\n  ['Split', '', '2+', split, parseSplitAttributes],\r\n  ['Sqrt', '', '6+', unaryOps.sqrt],\r\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\r\n  ['Sub', '', '7+', binaryOps.sub],\r\n  ['Sum', '', '6+', sum],\r\n  ['Tan', '', '7+', unaryOps.tan],\r\n  ['Tanh', '', '6+', unaryOps.tanh],\r\n  ['Tile', '', '6+', tile],\r\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\r\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\r\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\r\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\r\n  ['Xor', '', '7+', binaryOps.xor],\r\n];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\r\n  epsilon: number;\r\n  momentum: number;\r\n  spatial: number;\r\n}\r\n\r\nconst batchNormalizationProgramMetadata = {\r\n  name: 'BatchNormalization',\r\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\r\n  inputTypes:\r\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\r\n};\r\n\r\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...batchNormalizationProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\r\n    (node: Graph.Node): BatchNormalizationAttributes => {\r\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\r\n      const momentum = node.attributes.getFloat('momentum', 0.9);\r\n      const spatial = node.attributes.getInt('spatial', 1);\r\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\r\n    };\r\n\r\nconst createBatchNormalizationProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\r\n        ProgramInfo => {\r\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n          const rank = inputs[0].dims.length;\r\n          const [scaleWidth, scaleHeight] =\r\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\r\n          const shaderSource = `\r\n  float process(int[${rank}] indices) {\r\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\r\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\r\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\r\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\r\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\r\n\r\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\r\n  }`;\r\n          return {\r\n            ...batchNormalizationProgramMetadata,\r\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 5) {\r\n    throw new Error('BatchNormalization requires 5 inputs.');\r\n  }\r\n\r\n  const X = inputs[0];\r\n  const scale = inputs[1];\r\n  const B = inputs[2];\r\n  const mean = inputs[3];\r\n  const var_ = inputs[4];\r\n\r\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\r\n  // other inputs can have only one dimensions\r\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\r\n      var_.dims.length !== 1) {\r\n    throw new Error('invalid input shape.');\r\n  }\r\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\r\n      var_.dims[0] !== X.dims[1]) {\r\n    throw new Error('invalid input shape.');\r\n  }\r\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\r\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\r\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\r\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\n\r\nexport function glslAdd(): GlslValueFunction {\r\n  const name = 'add_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a + b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 + v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslDiv(): GlslValueFunction {\r\n  const name = 'div_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a / b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 / v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslMul(): GlslValueFunction {\r\n  const name = 'mul_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a * b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 * v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSub(): GlslValueFunction {\r\n  const name = 'sub_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a - b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 - v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslEqual(): GlslValueFunction {\r\n  const name = 'equal_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a == b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4(equal(v1, v2));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslGreater(): GlslValueFunction {\r\n  const name = 'greater_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a > b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4( v1.r > v2.r ,\r\n      v1.g > v2.g,\r\n      v1.b > v2.b,\r\n      v1.a > v2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLess(): GlslValueFunction {\r\n  const name = 'less_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a < b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4( v1.r < v2.r ,\r\n                v1.g < v2.g,\r\n                v1.b < v2.b,\r\n                v1.a < v2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslAnd(): GlslValueFunction {\r\n  const name = 'and_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) && bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r && b2.r ,\r\n                b1.g && b2.g,\r\n                b1.b && b2.b,\r\n                b1.a && b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslOr(): GlslValueFunction {\r\n  const name = 'or_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) || bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r || b2.r ,\r\n                b1.g || b2.g,\r\n                b1.b || b2.b,\r\n                b1.a || b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslXor(): GlslValueFunction {\r\n  const name = 'xor_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) ^^ bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r ^^ b2.r ,\r\n                b1.g ^^ b2.g,\r\n                b1.b ^^ b2.b,\r\n                b1.a ^^ b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslPow(): GlslValueFunction {\r\n  return glslBuiltinBinary('pow');\r\n}\r\nexport function glslPRelu(): GlslValueFunction {\r\n  const name = 'prelu_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a < 0.0 ? a * b: a;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4(\r\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\r\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\r\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\r\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\r\n      );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\r\n  const name = `${fname}_`;\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return ${fname}(a, b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return ${fname}(v1, v2);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\nconst createBinaryProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\r\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\r\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n      return {\r\n        name: glslFunc.name,\r\n        inputNames: ['A', 'B'],\r\n        inputTypes: [textureType, textureType],\r\n        cacheHint: cacheKey,\r\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\r\n      };\r\n    };\r\n\r\nconst createBinaryProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\r\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\r\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\r\n      let outputShape = inputs[0].dims;\r\n\r\n      const usePackedTexture = handler.session.pack;\r\n\r\n      if (isBroadcast) {\r\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\r\n        if (!calculatedShape) {\r\n          throw new Error('Can\\'t perform binary op on the given tensors');\r\n        }\r\n        outputShape = calculatedShape;\r\n        const outputRank = outputShape.length;\r\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\r\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\r\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\r\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\r\n\r\n        const glsl = getGlsl(handler.session.backend.glContext.version);\r\n        const shaderSource = usePackedTexture ? `\r\n      ${glslFunc.body}\r\n      void main() {\r\n        vec4 a = getAAtOutCoords();\r\n        vec4 b = getBAtOutCoords();\r\n        vec4 result = ${glslFunc.name}(a, b);\r\n        ${glsl.output} = result;\r\n      }` :\r\n                                                `\r\n      ${glslFunc.body}\r\n      float process(int indices[${outputRank}]) {\r\n        int aindices[${aRank}];\r\n        int bindices[${bRank}];\r\n        ${aBcast}\r\n        ${bBcast}\r\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\r\n      }`;\r\n\r\n        return {\r\n          name: glslFunc.name,\r\n          inputNames: ['A', 'B'],\r\n          inputTypes: [textureType, textureType],\r\n          output: {dims: outputShape, type: outputTensorType, textureType},\r\n          shaderSource,\r\n          hasMain: usePackedTexture\r\n        };\r\n      }\r\n      const glsl = getGlsl(handler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n    ${glslFunc.body}\r\n    void main() {\r\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\r\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\r\n      vec4 result = ${glslFunc.name}(v1, v2);\r\n      ${glsl.output} = result;\r\n    }\r\n    `;\r\n\r\n      return {\r\n        name: glslFunc.name,\r\n        inputNames: ['A', 'B'],\r\n        inputTypes: [textureType, textureType],\r\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\r\n\r\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\r\n\r\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\r\n\r\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\r\n\r\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\r\n\r\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\r\n\r\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\r\n\r\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\r\n\r\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\r\n\r\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\r\n\r\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\r\n\r\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\nimport {ConcatAttributes} from './concat';\r\n\r\nimport {getChannels, unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\r\n  name: 'Concat (packed)',\r\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\r\n  inputTypes: Array(inputCount).fill(TextureType.packed),\r\n  cacheHint\r\n});\r\n\r\nconst createPackedConcatProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\r\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\r\n      }\r\n      if (axis < 0) {\r\n        axis = inputShape.length + axis;\r\n      }\r\n      // ensure all of the non-concatenated axes match each other\r\n      // calculate the shape of the output tensor while we do that\r\n      const outputShape = inputShape.slice(0);\r\n      for (let i = 1; i < inputs.length; i++) {\r\n        const dataNShape = inputs[i].dims.slice();\r\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\r\n          // add to the placeholder for computing output shape\r\n          if (axisIndex === axis) {\r\n            outputShape[axis] += dataNShape[axisIndex];\r\n          }\r\n          // ensure all non-cancatenated axes match each other\r\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\r\n            throw new Error('non concat dimensions must match');\r\n          }\r\n        }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const coords = getChannels('coords', rank);\r\n      const dtype = getCoordsDataType(rank);\r\n      const unpackChannel = unpackFromChannel();\r\n\r\n      const shapes = inputs.map(i => i.dims);\r\n      const channels = getGlChannels(rank);\r\n      const offsets: number[] = new Array(shapes.length - 1);\r\n\r\n      offsets[0] = shapes[0][axis];\r\n      for (let i = 1; i < offsets.length; i++) {\r\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\r\n      }\r\n\r\n      const channel = channels[axis];\r\n      const lastChannels = channels.slice(-2);\r\n      const allChannels = channels.join();\r\n\r\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\r\n        return getChannel(\r\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\r\n        }`;\r\n      for (let i = 1; i < offsets.length; i++) {\r\n        const shift = offsets[i - 1];\r\n        getValueSnippet += `\r\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\r\n              return getChannel(\r\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\r\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\r\n            }`;\r\n      }\r\n      const lastIndex = offsets.length;\r\n      const shift = offsets[offsets.length - 1];\r\n      getValueSnippet += `\r\n            return getChannel(\r\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\r\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\r\n\r\n      const glsl = getGlsl(handler.session.backend.glContext.version);\r\n\r\n      const shaderSource = `\r\n          ${unpackChannel}\r\n          float getValue(${channels.map(x => 'int ' + x)}) {\r\n            ${getValueSnippet}\r\n          }\r\n\r\n          void main() {\r\n            ${dtype} coords = getOutputCoords();\r\n            int lastDim = coords.${channels[rank - 1]};\r\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\r\n            coords.${channels[rank - 2]} = lastDim;\r\n\r\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\r\n\r\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\r\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\r\n              result.g = getValue(${coords});\r\n            }\r\n\r\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\r\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\r\n              result.a = getValue(${coords});\r\n            }\r\n\r\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\r\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\r\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\r\n              result.b = getValue(${coords});\r\n            }\r\n            ${glsl.output} = result;\r\n          }\r\n        `;\r\n\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true,\r\n      };\r\n    };\r\n\r\nexport const createPackedConcatProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\r\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\r\n  const channelIdx = channels.indexOf(channel);\r\n  const res = channels.map((c, idx) => {\r\n    if (idx === channelIdx) {\r\n      return `${c} - ${shift}`;\r\n    } else {\r\n      return c;\r\n    }\r\n  });\r\n  return res.join();\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\r\n\r\nexport interface ConcatAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nexport const concat: OperatorImplementation<ConcatAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\r\n        const output =\r\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n        return [output];\r\n      } else {\r\n        const output =\r\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n        return [output];\r\n      }\r\n    };\r\n\r\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\r\n  name: 'Concat',\r\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\r\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\r\n  cacheHint\r\n});\r\n\r\nconst createUnpackedConcatProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\r\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\r\n      }\r\n      if (axis < 0) {\r\n        axis = inputShape.length + axis;\r\n      }\r\n      // ensure all of the non-concatenated axes match each other\r\n      // calculate the shape of the output tensor while we do that\r\n      const outputShape = inputShape.slice(0);\r\n      for (let i = 1; i < inputs.length; i++) {\r\n        const dataNShape = inputs[i].dims.slice();\r\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\r\n          // add to the placeholder for computing output shape\r\n          if (axisIndex === axis) {\r\n            outputShape[axis] += dataNShape[axisIndex];\r\n          }\r\n          // ensure all non-cancatenated axes match each other\r\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\r\n            throw new Error('non concat dimensions must match');\r\n          }\r\n        }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n\r\n      const sizeInConcatAxis = new Array<number>(inputs.length);\r\n      let previousSum = 0;\r\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\r\n        previousSum += inputs[i].dims[axis];\r\n        sizeInConcatAxis[i] = previousSum;\r\n      }\r\n\r\n      let getTextureIndexWhereDataResidesMethod = '';\r\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\r\n      if (inputs.length < 5) {\r\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\r\n      } else {\r\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\r\n      }\r\n\r\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\r\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\r\n      const shaderSource = `\r\n        ${fetchDataFromCorrectTextureMethod}\r\n        ${getSizeInConcatAxisValueFromIndexMethod}\r\n        ${getTextureIndexWhereDataResidesMethod}\r\n        float process(int indices[${rank}]) {\r\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\r\n\r\n          if(textureIndex != 0) {\r\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\r\n          }\r\n\r\n          return fetchDataFromCorrectTexture(textureIndex, indices);\r\n        }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n      };\r\n    };\r\n\r\nconst createUnpackedConcatProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\r\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\r\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\r\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\r\n`);\r\n  return `int getTextureWhereDataResides(int index) {\r\n      ${searchAxis.join('')}\r\n    }`;\r\n};\r\n\r\n// TODO: Implement BinarySearch in GLSL\r\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\r\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\r\n\r\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\r\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\r\n  for (let i = 0; i < numberOfTensors; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\r\n    } else if (i === numberOfTensors - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return _X${i}(indices); }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\r\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\r\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\r\n    } else if (i === sizeInConcatAxis.length - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return ${sizeInConcatAxis[i]}; }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\r\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length < 1) {\r\n    throw new Error('too few inputs');\r\n  }\r\n\r\n  const inputType = inputs[0].type;\r\n  const inputDimensionality = inputs[0].dims.length;\r\n\r\n  // TODO: Support string concat\r\n  if (inputType === 'string') {\r\n    throw new Error('string tensor is not supported yet');\r\n  }\r\n\r\n  for (const input of inputs) {\r\n    // make sure types of all inputs match\r\n    if (input.type !== inputType) {\r\n      throw new Error('input tensors should be one type');\r\n    }\r\n\r\n    // make sure the dimensionality of all inputs are the same\r\n    if (input.dims.length !== inputDimensionality) {\r\n      throw new Error('input tensors should have the same shape');\r\n    }\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../../instrument';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {calculateOutputShape, ConvAttributes} from './conv';\r\nimport {getActicationSnippet} from './fuse-utils';\r\n\r\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\r\n  name: 'GroupedConv',\r\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.unpacked],\r\n  cacheHint\r\n});\r\n\r\nconst createUnpackedGroupedConvProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\r\n     attributes: ConvAttributes): ProgramInfo => {\r\n      const hasBias = inputs.length > 2;\r\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\r\n      const xShape = inputs[0].dims.slice();\r\n      const wShape = inputs[1].dims.slice();\r\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\r\n      Logger.verbose(\r\n          'GroupedConv',\r\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\r\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\r\n      const outputShape =\r\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\r\n\r\n      const shaderSource = `\r\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\r\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\r\n  ${activationFunction}\r\n  void main() {\r\n    ivec4 coords = getOutputCoords();\r\n    int batch = coords.x;\r\n    int output_channel = coords.y;\r\n    ivec2 xRCCorner = coords.zw * strides - pads;\r\n    int group_id = output_channel / ${outputChannelsPerGroup};\r\n\r\n    float value = 0.0;\r\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\r\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\r\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\r\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\r\n\r\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\r\n          continue;\r\n        }\r\n\r\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\r\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\r\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\r\n            continue;\r\n          }\r\n\r\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\r\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\r\n          value += xVal*wVal;\r\n        }\r\n      }\r\n    }\r\n    ${processBias}\r\n    ${applyActivation}\r\n    ${glsl.output} = vec4(value, .0, .0, .0);\r\n  }\r\n`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n        hasMain: true,\r\n      };\r\n    };\r\n\r\nexport const createUnpackedGroupedConvProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\r\n        ProgramInfoLoader => {\r\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\r\n          return {\r\n            ...metadata,\r\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\r\n          };\r\n        };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {calculateOutputShape, ConvAttributes} from './conv';\r\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\r\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\r\n\r\nexport const conv2DPackedPointwise =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\r\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\r\n\r\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\r\n      const matmulOutput = inferenceHandler.run(\r\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\r\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\r\n    };\r\n\r\nexport const conv2DPacked =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n\r\n      // run im2col\r\n      const im2colOutput = inferenceHandler.run(\r\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\r\n          [inputs[0]]);\r\n\r\n      // reshape kernel\r\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\r\n\r\n      // run matmul\r\n      const matmulInputs =\r\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\r\n      const matmulOutput = inferenceHandler.run(\r\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\r\n\r\n      // reshape output\r\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\r\n      return outputReshaped;\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {InferenceHandler} from '../../../backend';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {PoolConvUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\r\nimport {conv2DPacked} from './conv-pack';\r\nimport {createDotProductProgramInfoLoader} from './dot-product';\r\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\r\nimport {createIm2ColProgramInfoLoader} from './im2col';\r\nimport {createMatmulProgramInfoLoader} from './matmul';\r\n\r\n\r\nexport const calculateOutputShape =\r\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\r\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\r\n      const batchSize = inputShape[0];\r\n      const inputSpatialShape = inputShape.slice(2);\r\n      const spatialRank = inputSpatialShape.length;\r\n      const outChannels = kernelShape[0];\r\n      const kernelSpatialShape = kernelShape.slice(2);\r\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\r\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\r\n      const outputSpatialShape =\r\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\r\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\r\n      return outputShape;\r\n    };\r\n\r\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\r\n  readonly autoPad: string;\r\n  readonly dilations: readonly number[];\r\n  readonly group: number;\r\n  readonly kernelShape: readonly number[];\r\n  readonly pads: readonly number[];\r\n  readonly strides: readonly number[];\r\n}\r\n\r\nexport const conv: OperatorImplementation<ConvAttributes> =\r\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\r\n      return conv2d(inferenceHandler, inputs, attributes);\r\n    };\r\n\r\nconst conv2d: OperatorImplementation<ConvAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\r\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\r\n      const packMode = inferenceHandler.session.pack;\r\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\r\n      if (adjustedAttributes.group > 1) {\r\n        const result = inferenceHandler.run(\r\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\r\n        return [result];\r\n      } else if (isPointwise && packMode) {\r\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\r\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\r\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\r\n      } else {\r\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\r\n      }\r\n    };\r\n\r\nconst conv2DUnpackedPointwise =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\r\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\r\n\r\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\r\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\r\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\r\n    };\r\n\r\nconst conv2DUnpacked =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const xIm2Col = inferenceHandler.run(\r\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\r\n\r\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\r\n      const output = inferenceHandler.run(\r\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\r\n      return output;\r\n    };\r\n\r\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\r\n  const kernelShape = attributes.kernelShape.slice();\r\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\r\n  if (attributes.kernelShape.length === 0) {\r\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\r\n      kernelShape.push(inputs[1].dims[i]);\r\n    }\r\n  }\r\n  const pads = attributes.pads.slice();\r\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\r\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\r\n\r\n  // always return a new object so does not modify the original attributes\r\n  const newAttributes: T = Object.assign({}, attributes);\r\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\r\n  return newAttributes;\r\n};\r\n\r\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\r\n  const attributes = node.attributes;\r\n  const activationAttributes = parseInternalActivationAttributes(attributes);\r\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\r\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\r\n  const dilations = attributes.getInts('dilations', [1, 1]);\r\n  const group = attributes.getInt('group', 1);\r\n  const kernelShape = attributes.getInts('kernel_shape', []);\r\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\r\n  const strides = attributes.getInts('strides', [1, 1]);\r\n\r\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\r\n  // Refer to the below link for all input checks\r\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\r\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\r\n    throw new Error('Conv requires 2 or 3 inputs');\r\n  }\r\n\r\n  // TODO : Need to add support for multi-dimensional conv\r\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\r\n    throw new Error('currently only support 2-dimensional conv');\r\n  }\r\n\r\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\r\n  const dataChannel = inputs[0].dims[1];\r\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\r\n  if (dataChannel !== filterInChannel) {\r\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\r\n  }\r\n\r\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\r\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\r\n    throw new Error('invalid bias');\r\n  }\r\n\r\n  const spatialRank = inputs[0].dims.length - 2;\r\n  // wrong dilations dimension\r\n  if (attributes.dilations.length !== spatialRank) {\r\n    throw new Error(`dilations should be ${spatialRank}D`);\r\n  }\r\n\r\n  // Wrong strides dimension\r\n  if (attributes.strides.length !== spatialRank) {\r\n    throw new Error(`strides should be ${spatialRank}D`);\r\n  }\r\n\r\n  // Wrong pads dimension\r\n  if (attributes.pads.length !== spatialRank * 2) {\r\n    throw new Error(`pads should be ${spatialRank * 2}D`);\r\n  }\r\n\r\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\r\n  // (the first 2 dims are batch_size and channels)\r\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\r\n    throw new Error('invalid kernel shape');\r\n  }\r\n\r\n  // TODO : Need to add support for float64\r\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\r\n    throw new Error('Conv input(X,W) should be float tensor');\r\n  }\r\n\r\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\r\n    throw new Error('Conv input(bias) should be float tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nimport {transpose, TransposeAttributes} from './transpose';\r\n\r\nexport interface DepthToSpaceAttributes {\r\n  mode: 'DCR'|'CRD';\r\n  blocksize: number;\r\n}\r\n\r\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const blocksize = attributes.blocksize;\r\n      const blocksizeSqr = blocksize * blocksize;\r\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\r\n      const firstReshapeShape = attributes.mode === 'DCR' ?\r\n          [\r\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\r\n            inputs[0].dims[3]\r\n          ] :\r\n          [\r\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\r\n            inputs[0].dims[3]\r\n          ];\r\n\r\n      // const transpose = new WebGLTranspose();\r\n      // const attributes = new Attribute(undefined);\r\n      // attributes.set('perm', 'ints', transposePerm);\r\n      // transpose.initialize(attributes);\r\n\r\n      // First reshape\r\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\r\n\r\n      // transpose\r\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\r\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\r\n\r\n      // Second reshape\r\n      const secondReshapeShape = [\r\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\r\n        inputs[0].dims[3] * blocksize\r\n      ];\r\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\r\n      return [result];\r\n    };\r\n\r\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\r\n    (node: Graph.Node): DepthToSpaceAttributes => {\r\n      // processing node attributes\r\n      const blocksize = node.attributes.getInt('blocksize');\r\n      if (blocksize < 1) {\r\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\r\n      }\r\n      const mode = node.attributes.getString('mode', 'DCR');\r\n      if (mode !== 'DCR' && mode !== 'CRD') {\r\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\r\n      }\r\n      return {mode, blocksize};\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (inputs.length !== 1) {\r\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\r\n  }\r\n\r\n  // Input has to be a 4-D tensor\r\n  // TODO: Support string depth-to-space.\r\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\r\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\r\nimport {calculateIm2ColDims} from './im2col';\r\n\r\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\r\n  name: 'ConvDotProduct',\r\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.packedLastDimension],\r\n  cacheKey: attributes.activationCacheKey\r\n});\r\n\r\nconst createDotProductProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\r\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\r\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\r\n      const [kWidth, kHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\r\n\r\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\r\n      const [im2colWidth, im2colHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\r\n      const rank = outputShape.length;\r\n\r\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\r\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\r\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n${activationFunction}\r\nfloat process(int indices[${rank}]) {\r\n  int b[1];\r\n  b[0] = indices[1];\r\n  int im2col[4];\r\n  im2col[0] = indices[0];\r\n  im2col[1] = indices[2];\r\n  im2col[2] = indices[3];\r\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\r\n          im2colStrides[2]};\r\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\r\n  float value = ${initValue};\r\n  for (int i = 0; i < ${sharedDim}; ++i) {\r\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\r\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\r\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\r\n    ++im2colOffset;\r\n    ++kernelOffset;\r\n  }\r\n  ${applyActivation}\r\n  return value;\r\n}`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nexport const createDotProductProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\r\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\r\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\r\n      return {\r\n        ...metadata,\r\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const flatten: OperatorImplementation<number> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\r\n      validateInputs(inputs, axis);\r\n\r\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\r\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\r\n    };\r\n\r\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\r\n    node.attributes.getInt('axis', 1);  // default axis is 1\r\n\r\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Flatten requires 1 input.');\r\n  }\r\n\r\n  const r = inputs[0].dims.length;\r\n  if (r === 0) {\r\n    throw new Error('scalar tensor is not supported.');\r\n  }\r\n\r\n  if (axis < -r || axis > r) {\r\n    throw new Error('Invalid axis');\r\n  }\r\n\r\n  // TODO: Support string type\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('string tensor is not supported.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Attribute} from '../../../attribute';\r\nimport {GlslValueFunction} from '../glsl-definitions';\r\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\r\n\r\nexport interface InternalActivationAttributes {\r\n  readonly activation: string;\r\n  readonly clipMin?: number;\r\n  readonly clipMax?: number;\r\n  readonly activationCacheKey: string;\r\n}\r\n\r\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\r\n  let func: GlslValueFunction;\r\n  switch (attributes.activation) {\r\n    case 'Relu':\r\n      func = glslRelu();\r\n      break;\r\n    case 'Sigmoid':\r\n      func = glslSigmoid();\r\n      break;\r\n    case 'Clip':\r\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\r\n      break;\r\n    // TODO: adding other activations that can be fused.\r\n    default:\r\n      return {activationFunction: '', applyActivation: ''};\r\n  }\r\n\r\n  const activationName = func.name;\r\n  const activationFunction = func.body;\r\n  const applyActivation = `value = ${activationName}_(value);`;\r\n  return {activationFunction, applyActivation};\r\n}\r\n\r\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\r\n  const activation = attributes.getString('__internal_activation', '');\r\n\r\n  if (activation === 'Clip') {\r\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\r\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\r\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\r\n  }\r\n  return {activation, activationCacheKey: activation};\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\ninterface GatherAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nexport const gather: OperatorImplementation<GatherAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes.axis);\r\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\r\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\r\n\r\nconst gatherProgramMetadata = {\r\n  name: 'Gather',\r\n  inputNames: ['A', 'B'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst createGatherProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      const indexDataShape = inputs[1].dims.slice();\r\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\r\n\r\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\r\n      const indexCopyOps: string[] = [];\r\n      for (let i = 0; i < outputShape.length; i++) {\r\n        // outputShape is divided into three parts: A, B, C\r\n        // |0        axis|  axis + indexDataShape.length |          end|\r\n        // |     A       |             B                 |      C      |\r\n        //\r\n        // inputIdx: [A, inputs[1][B], C]\r\n        if (i < axis) {  // A\r\n          outputShape[i] = inputShape[i];\r\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\r\n        } else {\r\n          if (i < axis + indexDataShape.length) {  // B\r\n            outputShape[i] = indexDataShape[i - axis];\r\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\r\n          } else {                                                       // C\r\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\r\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\r\n          }\r\n        }\r\n      }\r\n\r\n      const orank = outputShape.length || 1;\r\n      const irank = inputShape.length;\r\n      const iDrank = indexDataShape.length || 1;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${orank}]) {\r\n        int inputIdx[${irank}];\r\n        int indexDataIdx[${iDrank}];\r\n        indexDataIdx[0] = 0;\r\n        ${indexCopyOps.join('\\n        ')}\r\n        int idx = int(_B(indexDataIdx));\r\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\r\n        return _A(inputIdx);\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createGatherProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\r\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\r\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('Gather requires 2 inputs.');\r\n  }\r\n  const tensorRank = inputs[0].dims.length;\r\n  if (tensorRank < 1) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (axis < -tensorRank || axis > tensorRank - 1) {\r\n    throw new Error('Invalid axis.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invaid input type.');\r\n  }\r\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\r\n    throw new Error('Invaid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {GemmUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface GemmAttributes extends AttributeWithCacheKey {\r\n  transA: boolean;\r\n  transB: boolean;\r\n  alpha: number;\r\n  beta: number;\r\n  isOptionalC: boolean;  // in opset 11, C becomes optional\r\n}\r\n\r\nexport const gemm: OperatorImplementation<GemmAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\r\n  const transA = node.attributes.getInt('transA', 0) !== 0;\r\n  const transB = node.attributes.getInt('transB', 0) !== 0;\r\n  const alpha = node.attributes.getFloat('alpha', 1.0);\r\n  const beta = node.attributes.getFloat('beta', 1.0);\r\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\r\n};\r\n\r\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\r\n    parseGemmAttributes(node, false);\r\n\r\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\r\n    parseGemmAttributes(node, true);\r\n\r\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\r\n  const metadata = {\r\n    name: 'Gemm',\r\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\r\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                                      [TextureType.unpacked, TextureType.unpacked],\r\n    key: attributes.cacheKey\r\n  };\r\n\r\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\r\n};\r\n\r\nconst createGemmProgramInfo =\r\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\r\n      const aShape = inputs[0].dims.slice();\r\n      const bShape = inputs[1].dims.slice();\r\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\r\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\r\n      const outputShape = [M, N];\r\n      if (!outputShape) {\r\n        throw new Error('Can\\'t use gemm on the given tensors');\r\n      }\r\n      let sharedDim = aShape[aShape.length - 1];\r\n      let line = '';\r\n      if (attributes.transA) {\r\n        sharedDim = aShape[0];\r\n      }\r\n      if (attributes.transA && attributes.transB) {\r\n        line = 'value += _A_T(a) * _B_T(b);';\r\n      } else if (attributes.transA && !attributes.transB) {\r\n        line = 'value += _A_T(a) * _B(b);';\r\n      } else if (!attributes.transA && attributes.transB) {\r\n        line = 'value += _A(a) * _B_T(b);';\r\n      } else if (!attributes.transA && !attributes.transB) {\r\n        line = 'value += _A(a) * _B(b);';\r\n      }\r\n      const rank = outputShape.length;\r\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\r\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\r\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\r\n      const shaderSource = `\r\n      float process(int indices[${rank}]) {\r\n          int a[${rank}];\r\n          int b[${rank}];\r\n          ${declareC}\r\n\r\n          copyVec(indices, a);\r\n          copyVec(indices, b);\r\n          ${broadcastC}\r\n\r\n          float value = 0.0;\r\n          for (int k=0; k<${sharedDim}; ++k) {\r\n              a[${rank - 1}] = k;\r\n              b[${rank - 2}] = k;\r\n              ${line}\r\n          }\r\n\r\n          value = value * alpha;\r\n          ${calculateC}\r\n          return value;\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        variables: [\r\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\r\n        ],\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\r\n  if (!inputs) {\r\n    throw new Error('Input is missing');\r\n  }\r\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\r\n    throw new Error('Invaid input shape.');\r\n  }\r\n  if (!attributes.isOptionalC && inputs.length !== 3) {\r\n    throw new Error('Gemm requires 3 inputs');\r\n  }\r\n\r\n  // 'C' can be of dimensionality 1 or 2 only\r\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\r\n    throw new Error('Invalid input shape of C');\r\n  }\r\n\r\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\r\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\r\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n\r\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\r\n    throw new Error('Input types are mismatched');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {ConvAttributes} from './conv';\r\nimport {unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\r\n  name: 'Im2Col (packed)',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed],\r\n  cacheHint,\r\n});\r\n\r\nconst createPackedIm2ColProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\r\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\r\n      const xshape = x.dims;\r\n      const wshape = w.dims;\r\n      const rowDim = 2;\r\n      const colDim = 3;\r\n      const rank = outputShape.length;\r\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\r\n      const kernelSize = wshape[2] * wshape[3];\r\n      const unpackChannel = unpackFromChannel();\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      let unrolled = '';\r\n\r\n      for (let row = 0; row <= 1; row++) {\r\n        for (let col = 0; col <= 1; col++) {\r\n          unrolled += `\r\n            blockIndex = rc.x + ${col};\r\n            pos = rc.y + ${row};\r\n\r\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\r\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\r\n              attributes.pads[0]};\r\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\r\n\r\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\r\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\r\n              attributes.pads[1]};\r\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\r\n\r\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\r\n\r\n                  ch = int(float(pos)/ ${kernelSize}.);\r\n                    innerDims = vec2(d0, d1);\r\n                    result[${row * 2 + col}] = getChannel(\r\n                      getA(0, ch, int(innerDims.x),\r\n                      int(innerDims.y)), innerDims);\r\n                }\r\n              }\r\n            }\r\n\r\n          `;\r\n        }\r\n      }\r\n\r\n      const shaderSource = `\r\n      ${unpackChannel}\r\n\r\n      void main() {\r\n        ivec2 rc = getOutputCoords();\r\n          vec4 result = vec4(0.0);\r\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\r\n          vec2 innerDims;\r\n          ${unrolled}\r\n          ${glsl.output} = result;\r\n      }\r\n            `;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const createPackedIm2ColProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\r\n     attributes: ConvAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {ConvAttributes} from './conv';\r\n\r\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\r\n  name: 'Im2Col',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n  cacheHint,\r\n});\r\n\r\nconst createIm2ColProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\r\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\r\n      const xshape = x.dims;\r\n      const wshape = w.dims;\r\n\r\n      const rank = outputShape.length;\r\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\r\n\r\n      const shaderSource = `\r\n        const int XC = ${xshape[1]};\r\n        const int XH = ${xshape[2]};\r\n        const int XW = ${xshape[3]};\r\n        const int KH = ${attributes.kernelShape[0]};\r\n        const int KW = ${attributes.kernelShape[1]};\r\n        const int dilationH = ${attributes.dilations[0]};\r\n        const int dilationW = ${attributes.dilations[1]};\r\n        const int strideH = ${attributes.strides[0]};\r\n        const int strideW = ${attributes.strides[1]};\r\n        const int padH = ${attributes.pads[0]};\r\n        const int padW = ${attributes.pads[1]};\r\n        const int KHKW = KH*KW;\r\n        const int XCKHKW = XC * KHKW;\r\n        const int outputChannels = 4;\r\n        vec4 process(int indices[${rank}]) {\r\n          int b  = indices[0]; // batch size\r\n          int oh = indices[1] * strideH - padH; //output height\r\n          int ow = indices[2] * strideW - padW; //output width\r\n          int p = indices[3] * outputChannels; //patch\r\n          vec4 value = vec4(0.0);\r\n          for(int i=0; i < outputChannels; ++i) {\r\n            if(p < XCKHKW) {\r\n              int patchC = p / KHKW;\r\n              int patchH = (p - patchC*KHKW) / KW;\r\n              int patchW = (p - patchC*KHKW) - patchH * KW;\r\n              int xh2 = oh + patchH * dilationH;\r\n              int xw2 = ow + patchW * dilationW;\r\n              int x[${xshape.length}];\r\n              x[0] = b;\r\n              x[1] = patchC;\r\n              x[2] = xh2;\r\n              x[3] = xw2;\r\n              if(xh2 >= 0 &&\r\n                  xh2 < XH &&\r\n                  xw2 >= 0 &&\r\n                  xw2 < XW) {\r\n                value[i] = _X(x);\r\n              }\r\n            }\r\n            ++p;\r\n          }\r\n          return value;\r\n        }\r\n        `;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nexport const createIm2ColProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\r\n     attributes: ConvAttributes): ProgramInfoLoader => {\r\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\r\n      };\r\n    };\r\n\r\n\r\nexport const calculateIm2ColDims =\r\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\r\n        number[] =>\r\n            [outputShape[0], outputShape[2], outputShape[3],\r\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\r\n  scale: number;\r\n  bias: number[];\r\n}\r\n\r\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output =\r\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\r\n    (node: Graph.Node): ImageScalerAttributes => {\r\n      const scale = node.attributes.getFloat('scale');\r\n      const bias = node.attributes.getFloats('bias');\r\n      return createAttributeWithCacheKey({scale, bias});\r\n    };\r\n\r\nconst imageScalerProgramMetadata = {\r\n  name: 'ImageScaler',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst createImageScalerProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\r\n        ProgramInfo => {\r\n          const outputShape = inputs[0].dims.slice();\r\n          const rank = outputShape.length;\r\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\r\n          const shaderSource = `\r\n      ${getBiasMethod}\r\n      float process(int indices[${rank}]) {\r\n        return _X(indices) * scale + getBias(bias, indices[1]);\r\n      }`;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            variables: [\r\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\r\n              {name: 'scale', type: 'float', data: attributes.scale}\r\n            ],\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst createImageScalerProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\r\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\r\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\r\n    };\r\n\r\nconst createGetBiasMethod = (numChannels: number): string => {\r\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\r\n  for (let i = 0; i < numChannels; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (channel == ${i}) { return bias[${i}]; }`);\r\n    } else if (i === numChannels - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return bias[${i}]; }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (channel == ${i}) { return bias[${i}]; }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('ImageScaler requires 1 input.');\r\n  }\r\n  if (inputs[0].dims.length !== 4) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const instanceNormalization: OperatorImplementation<number> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\r\n      const output = inferenceHandler.run(\r\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\r\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\r\n      return [output];\r\n    };\r\n\r\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\r\n    node.attributes.getFloat('epsilon', 1e-5);\r\n\r\nconst meanAndVarianceProgramMetadata = {\r\n  name: 'InstanceNormalization_MeanAndVariance',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\r\n  const xDims = input.dims.slice();\r\n  const channel = xDims[1];\r\n  const channelSize = xDims[2] * xDims[3];\r\n  const outputShape = [xDims[0], channel];\r\n\r\n  const shaderSource = `\r\n      vec4 process(int[2] indices) {\r\n        vec4 v = vec4(0.0);\r\n        int a[4];\r\n        a[0] = indices[0];\r\n        a[1] = indices[1];\r\n        float temp = 0.0;\r\n        for(int a2=0; a2<${xDims[2]}; a2++) {\r\n          a[2] = a2;\r\n          for(int a3=0; a3<${xDims[3]}; a3++) {\r\n            a[3] = a3;\r\n            float x = _X(a);\r\n            temp += x;\r\n          }\r\n        }\r\n        float mean = temp / float(${channelSize});\r\n        temp = 0.0;\r\n        for(int a2=0; a2<${xDims[2]}; a2++) {\r\n          a[2] = a2;\r\n          for(int a3=0; a3<${xDims[3]}; a3++) {\r\n            a[3] = a3;\r\n            float x = _X(a);\r\n            temp += (x - mean) * (x - mean);\r\n          }\r\n        }\r\n        v.r = mean;\r\n        v.g = temp / float(${channelSize});\r\n\r\n        return v;\r\n      }`;\r\n  return {\r\n    ...metadata,\r\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\r\n  ...meanAndVarianceProgramMetadata,\r\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\r\n});\r\n\r\nconst computeOutputProgramMetadata = {\r\n  name: 'InstanceNormalization_ComputeOutput',\r\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\r\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst createComputeOutputProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\r\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\r\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\r\n      const shaderSource = `\r\n      vec4 get_MeanAndVariance(int[2] mv) {\r\n        int offset = indicesToOffset_MeanAndVariance(mv);\r\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\r\n        return ${glsl.texture2D}(MeanAndVariance, coords);\r\n      }\r\n\r\n      float process(int[4] indices) {\r\n        int mv[2];\r\n        mv[0] = indices[0];\r\n        mv[1] = indices[1];\r\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\r\n        float mean = mean_and_variance.r;\r\n        float variance = mean_and_variance.g;\r\n\r\n        int sb[1];\r\n        sb[0] = indices[1];\r\n        float scale = _Scale(sb);\r\n        float b = _B(sb);\r\n\r\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createComputeOutputProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\r\n        ProgramInfoLoader => {\r\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\r\n          return {\r\n            ...metadata,\r\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 3) {\r\n    throw new Error('InstanceNormalization requires 3 inputs.');\r\n  }\r\n\r\n  const X = inputs[0];\r\n  const scale = inputs[1];\r\n  const B = inputs[2];\r\n\r\n  // input should at least have three dimensions - N,C,dim1,...,dimn\r\n  // other inputs can have only one dimensions\r\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\r\n    throw new Error('Input shapes are mismatched.');\r\n  }\r\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\r\n      (B.type !== 'float32' && B.type !== 'float64')) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[0].dims.length !== 4) {\r\n    throw new Error('Only support 4-D input shape.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil} from '../../../util';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\n\r\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\r\nimport {getBiasForMatmul} from './matmul';\r\n\r\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\r\n  name: 'MatMul (packed)',\r\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\r\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\r\n                        [TextureType.packed, TextureType.packed],\r\n  cacheHint\r\n});\r\n\r\nconst createPackedMatmulProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\r\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\r\n      const hasBias = inputs.length > 2;\r\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\r\n      const aShape = inputs[0].dims;\r\n      const bShape = inputs[1].dims;\r\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\r\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\r\n\r\n      if (!outputShape) {\r\n        throw new Error('Can\\'t use matmul on the given tensors');\r\n      }\r\n      const sharedDim = aShape[aShape.length - 1];\r\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\r\n      const aRank = aShape.length;\r\n      const bRank = bShape.length;\r\n\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const coordsDataType = getCoordsDataType(outputShape.length);\r\n      const outRank = outputShape.length;\r\n      const allGlChannels = getGlChannels();\r\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\r\n\r\n      const getBiasForMatmulSnippet =\r\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\r\n\r\n      const getBcastedSamplerForMatmulSnippet =\r\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\r\n\r\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\r\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\r\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\r\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\r\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\r\n      `;\r\n      const shaderSource = `\r\n            ${getBcastedSamplerForMatmulSnippet}\r\n            ${getBiasForMatmulSnippet}\r\n            ${activationFunction}\r\n            void main() {\r\n              ${getOutputCoordsSnippet}\r\n\r\n              vec4 value = vec4(0);\r\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\r\n                vec4 a = ${getSamplerAInLoopSnippet};\r\n                vec4 b = ${getSamplerBInLoopSnippet};\r\n\r\n                value += (a.rrbb * b.rgrg);\r\n                value += (a.ggaa * b.baba);\r\n              }\r\n              ${processBias}\r\n              ${applyActivation}\r\n              ${glsl.output} = value;\r\n            }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const createPackedMatmulProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\r\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\r\n      };\r\n    };\r\n\r\nfunction getBcastSamplerForMatmul(\r\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\r\n  let unpackedACoordsSnippet = [];\r\n  let unpackedBCoordsSnippet = [];\r\n\r\n  const inAShape = inputs[0].dims;\r\n  const inBShape = inputs[1].dims;\r\n\r\n  const inARank = inAShape.length;\r\n  const inBRank = inBShape.length;\r\n\r\n  const outRank = outShape.length;\r\n  const rankADiff = outRank - inARank;\r\n  const rankBDiff = outRank - inBRank;\r\n\r\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\r\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\r\n  unpackedACoordsSnippet.join(', ');\r\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\r\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\r\n  unpackedBCoordsSnippet.join(', ');\r\n\r\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\r\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\r\n\r\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\r\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\r\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\r\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\r\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\r\n\r\n  const getBcastSamplerMatmulSource = `\r\nvec4 getAAtOutCoordsMatmul(int i) {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${swapDimSnippet}\r\n  ${coordsASnippet}\r\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\r\n  return outputValue;\r\n}\r\n\r\nvec4 getBAtOutCoordsMatmul(int i) {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${swapDimSnippet}\r\n  ${coordsBSnippet}\r\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\r\n  return outputValue;\r\n}`;\r\n\r\n  return getBcastSamplerMatmulSource;\r\n}\r\n\r\nfunction getA(allGlChannels: string[], rank: number): string {\r\n  let res = '';\r\n  for (let i = 0; i < rank - 2; i++) {\r\n    res += `rc.${allGlChannels[i]}, `;\r\n  }\r\n  res += `rc.${allGlChannels[rank - 2]}, ` +\r\n      'i*2';\r\n  return res;\r\n}\r\n\r\nfunction getB(allGlChannels: string[], rank: number): string {\r\n  let res = '';\r\n  for (let i = 0; i < rank - 2; i++) {\r\n    res += `rc.${allGlChannels[i]}, `;\r\n  }\r\n  res += 'i*2, ' +\r\n      `rc.${allGlChannels[rank - 1]}`;\r\n  return res;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\r\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\r\n\r\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      if (inferenceHandler.session.pack) {\r\n        return [inferenceHandler.run(\r\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\r\n      } else {\r\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\r\n      }\r\n    };\r\n\r\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\r\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\r\n\r\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\r\n  name: 'MatMul',\r\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.unpacked],\r\n  cacheHint\r\n});\r\n\r\nfunction createMatmulProgramInfo(\r\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\r\n  const aShape = inputs[0].dims;\r\n  const bShape = inputs[1].dims;\r\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\r\n  if (!outputShape) {\r\n    throw new Error('Can\\'t use matmul on the given tensors');\r\n  }\r\n  const coordsDataType = getCoordsDataType(outputShape.length);\r\n  const allGlChannels = getGlChannels();\r\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\r\n\r\n  const hasBias = inputs.length > 2;\r\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\r\n  const getBiasForMatmulSnippet =\r\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\r\n\r\n  const rank = outputShape.length;\r\n  const arank = aShape.length;\r\n  const brank = bShape.length;\r\n  const sharedDim = aShape[aShape.length - 1];\r\n  const shaderSource = `\r\n    ${activationFunction}\r\n    ${getBiasForMatmulSnippet}\r\n    float process(int indices[${rank}]) {\r\n        int a[${arank}];\r\n        int b[${brank}];\r\n        bcastMatmulIndices_A(indices, a);\r\n        bcastMatmulIndices_B(indices, b);\r\n\r\n        float value;\r\n        for (int k=0; k<${sharedDim}; ++k) {\r\n            a[${arank - 1}] = k;\r\n            b[${brank - 2}] = k;\r\n            value += _A(a) * _B(b);\r\n        }\r\n        ${processBias}\r\n        ${applyActivation}\r\n        return value;\r\n    }`;\r\n  return {\r\n    ...metadata,\r\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n    shaderSource,\r\n  };\r\n}\r\n\r\nexport function createMatmulProgramInfoLoader(\r\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\r\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\r\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\r\n}\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('MatMul requires 2 inputs.');\r\n  }\r\n\r\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\r\n    throw new Error('shared dimension does not match.');\r\n  }\r\n\r\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\r\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\r\n    throw new Error('inputs should be float type');\r\n  }\r\n\r\n  if (inputs[0].type !== inputs[1].type) {\r\n    throw new Error('inputs types should match');\r\n  }\r\n};\r\n\r\nexport function getBiasForMatmul(\r\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\r\n    isPacked: boolean): string {\r\n  let unpackedCoordsSnippet = '';\r\n  const inRank = inShape.length;\r\n  const outRank = outShape.length;\r\n  const rankDiff = outRank - inRank;\r\n  if (outRank < 2 && inRank > 0) {\r\n    unpackedCoordsSnippet = 'coords';\r\n  } else {\r\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\r\n  }\r\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\r\n  const inSize = ShapeUtil.size(inShape);\r\n  const isInputScalar = inSize === 1;\r\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\r\n  if (isInputScalar) {\r\n    output = 'vec4(outputValue.x)';\r\n  }\r\n  const getBiasForMatmulSource = isPacked ? `\r\nvec4 getBiasForMatmul() {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${coordsSnippet}\r\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\r\n  return ${output};\r\n}` :\r\n                                            `\r\nfloat getBiasForMatmul() {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${coordsSnippet}\r\n  return getBias(coords.x);\r\n}`;\r\n\r\n  return getBiasForMatmulSource;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\n\r\nimport {getChannels} from './packing-utils';\r\n\r\nconst packProgramMetadata = {\r\n  name: 'pack',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpackedReversed]\r\n};\r\n\r\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\r\n  const glsl = getGlsl(handler.session.backend.glContext.version);\r\n  const inputShape = input.dims;\r\n\r\n  const inputRank = inputShape.length;\r\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\r\n  const outputRank = input.dims.length;\r\n\r\n  const coordsDataType = getCoordsDataType(outputRank);\r\n  const channels = getChannels('rc', outputRank);\r\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\r\n\r\n  let reversedInputWH;\r\n  if (inputRank === 0) {\r\n    reversedInputWH = [1, 1];\r\n  } else if (inputRank === 1) {\r\n    reversedInputWH = [inputShape[0], 1];\r\n  } else {\r\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\r\n  }\r\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\r\n  const output = getOutput(inputShape, channels);\r\n\r\n  const shaderSource = `\r\n        void main() {\r\n          ${coordsDataType} rc = getOutputCoords();\r\n\r\n          if(${outOfBoundsCondition}) {\r\n            ${glsl.output} = vec4(0);\r\n          } else {\r\n            ${setup}\r\n\r\n            ${glsl.output} = vec4(${output});\r\n          }\r\n        }\r\n      `;\r\n  return {\r\n    ...packProgramMetadata,\r\n    hasMain: true,\r\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\r\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\r\n\r\n/**\r\n * check output coordinate location and return false if it is outside input's width/height boundary\r\n */\r\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\r\n  if (rank === 0) {\r\n    return 'false';\r\n  }\r\n  if (rank === 1) {\r\n    return `rc > ${shape[0]}`;\r\n  }\r\n\r\n  let cond = '';\r\n  for (let i = rank - 2; i < rank; i++) {\r\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\r\n    if (i < rank - 1) {\r\n      cond += '||';\r\n    }\r\n  }\r\n\r\n  return cond;\r\n}\r\n\r\n/**\r\n * code snippet to sample input texture with output coordiantes\r\n */\r\nfunction getOutput(shape: readonly number[], dims: string[]): string {\r\n  const rank = shape.length;\r\n\r\n  if (rank === 0) {\r\n    return 'getA(), 0, 0, 0';\r\n  }\r\n\r\n  if (rank === 1) {\r\n    return `getA(rc),\r\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\r\n            0, 0`;\r\n  }\r\n\r\n  const coord00 = 'r, c';\r\n  const coord01 = 'r, cp1';\r\n  const coord10 = 'rp1, c';\r\n  const coord11 = 'rp1, cp1';\r\n  let D = '';\r\n  if (rank > 2) {\r\n    for (let i = 0; i < rank - 2; ++i) {\r\n      D = D + `${dims[i]},`;\r\n    }\r\n  }\r\n  return `getA(${D}${coord00}),\r\n          rEdge ? 0. : getA(${D}${coord10}),\r\n          cEdge ? 0. : getA(${D}${coord01}),\r\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\r\n}\r\n\r\n/**\r\n * code snippet to setup 4 coordinates and edge conditions\r\n */\r\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\r\n  if (rank === 0 || rank === 1) {\r\n    return '';\r\n  }\r\n  // rank >= 2 for width+height pack.\r\n  else {\r\n    const setup = `\r\n    int r = ${dims[rank - 2]};\r\n    int c = ${dims[rank - 1]};\r\n    int rp1 = ${dims[rank - 2]} + 1;\r\n    int cp1 = ${dims[rank - 1]} + 1;\r\n    bool rEdge = rp1 >= ${cols};\r\n    bool cEdge = cp1 >= ${rows};\r\n    `;\r\n    return setup;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getGlChannels} from '../utils';\r\n\r\nexport function getVecChannels(name: string, rank: number): string[] {\r\n  return getGlChannels(rank).map(d => `${name}.${d}`);\r\n}\r\n\r\nexport function getChannels(name: string, rank: number): string[] {\r\n  if (rank === 1) {\r\n    return [name];\r\n  }\r\n  return getVecChannels(name, rank);\r\n}\r\n\r\nexport function unpackFromChannel(): string {\r\n  return `\r\n    float getChannel(vec4 frag, int dim) {\r\n      int modCoord = imod(dim, 2);\r\n      return modCoord == 0 ? frag.r : frag.g;\r\n    }\r\n\r\n    float getChannel(vec4 frag, vec2 innerDims) {\r\n      vec2 modCoord = mod(innerDims, 2.);\r\n      return modCoord.x == 0. ?\r\n        (modCoord.y == 0. ? frag.r : frag.g) :\r\n        (modCoord.y == 0. ? frag.b : frag.a);\r\n    }\r\n  `;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl, Glsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface PadAttributes extends AttributeWithCacheKey {\r\n  readonly mode: string;\r\n  readonly pads: number[];\r\n  readonly value: number;\r\n}\r\n\r\nconst padProgramMetadata = {\r\n  name: 'Pad',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const pad: OperatorImplementation<PadAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...padProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\r\n  const mode = node.attributes.getString('mode', 'constant');\r\n  const value = node.attributes.getFloat('value', 0.0);\r\n  const pads = node.attributes.getInts('pads');\r\n  return createAttributeWithCacheKey({mode, value, pads});\r\n};\r\n\r\nconst createPadProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\r\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\r\n      const rank = outputShape.length;\r\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\r\n      const shaderSource = `\r\n      ${padFunction}\r\n      float process(int[${rank}] indices) {\r\n          return padA(indices);\r\n      }`;\r\n      return {\r\n        name: 'Pad',\r\n        inputNames: ['A'],\r\n        inputTypes: [TextureType.unpacked],\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Pad requires 1 input');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\r\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n  const strides = ShapeUtil.computeStrides(input.dims);\r\n\r\n  switch (attributes.mode) {\r\n    case 'constant':\r\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\r\n    case 'reflect':\r\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\r\n    case 'edge':\r\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\r\n    default:\r\n      throw new Error('Invalid mode');\r\n  }\r\n};\r\n\r\nconst getPadConstant =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\r\n     value: number): string => {\r\n      const rank = shape.length;\r\n      let block = '';\r\n      for (let i = rank - 1; i >= 0; --i) {\r\n        block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0)  return constant;\r\n        if (k >= ${shape[i]}) return constant;\r\n        offset += k * ${strides[i]};\r\n        `;\r\n      }\r\n      return `\r\n      float padA(int m[${rank}]) {\r\n        const float constant = float(${value});\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n    };\r\n\r\nconst getPadReflect =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\r\n        string => {\r\n          const rank = shape.length;\r\n\r\n          let block = '';\r\n          for (let i = rank - 1; i >= 0; --i) {\r\n            block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0) { k = -k; }\r\n        {\r\n          const int _2n_1 = ${2 * (shape[i] - 1)};\r\n          k = int( mod( float(k), float(_2n_1) ) ) ;\r\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\r\n        }\r\n        offset += k * ${strides[i]};\r\n        `;\r\n          }\r\n          return `\r\n      float padA(int m[${rank}]) {\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n        };\r\n\r\nconst getPadEdge =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\r\n        string => {\r\n          const rank = shape.length;\r\n\r\n          let block = '';\r\n          for (let i = rank - 1; i >= 0; --i) {\r\n            block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0)  k = 0;\r\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\r\n        offset += k * ${strides[i]};\r\n      `;\r\n          }\r\n          return `\r\n      float padA(int m[${rank}]) {\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n        };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\r\n  readonly autoPad: string;\r\n  readonly ceilMode: number;\r\n  readonly countIncludePad: boolean;\r\n  readonly kernelShape: number[];\r\n  readonly strides: number[];\r\n  readonly pads: number[];\r\n}\r\n\r\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata =\r\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\r\n    (node: Graph.Node): AveragePoolAttributes => {\r\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\r\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\r\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\r\n      const kernelShape = node.attributes.getInts('kernel_shape');\r\n      const strides = node.attributes.getInts('strides', []);\r\n      const pads = node.attributes.getInts('pads', []);\r\n\r\n      // TODO: support attribute 'ceil_mode'\r\n      if (ceilMode !== 0) {\r\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\r\n      }\r\n\r\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\r\n    };\r\n\r\nconst createAveragePoolProgramInfo =\r\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\r\n        ProgramInfo => {\r\n          const inputShape = inputs[0].dims.slice();\r\n          PoolConvUtil.adjustPoolAttributes(\r\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\r\n          const outputShape = PoolConvUtil.computePoolOutputShape(\r\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\r\n              attributes.autoPad);\r\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\r\n          const op1 = 'value += _X(x);';\r\n          let op2 = '';\r\n          if (attributes.countIncludePad) {\r\n            op2 += `value /= float(${kernelSize});`;\r\n          } else {\r\n            op2 += `value /= float(${kernelSize} - pad);`;\r\n          }\r\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\r\n          const shaderSource = `\r\n        ${poolingCode}\r\n      `;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata = {\r\n        name: 'GlobalAveragePool',\r\n        inputNames: ['X'],\r\n        inputTypes: [TextureType.unpacked],\r\n        cacheHint: `${attributes.countIncludePad}`\r\n      };\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\r\n    (node: Graph.Node): AveragePoolAttributes => {\r\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\r\n      return createAttributeWithCacheKey(\r\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\r\n    };\r\n\r\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\r\n  readonly storageOrder: number;\r\n}\r\n\r\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata =\r\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\r\n    (node: Graph.Node): MaxPoolAttributes => {\r\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\r\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\r\n      const kernelShape = node.attributes.getInts('kernel_shape');\r\n      const strides = node.attributes.getInts('strides', []);\r\n      const pads = node.attributes.getInts('pads', []);\r\n      const storageOrder = node.attributes.getInt('storage_order', 0);\r\n\r\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\r\n      if (storageOrder !== 0) {\r\n        throw new Error('column major storage order is not yet supported for MaxPool');\r\n      }\r\n      if (ceilMode !== 0) {\r\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\r\n      }\r\n\r\n      return createAttributeWithCacheKey(\r\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\r\n    };\r\n\r\nconst createMaxPoolProgramInfo =\r\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\r\n        ProgramInfo => {\r\n          const inputShape = inputs[0].dims.slice();\r\n          PoolConvUtil.adjustPoolAttributes(\r\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\r\n          const outputShape = PoolConvUtil.computePoolOutputShape(\r\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\r\n              attributes.autoPad);\r\n          const op1 = `\r\n      value = max(_X(x), value);\r\n    `;\r\n          const op2 = '';\r\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\r\n          const shaderSource = `\r\n      ${poolingCode}\r\n    `;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst globalMaxPoolAttributes = {\r\n  autoPad: '',\r\n  ceilMode: 0,\r\n  countIncludePad: false,\r\n  kernelShape: [],\r\n  strides: [],\r\n  pads: [],\r\n  storageOrder: 0,\r\n  cacheKey: ''\r\n};\r\n\r\nconst globalMaxPoolMetadata = {\r\n  name: 'GlobalMaxPool',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n  const output = inferenceHandler.run(\r\n      {\r\n        ...globalMaxPoolMetadata,\r\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\r\n      },\r\n      inputs);\r\n  return [output];\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Pool ops requires 1 input.');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nconst generatePoolingCode =\r\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\r\n        string => {\r\n          const rank = inputDims.length;\r\n          if (attributes.kernelShape.length <= 2) {\r\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\r\n            const sw = attributes.strides[attributes.strides.length - 1];\r\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\r\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\r\n            const dimW = inputDims[rank - 1];\r\n            let codeW = '';\r\n            let codeH = '';\r\n            let codeHEnd = '';\r\n            if (pwStart + pwEnd !== 0) {\r\n              codeW = `\r\n          for (int i = 0; i < ${kw}; i++) {\r\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\r\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\r\n              pad++;\r\n              continue;\r\n            }\r\n            ${op1}\r\n          }`;\r\n            } else {\r\n              codeW = `\r\n          for (int i = 0; i < ${kw}; i++) {\r\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\r\n            ${op1}\r\n          }`;\r\n            }\r\n\r\n            if (attributes.kernelShape.length === 2) {\r\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\r\n              const sh = attributes.strides[attributes.strides.length - 2];\r\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\r\n              const phEnd = attributes.pads[attributes.pads.length - 2];\r\n              const dimH = inputDims[rank - 2];\r\n              if (phStart + phEnd !== 0) {\r\n                codeH = `\r\n            for (int j = 0; j < ${kh}; j++) {\r\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\r\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\r\n                pad+= ${kw};\r\n                continue;\r\n              }\r\n          `;\r\n              } else {\r\n                codeH = `\r\n            for (int j = 0; j < ${kh}; j++) {\r\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\r\n            `;\r\n              }\r\n              codeHEnd = `\r\n          }\r\n        `;\r\n            }\r\n\r\n            const poolingCode = `\r\n        float process(int indices[${rank}]) {\r\n          int x[${rank}];\r\n          copyVec(indices, x);\r\n\r\n          float value = ${start};\r\n          int pad = 0;\r\n          ${codeH}\r\n          ${codeW}\r\n          ${codeHEnd}\r\n          ${op2}\r\n          return value;\r\n        }\r\n      `;\r\n            return poolingCode;\r\n          } else {\r\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\r\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\r\n            const stridesRank = kernelStrides.length;\r\n            const padsRank = attributes.pads.length;\r\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\r\n            const copyInputDims = copyArray(inputDims, 'inputDims');\r\n            const copyPads = copyArray(attributes.pads, 'pads');\r\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\r\n            const copyStrides = copyArray(attributes.strides, 'strides');\r\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\r\n            let padCode = '';\r\n            if (hasPads) {\r\n              padCode = `\r\n            if (x[j] >= inputDims[j] || x[j] < 0) {\r\n              pad++;\r\n              isPad = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!isPad) {\r\n            ${op1}\r\n          }`;\r\n            } else {\r\n              padCode = `\r\n          }\r\n          ${op1}\r\n        `;\r\n            }\r\n            const poolingCode = `\r\n        ${offsetToIndicesFunction}\r\n        float process(int indices[${rank}]) {\r\n          int x[${rank}];\r\n          copyVec(indices, x);\r\n          int offset[${stridesRank}];\r\n          int pads[${padsRank}];\r\n          int inputDims[${rank}];\r\n          int kernelStrides[${stridesRank}];\r\n          int strides[${stridesRank}];\r\n          ${copyPads}\r\n          ${copyInputDims}\r\n          ${copyStrides}\r\n          ${copyKernelStrides}\r\n\r\n          float value = ${start};\r\n          int pad = 0;\r\n          bool isPad = false;\r\n          for (int i = 0; i < ${kernelSize}; i++) {\r\n            offsetToIndices(i, kernelStrides, offset);\r\n            isPad = false;\r\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\r\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\r\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\r\n              ${padCode}\r\n          }\r\n          ${op2}\r\n\r\n          return value;\r\n        }\r\n      `;\r\n            return poolingCode;\r\n          }\r\n        };\r\n\r\nconst copyArray = (array: readonly number[], arrayName: string): string => {\r\n  let block = '';\r\n  for (let i = 0; i < array.length; i++) {\r\n    block += `\r\n      ${arrayName}[${i}] = ${array[i]};\r\n    `;\r\n  }\r\n  return block;\r\n};\r\n\r\nconst offsetToIndices = (rank: number): string => `\r\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\r\n    if (${rank} == 0) {\r\n      return;\r\n    }\r\n    for (int i = 0; i < ${rank} - 1; ++i) {\r\n      indices[i] = offset / strides[i];\r\n      offset -= indices[i] * strides[i];\r\n    }\r\n    indices[${rank} - 1] = offset;\r\n  }`;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface ReduceAttributes extends AttributeWithCacheKey {\r\n  readonly axes: number[];\r\n  readonly keepDims: boolean;\r\n}\r\n\r\n// return [init ops, reduce ops, final ops]\r\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\r\n\r\nconst reduce =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\r\n     reduceOp: ReduceOp): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const reduceProgramMetadata = {\r\n        name,\r\n        inputNames: ['A'],\r\n        inputTypes: [TextureType.unpacked],\r\n      };\r\n\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...reduceProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () =>\r\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\r\n  const axes = node.attributes.getInts('axes', []);\r\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\r\n  return createAttributeWithCacheKey({axes, keepDims});\r\n};\r\n\r\nconst createReduceProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\r\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const outputShape: number[] = [];\r\n      const iRank = inputs[0].dims.length || 1;\r\n\r\n      const idxCopy = [];  // copy output indexes to input indexes\r\n\r\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\r\n      const ops = reduceOp(inputs, axes);\r\n      let reduceOps = ops[1];\r\n\r\n      for (let k = 0; k < inputs[0].dims.length; k++) {\r\n        // if this axis is reduced\r\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n          if (attributes.keepDims) {\r\n            outputShape.push(1);\r\n          }  // else { remove the axis from outputShape; }\r\n\r\n          // loop over the d-th axis\r\n          reduceOps = `\r\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\r\n            inputIdx[${k}] = j${k};\r\n            ${reduceOps}\r\n          }`;\r\n        } else {\r\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\r\n\r\n          outputShape.push(inputs[0].dims[k]);\r\n        }\r\n      }\r\n\r\n      const oRank = outputShape.length || 1;\r\n\r\n      const shaderSource = `\r\n      float process(int outputIdx[${oRank}]) {\r\n        float value;                 // final result\r\n        int inputIdx[${iRank}];      // addressing input data\r\n        ${idxCopy.join('\\n')}\r\n        ${ops[0]}       // init ops for reduce max/min\r\n        ${reduceOps}\r\n        ${ops[2]}       // final computation for reduce mean\r\n        return value;\r\n      }`;\r\n\r\n      return {\r\n        ...reduceProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Reduce op requires 1 input.');\r\n  }\r\n\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\r\n    };\r\n\r\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        let size = 1.0;\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            size *= inputs[0].dims[k];\r\n          }\r\n        }\r\n\r\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\r\n    };\r\n\r\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        const idxZero = [];\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\r\n          }\r\n        }\r\n\r\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\r\n    };\r\n\r\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        const idxZero = [];\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\r\n          }\r\n        }\r\n\r\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\r\n    };\r\n\r\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\r\n    };\r\n\r\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\r\n    };\r\n\r\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\r\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\r\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\r\n\r\nconst createPackedReshape3DProgramInfo =\r\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\r\n        ProgramInfo => {\r\n          const inputShape3D = input3D.dims as [number, number, number];\r\n          const squeezedOutputShape = outputShape3D as [number, number, number];\r\n\r\n          let mainLoop = '';\r\n          for (let i = 0; i < 4; i++) {\r\n            let outputCoords = '';\r\n            switch (i) {\r\n              case 0:\r\n                outputCoords = 'outputCoords = rc;';\r\n                break;\r\n              case 1:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\r\n                break;\r\n              case 2:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\r\n                break;\r\n              case 3:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\r\n                break;\r\n              default:\r\n                throw new Error();\r\n            }\r\n\r\n            mainLoop += `\r\n        ${outputCoords}\r\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\r\n          int flattenedIndex = getFlattenedIndex(outputCoords);\r\n\r\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\r\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\r\n\r\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\r\n\r\n        ${i > 0 ? '}' : ''}\r\n      `;\r\n          }\r\n          const glsl = getGlsl(handler.session.backend.glContext.version);\r\n\r\n          const shaderSource = `\r\n      ${getReshapedInputCoords(inputShape3D)}\r\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\r\n      ${unpackFromChannel()}\r\n\r\n      void main() {\r\n        ivec3 rc = getOutputCoords();\r\n\r\n        vec4 result = vec4(0.0);\r\n\r\n        ivec3 outputCoords;\r\n        int rows = ${squeezedOutputShape[2]};\r\n        int cols = ${squeezedOutputShape[1]};\r\n\r\n        ${mainLoop}\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n\r\n          return {\r\n            ...metadata,\r\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\r\n            shaderSource,\r\n            hasMain: true\r\n          };\r\n        };\r\n\r\nexport const createPackedReshape3DProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\r\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\r\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\r\n    };\r\n\r\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\r\n  if (shape.length === 0) {\r\n    return [1, 1, 1];\r\n  }\r\n  // TODO: squeeze other shapes to 2D case\r\n  let batch = 1;\r\n  for (let i = 0; i < shape.length - 2; ++i) {\r\n    batch *= shape[i];\r\n  }\r\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\r\n}\r\n\r\n// For packed reshape, we need to re-arrange texel data for output shape.\r\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\r\n// for the reshaped new tensor, we just need to re-arrange the last h and\r\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\r\n// first convert it to 3D by collapsing other dimension to batch dim, then\r\n// process with the last two dimensions.\r\n// Note: we only need the shape tensor to calculate output shape, so the\r\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\r\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\r\n// the same between input shape and output shape, the packed reshape can be\r\n// treated as no-op.\r\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\r\n  let isCheapReshape = false;\r\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\r\n    isCheapReshape = true;\r\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\r\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\r\n  } else {  // 2D +\r\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\r\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\r\n  }\r\n\r\n  return isCheapReshape;\r\n}\r\n\r\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\r\n  const strides = ShapeUtil.computeStrides(shape);\r\n  const coords = ['b', 'r', 'c'];\r\n  const index = 'index';\r\n  const coordsFromIndexSnippet = strides\r\n                                     .map((stride, i) => {\r\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\r\n                                       const line2 = i === strides.length - 1 ?\r\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\r\n                                           `index -= ${coords[i]} * ${stride}`;\r\n                                       return `${line1}; ${line2};`;\r\n                                     })\r\n                                     .join('');\r\n\r\n  return `\r\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\r\n      ${coordsFromIndexSnippet}\r\n      return ivec3(b, r, c);\r\n    }\r\n  `;\r\n}\r\n\r\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\r\n  const strides = ShapeUtil.computeStrides(shape);\r\n\r\n  return `\r\n  int getFlattenedIndex(ivec3 coords) {\r\n    // reverse y, z order\r\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\r\n  }\r\n`;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\r\n  if (handler.session.pack) {\r\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\r\n  } else {\r\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\n\r\nimport {unpackFromChannel} from './packing-utils';\r\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\r\n\r\nconst resizeProgramMetadata = {\r\n  name: 'Resize',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed]\r\n};\r\n\r\nexport const resize: OperatorImplementation<UpsampleAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...resizeProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\r\n\r\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\r\n\r\nconst createPackedResizeProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\r\n\r\n      const isSame =\r\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\r\n      if (isSame) {\r\n        return {\r\n          ...resizeProgramMetadata,\r\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n          hasMain: true,\r\n          shaderSource: `void main() {\r\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\r\n                    ${glsl.output} = v;\r\n                }`\r\n        };\r\n      }\r\n\r\n      const dim = outputShape.length;\r\n      if (dim < 2) {\r\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\r\n      }\r\n\r\n      const outputHeight = outputShape[dim - 2];\r\n      const outputWidth = outputShape[dim - 1];\r\n\r\n      const inputShape = inputs[0].dims;\r\n      if (dim !== inputShape.length) {\r\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\r\n      }\r\n      const inputHeight = inputShape[dim - 2];\r\n      const inputWidth = inputShape[dim - 1];\r\n\r\n      const scalesHeight = scales[dim - 2];\r\n      const scalesWidth = scales[dim - 1];\r\n\r\n      let getSourceFracIndex = '';\r\n\r\n      if (attributes.mode !== 'linear') {\r\n        // TODO: support other modes\r\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\r\n      }\r\n      switch (attributes.coordinateTransformMode) {\r\n        case 'asymmetric':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        return vec4(coords) / scaleWHWH;\r\n                    }\r\n                `;\r\n          break;\r\n        case 'half_pixel':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\r\n                    }\r\n                `;\r\n          break;\r\n        case 'align_corners':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\r\n                            ${outputHeight}.0 - 1.0);\r\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\r\n                            ${inputHeight}.0 - 1.0);\r\n                        vec4 new_scale = original / resized;\r\n                        return vec4(coords) * new_scale;\r\n                    }\r\n                `;\r\n          break;\r\n        default:\r\n          // TODO:supporting other coordinateTransformModes\r\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\r\n                                '${attributes.coordinateTransformMode}'`);\r\n      }\r\n\r\n      const coordsDataType = getCoordsDataType(dim);\r\n      const unpackChannel = unpackFromChannel();\r\n      const shaderSource = `\r\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\r\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\r\n            ${unpackChannel}\r\n            ${getSourceFracIndex}\r\n            float getAValue(int x10, int r, int c, int d) {\r\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\r\n            }\r\n            void main() {\r\n                ${coordsDataType} rc = getOutputCoords();\r\n\r\n                int batch = rc[0];\r\n                int depth = rc[1];\r\n\r\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\r\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\r\n\r\n                // calculate the source index in fraction\r\n                vec4 sourceFrac = getSourceFracIndex(coords);\r\n\r\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\r\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\r\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\r\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\r\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\r\n\r\n                bool hasNextRow = rc.w < ${outputHeight - 1};\r\n                bool hasNextCol = rc.z < ${outputWidth - 1};\r\n\r\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\r\n                vec4 topLeft = vec4(\r\n                    getAValue(batch, depth, x00.x, x00.y),\r\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\r\n                vec4 topRight = vec4(\r\n                    getAValue(batch, depth, x00.x, x00.w),\r\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\r\n                vec4 bottomLeft = vec4(\r\n                    getAValue(batch, depth, x00.z, x00.y),\r\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\r\n                vec4 bottomRight = vec4(\r\n                    getAValue(batch, depth, x00.z, x00.w),\r\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\r\n\r\n                // calculate the interpolation fraction on u and v direction\r\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\r\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\r\n\r\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\r\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\r\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\r\n\r\n                ${glsl.output} = vec4(newValue);\r\n            }\r\n        `;\r\n      return {\r\n        ...resizeProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        hasMain: true,\r\n        shaderSource\r\n      };\r\n    };\r\n\r\n\r\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\r\n  const x = inputs[0];\r\n  const xDims = x.dims;\r\n\r\n  let scales = attributes.scales;\r\n  let outputSizes: number[]|undefined;\r\n  if (scales.length === 0) {\r\n    const scalesTensor = inputs[attributes.scalesInputIdx];\r\n    if (scalesTensor && scalesTensor.size !== 0) {\r\n      if (inputs[attributes.sizesInputIdx]) {\r\n        throw new Error('Only one of scales or sizes must be provided as input.');\r\n      }\r\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\r\n    } else {\r\n      const sizesTensor = inputs[attributes.sizesInputIdx];\r\n      if (!sizesTensor || sizesTensor.size === 0) {\r\n        throw new Error('Either scales or sizes MUST be provided as input.');\r\n      }\r\n\r\n      outputSizes = Array.from(sizesTensor.integerData);\r\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\r\n    }\r\n  } else {\r\n    if (inputs[attributes.sizesInputIdx]) {\r\n      throw new Error('Only one of scales or sizes must be provided as input.');\r\n    }\r\n  }\r\n\r\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\r\n\r\n  return [scales, yDims];\r\n};\r\n\r\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\r\n  const scales = Array.from(scale.floatData);\r\n  scalesValidation(scales, mode, isResize);\r\n  return scales;\r\n};\r\n\r\nconst parseScalesDataFromOutputSize =\r\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\r\n      const length = xDims.length;\r\n      const scales = new Array<number>(length);\r\n\r\n      for (let i = 0, end = length; i < end; i++) {\r\n        if (xDims[i] === 0) {\r\n          if (yDims[i] !== 0) {\r\n            throw new Error('Input dim is zero but required output dim is non-zero.');\r\n          }\r\n          scales[i] = 1;\r\n        } else {\r\n          scales[i] = yDims[i] / xDims[i];\r\n        }\r\n      }\r\n      scalesValidation(scales, mode, isResize);\r\n      return scales;\r\n    };\r\n\r\n// roi data is not used yet. but leave here for future usage.\r\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\r\n//     let roi: number[] = [];\r\n//     if (attributes.needRoiInput) {\r\n//         if (attributes.roiInputIdx <= 0) {\r\n//             throw new Error('Invalid roi input index.');\r\n//         }\r\n//         const roiTensor = inputs[attributes.roiInputIdx];\r\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\r\n//     } else {\r\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\r\n//     }\r\n//     return roi;\r\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Shape requires 1 input.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SliceAttributes extends AttributeWithCacheKey {\r\n  readonly axes: number[];\r\n  readonly ends: number[];\r\n  readonly starts: number[];\r\n}\r\n\r\nconst sliceProgramMetadata = {\r\n  name: 'Slice',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const slice: OperatorImplementation<SliceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...sliceProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\r\n  const starts = node.attributes.getInts('starts');\r\n  const ends = node.attributes.getInts('ends');\r\n  const axes = node.attributes.getInts('axes', []);\r\n  return createAttributeWithCacheKey({starts, ends, axes});\r\n};\r\n\r\nconst createSliceProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\r\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\r\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\r\n      const starts = attributes.starts.map((start, i) => {\r\n        if (start > input.dims[normalizedAxes[i]] - 1) {\r\n          return input.dims[normalizedAxes[i]];\r\n        }\r\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\r\n      });\r\n      const ends = attributes.ends.map((end, i) => {\r\n        if (end > input.dims[normalizedAxes[i]] - 1) {\r\n          return input.dims[normalizedAxes[i]];\r\n        }\r\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\r\n      });\r\n\r\n      const outputShape = input.dims.slice();\r\n\r\n      const sliceOps: string[] = [];\r\n      for (let i = 0; i < normalizedAxes.length; i++) {\r\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\r\n        if (starts[i] > 0) {\r\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\r\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${rank}]) {\r\n        ${sliceOps.join('\\n      ')}\r\n        return _A(outputIdx);\r\n      }`;\r\n      return {\r\n        ...sliceProgramMetadata,\r\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Slice requires 1 input.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputsV10(inputs);\r\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\r\n  const output = inferenceHandler.run(\r\n      {\r\n        ...sliceProgramMetadata,\r\n        cacheHint: attributes.cacheKey,\r\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\r\n      },\r\n      [inputs[0]]);\r\n  return [output];\r\n};\r\n\r\nconst generateSliceAttributesFromInputs =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\r\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\r\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\r\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\r\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\r\n        throw new Error('dynamic slice attributes are not allowed');\r\n      }\r\n\r\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\r\n        throw new Error('currently non-1 steps is not supported for Slice');\r\n      }\r\n\r\n      const starts = Array.from(inputs[1].integerData);\r\n      const ends = Array.from(inputs[2].integerData);\r\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\r\n      const cacheKey = `${axes};${starts};${ends}`;\r\n      return {starts, ends, axes, cacheKey};\r\n    };\r\n\r\nconst validateInputsV10 = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\r\n    throw new Error('Invalid input number.');\r\n  }\r\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nconst softmaxComputeMaxProgramMetadata = {\r\n  name: 'SoftmaxComputeMax',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst softmaxComputeScaleProgramMetadata = {\r\n  name: 'SoftmaxComputeScale',\r\n  inputNames: ['A', 'Max'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst softmaxProgramMetadata = {\r\n  name: 'SoftMax',\r\n  inputNames: ['A', 'Max', 'Norm'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const inputShape = inputs[0].dims.slice();\r\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\r\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\r\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\r\n\r\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\r\n      const max = inferenceHandler.run(\r\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\r\n          inputs);\r\n\r\n      const computeScaleProgramInfo =\r\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\r\n      const scale = inferenceHandler.run(\r\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\r\n          [inputs[0], max]);\r\n\r\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\r\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\r\n      const output = inferenceHandler.run(\r\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\r\n          [inputs[0], max, scale]);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\r\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\r\n\r\n/**\r\n * Create a texture that contains the maximum value of each of the 'N' rows\r\n */\r\nconst createComputeMaxProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\r\n        ProgramInfo => {\r\n          const [textureWidth, textureHeight] =\r\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n          const rank = outputShape.length;\r\n\r\n          if (N < 1 || D < 1) {\r\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n          }\r\n\r\n          if (outputShape.length !== 1) {\r\n            throw new Error('Dimensionality of the output should be 1');\r\n          }\r\n\r\n          if (outputShape[0] !== N) {\r\n            throw new Error('Shape of the output should be equal to logical row count');\r\n          }\r\n\r\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n          const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n        int logical_row_start_offset = indices[0] * ${D};\r\n\r\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\r\n        ${textureHeight} )));\r\n        for(int i=1; i<${D}; ++i)\r\n        {\r\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\r\n            ${textureWidth}, ${textureHeight})));\r\n          if(current > max)\r\n          max = current;\r\n        }\r\n\r\n        return max;\r\n      }`;\r\n          return {\r\n            ...softmaxComputeMaxProgramMetadata,\r\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\n/**\r\n * Create a texture that contains the normalization factor for each of the 'N' rows\r\n */\r\nconst createComputScaleProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\r\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n      const rank = outputShape.length;\r\n\r\n      if (N < 1 || D < 1) {\r\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n      }\r\n\r\n      if (outputShape.length !== 1) {\r\n        throw new Error('Dimensionality of the output should be 1');\r\n      }\r\n\r\n      if (outputShape[0] !== N) {\r\n        throw new Error('Shape of the output should be equal to logical row count');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow.length !== 1) {\r\n        throw new Error('Dimensionality of the intermediate results should be 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow[0] !== N) {\r\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\r\n      }\r\n\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n        int logical_row_start_offset = indices[0] * ${D};\r\n\r\n        float norm_factor = 0.0;\r\n        float max = _Max(indices);\r\n        for(int i=0; i<${D}; ++i)\r\n        {\r\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\r\n            ${textureWidth}, ${textureHeight}))) - max);\r\n        }\r\n\r\n        return norm_factor;\r\n      }`;\r\n      return {\r\n        ...softmaxComputeScaleProgramMetadata,\r\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createSoftMaxProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\r\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n      const rank = input.dims.length;\r\n\r\n      if (N < 1 || D < 1) {\r\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\r\n        throw new Error('Dimensionality of the intermediate results should be 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\r\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\r\n      }\r\n\r\n      const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n\r\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\r\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\r\n\r\n      //determine the logical row for this index\r\n      int logical_row_index[1];\r\n      logical_row_index[0] = offset / ${D};\r\n\r\n      float norm_factor = _Norm(logical_row_index);\r\n\r\n      // avoid possible division by 0\r\n      // if norm_facor is 0, all elements are zero\r\n      // if so, return 0\r\n      if(norm_factor == 0.0)\r\n        return 0.0;\r\n\r\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\r\n    }`;\r\n      return {\r\n        ...softmaxProgramMetadata,\r\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Softmax requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil, SplitUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SplitAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n  readonly split: number[];\r\n  readonly numOutputs: number;\r\n}\r\n\r\nconst splitProgramMetadata = {\r\n  name: 'Split',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const split: OperatorImplementation<SplitAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\r\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\r\n      const output: Tensor[] = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        output.push(inferenceHandler.run(\r\n            {\r\n              ...splitProgramMetadata,\r\n              cacheHint: `${attributes.cacheKey};${i}`,\r\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\r\n            },\r\n            inputs));\r\n      }\r\n\r\n      return output;\r\n    };\r\n\r\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\r\n  const axis = node.attributes.getInt('axis', 0);\r\n  const split = node.attributes.getInts('split', []);\r\n  const numOutputs = node.outputs.length;\r\n  return createAttributeWithCacheKey({axis, split, numOutputs});\r\n};\r\n\r\nconst getProgramCount =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\r\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\r\n      return offsets.length;\r\n    };\r\n\r\nconst createSplitProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\r\n        ProgramInfo => {\r\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\r\n          const offset = offsets[index];\r\n          const outputShape = shapes[index];\r\n          const rank = outputShape.length;\r\n          const shaderSource = `\r\n      float process(int indices[${rank}]) {\r\n        indices[${axis}] += ${offset};\r\n        return _A(indices);\r\n      }\r\n    `;\r\n          return {\r\n            ...splitProgramMetadata,\r\n            cacheHint: `${attributes.cacheKey}:${index}`,\r\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Split requires one input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\r\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\r\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const squeeze: OperatorImplementation<number[]> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\r\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\r\n    node.attributes.getInts('axes');\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Squeeze requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n\r\n  const sumProgramMetadata = {\r\n    name: 'Sum',\r\n    inputNames: inputs.map((v, i) => `X${i}`),\r\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\r\n  };\r\n\r\n  const output = inferenceHandler.run(\r\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\r\n  return [output];\r\n};\r\n\r\nconst createSumProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const outputShape = inputs[0].dims.slice();\r\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\r\n      const shaderSource = `\r\n      void main() {\r\n        vec4 result = ${sumLine};\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n      return {\r\n        ...sumProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        hasMain: true,\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length === 0) {\r\n    throw new Error('Sum requires inputs.');\r\n  }\r\n\r\n  const length = inputs[0].dims.length;\r\n  for (let i = 1; i < inputs.length; i++) {\r\n    if (length !== inputs[i].dims.length) {\r\n      throw new Error('Input shapes are mismatched.');\r\n    }\r\n\r\n    for (let j = 0; j < length; j++) {\r\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\r\n        throw new Error('Input shapes are not matched.');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  for (let i = 1; i < inputs.length; i++) {\r\n    if (inputs[0].type !== inputs[i].type) {\r\n      throw new Error('Input types are not matched.');\r\n    }\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {NUMBER_TYPES} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n\r\n  const tileProgramMetadata = {\r\n    name: 'Tile',\r\n    inputNames: ['A'],\r\n    inputTypes: [TextureType.unpacked],\r\n  };\r\n\r\n  const output = inferenceHandler.run(\r\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\r\n      inputs);\r\n  return [output];\r\n};\r\n\r\nconst createTileProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      const outputShape = new Array(inputShape.length);\r\n\r\n      const tileOps: string[] = [];\r\n      for (let i = 0; i < inputShape.length; i++) {\r\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\r\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${rank}]) {\r\n        int inputIdx[${rank}];\r\n        ${tileOps.join('\\n')}\r\n        return _A(inputIdx);\r\n      }\r\n    `;\r\n      return {\r\n        ...tileProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('Tile requires 2 input.');\r\n  }\r\n  if (inputs[1].dims.length !== 1) {\r\n    throw new Error('The second input shape must 1 dimension.');\r\n  }\r\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\r\n    throw new Error('Invalid repeat type.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface TransposeAttributes extends AttributeWithCacheKey {\r\n  readonly perm: number[];\r\n}\r\n\r\nconst transposeProgramMetadata = {\r\n  name: 'Transpose',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const transpose: OperatorImplementation<TransposeAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...transposeProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\r\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\r\n\r\nconst createTransposeProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\r\n      const inputShape = input.dims;\r\n      perm = getAdjustedPerm(inputShape, perm);\r\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\r\n      const rank = inputShape.length;\r\n      // A dims=[${inputs[0].dims.toString()}]\r\n      // out Dims=[${unpackedOutputShape.toString()}]\r\n      // based on perm=[${perm.toString()}]\r\n      const shaderSource = `\r\n      ${getPermFunctionBody('perm', perm, rank)}\r\n      float process(int indices[${rank}]) {\r\n        int a[${rank}];\r\n        perm(a, indices);\r\n        return _A(a);\r\n      }`;\r\n      return {\r\n        ...transposeProgramMetadata,\r\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\r\n  if (perm && perm.length !== inputShape.length) {\r\n    perm = [...(inputShape.keys())].reverse();\r\n  }\r\n  return perm;\r\n};\r\n\r\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\r\n  perm = getAdjustedPerm(inputShape, perm);\r\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\r\n};\r\n\r\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\r\n  const reverseFunc = [];\r\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\r\n  for (let i = 0; i < rank; ++i) {\r\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\r\n  }\r\n  reverseFunc.push('\\t}');\r\n  return reverseFunc.join('\\n');\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Transpose requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('input should be float tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {TextureData, TextureType} from '../types';\r\n\r\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\r\n  const outputShape = input.shape;\r\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n  /**\r\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\r\n   */\r\n  const shaderSource = `\r\n    const float FLOAT_MAX = 1.70141184e38;\r\n    const float FLOAT_MIN = 1.17549435e-38;\r\n\r\n    bool isNaN(float val) {\r\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\r\n    }\r\n\r\n    highp vec4 encodeAsUint8(highp float v) {\r\n      if (isNaN(v)) {\r\n        return vec4(255, 255, 255, 255);\r\n      }\r\n\r\n      highp float av = abs(v);\r\n\r\n      if(av < FLOAT_MIN) {\r\n        return vec4(0.0, 0.0, 0.0, 0.0);\r\n      } else if(v > FLOAT_MAX) {\r\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\r\n      } else if(v < -FLOAT_MAX) {\r\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\r\n      }\r\n\r\n      highp vec4 c = vec4(0,0,0,0);\r\n\r\n      highp float e = floor(log2(av));\r\n      highp float m = exp2(fract(log2(av))) - 1.0;\r\n\r\n      c[2] = floor(128.0 * m);\r\n      m -= c[2] / 128.0;\r\n      c[1] = floor(32768.0 * m);\r\n      m -= c[1] / 32768.0;\r\n      c[0] = floor(8388608.0 * m);\r\n\r\n      highp float ebias = e + 127.0;\r\n      c[3] = floor(ebias / 2.0);\r\n      ebias -= c[3] * 2.0;\r\n      c[2] += floor(ebias) * 128.0;\r\n\r\n      c[3] += 128.0 * step(0.0, -v);\r\n\r\n      return c / 255.0;\r\n    }\r\n\r\n    void main() {\r\n      float value = ${glsl.texture2D}(X,TexCoords).r;\r\n      ${glsl.output} = encodeAsUint8(value);\r\n    }`;\r\n  const programInfo = {\r\n    name: 'Uint8Encode',\r\n    inputTypes: [TextureType.unpacked],\r\n    inputNames: ['X'],\r\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\r\n    shaderSource,\r\n    hasMain: true\r\n  };\r\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {Tensor} from '../../../tensor';\r\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport function glslAbs(): GlslValueFunction {\r\n  return glslBuiltinUnary('abs');\r\n}\r\nexport function glslAcos(): GlslValueFunction {\r\n  return glslBuiltinUnary('acos');\r\n}\r\nexport function glslAsin(): GlslValueFunction {\r\n  return glslBuiltinUnary('asin');\r\n}\r\nexport function glslAtan(): GlslValueFunction {\r\n  return glslBuiltinUnary('atan');\r\n}\r\nexport function glslCeil(): GlslValueFunction {\r\n  return glslBuiltinUnary('ceil');\r\n}\r\nexport function glslCos(): GlslValueFunction {\r\n  return glslBuiltinUnary('cos');\r\n}\r\nexport function glslElu(alpha: number): GlslValueFunction {\r\n  const name = 'elu';\r\n  const body = `\r\n  const float alpha = float(${alpha});\r\n\r\n  float ${name}_(float a) {\r\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslExp(): GlslValueFunction {\r\n  return glslBuiltinUnary('exp');\r\n}\r\nexport function glslFloor(): GlslValueFunction {\r\n  return glslBuiltinUnary('floor');\r\n}\r\nexport function glslClip(min: number, max: number): GlslValueFunction {\r\n  const name = 'clip';\r\n  const body = `\r\n  const float min = float(${min});\r\n  const float max = float(${max});\r\n\r\n  float ${name}_(float a) {\r\n    return clamp(a, min, max);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return clamp(v, min, max);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslIdentity(): GlslValueFunction {\r\n  const name = 'indentity';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return v;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\r\n  const name = 'leakyRelu';\r\n  const body = `\r\n  const float alpha = float(${alpha});\r\n\r\n  float ${name}_(float a) {\r\n    return a < 0.0 ? a * alpha : a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLog(): GlslValueFunction {\r\n  return glslBuiltinUnary('log');\r\n}\r\nexport function glslNeg(): GlslValueFunction {\r\n  const name = 'neg';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return -a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return -v;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslNot(): GlslValueFunction {\r\n  const name = 'not';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return float( ! bool(a) );\r\n  }\r\n  bool ${name}_(bool a) {\r\n    return !a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\r\n  }\r\n  bvec4 ${name}_(bvec4 v) {\r\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSin(): GlslValueFunction {\r\n  return glslBuiltinUnary('sin');\r\n}\r\nexport function glslRelu(): GlslValueFunction {\r\n  const name = 'relu';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return max( a, 0.0 );\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return max( v, 0.0 );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSigmoid(): GlslValueFunction {\r\n  const name = 'sigmoid';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return 1.0 / (1.0 + exp(-a));\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return 1.0 / (1.0 + exp(-v));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSqrt(): GlslValueFunction {\r\n  return glslBuiltinUnary('sqrt');\r\n}\r\nexport function glslTan(): GlslValueFunction {\r\n  return glslBuiltinUnary('tan');\r\n}\r\nexport function glslTanh(): GlslValueFunction {\r\n  const name = 'tanh';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    a = clamp(a, -10., 10.);\r\n    a = exp(2.*a);\r\n    return (a - 1.) / (a + 1.);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    v = clamp(v, -10., 10.);\r\n    v = exp(2.*v);\r\n    return (v - 1.) / (v + 1.);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return ${name}(a);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return ${name}(v);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\n/////\r\n/////\r\n/////\r\n\r\nconst createElementwiseProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\r\n        ProgramInfo => {\r\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n          const glsl = getGlsl(handler.session.backend.glContext.version);\r\n          return {\r\n            ...metadata,\r\n            output: {dims: input.dims, type: input.type, textureType},\r\n            shaderSource: `\r\n     ${glslFunc.body}\r\n     void main() {\r\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\r\n       v = ${glslFunc.name}_(v);\r\n       ${glsl.output} = v;\r\n     }\r\n     `,\r\n            hasMain: true\r\n          };\r\n        };\r\n\r\nconst createElementwiseProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\r\n        ProgramInfoLoader => {\r\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\r\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\r\n        };\r\n\r\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\r\n\r\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\r\n\r\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\r\n\r\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\r\n\r\nexport interface ClipAttributes extends AttributeWithCacheKey {\r\n  readonly min: number;\r\n  readonly max: number;\r\n}\r\n\r\nexport const clip =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(\r\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\r\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\r\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\r\n});\r\n\r\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\r\n\r\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\r\n\r\nexport interface EluAttributes extends AttributeWithCacheKey {\r\n  readonly alpha: number;\r\n}\r\n\r\nexport const elu =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\r\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\r\n\r\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\r\n\r\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\r\n\r\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\r\n\r\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\r\n  readonly alpha: number;\r\n}\r\n\r\nexport const leakyRelu =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\r\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\r\n\r\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\r\n\r\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\r\n\r\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\r\n\r\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\r\n\r\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\r\n\r\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\r\n\r\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\r\n\r\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\r\n\r\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\nimport {getChannels, unpackFromChannel} from './packing-utils';\r\n\r\nconst unpackProgramMetadata = {\r\n  name: 'unpack',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed]\r\n};\r\n\r\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\r\n  const rank = input.dims.length;\r\n\r\n  const channels = getChannels('rc', rank);\r\n  const innerDims = channels.slice(-2);\r\n  const coordsDataType = getCoordsDataType(rank);\r\n  const unpackChannel = unpackFromChannel();\r\n  const isScalar = (input.dims.length === 0);\r\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\r\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\r\n  const glsl = getGlsl(handler.session.backend.glContext.version);\r\n  const shaderSource = `\r\n    ${unpackChannel}\r\n    void main() {\r\n      ${coordsDataType} rc = getOutputCoords();\r\n\r\n       // Sample the texture with the coords to get the rgba channel value.\r\n       vec4 packedInput = getA(${sourceCoords});\r\n\r\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\r\n     }\r\n   `;\r\n\r\n  return {\r\n    ...unpackProgramMetadata,\r\n    hasMain: true,\r\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\r\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\r\n\r\nfunction getSourceCoords(rank: number, dims: string[]): string {\r\n  if (rank === 1) {\r\n    return 'rc';\r\n  }\r\n\r\n  let coords = '';\r\n  for (let i = 0; i < rank; i++) {\r\n    coords += dims[i];\r\n    if (i < rank - 1) {\r\n      coords += ',';\r\n    }\r\n  }\r\n  return coords;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const unsqueeze: OperatorImplementation<number[]> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\r\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\r\n      return [output];\r\n    };\r\n\r\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\r\n    node.attributes.getInts('axes');\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Unsqueeze requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\r\n  readonly opset: number;\r\n  readonly isResize: boolean;\r\n  readonly mode: string;\r\n  readonly scales: number[];\r\n  readonly extrapolationValue: number;\r\n  readonly coordinateTransformMode: string;\r\n  readonly useExtrapolation: boolean;\r\n  readonly needRoiInput: boolean;\r\n  readonly nearestMode: string;\r\n  readonly cubicCoefficientA: number;\r\n  readonly excludeOutside: boolean;\r\n  readonly useNearest2xOptimization: boolean;\r\n  readonly roiInputIdx: number;\r\n  readonly scalesInputIdx: number;\r\n  readonly sizesInputIdx: number;\r\n}\r\n\r\nconst upsampleProgramMetadata = {\r\n  name: 'Upsample',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...upsampleProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\r\n\r\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\r\n\r\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\r\n  const isResize = (opset >= 10);\r\n\r\n  // processing node attributes\r\n  const mode = node.attributes.getString('mode', 'nearest');\r\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\r\n    throw new Error(`unrecognized mode: ${mode}`);\r\n  }\r\n\r\n  let scales: number[] = [];\r\n  if (opset < 9) {\r\n    scales = node.attributes.getFloats('scales');\r\n    scalesValidation(scales, mode, isResize);\r\n  }\r\n\r\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\r\n\r\n  const coordinateTransformMode =\r\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\r\n  if ([\r\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\r\n      ].indexOf(coordinateTransformMode) === -1) {\r\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\r\n  }\r\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\r\n  const useExtrapolation = needRoiInput;\r\n\r\n  const nearestMode =\r\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\r\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\r\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\r\n  }\r\n\r\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\r\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\r\n  if (excludeOutside && mode !== 'cubic') {\r\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\r\n  }\r\n\r\n  const useNearest2xOptimization =\r\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\r\n\r\n  let roiInputIdx = 0;\r\n  let scalesInputIdx = 0;\r\n  let sizesInputIdx = 0;\r\n\r\n  if (opset > 10) {\r\n    roiInputIdx = 1;\r\n    scalesInputIdx = 2;\r\n    sizesInputIdx = 3;\r\n  } else if (opset === 9) {\r\n    scalesInputIdx = 1;\r\n  }\r\n\r\n  return createAttributeWithCacheKey({\r\n    opset,\r\n    isResize,\r\n    mode,\r\n    scales,\r\n    extrapolationValue,\r\n    coordinateTransformMode,\r\n    useExtrapolation,\r\n    needRoiInput,\r\n    nearestMode,\r\n    cubicCoefficientA,\r\n    excludeOutside,\r\n    useNearest2xOptimization,\r\n    roiInputIdx,\r\n    scalesInputIdx,\r\n    sizesInputIdx\r\n  });\r\n};\r\n\r\nconst createUpsampleProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [inputWidth, inputHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\r\n\r\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\r\n      const [outputWidth, outputHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\r\n      const dim = outputShape.length;\r\n\r\n      const outputPitches = new Array<number>(dim);\r\n      const inputPitches = new Array<number>(dim);\r\n      let precalculatedPitches = `\r\n      int output_pitches[${dim}];\r\n      int input_pitches[${dim}];\r\n      `;\r\n      for (let d = dim - 1; d >= 0; d--) {\r\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\r\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\r\n\r\n        precalculatedPitches += `\r\n        output_pitches[${d}] = ${outputPitches[d]};\r\n        input_pitches[${d}] = ${inputPitches[d]};\r\n        `;\r\n      }\r\n      const getInputFloatFunction = `\r\n      float getInputFloat(int index) {\r\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\r\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\r\n        return value;\r\n      }\r\n      `;\r\n\r\n      const shaderSource = attributes.mode === 'nearest' ?\r\n          // nearest\r\n          `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[${dim}]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int d, m;\r\n      for (int dim = 0; dim < ${dim}; ++dim) {\r\n        d = output_index / output_pitches[dim];\r\n        m = output_index - d * output_pitches[dim];\r\n        output_index = m;\r\n\r\n        if (scales[dim] != 1 && d > 0) {\r\n          int d2 = d / scales[dim];\r\n          m = d - d2 * scales[dim];\r\n          d = d2;\r\n        }\r\n        input_index += input_pitches[dim] * d;\r\n      }\r\n\r\n      return getInputFloat(input_index);\r\n    }` :\r\n          dim === 4 ?\r\n          // bilinear 4D\r\n              `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[4]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int m;\r\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\r\n      index_of_dim0 = output_index / output_pitches[0];\r\n      m = output_index - index_of_dim0 * output_pitches[0];\r\n      index_of_dim1 = m / output_pitches[1];\r\n      m = m - index_of_dim1 * output_pitches[1];\r\n      index_of_dim2 = m / output_pitches[2];\r\n      m = m - index_of_dim2 * output_pitches[2];\r\n      index_of_dim3 = m;\r\n\r\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\r\n      index_of_input_dim2 = index_of_dim2 / scales[2];\r\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\r\n      index_of_input_dim3 = index_of_dim3 / scales[3];\r\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\r\n\r\n      input_index = index_of_dim0 * input_pitches[0] +\r\n            index_of_dim1 * input_pitches[1] +\r\n            index_of_input_dim2 * input_pitches[2] +\r\n            index_of_input_dim3;\r\n\r\n      float x00 = getInputFloat(input_index);\r\n      float x10, x01, x11;\r\n\r\n      bool end_of_dim2 = false;\r\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\r\n        // It's the end in dimension 2\r\n        x01 = x00;\r\n        end_of_dim2 = true;\r\n      } else {\r\n        x01 = getInputFloat(input_index + input_pitches[2]);\r\n      }\r\n\r\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\r\n        // It's the end in dimension 3\r\n        x10 = x00;\r\n        x11 = x01;\r\n      }\r\n      else {\r\n        x10 = getInputFloat(input_index + 1);\r\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\r\n      }\r\n\r\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\r\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\r\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\r\n    }` :\r\n              // bilinear 2D\r\n              `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[2]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int m;\r\n      int index_of_dim0, index_of_dim1;\r\n      index_of_dim0 = output_index / output_pitches[0];\r\n      m = output_index - index_of_dim0 * output_pitches[0];\r\n      index_of_dim1 = m;\r\n\r\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\r\n      index_of_input_dim0 = index_of_dim0 / scales[0];\r\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\r\n      index_of_input_dim1 = index_of_dim1 / scales[1];\r\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\r\n\r\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\r\n\r\n      float x00 = getInputFloat(input_index);\r\n      float x10, x01, x11;\r\n\r\n      bool end_of_dim0 = false;\r\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\r\n        // It's the end in dimension 0\r\n        x01 = x00;\r\n        end_of_dim0 = true;\r\n      } else {\r\n        x01 = getInputFloat(input_index + input_pitches[0]);\r\n      }\r\n\r\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\r\n        // It's the end in dimension 1\r\n        x10 = x00;\r\n        x11 = x01;\r\n      }\r\n      else {\r\n        x10 = getInputFloat(input_index + 1);\r\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\r\n      }\r\n\r\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\r\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\r\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\r\n    }`;\r\n      return {\r\n        ...upsampleProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n        variables: [{\r\n          name: 'scales',\r\n          type: 'int',\r\n          arrayLength: attributes.scales.length,\r\n          data: attributes.scales.map(x => Math.ceil(x))\r\n        }]\r\n      };\r\n    };\r\n\r\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\r\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\r\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\r\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\r\n    throw new Error('invalid inputs.');\r\n  }\r\n\r\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('Invalid input tensor types.');\r\n  }\r\n};\r\n\r\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\r\n  if (!isResize) {\r\n    for (const scale of scales) {\r\n      if (scale < 1) {\r\n        throw new Error('Scale value should be greater than or equal to 1.');\r\n      }\r\n    }\r\n  } else {\r\n    for (const scale of scales) {\r\n      if (scale <= 0) {\r\n        throw new Error('Scale value should be greater than 0.');\r\n      }\r\n    }\r\n  }\r\n  if (mode === 'linear' || mode === 'cubic') {\r\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\r\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\r\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\r\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\r\n    }\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\nimport {Logger, Profiler} from '../../instrument';\r\n\r\nimport {GlslPreprocessor} from './glsl-preprocessor';\r\nimport {getVertexShaderSource} from './glsl-source';\r\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/**\r\n * ProgramManager is the main class behind running computations\r\n * It builds ProgramInfo's into Artifacts\r\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\r\n * Uses the artifact to run the computation by calling Draw on\r\n * the WebGL drawing buffer\r\n * ProgramManager automatically maps (binds) input variables to their\r\n * corresponding Location's in the binary program\r\n */\r\nexport class ProgramManager {\r\n  repo: Map<unknown, Artifact>;  // this should be per-session object\r\n  vertexShader: WebGLShader;\r\n  attributesBound: boolean;\r\n\r\n  constructor(\r\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\r\n      public textureLayoutStrategy: TextureLayoutStrategy) {\r\n    this.repo = new Map();\r\n    this.attributesBound = false;\r\n  }\r\n  getArtifact(key: unknown): Artifact|undefined {\r\n    return this.repo.get(key);\r\n  }\r\n  setArtifact(key: unknown, artifact: Artifact): void {\r\n    this.repo.set(key, artifact);\r\n  }\r\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\r\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\r\n      const gl = this.glContext.gl;\r\n      const program = buildArtifact.program;\r\n      gl.useProgram(program);\r\n      try {\r\n        this.bindOutput(output);\r\n        if (!this.attributesBound) {\r\n          this.bindAttributes(buildArtifact.attribLocations);\r\n        }\r\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\r\n      } catch (err) {\r\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\r\n        throw err;\r\n      }\r\n      this.profiler.event('backend', 'GlContext.draw()', () => {\r\n        this.glContext.draw();\r\n      });\r\n    }, this.glContext);\r\n  }\r\n  dispose(): void {\r\n    if (this.vertexShader) {\r\n      this.glContext.deleteShader(this.vertexShader);\r\n    }\r\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\r\n  }\r\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\r\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\r\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\r\n      const fragScript = preprocessor.preprocess();\r\n      const program = this.compile(fragScript);\r\n      const artifact = {\r\n        programInfo,\r\n        program,\r\n        uniformLocations: this.getUniformLocations(\r\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\r\n        attribLocations: this.getAttribLocations(program)\r\n      };\r\n      return artifact;\r\n    });\r\n  }\r\n  protected compile(fragShaderScript: string): WebGLProgram {\r\n    if (!this.vertexShader) {\r\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\r\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\r\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\r\n    }\r\n    if (env.debug) {\r\n      Logger.verbose('ProrgramManager', `FragShader:\r\n${fragShaderScript}\r\n`);\r\n    }\r\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\r\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\r\n    this.glContext.deleteShader(fragShader);\r\n    return program;\r\n  }\r\n  bindOutput(td: TextureData): void {\r\n    const width = td.width;\r\n    const height = td.height;\r\n    Logger.verbose(\r\n        'ProrgramManager',\r\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\r\n    this.glContext.attachFramebuffer(td.texture, width, height);\r\n  }\r\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\r\n    const positionHandle = attribLocations.position;\r\n    const textureCoordHandle = attribLocations.textureCoord;\r\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\r\n    this.attributesBound = true;\r\n  }\r\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\r\n      void {\r\n    const gl = this.glContext.gl;\r\n    let texturePosition = 0;\r\n    for (const {name, type, location, arrayLength} of uniformLocations) {\r\n      const value = variables.find(v => v.name === name)?.data;\r\n      if (type !== 'sampler2D' && !value) {\r\n        throw new Error(`variable '${name}' does not have data defined in program info`);\r\n      }\r\n      switch (type) {\r\n        case 'sampler2D':\r\n          this.bindTexture(textures[texturePosition], location, texturePosition);\r\n          texturePosition++;\r\n          break;\r\n        case 'float':\r\n          if (arrayLength) {\r\n            gl.uniform1fv(location, value as number[]);\r\n          } else {\r\n            gl.uniform1f(location, value as number);\r\n          }\r\n          break;\r\n        case 'int':\r\n          if (arrayLength) {\r\n            gl.uniform1iv(location, value as number[]);\r\n          } else {\r\n            gl.uniform1i(location, value as number);\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Uniform not implemented: ${type}`);\r\n      }\r\n    }\r\n  }\r\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\r\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\r\n  }\r\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\r\n    return {\r\n      position: this.getAttribLocation(program, 'position'),\r\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\r\n    };\r\n  }\r\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\r\n      Artifact.UniformLocations {\r\n    const uniformLocations: Artifact.UniformLocations = [];\r\n    if (samplers) {\r\n      for (const sampler of samplers) {\r\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\r\n      }\r\n    }\r\n    if (variables) {\r\n      for (const variable of variables) {\r\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\r\n      }\r\n    }\r\n    return uniformLocations;\r\n  }\r\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\r\n    const gl = this.glContext.gl;\r\n    const reference = gl.getUniformLocation(program, name);\r\n    if (reference === null) {\r\n      throw new Error(`Uniform ${name} not found.`);\r\n    }\r\n    return reference;\r\n  }\r\n  getAttribLocation(program: WebGLProgram, name: string): number {\r\n    const gl = this.glContext.gl;\r\n    const attributeLocation: number = gl.getAttribLocation(program, name);\r\n    return attributeLocation;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {SessionHandler} from '../../backend';\r\nimport {Graph} from '../../graph';\r\nimport {Logger} from '../../instrument';\r\nimport {Operator} from '../../operators';\r\nimport {OpSet, resolveOperator} from '../../opset';\r\nimport {Session} from '../../session';\r\nimport {Tensor} from '../../tensor';\r\nimport {WebGLBackend} from '../backend-webgl';\r\n\r\nimport {WebGLInferenceHandler} from './inference-handler';\r\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\r\nimport {ProgramManager} from './program-manager';\r\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {TextureManager} from './texture-manager';\r\nimport {TextureData} from './types';\r\n\r\nexport class WebGLSessionHandler implements SessionHandler {\r\n  programManager: ProgramManager;\r\n  textureManager: TextureManager;\r\n  layoutStrategy: TextureLayoutStrategy;\r\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\r\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\r\n  initializers: Set<Tensor.Id>;\r\n  pack?: boolean;\r\n\r\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\r\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\r\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\r\n    this.textureManager = new TextureManager(\r\n        backend.glContext, this.layoutStrategy, this.context.profiler,\r\n        {reuseTextures: backend.textureCacheMode === 'full'});\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache = new Map();\r\n    this.pack = backend.pack;\r\n    this.pack2unpackMap = new Map();\r\n    this.unpack2packMap = new Map();\r\n  }\r\n\r\n  createInferenceHandler() {\r\n    return new WebGLInferenceHandler(this);\r\n  }\r\n  onGraphInitialized(graph: Graph): void {\r\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\r\n    this.initializers = new Set(initializers);\r\n  }\r\n  isInitializer(tensorId: Tensor.Id): boolean {\r\n    return this.initializers ? this.initializers.has(tensorId) : false;\r\n  }\r\n  addInitializer(tensorId: Tensor.Id): void {\r\n    this.initializers.add(tensorId);\r\n  }\r\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\r\n    if (isPacked) {\r\n      return this.packedTextureDataCache.get(tensorId);\r\n    } else {\r\n      return this.unpackedTextureDataCache.get(tensorId);\r\n    }\r\n  }\r\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\r\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\r\n    if (isPacked) {\r\n      this.packedTextureDataCache.set(tensorId, textureData);\r\n    } else {\r\n      this.unpackedTextureDataCache.set(tensorId, textureData);\r\n    }\r\n  }\r\n  dispose(): void {\r\n    this.programManager.dispose();\r\n    this.textureManager.clearActiveTextures();\r\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\r\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\r\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\n\r\nexport declare namespace Encoder {\r\n  export interface DataTypeMap {\r\n    float: Float32Array;\r\n    byte: Uint8Array;\r\n    int: Uint32Array;\r\n  }\r\n  export type DataType = keyof DataTypeMap;\r\n  type DataArrayType = DataTypeMap[DataType];\r\n\r\n  /* eslint-disable @typescript-eslint/naming-convention */\r\n  export const enum Usage {\r\n    Default = 0,\r\n    UploadOnly,\r\n    Download4BytesAsFloat32,\r\n  }\r\n}\r\n\r\n/**\r\n * Abstraction for mapping data types to texture texlets\r\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\r\n * Decoding means how a texlet's channels are mapped to a resulting Float32\r\n */\r\nexport interface DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\r\n  allocate(size: number): Encoder.DataArrayType;\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\r\n}\r\n/**\r\n * WebGL2 data encoder\r\n * Uses R32F as the format for texlet\r\n */\r\nexport class RedFloat32DataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\r\n    if (channels === 1) {\r\n      this.internalFormat = gl.R32F;\r\n      this.format = gl.RED;\r\n      this.textureType = gl.FLOAT;\r\n      this.channelSize = channels;\r\n    } else if (channels === 4) {\r\n      this.internalFormat = gl.RGBA32F;\r\n      this.format = gl.RGBA;\r\n      this.textureType = gl.FLOAT;\r\n      this.channelSize = channels;\r\n    } else {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n  }\r\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\r\n    let result: Float32Array;\r\n    let source: Float32Array;\r\n    if (src.constructor !== Float32Array) {\r\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\r\n      source = new Float32Array(src);\r\n    }\r\n    if (textureSize * this.channelSize > src.length) {\r\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\r\n      source = src as Float32Array;\r\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\r\n      source.forEach((v, i) => result[i] = v);\r\n    } else {\r\n      source = src as Float32Array;\r\n      result = source;\r\n    }\r\n    return result;\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Float32Array(size * 4);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\r\n    if (this.channelSize === 1) {\r\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\r\n      return filteredData;\r\n    }\r\n    return buffer.subarray(0, dataSize) as Float32Array;\r\n  }\r\n}\r\n/**\r\n * Data encoder for WebGL 1 with support for floating point texture\r\n */\r\nexport class RGBAFloatDataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\r\n    if (channels !== 1 && channels !== 4) {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n    this.internalFormat = gl.RGBA;\r\n    this.format = gl.RGBA;\r\n    this.channelSize = channels;\r\n    this.textureType = textureType || gl.FLOAT;\r\n  }\r\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\r\n    let dest = src;\r\n    if (this.channelSize === 1) {\r\n      Logger.verbose('Encoder', 'Exploding into a larger array');\r\n      dest = this.allocate(textureSize) as Float32Array;\r\n      src.forEach((v, i) => dest[i * 4] = v);\r\n    }\r\n    return dest;\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Float32Array(size * 4);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\r\n    if (this.channelSize === 1) {\r\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\r\n      return filteredData;\r\n    }\r\n    return buffer.subarray(0, dataSize) as Float32Array;\r\n  }\r\n}\r\n\r\nexport class Uint8DataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize = 4;\r\n  constructor(gl: WebGLRenderingContext, channels = 1) {\r\n    if (channels === 1) {\r\n      this.internalFormat = gl.ALPHA;\r\n      this.format = gl.ALPHA;  // not tested\r\n      this.textureType = gl.UNSIGNED_BYTE;\r\n      this.channelSize = channels;\r\n    } else if (channels === 4) {\r\n      this.internalFormat = gl.RGBA;\r\n      this.format = gl.RGBA;\r\n      this.textureType = gl.UNSIGNED_BYTE;\r\n      this.channelSize = channels;\r\n    } else {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n  }\r\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\r\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Uint8Array(size * this.channelSize);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\r\n    if (buffer instanceof Uint8Array) {\r\n      return buffer.subarray(0, dataSize);\r\n    }\r\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\nimport {assert} from '../../util';\r\n/** Layout preferences */\r\nexport interface WidthHeightPrefs {\r\n  breakAxis?: number;\r\n  isPacked?: boolean;\r\n  reverseWH?: boolean;\r\n}\r\n/**\r\n * TextureLayoutStrategy is an abstraction for different plans\r\n * for mapping n-dimensional arrays to 2D textures (and back)\r\n */\r\nexport interface TextureLayoutStrategy {\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\r\n}\r\n\r\n/**\r\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\r\n */\r\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\r\n  constructor(public maxTextureSize: number) {}\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    // scalar tensor\r\n    if (shape.length === 0) {\r\n      return [1, 1];\r\n    }\r\n    const maxTextureSize = this.maxTextureSize;\r\n    if (prefs && prefs.breakAxis !== undefined) {\r\n      // check to see if dims fit\r\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\r\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\r\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\r\n        // ignore preferences\r\n        // continue with default layout\r\n        Logger.verbose(\r\n            'TextureLayout',\r\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\r\n      } else {\r\n        return [wsize, hsize];\r\n      }\r\n    }\r\n    const totalSize = shape.reduce((a, b) => a * b);\r\n\r\n    let width = Math.floor(Math.sqrt(totalSize));\r\n\r\n    for (; width < maxTextureSize && width < totalSize; width++) {\r\n      if (totalSize % width === 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (width >= maxTextureSize || totalSize % width !== 0) {\r\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\r\n    }\r\n    return [width, totalSize / width];\r\n  }\r\n}\r\n\r\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\r\n  constructor(public maxTextureSize: number) {}\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    const wh = this.computeTexture(shape, prefs);\r\n    if (prefs && prefs.isPacked) {\r\n      wh[0] /= 2;\r\n      wh[1] /= 2;\r\n    }\r\n    if (prefs && prefs.reverseWH) {\r\n      return [wh[1], wh[0]];\r\n    }\r\n    return wh;\r\n  }\r\n\r\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    const isPacked = prefs && prefs.isPacked;\r\n    // scalar tensor\r\n    if (shape.length === 0) {\r\n      return isPacked ? [2, 2] : [1, 1];\r\n    }\r\n    let maxTextureSize = this.maxTextureSize;\r\n    if (prefs && prefs.breakAxis !== undefined) {\r\n      // check to see if dims fit\r\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\r\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\r\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\r\n        // ignore preferences\r\n        // continue with default layout\r\n        Logger.verbose(\r\n            'TextureLayout',\r\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\r\n      } else {\r\n        return [wsize, hsize];\r\n      }\r\n    }\r\n    let logShape = shape.slice(0);\r\n    if (isPacked) {\r\n      maxTextureSize = maxTextureSize * 2;\r\n\r\n      // This logic ensures we accurately count the number of packed texels needed\r\n      // to accommodate the tensor. We can only pack values in the same texel if\r\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\r\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\r\n      // fact that the texels containing the third row are half empty.\r\n      logShape = logShape.map(\r\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\r\n\r\n      // Packed texture height is at least 2 (the channel height of a single\r\n      // texel).\r\n      if (logShape.length === 1) {\r\n        logShape = [2, logShape[0]];\r\n      }\r\n    }\r\n\r\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\r\n    if (logShape.length !== 2) {\r\n      const squeezeResult = squeezeShape(logShape);\r\n      logShape = squeezeResult.newShape;\r\n    }\r\n\r\n    const size = sizeFromShape(logShape);\r\n    if (logShape.length <= 1 && size <= maxTextureSize) {\r\n      return [1, size];\r\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\r\n      return logShape as [number, number];\r\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\r\n      return [logShape[0] * logShape[1], logShape[2]];\r\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\r\n      return [logShape[0], logShape[1] * logShape[2]];\r\n    } else if (\r\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\r\n        logShape[3] <= maxTextureSize) {\r\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\r\n    } else if (\r\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\r\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\r\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\r\n    } else {\r\n      if (isPacked) {\r\n        // For packed textures size equals the number of channels required to\r\n        // accommodate the texture data. However in order to squarify such that\r\n        // inner dimensions stay even, we rewrite size to equal the number of\r\n        // texels. Then in the return statement we rehydrate the squarified\r\n        // dimensions to channel units.\r\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\r\n      }\r\n      return sizeToSquarishShape(size);\r\n    }\r\n  }\r\n}\r\n\r\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\r\n  const newShape: number[] = [];\r\n  const keptDims: number[] = [];\r\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\r\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\r\n  let j = 0;\r\n  for (let i = 0; i < shape.length; ++i) {\r\n    if (axes != null) {\r\n      if (axes[j] === i && shape[i] !== 1) {\r\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\r\n      }\r\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\r\n        newShape.push(shape[i]);\r\n        keptDims.push(i);\r\n      }\r\n      if (axes[j] <= i) {\r\n        j++;\r\n      }\r\n    }\r\n    if (shape[i] !== 1) {\r\n      newShape.push(shape[i]);\r\n      keptDims.push(i);\r\n    }\r\n  }\r\n  return {newShape, keptDims};\r\n}\r\n\r\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\r\n  const rank = shape.length;\r\n\r\n  // Normalize input\r\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\r\n\r\n  // Check for valid range\r\n  assert(\r\n      axis.every(ax => ax >= -rank && ax < rank),\r\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\r\n          `got axis ${axis}`);\r\n\r\n  // Check for only integers\r\n  assert(\r\n      axis.every(isInt),\r\n      () => 'All values in axis param must be integers but ' +\r\n          `got axis ${axis}`);\r\n\r\n  // Handle negative axis.\r\n  return axis.map(a => a < 0 ? rank + a : a);\r\n}\r\nexport function isInt(a: number): boolean {\r\n  return a % 1 === 0;\r\n}\r\nexport function sizeFromShape(shape: number[]): number {\r\n  if (shape.length === 0) {\r\n    // Scalar.\r\n    return 1;\r\n  }\r\n  let size = shape[0];\r\n  for (let i = 1; i < shape.length; i++) {\r\n    size *= shape[i];\r\n  }\r\n  return size;\r\n}\r\nexport function getRowsCols(shape: number[]): [number, number] {\r\n  if (shape.length === 0) {\r\n    throw Error('Cannot get rows and columns of an empty shape array.');\r\n  }\r\n\r\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\r\n}\r\nexport function sizeToSquarishShape(size: number): [number, number] {\r\n  const width = Math.ceil(Math.sqrt(size));\r\n  return [width, Math.ceil(size / width)];\r\n}\r\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\r\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ShapeUtil} from '../../util';\r\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\r\nimport {TextureLayout, TextureType} from './types';\r\n\r\nexport const createTextureLayoutFromTextureType =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\r\n     textureType: TextureType): TextureLayout => {\r\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\r\n      const isPacked = textureType === TextureType.packed;\r\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\r\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\r\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\r\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\r\n          undefined;\r\n      return createTextureLayoutFromShape(\r\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\r\n    };\r\n\r\nexport const calculateTextureWidthAndHeight =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\r\n        [number, number] => {\r\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\r\n          return [layout.width, layout.height];\r\n        };\r\n\r\n/**\r\n * Create a TextureLayout object from shape.\r\n */\r\nexport const createTextureLayoutFromShape =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\r\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\r\n      const isPacked = !!(prefs && prefs.isPacked);\r\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\r\n      const rank = shape.length;\r\n      let inferredDims = shape.slice(0);\r\n      if (rank === 0) {\r\n        inferredDims = [1];\r\n      }\r\n      if (channels === 1) {\r\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\r\n        unpackedShape = shape;\r\n      } else if (isPacked) {\r\n        if (channels !== 4) {\r\n          throw new Error('a packed texture must be 4-channel');\r\n        }\r\n        unpackedShape = shape;\r\n        if (rank > 0) {\r\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\r\n        }\r\n        if (rank > 1) {\r\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\r\n        }\r\n      } else if (!unpackedShape) {\r\n        throw new Error('Unpacked shape is needed when using channels > 1');\r\n      }\r\n      return {\r\n        width,\r\n        height,\r\n        channels,\r\n        isPacked,\r\n        shape: inferredDims,\r\n        strides: ShapeUtil.computeStrides(inferredDims),\r\n        unpackedShape,\r\n        reversedWH: (prefs && prefs.reverseWH)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger, Profiler} from '../../instrument';\r\nimport {Tensor} from '../../tensor';\r\n\r\nimport {Encoder} from './texture-data-encoder';\r\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {TextureData, TextureLayout} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\nexport interface TextureManagerConfig {\r\n  reuseTextures?: boolean;\r\n}\r\n\r\n/**\r\n * TextureManager is the mainly responsible for caching Textures\r\n * Textures are cached in 2 levels:\r\n *   1. the texures which are associated with a dataId (from Tensor)\r\n *    Caching these is crucial to performance. These are In-use Textures\r\n *   2. textures which are not in use by any current ProgramInfo/Tensor\r\n *     These are called Free Textures\r\n * TextureManager is also used to help creating textures. For this it\r\n * uses WebGLContext and TextureLayoutStrategy\r\n */\r\nexport class TextureManager {\r\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\r\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\r\n  private readonly textureLookup: Map<WebGLTexture, string>;\r\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\r\n\r\n  constructor(\r\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\r\n      private config: TextureManagerConfig) {\r\n    if (config.reuseTextures) {\r\n      this.inUseTextures = new Map();\r\n      this.idleTextures = new Map();\r\n      this.textureLookup = new Map();\r\n    }\r\n  }\r\n  createTextureFromLayout(\r\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\r\n    const textureDataType = this.toEncoderType(dataType);\r\n\r\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\r\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\r\n      throw new Error('not implemented');\r\n    }\r\n    const width = layout.width;\r\n    const height = layout.height;\r\n\r\n    let key: string|undefined;\r\n    let inUseTextures: WebGLTexture[]|undefined;\r\n    if (this.config.reuseTextures) {\r\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\r\n      inUseTextures = this.inUseTextures.get(key);\r\n      if (!inUseTextures) {\r\n        inUseTextures = [];\r\n        this.inUseTextures.set(key, inUseTextures);\r\n      }\r\n\r\n      const idleTextures = this.idleTextures.get(key);\r\n      if (idleTextures && idleTextures.length > 0) {\r\n        const texture = idleTextures.pop()!;\r\n        inUseTextures.push(texture);\r\n        if (usage === Encoder.Usage.UploadOnly) {\r\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\r\n        }\r\n        return texture;\r\n      }\r\n    }\r\n\r\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\r\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\r\n\r\n    if (this.config.reuseTextures) {\r\n      inUseTextures!.push(texture);\r\n      this.textureLookup.set(texture, key!);\r\n    }\r\n    return texture;\r\n  }\r\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\r\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\r\n      const data = this.glContext.readTexture(\r\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\r\n      return this.toTensorData(dataType, data);\r\n    });\r\n  }\r\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\r\n    const dataId = td.tensor.dataId;\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    if (this.pendingRead.has(dataId)) {\r\n      const subscribers = this.pendingRead.get(dataId);\r\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\r\n    }\r\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\r\n      this.pendingRead.set(dataId, []);\r\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\r\n      // add a fence waiting for the data to be ready\r\n      await this.glContext.createAndWaitForFence();\r\n      const data = this.glContext.readTexture(\r\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\r\n      const tensorData = this.toTensorData(dataType, data);\r\n      const subscribers = this.pendingRead.get(dataId);\r\n      this.pendingRead.delete(dataId);\r\n      subscribers?.forEach(resolve => resolve(tensorData));\r\n      return tensorData;\r\n    });\r\n  }\r\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\r\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\r\n      const dataSize = td.shape.reduce((a, b) => a * b);\r\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\r\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\r\n    });\r\n  }\r\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\r\n    let key: string|undefined;\r\n    if (this.config.reuseTextures) {\r\n      key = this.textureLookup.get(textureData.texture);\r\n      if (key) {\r\n        if (deleteTexture) {\r\n          this.textureLookup.delete(key);\r\n        }\r\n        const inUseTextures = this.inUseTextures.get(key);\r\n        if (inUseTextures) {\r\n          const index = inUseTextures.indexOf(textureData.texture);\r\n          if (index !== -1) {\r\n            inUseTextures.splice(index, 1);\r\n            let idleTextures = this.idleTextures.get(key);\r\n            if (!idleTextures) {\r\n              idleTextures = [];\r\n              this.idleTextures.set(key, idleTextures);\r\n            }\r\n            idleTextures.push(textureData.texture);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!key || deleteTexture) {\r\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\r\n      this.glContext.deleteTexture(textureData.texture);\r\n    }\r\n  }\r\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\r\n    switch (dataType) {\r\n      case 'int16':\r\n        return data instanceof Int16Array ? data : Int16Array.from(data);\r\n      case 'int32':\r\n        return data instanceof Int32Array ? data : Int32Array.from(data);\r\n      case 'int8':\r\n        return data instanceof Int8Array ? data : Int8Array.from(data);\r\n      case 'uint16':\r\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\r\n      case 'uint32':\r\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\r\n      case 'uint8':\r\n      case 'bool':\r\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\r\n      case 'float32':\r\n        return data instanceof Float32Array ? data : Float32Array.from(data);\r\n      case 'float64':\r\n        return data instanceof Float64Array ? data : Float64Array.from(data);\r\n      default:\r\n        throw new Error(`TensorData type ${dataType} is not supported`);\r\n    }\r\n  }\r\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\r\n    if (!data) {\r\n      return undefined;\r\n    }\r\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\r\n    /*\r\n    switch (dataType) {\r\n      case 'int16':\r\n      case 'int32':\r\n      case 'uint16':\r\n      case 'uint32':\r\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\r\n      case 'int8':\r\n      case 'uint8':\r\n      case 'bool':\r\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\r\n      case 'float32':\r\n      case 'float64':\r\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\r\n      default:\r\n        throw new Error(`TensorData type ${dataType} is not supported`);\r\n    }\r\n    */\r\n  }\r\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\r\n    return 'float';\r\n    // switch (dataType) {\r\n    //   case 'int16':\r\n    //   case 'int32':\r\n    //   case 'uint16':\r\n    //   case 'uint32':\r\n    //     return 'int';\r\n    //   case 'uint8':\r\n    //   case 'bool':\r\n    //     return 'byte';\r\n    //   case 'float32':\r\n    //   case 'float64':\r\n    //     return 'float';\r\n    //   default:\r\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\r\n    // }\r\n  }\r\n  clearActiveTextures(): void {\r\n    this.glContext.clearActiveTextures();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../tensor';\r\n\r\n/**\r\n * Layout info is used for mapping n-dimensional array to 2D textures\r\n * The layout is created by the TextureLayoutStrategy based on\r\n * the Tensor's dimensions and strides\r\n */\r\nexport interface TextureLayout {\r\n  width: number;\r\n  height: number;\r\n  /**\r\n   * specify the number of value that encoded in a single pixel\r\n   */\r\n  channels: 1|2|3|4;\r\n  /**\r\n   * whether in packed mode or not\r\n   */\r\n  isPacked?: boolean;\r\n  /**\r\n   * the normalized shape\r\n   */\r\n  shape: readonly number[];\r\n  /**\r\n   * the stride of each dimensions, calculated according to shape\r\n   */\r\n  strides: readonly number[];\r\n  /**\r\n   * the original shape(dims) of the corresponding tensor\r\n   */\r\n  unpackedShape: readonly number[];\r\n\r\n  reversedWH?: boolean;\r\n}\r\nexport interface TextureData extends TextureLayout {\r\n  tensor: Tensor;\r\n  texture: WebGLTexture;\r\n}\r\n\r\nexport enum TextureType {\r\n  unpacked,              // <-- normal unpacked texture\r\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\r\n  packed,                // <-- normal packed texture\r\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\r\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\r\n}\r\n\r\nexport interface TensorInfo {\r\n  id?: Tensor.Id;\r\n  dims: readonly number[];\r\n  type: Tensor.DataType;\r\n  textureType: TextureType;\r\n}\r\n\r\nexport interface ProgramVariable {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n  data: number|number[];\r\n}\r\n\r\n/**\r\n * A set of metadata of a shader program.\r\n */\r\nexport interface ProgramMetadata {\r\n  /**\r\n   * the name of the program. used for debugging and profiling\r\n   */\r\n  name: string;\r\n  /**\r\n   * texture types for each input\r\n   */\r\n  inputTypes: TextureType[];\r\n  /**\r\n   * names of each input\r\n   */\r\n  inputNames: string[];\r\n  /**\r\n   * an optional string as a cache hint in the artifact cache\r\n   */\r\n  cacheHint?: string;\r\n}\r\n\r\n/**\r\n * A ProgramInfoLoader allows\r\n */\r\nexport interface ProgramInfoLoader extends ProgramMetadata {\r\n  /**\r\n   * a function to get the program info\r\n   */\r\n  get(): ProgramInfo;\r\n}\r\n\r\n/**\r\n * A set of data that represent a shader program\r\n */\r\nexport interface ProgramInfo extends ProgramMetadata {\r\n  /**\r\n   * information of uniform variables\r\n   */\r\n  variables?: ProgramVariable[];\r\n  /**\r\n   * tensor info for output\r\n   */\r\n  output: TensorInfo;\r\n  /**\r\n   * the shader's processing source code\r\n   */\r\n  shaderSource: string;\r\n  /**\r\n   * whether the shader source contains a customized main function implementation\r\n   */\r\n  hasMain?: boolean;\r\n}\r\n\r\nexport interface VariableInfo {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n}\r\n\r\nexport interface ProgramVariable {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n  data: number|number[];\r\n}\r\n\r\n/**\r\n * Information of uniforms that shader uses\r\n */\r\nexport interface UniformInfo {\r\n  type: 'sampler2D'|VariableInfo['type'];\r\n  name: string;\r\n  arrayLength?: number;\r\n}\r\n\r\nexport interface UniformLocation extends UniformInfo {\r\n  location: WebGLUniformLocation;\r\n}\r\n\r\n/**\r\n * Artifact is the result of compilation\r\n * It does not contain input of output data\r\n * However anything that could be run as a \"program\"\r\n */\r\nexport interface Artifact {\r\n  programInfo: ProgramInfo;\r\n  program: WebGLProgram;\r\n  uniformLocations: UniformLocation[];\r\n  attribLocations: {position: number; textureCoord: number};\r\n}\r\nexport declare namespace Artifact {\r\n  type UniformLocations = Artifact['uniformLocations'];\r\n  type AttribLocations = Artifact['attribLocations'];\r\n}\r\n\r\nexport interface UniformData {\r\n  [name: string]: number|number[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {assert} from '../../util';\r\n/**\r\n * Given a non RGBA shape calculate the R version\r\n * It is assumed that the dimensions are multiples of given channels\r\n * NOTE: it is always the last dim that gets packed.\r\n * @param unpackedShape original shape to create a packed version from\r\n */\r\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\r\n  const len = unpackedShape.length;\r\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\r\n}\r\n\r\nexport async function repeatedTry(\r\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    let tryCount = 0;\r\n\r\n    const tryFn = () => {\r\n      if (checkFn()) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      tryCount++;\r\n\r\n      const nextBackoff = delayFn(tryCount);\r\n\r\n      if (maxCounter != null && tryCount >= maxCounter) {\r\n        reject();\r\n        return;\r\n      }\r\n      setTimeout(tryFn, nextBackoff);\r\n    };\r\n\r\n    tryFn();\r\n  });\r\n}\r\n\r\n/**\r\n * Generates the function name from an input sampler name.\r\n * @param samplerName Name of the sampler.\r\n */\r\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\r\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\r\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\r\n}\r\n\r\n/**\r\n * Generates the function name from an input sampler name at output coordinates.\r\n * @param samplerName Name of the sampler.\r\n */\r\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\r\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\r\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\r\n}\r\n\r\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\r\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\r\n  // Deep copy.\r\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\r\n  newInputShape = squeezedShape;\r\n  return newInputShape;\r\n}\r\n\r\n/** Returns a list of squeezed parameters for shader functions */\r\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\r\n  return keptDims.map(d => params[d]).join(', ');\r\n}\r\n\r\n/** Returns the data type for different ranks. */\r\nexport function getCoordsDataType(rank: number): string {\r\n  if (rank <= 1) {\r\n    return 'int';\r\n  } else if (rank === 2) {\r\n    return 'ivec2';\r\n  } else if (rank === 3) {\r\n    return 'ivec3';\r\n  } else if (rank === 4) {\r\n    return 'ivec4';\r\n  } else if (rank === 5) {\r\n    return 'ivec5';\r\n  } else if (rank === 6) {\r\n    return 'ivec6';\r\n  } else {\r\n    throw Error(`GPU for rank ${rank} is not yet supported`);\r\n  }\r\n}\r\n\r\nexport function getGlChannels(rank = 6): string[] {\r\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\n\r\nimport {WebGLContext} from './webgl-context';\r\n\r\nconst cache: {[contextId: string]: WebGLContext} = {};\r\n\r\n/**\r\n * This factory function creates proper WebGLRenderingContext based on\r\n * the current browsers capabilities\r\n * The order is from higher/most recent versions to most basic\r\n */\r\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\r\n  let context: WebGLContext|undefined;\r\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\r\n    context = cache.webgl2;\r\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\r\n    context = cache.webgl;\r\n  }\r\n\r\n  context = context || createNewWebGLContext(contextId);\r\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\r\n  const gl = context.gl;\r\n\r\n  cache[contextId] = context;\r\n\r\n  if (gl.isContextLost()) {\r\n    delete cache[contextId];\r\n    return createWebGLContext(contextId);\r\n  }\r\n\r\n  gl.disable(gl.DEPTH_TEST);\r\n  gl.disable(gl.STENCIL_TEST);\r\n  gl.disable(gl.BLEND);\r\n  gl.disable(gl.DITHER);\r\n  gl.disable(gl.POLYGON_OFFSET_FILL);\r\n  gl.disable(gl.SAMPLE_COVERAGE);\r\n  gl.enable(gl.SCISSOR_TEST);\r\n  gl.enable(gl.CULL_FACE);\r\n  gl.cullFace(gl.BACK);\r\n\r\n  return context;\r\n}\r\n\r\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\r\n  const canvas = createCanvas();\r\n  const contextAttributes: WebGLContextAttributes = {\r\n    alpha: false,\r\n    depth: false,\r\n    antialias: false,\r\n    stencil: false,\r\n    preserveDrawingBuffer: false,\r\n    premultipliedAlpha: false,\r\n    failIfMajorPerformanceCaveat: false\r\n  };\r\n  let gl: WebGLRenderingContext|null;\r\n  const ca = contextAttributes;\r\n  if (!contextId || contextId === 'webgl2') {\r\n    gl = canvas.getContext('webgl2', ca);\r\n    if (gl) {\r\n      try {\r\n        return new WebGLContext(gl, 2);\r\n      } catch (err) {\r\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\r\n      }\r\n    }\r\n  }\r\n  if (!contextId || contextId === 'webgl') {\r\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\r\n    if (gl) {\r\n      try {\r\n        return new WebGLContext(gl, 1);\r\n      } catch (err) {\r\n        Logger.warning(\r\n            'GlContextFactory',\r\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('WebGL is not supported');\r\n}\r\n\r\nfunction createCanvas(): HTMLCanvasElement {\r\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  return canvas;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\n\r\nimport * as DataEncoders from './texture-data-encoder';\r\nimport {DataEncoder, Encoder} from './texture-data-encoder';\r\nimport {repeatedTry} from './utils';\r\n\r\nexport interface FenceContext {\r\n  query: WebGLSync|null;\r\n  isFencePassed(): boolean;\r\n}\r\n\r\ntype PollItem = {\r\n  isDoneFn: () => boolean; resolveFn: () => void;\r\n};\r\n\r\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\r\n  let i = 0;\r\n  for (; i < arr.length; ++i) {\r\n    const isDone = arr[i]();\r\n    if (!isDone) {\r\n      break;\r\n    }\r\n  }\r\n  return i - 1;\r\n}\r\n\r\n/**\r\n * Abstraction and wrapper around WebGLRenderingContext and its operations\r\n */\r\nexport class WebGLContext {\r\n  gl: WebGLRenderingContext;\r\n  version: 1|2;\r\n\r\n  private vertexbuffer: WebGLBuffer;\r\n  private framebuffer: WebGLFramebuffer;\r\n\r\n  // WebGL flags and vital parameters\r\n  private isFloatTextureAttachableToFrameBuffer: boolean;\r\n  isFloat32DownloadSupported: boolean;\r\n  isRenderFloat32Supported: boolean;\r\n  isBlendSupported: boolean;\r\n  maxTextureSize: number;\r\n  // private maxCombinedTextureImageUnits: number;\r\n  private maxTextureImageUnits: number;\r\n  // private maxCubeMapTextureSize: number;\r\n  // private shadingLanguageVersion: string;\r\n  // private webglVendor: string;\r\n  // private webglVersion: string;\r\n\r\n  // WebGL2 flags and vital parameters\r\n  // private max3DTextureSize: number;\r\n  // private maxArrayTextureLayers: number;\r\n  // private maxColorAttachments: number;\r\n  // private maxDrawBuffers: number;\r\n\r\n  // WebGL extensions\r\n  // eslint-disable-next-line camelcase\r\n  textureFloatExtension: OES_texture_float|null;\r\n  // eslint-disable-next-line camelcase\r\n  textureHalfFloatExtension: OES_texture_half_float|null;\r\n\r\n  // WebGL2 extensions\r\n  colorBufferFloatExtension: unknown|null;\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\r\n\r\n  private disposed: boolean;\r\n  private frameBufferBound = false;\r\n\r\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\r\n    this.gl = gl;\r\n    this.version = version;\r\n\r\n    this.getExtensions();\r\n    this.vertexbuffer = this.createVertexbuffer();\r\n    this.framebuffer = this.createFramebuffer();\r\n    this.queryVitalParameters();\r\n  }\r\n\r\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\r\n    const gl = this.gl;\r\n    // create the texture\r\n    const texture = gl.createTexture();\r\n    // bind the texture so the following methods effect this texture.\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    const buffer = data ? encoder.encode(data, width * height) : null;\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,  // Level of detail.\r\n        encoder.internalFormat, width, height,\r\n        0,  // Always 0 in OpenGL ES.\r\n        encoder.format, encoder.textureType, buffer);\r\n    this.checkError();\r\n    return texture as WebGLTexture;\r\n  }\r\n  updateTexture(\r\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\r\n    const gl = this.gl;\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    const buffer = encoder.encode(data, width * height);\r\n    gl.texSubImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,  // level\r\n        0,  // xoffset\r\n        0,  // yoffset\r\n        width, height, encoder.format, encoder.textureType, buffer);\r\n    this.checkError();\r\n  }\r\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\r\n    const gl = this.gl;\r\n    // Make it the target for framebuffer operations - including rendering.\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\r\n        0);  // 0, we aren't using MIPMAPs\r\n    this.checkError();\r\n    gl.viewport(0, 0, width, height);\r\n    gl.scissor(0, 0, width, height);\r\n  }\r\n  readTexture(\r\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\r\n      channels: number): Encoder.DataArrayType {\r\n    const gl = this.gl;\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    if (!this.frameBufferBound) {\r\n      this.attachFramebuffer(texture, width, height);\r\n    }\r\n    const encoder = this.getEncoder(dataType, channels);\r\n    const buffer = encoder.allocate(width * height);\r\n    // bind texture to framebuffer\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\r\n        0);  // 0, we aren't using MIPMAPs\r\n    // TODO: Check if framebuffer is ready\r\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\r\n    this.checkError();\r\n    // unbind FB\r\n    return encoder.decode(buffer, dataSize);\r\n  }\r\n\r\n  isFramebufferReady(): boolean {\r\n    // TODO: Implement logic to check if the framebuffer is ready\r\n    return true;\r\n  }\r\n  getActiveTexture(): string {\r\n    const gl = this.gl;\r\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\r\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\r\n  }\r\n  getTextureBinding(): WebGLTexture {\r\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\r\n  }\r\n  getFramebufferBinding(): WebGLFramebuffer {\r\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\r\n  }\r\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\r\n    const gl = this.gl;\r\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\r\n    gl.enableVertexAttribArray(positionHandle);\r\n    if (textureCoordHandle !== -1) {\r\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\r\n      gl.enableVertexAttribArray(textureCoordHandle);\r\n    }\r\n    this.checkError();\r\n  }\r\n  createProgram(\r\n      vertexShader: WebGLShader,\r\n      fragShader: WebGLShader,\r\n      ): WebGLProgram {\r\n    const gl = this.gl;\r\n    const program = gl.createProgram()!;\r\n\r\n    // the program consists of our shaders\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n    return program;\r\n  }\r\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(shaderType);\r\n    if (!shader) {\r\n      throw new Error(`createShader() returned null with type ${shaderType}`);\r\n    }\r\n\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\r\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\r\nShader source:\r\n${shaderSource}`);\r\n    }\r\n    return shader;\r\n  }\r\n  deleteShader(shader: WebGLShader): void {\r\n    this.gl.deleteShader(shader);\r\n  }\r\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\r\n    const gl = this.gl;\r\n    gl.activeTexture(gl.TEXTURE0 + position);\r\n    this.checkError();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    this.checkError();\r\n    gl.uniform1i(uniformHandle, position);\r\n    this.checkError();\r\n  }\r\n  draw(): void {\r\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n    this.checkError();\r\n  }\r\n  checkError(): void {\r\n    if (env.debug) {\r\n      const gl = this.gl;\r\n      const error = gl.getError();\r\n      let label = '';\r\n      switch (error) {\r\n        case (gl.NO_ERROR):\r\n          return;\r\n        case (gl.INVALID_ENUM):\r\n          label = 'INVALID_ENUM';\r\n          break;\r\n        case (gl.INVALID_VALUE):\r\n          label = 'INVALID_VALUE';\r\n          break;\r\n        case (gl.INVALID_OPERATION):\r\n          label = 'INVALID_OPERATION';\r\n          break;\r\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\r\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\r\n          break;\r\n        case (gl.OUT_OF_MEMORY):\r\n          label = 'OUT_OF_MEMORY';\r\n          break;\r\n        case (gl.CONTEXT_LOST_WEBGL):\r\n          label = 'CONTEXT_LOST_WEBGL';\r\n          break;\r\n        default:\r\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\r\n      }\r\n      throw new Error(label);\r\n    }\r\n  }\r\n  deleteTexture(texture: WebGLTexture): void {\r\n    this.gl.deleteTexture(texture);\r\n  }\r\n  deleteProgram(program: WebGLProgram): void {\r\n    this.gl.deleteProgram(program);\r\n  }\r\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\r\n    if (this.version === 2) {\r\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\r\n    }\r\n\r\n    switch (dataType) {\r\n      case 'float':\r\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\r\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\r\n        } else {\r\n          return new DataEncoders.RGBAFloatDataEncoder(\r\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\r\n        }\r\n      case 'int':\r\n        throw new Error('not implemented');\r\n      case 'byte':\r\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\r\n      default:\r\n        throw new Error(`Invalid dataType: ${dataType}`);\r\n    }\r\n  }\r\n  clearActiveTextures(): void {\r\n    const gl = this.gl;\r\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\r\n      gl.activeTexture(gl.TEXTURE0 + unit);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n  }\r\n  dispose(): void {\r\n    if (this.disposed) {\r\n      return;\r\n    }\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.deleteFramebuffer(this.framebuffer);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.deleteBuffer(this.vertexbuffer);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    gl.finish();\r\n    this.disposed = true;\r\n  }\r\n\r\n  private createDefaultGeometry(): Float32Array {\r\n    // Sets of x,y,z(=0),s,t coordinates.\r\n    return new Float32Array([\r\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\r\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\r\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\r\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\r\n    ]);\r\n  }\r\n  private createVertexbuffer(): WebGLBuffer {\r\n    const gl = this.gl;\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      throw new Error('createBuffer() returned null');\r\n    }\r\n    const geometry = this.createDefaultGeometry();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\r\n    this.checkError();\r\n    return buffer;\r\n  }\r\n  private createFramebuffer(): WebGLFramebuffer {\r\n    const fb = this.gl.createFramebuffer();\r\n    if (!fb) {\r\n      throw new Error('createFramebuffer returned null');\r\n    }\r\n    return fb;\r\n  }\r\n\r\n  private queryVitalParameters(): void {\r\n    const gl = this.gl;\r\n\r\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\r\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\r\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\r\n\r\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\r\n      throw new Error('both float32 and float16 TextureType are not supported');\r\n    }\r\n\r\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\r\n\r\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\r\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\r\n    // this.webglVersion = gl.getParameter(gl.VERSION);\r\n\r\n    if (this.version === 2) {\r\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\r\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\r\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\r\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\r\n    }\r\n  }\r\n  private getExtensions(): void {\r\n    if (this.version === 2) {\r\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\r\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\r\n    } else {\r\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\r\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\r\n    }\r\n  }\r\n\r\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\r\n    // test whether Float32 texture is supported:\r\n    // STEP.1 create a float texture\r\n    const gl = this.gl;\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\r\n    // STEP.2 bind a frame buffer\r\n    const frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    // STEP.3 attach texture to framebuffer\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n    // STEP.4 test whether framebuffer is complete\r\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.deleteTexture(texture);\r\n    gl.deleteFramebuffer(frameBuffer);\r\n    return isComplete;\r\n  }\r\n\r\n  private checkRenderFloat32(): boolean {\r\n    if (this.version === 2) {\r\n      if (!this.colorBufferFloatExtension) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.textureFloatExtension) {\r\n        return false;\r\n      }\r\n    }\r\n    return this.isFloatTextureAttachableToFrameBuffer;\r\n  }\r\n\r\n  private checkFloat32Download(): boolean {\r\n    if (this.version === 2) {\r\n      if (!this.colorBufferFloatExtension) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.textureFloatExtension) {\r\n        return false;\r\n      }\r\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\r\n        return false;\r\n      }\r\n    }\r\n    return this.isFloatTextureAttachableToFrameBuffer;\r\n  }\r\n\r\n  /**\r\n   * Check whether GL_BLEND is supported\r\n   */\r\n  private checkFloat32Blend(): boolean {\r\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\r\n    // https://github.com/microsoft/onnxjs/issues/145\r\n\r\n    const gl = this.gl;\r\n\r\n    let texture: WebGLTexture|null|undefined;\r\n    let frameBuffer: WebGLFramebuffer|null|undefined;\r\n    let vertexShader: WebGLShader|null|undefined;\r\n    let fragmentShader: WebGLShader|null|undefined;\r\n    let program: WebGLProgram|null|undefined;\r\n\r\n    try {\r\n      texture = gl.createTexture();\r\n      frameBuffer = gl.createFramebuffer();\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n      // eslint-disable-next-line @typescript-eslint/naming-convention\r\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\r\n\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n      gl.enable(gl.BLEND);\r\n\r\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n      if (!vertexShader) {\r\n        return false;\r\n      }\r\n      gl.shaderSource(vertexShader, 'void main(){}');\r\n      gl.compileShader(vertexShader);\r\n\r\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      if (!fragmentShader) {\r\n        return false;\r\n      }\r\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\r\n      gl.compileShader(fragmentShader);\r\n\r\n      program = gl.createProgram();\r\n      if (!program) {\r\n        return false;\r\n      }\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      gl.useProgram(program);\r\n\r\n      gl.drawArrays(gl.POINTS, 0, 1);\r\n      return gl.getError() === gl.NO_ERROR;\r\n\r\n    } finally {\r\n      gl.disable(gl.BLEND);\r\n\r\n      if (program) {\r\n        gl.deleteProgram(program);\r\n      }\r\n      if (vertexShader) {\r\n        gl.deleteShader(vertexShader);\r\n      }\r\n      if (fragmentShader) {\r\n        gl.deleteShader(fragmentShader);\r\n      }\r\n      if (frameBuffer) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.deleteFramebuffer(frameBuffer);\r\n      }\r\n      if (texture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.deleteTexture(texture);\r\n      }\r\n    }\r\n  }\r\n\r\n  beginTimer(): WebGLQuery {\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n\r\n      const query = gl2.createQuery() as WebGLQuery;\r\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\r\n      return query;\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported.');\r\n    }\r\n  }\r\n\r\n  endTimer() {\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\r\n      return;\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n  }\r\n\r\n  isTimerResultAvailable(query: WebGLQuery): boolean {\r\n    let available = false, disjoint = false;\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n\r\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\r\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n\r\n    return available && !disjoint;\r\n  }\r\n\r\n  getTimerResult(query: WebGLQuery): number {\r\n    let timeElapsed = 0;\r\n    if (this.version === 2) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\r\n      gl2.deleteQuery(query);\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n    // return miliseconds\r\n    return timeElapsed / 1000000;\r\n  }\r\n\r\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\r\n    await repeatedTry(() => this.isTimerResultAvailable(query));\r\n    return this.getTimerResult(query);\r\n  }\r\n\r\n  public async createAndWaitForFence(): Promise<void> {\r\n    const fenceContext = this.createFence(this.gl);\r\n    return this.pollFence(fenceContext);\r\n  }\r\n\r\n  private createFence(gl: WebGLRenderingContext): FenceContext {\r\n    let isFencePassed: () => boolean;\r\n    const gl2 = gl as WebGL2RenderingContext;\r\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\r\n    gl.flush();\r\n    if (query === null) {\r\n      isFencePassed = () => true;\r\n    } else {\r\n      isFencePassed = () => {\r\n        const status = gl2.clientWaitSync(query, 0, 0);\r\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\r\n      };\r\n    }\r\n    return {query, isFencePassed};\r\n  }\r\n\r\n  async pollFence(fenceContext: FenceContext) {\r\n    return new Promise<void>(resolve => {\r\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\r\n    });\r\n  }\r\n\r\n  private itemsToPoll: PollItem[] = [];\r\n\r\n  pollItems(): void {\r\n    // Find the last query that has finished.\r\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\r\n    for (let i = 0; i <= index; ++i) {\r\n      const {resolveFn} = this.itemsToPoll[i];\r\n      resolveFn();\r\n    }\r\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\r\n  }\r\n\r\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\r\n    this.itemsToPoll.push({isDoneFn, resolveFn});\r\n    if (this.itemsToPoll.length > 1) {\r\n      // We already have a running loop that polls.\r\n      return;\r\n    }\r\n    // Start a new loop that polls.\r\n    await repeatedTry(() => {\r\n      this.pollItems();\r\n      // End the loop if no more items to poll.\r\n      return this.itemsToPoll.length === 0;\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {SessionHandler} from './backend';\r\nimport {Graph} from './graph';\r\nimport {Logger, Profiler} from './instrument';\r\nimport {Operator} from './operators';\r\nimport {Tensor} from './tensor';\r\n\r\nclass KernelOp {\r\n  constructor(public op: Operator, public node: Graph.Node) {}\r\n}\r\n\r\nexport class ExecutionPlan {\r\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\r\n    this.initialize(ops);\r\n  }\r\n\r\n  initialize(ops: Operator[]) {\r\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\r\n      const graphNodes = this.graph.getNodes();\r\n      if (graphNodes.length !== ops.length) {\r\n        throw new Error('The size of nodes and OPs do not match.');\r\n      }\r\n\r\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\r\n      this.reset();\r\n\r\n      // look for starter node(s)\r\n      this._starter = [];\r\n      this._ops.forEach((op, i) => {\r\n        let resolved = true;\r\n        for (const input of op.node.inputs) {\r\n          if (\r\n              !this._values[input]                                   // not an initialized input\r\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\r\n          ) {\r\n            resolved = false;\r\n            break;\r\n          }\r\n        }\r\n        if (resolved) {\r\n          this._starter.push(i);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this._values = this.graph.getValues().map(i => i.tensor);\r\n  }\r\n\r\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\r\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\r\n      // reset mediem result\r\n      this.reset();\r\n\r\n      // create inference handler\r\n      const inferenceHandler = sessionHandler.createInferenceHandler();\r\n\r\n      // populate inputs value\r\n      const graphInputs = this.graph.getInputIndices();\r\n      if (modelInputs.length !== graphInputs.length) {\r\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\r\n            modelInputs.length} expected: ${graphInputs.length}`);\r\n      }\r\n\r\n      modelInputs.forEach((input, i) => {\r\n        const index = graphInputs[i];\r\n        this._values[index] = input;\r\n      });\r\n\r\n      // prepare running sequence\r\n      const sequence: number[] = this._starter.slice(0);\r\n\r\n      // execution iterations\r\n      const graphValues = this.graph.getValues();\r\n      const graphNodes = this.graph.getNodes();\r\n\r\n      let rear = 0;\r\n      while (rear < sequence.length) {\r\n        const thisOpIndex = sequence[rear++];\r\n        const thisOp = this._ops[thisOpIndex];\r\n\r\n        // check input\r\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\r\n        if (inputList.indexOf(undefined) !== -1) {\r\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\r\n        }\r\n\r\n        // run\r\n        const inputTensors = inputList as Tensor[];\r\n        Logger.verbose(\r\n            'ExecPlan',\r\n            `Runing op:${thisOp.node.name} (${\r\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\r\n\r\n        const outputList = await this.profiler.event(\r\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\r\n\r\n        // check output\r\n        if (outputList.length !== thisOp.node.outputs.length) {\r\n          throw new Error('the size of output does not match model definition.');\r\n        }\r\n\r\n        // fill value\r\n        outputList.forEach((output, i) => {\r\n          const j = thisOp.node.outputs[i];\r\n          if (this._values[j]) {\r\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\r\n          }\r\n          this._values[j] = output;\r\n        });\r\n\r\n        // resolve downstream nodes\r\n        const downstreamNodes = new Set<number>();\r\n        outputList.forEach((output, i) => {\r\n          const j = thisOp.node.outputs[i];\r\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\r\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\r\n            let resolved = true;\r\n            for (const k of currentDownstreamNode.inputs) {\r\n              if (!this._values[k]) {\r\n                resolved = false;\r\n                break;\r\n              }\r\n            }\r\n            if (resolved) {\r\n              downstreamNodes.add(currentDownstreamNodeIndex);\r\n            }\r\n          }\r\n        });\r\n        sequence.push(...downstreamNodes);\r\n      }\r\n\r\n      const output: Tensor[] = [];\r\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\r\n        const outputIndex = this.graph.getOutputIndices()[i];\r\n        const outputTensor = this._values[outputIndex];\r\n        if (outputTensor === undefined) {\r\n          throw new Error(`required output [${outputIndex}] does not have value`);\r\n        }\r\n        if (outputIndex === 0) {\r\n          await outputTensor.getData();\r\n        } else {\r\n          // eslint-disable-next-line no-unused-expressions\r\n          outputTensor.data;\r\n        }\r\n        output.push(outputTensor);\r\n      }\r\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\r\n      inferenceHandler.dispose();\r\n      return output;\r\n    });\r\n  }\r\n\r\n  _values: Array<Tensor|undefined>;\r\n  _ops: KernelOp[];\r\n  _starter: number[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Attribute} from './attribute';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\nimport {Tensor} from './tensor';\r\nimport {LongUtil, ProtoUtil} from './util';\r\n\r\nexport declare namespace Graph {\r\n  export interface Shape {\r\n    readonly dims: readonly number[];\r\n  }\r\n  export interface ValueType {\r\n    readonly tensorType: Tensor.DataType;\r\n    readonly shape: Shape;\r\n  }\r\n  export interface Value {\r\n    // the tensor data. empty for non-initialized inputs\r\n    readonly tensor?: Tensor;\r\n\r\n    // index to the Node where the value comes from. -1 for initializer.\r\n    readonly from: number;\r\n\r\n    // indices to the Nodes where the values go to.\r\n    readonly to: readonly number[];\r\n\r\n    // value type specification. empty for non-input values.\r\n    readonly type?: ValueType;\r\n  }\r\n  export interface Node {\r\n    // name of the node\r\n    readonly name: string;\r\n\r\n    // the operator type\r\n    readonly opType: string;\r\n\r\n    // indices to the Values where the inputs come from.\r\n    readonly inputs: readonly number[];\r\n\r\n    // indices to the Values where the outpus go to.\r\n    readonly outputs: readonly number[];\r\n\r\n    // the attributes that used by the operator\r\n    readonly attributes: Attribute;\r\n  }\r\n\r\n  /**\r\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\r\n   */\r\n  export interface Transformer {\r\n    removeAllIdentityNodes(): void;\r\n    removeAllDropoutNodes(): void;\r\n    fuseConvActivationNodes(): void;\r\n    // TODO: add generic functions to manipulate the graph\r\n  }\r\n\r\n  // an initializer can use transformer to transform the graph\r\n  export interface Initializer {\r\n    transformGraph(transformer: Transformer): void;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport interface Graph {\r\n  getInputIndices(): readonly number[];\r\n  getInputNames(): readonly string[];\r\n  getOutputIndices(): readonly number[];\r\n  getOutputNames(): readonly string[];\r\n  getValues(): readonly Graph.Value[];\r\n  getNodes(): readonly Graph.Node[];\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\r\nexport const Graph = {\r\n  /**\r\n   * construct a graph from a graph protobuf type\r\n   */\r\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\r\n      new GraphImpl(graphProto, initializer),\r\n};\r\n\r\nclass Value implements Graph.Value {\r\n  constructor(valueInfo?: onnx.IValueInfoProto) {\r\n    this._from = undefined;\r\n    this._to = [];\r\n    this.tensor = undefined;\r\n    this.type = undefined;\r\n\r\n    if (valueInfo) {\r\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\r\n    }\r\n  }\r\n\r\n  _from?: number;  // -1 represent from initializer\r\n  get from() {\r\n    return this._from!;\r\n  }\r\n  _to: number[];\r\n  get to() {\r\n    return this._to;\r\n  }\r\n  type?: Graph.ValueType;\r\n  tensor?: Tensor;\r\n}\r\n\r\nclass Node implements Graph.Node {\r\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\r\n    if (_nodeProto instanceof onnx.NodeProto) {\r\n      this.name = _nodeProto.name;\r\n      this.opType = _nodeProto.opType;\r\n      this.attributes = new Attribute(_nodeProto.attribute);\r\n    } else if (_nodeProto instanceof ortFbs.Node) {\r\n      this.name = name ?? _nodeProto.name()!;\r\n      this.opType = _nodeProto.opType()!;\r\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\r\n    }\r\n\r\n    this.inputs = [];\r\n    this.outputs = [];\r\n    this.executeNode = true;\r\n  }\r\n\r\n  name: string;\r\n  opType: string;\r\n  inputs: number[];\r\n  outputs: number[];\r\n  attributes: Attribute;\r\n  executeNode: boolean;\r\n}\r\n\r\nclass GraphImpl implements Graph, Graph.Transformer {\r\n  private _allData: Value[];\r\n\r\n  private _allInputIndices: number[];\r\n  private _allInputNames: string[];\r\n\r\n  private _allOutputIndices: number[];\r\n  private _allOutputNames: string[];\r\n\r\n  private _nodes: Node[];\r\n\r\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\r\n    if (!graph) {\r\n      throw new TypeError('graph is empty');\r\n    }\r\n\r\n    // build the graph - will throw exceptions if something fatal is detected\r\n    this.buildGraph(graph);\r\n\r\n    // execute any transformation logic for the graph (if applicable)\r\n    this.transformGraph(graphInitializer);\r\n\r\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\r\n    this.checkIsAcyclic();\r\n  }\r\n\r\n  getInputIndices(): readonly number[] {\r\n    return this._allInputIndices;\r\n  }\r\n\r\n  getInputNames(): readonly string[] {\r\n    return this._allInputNames;\r\n  }\r\n\r\n  getOutputIndices(): readonly number[] {\r\n    return this._allOutputIndices;\r\n  }\r\n\r\n  getOutputNames(): readonly string[] {\r\n    return this._allOutputNames;\r\n  }\r\n\r\n  getValues(): readonly Graph.Value[] {\r\n    return this._allData;\r\n  }\r\n\r\n  getNodes(): readonly Graph.Node[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\r\n    // build the graph - will throw exceptions if something fatal is detected\r\n    if (graph instanceof onnx.GraphProto) {\r\n      this.buildGraphFromOnnxFormat(graph);\r\n    } else if (graph instanceof ortFbs.Graph) {\r\n      this.buildGraphFromOrtFormat(graph);\r\n    } else {\r\n      throw new TypeError('Graph type is not supported.');\r\n    }\r\n  }\r\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\r\n    const dataIndices = new Map<string, number>();\r\n    this._allData = [];\r\n\r\n    this._allInputIndices = [];\r\n    this._allInputNames = [];\r\n\r\n    this._allOutputIndices = [];\r\n    this._allOutputNames = [];\r\n\r\n    this._nodes = [];\r\n\r\n    const nodesIndices = new Map<string, number>();\r\n\r\n    // scan all inputs\r\n    if (!graph.input) {\r\n      throw new Error('missing information in graph: input');\r\n    }\r\n    const inputValueNames = [];\r\n    for (const i of graph.input) {\r\n      if (dataIndices.has(i.name!)) {\r\n        throw new Error(`duplicated input name: ${i.name}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value(i)) - 1;\r\n      dataIndices.set(i.name!, currentIndex);\r\n      inputValueNames.push(i.name!);\r\n    }\r\n\r\n    // scan all initializers\r\n    if (!graph.initializer) {\r\n      throw new Error('missing information in graph: initializer');\r\n    }\r\n    for (const i of graph.initializer) {\r\n      let index = dataIndices.get(i.name!);\r\n      if (index === undefined) {\r\n        const value = new Value();\r\n        value.type = {\r\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\r\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\r\n        };\r\n        index = this._allData.push(value) - 1;\r\n        dataIndices.set(i.name!, index);\r\n      }\r\n      this._allData[index]._from = -1;\r\n      this._allData[index].tensor = Tensor.fromProto(i);\r\n    }\r\n\r\n    // filter out input indices\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      if (!this._allData[i].tensor) {\r\n        this._allInputIndices.push(i);\r\n        this._allInputNames.push(inputValueNames[i]);\r\n      }\r\n    }\r\n\r\n    // scan all outputs\r\n    if (!graph.output) {\r\n      throw new Error('missing information in graph: output');\r\n    }\r\n    for (const i of graph.output) {\r\n      if (dataIndices.has(i.name!)) {\r\n        throw new Error(`duplicated output name: ${i.name}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value(i)) - 1;\r\n      dataIndices.set(i.name!, currentIndex);\r\n      this._allOutputIndices.push(currentIndex);\r\n      this._allOutputNames.push(i.name!);\r\n    }\r\n\r\n    // scan all nodes\r\n    if (!graph.node) {\r\n      throw new Error('missing information in graph: node');\r\n    }\r\n    for (const nodeProto of graph.node) {\r\n      if (!nodeProto.name) {\r\n        // assign a name to the node if it doesn't have one\r\n        for (let pick = 0;; pick++) {\r\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\r\n          if (!nodesIndices.has(name)) {\r\n            nodeProto.name = name;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nodesIndices.has(nodeProto.name)) {\r\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\r\n      }\r\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\r\n      nodesIndices.set(nodeProto.name, currentIndex);\r\n    }\r\n\r\n    // scan node's outputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.node[i];\r\n      if (!nodeProto.output) {\r\n        throw new Error(`missing output for node: ${nodeProto.name}`);\r\n      }\r\n      for (const output of nodeProto.output) {\r\n        let dataIndex = dataIndices.get(output);\r\n        if (typeof dataIndex === 'undefined') {\r\n          dataIndex = this._allData.push(new Value()) - 1;\r\n          dataIndices.set(output, dataIndex);\r\n        }\r\n        node.outputs.push(dataIndex);\r\n\r\n        if (this._allData[dataIndex]._from !== undefined) {\r\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\r\n        }\r\n        this._allData[dataIndex]._from = i;\r\n\r\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\r\n        // operator and ignore the node from the graph\r\n        if (nodeProto.opType === 'Constant') {\r\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\r\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\r\n          }\r\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\r\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\r\n          }\r\n          node.outputs.pop();\r\n          node.executeNode = false;\r\n\r\n          this._allData[dataIndex]._from = -1;\r\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\r\n        }\r\n      }\r\n    }\r\n\r\n    // scan node's inputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.node[i];\r\n\r\n      if (!nodeProto.input) {\r\n        throw new Error(`missing input for node: ${nodeProto.name}`);\r\n      }\r\n      for (const input of nodeProto.input) {\r\n        const dataIndex = dataIndices.get(input);\r\n        if (typeof dataIndex === 'undefined') {\r\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\r\n        }\r\n        node.inputs.push(dataIndex);\r\n\r\n        this._allData[dataIndex]._to.push(i);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\r\n    const dataIndices = new Map<string, number>();\r\n    this._allData = [];\r\n\r\n    this._allInputIndices = [];\r\n    this._allInputNames = [];\r\n\r\n    this._allOutputIndices = [];\r\n    this._allOutputNames = [];\r\n\r\n    this._nodes = [];\r\n\r\n    const nodesIndices = new Map<string, number>();\r\n\r\n    // scan all inputs\r\n    const inputValueNames = [];\r\n    for (let i = 0; i < graph.inputsLength(); i++) {\r\n      const inputName = graph.inputs(i);\r\n      if (dataIndices.has(inputName)) {\r\n        throw new Error(`duplicated input name: ${inputName}`);\r\n      }\r\n      // Find the input typeInfo from nodeargs\r\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\r\n        if (graph.nodeArgs(j)?.name() === inputName) {\r\n          const value = new Value();\r\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\r\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\r\n            throw new Error('Unexpected value type for the nodeArg.');\r\n          }\r\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\r\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\r\n          const shape = valueInfo.shape()!;\r\n          const dims = [];\r\n          for (let k = 0; k < shape.dimLength()!; k++) {\r\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\r\n          }\r\n          value.type = {shape: {dims}, tensorType: type};\r\n          const currentIndex = this._allData.push(value) - 1;\r\n          dataIndices.set(inputName, currentIndex);\r\n          inputValueNames.push(inputName);\r\n        }\r\n      }\r\n    }\r\n    // check initializers\r\n    for (let i = 0; i < graph.initializersLength(); i++) {\r\n      const initializer = graph.initializers(i)!;\r\n      let index = dataIndices.get(initializer.name()!);\r\n      if (index === undefined) {\r\n        const value = new Value();\r\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\r\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\r\n        value.type = {shape: {dims}, tensorType: type};\r\n        index = this._allData.push(value) - 1;\r\n        dataIndices.set(initializer.name()!, index);\r\n      }\r\n      this._allData[index]._from = -1;\r\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\r\n    }\r\n\r\n    // filter out input indices\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      if (!this._allData[i].tensor) {\r\n        this._allInputIndices.push(i);\r\n        this._allInputNames.push(inputValueNames[i]);\r\n      }\r\n    }\r\n\r\n    // scan all outputs\r\n    for (let i = 0; i < graph.outputsLength(); i++) {\r\n      const outputName = graph.outputs(i);\r\n      if (dataIndices.has(outputName)) {\r\n        throw new Error(`duplicated output name: ${outputName}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value()) - 1;\r\n      dataIndices.set(outputName, currentIndex);\r\n      this._allOutputIndices.push(currentIndex);\r\n      this._allOutputNames.push(outputName);\r\n    }\r\n\r\n    // scan all nodes\r\n    if (!graph.nodes) {\r\n      throw new Error('missing information in graph: node');\r\n    }\r\n    for (let i = 0; i < graph.nodesLength(); i++) {\r\n      const nodeProto = graph.nodes(i);\r\n      let name = nodeProto!.name();\r\n      if (!name) {\r\n        // assign a name to the node if it doesn't have one\r\n        for (let pick = 0;; pick++) {\r\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\r\n          if (!nodesIndices.has(name)) {\r\n            // an unique name is found. break.\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nodesIndices.has(name)) {\r\n        throw new Error(`duplicated node name: ${name}`);\r\n      }\r\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\r\n      nodesIndices.set(name, currentIndex);\r\n    }\r\n\r\n    // scan node's outputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.nodes(i);\r\n      if (nodeProto == null) {\r\n        throw new Error(`No node exists at index ${i}`);\r\n      }\r\n      if (nodeProto?.outputsLength() === 0) {\r\n        throw new Error(`missing output for node: ${nodeProto.name}`);\r\n      }\r\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\r\n        const output = nodeProto?.outputs(j);\r\n        let dataIndex = dataIndices.get(output);\r\n        if (typeof dataIndex === 'undefined') {\r\n          dataIndex = this._allData.push(new Value()) - 1;\r\n          dataIndices.set(output, dataIndex);\r\n        }\r\n        node.outputs.push(dataIndex);\r\n\r\n        if (this._allData[dataIndex]._from !== undefined) {\r\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\r\n        }\r\n        this._allData[dataIndex]._from = i;\r\n\r\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\r\n        // operator and ignore the node from the graph\r\n        if (nodeProto.opType() === 'Constant') {\r\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\r\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\r\n          }\r\n          if (nodeProto.outputsLength() !== 1) {\r\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\r\n          }\r\n          node.outputs.pop();\r\n          node.executeNode = false;\r\n\r\n          this._allData[dataIndex]._from = -1;\r\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\r\n        }\r\n      }\r\n    }\r\n\r\n    // scan node's inputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.nodes(i)!;\r\n\r\n      if (nodeProto.inputsLength() === 0) {\r\n        throw new Error(`missing input for node: ${nodeProto.name}`);\r\n      }\r\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\r\n        const input = nodeProto.inputs(j)!;\r\n        const dataIndex = dataIndices.get(input);\r\n        if (typeof dataIndex === 'undefined') {\r\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\r\n        }\r\n        node.inputs.push(dataIndex);\r\n\r\n        this._allData[dataIndex]._to.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkIsAcyclic() {\r\n    // go through the graph and check for cycles or other fatal inconsistencies\r\n    const starters: Set<number> = new Set<number>();\r\n    this._allInputIndices.forEach(i => {\r\n      const data = this._allData[i];\r\n      data._to.forEach(j => {\r\n        starters.add(j);\r\n      });\r\n    });\r\n\r\n    // Iterative DFS to check for cycles\r\n    const nodesStack = Array.from(starters);\r\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\r\n\r\n    while (nodesStack.length > 0) {\r\n      const nodeIndex = nodesStack.pop()!;\r\n      // this node has now been processed completely. Mark this node 'black' to denote this.\r\n      if (nodesState[nodeIndex] === 'gray') {\r\n        nodesState[nodeIndex] = 'black';\r\n      } else {\r\n        // this node is under processing stage. mark this node 'gray' to denote this.\r\n        nodesStack.push(nodeIndex);\r\n        nodesState[nodeIndex] = 'gray';\r\n\r\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\r\n          const data = this._allData[outgoingEdgeIndex];\r\n          if (typeof data.tensor !== 'undefined') {\r\n            throw new Error('node outputs should not be initialized');\r\n          }\r\n          if (data._from !== nodeIndex) {\r\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\r\n          }\r\n          data._to.forEach((downstreamNodeIndex) => {\r\n            // back edge found - cyclic\r\n            if (nodesState[downstreamNodeIndex] === 'gray') {\r\n              throw new Error('model graph is cyclic');\r\n            }\r\n            // tree edge found - continue processing by adding it to stack\r\n            else if (nodesState[downstreamNodeIndex] === 'white') {\r\n              nodesStack.push(downstreamNodeIndex);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\r\n    // apply common transform\r\n    this.removeAllIdentityNodes();\r\n    this.removeAllDropoutNodes();\r\n    this.fuseConvActivationNodes();\r\n    // apply initializer specific transform\r\n    if (graphInitializer) {\r\n      graphInitializer.transformGraph(this);\r\n    }\r\n\r\n    // finalize graph\r\n    this.finalizeGraph();\r\n  }\r\n\r\n  /**\r\n   * finalize the graph.\r\n   *\r\n   * this function should be called after all the transformation completed.\r\n   * this function removes all unnecessary nodes and values from the graph\r\n   */\r\n  finalizeGraph() {\r\n    let offset = 0;\r\n    // delete all nodes that are not being executed\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (!this._nodes[i].executeNode) {\r\n        // delete this node and shift all subsequent nodes up\r\n        offset++;\r\n        // delete all output values\r\n        this._nodes[i].outputs.forEach(ind => {\r\n          this._allData[ind]._from = -2;\r\n        });\r\n        this._nodes.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      if (offset > 0) {\r\n        // update the value table\r\n        this._nodes[i].inputs.forEach(value => {\r\n          const ind = this._allData[value]._to.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allData[value]._to[ind] = i;\r\n          }\r\n        });\r\n        this._nodes[i].outputs.forEach(value => {\r\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\r\n            this._allData[value]._from! = i;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    offset = 0;\r\n    // delete all values that are not being referenced\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      // if current value is neither linked to next node, nor an output value, remove it.\r\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\r\n        offset++;\r\n        this._allData.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      if (offset > 0) {\r\n        let ind = -1;\r\n        // if current value is neither an input value nor an initializer, find the node it's\r\n        // coming from and update the corresponding node output\r\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\r\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._nodes[this._allData[i].from].outputs[ind] = i;\r\n          }\r\n        } else {\r\n          // if current value is an input value, update its reference in inputIndices\r\n          ind = this._allInputIndices.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allInputIndices[ind] = i;\r\n          }\r\n        }\r\n\r\n        // find the node that the current value is linking to and update its input reference\r\n        this._allData[i].to.forEach(node => {\r\n          ind = this._nodes[node].inputs.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._nodes[node].inputs[ind] = i;\r\n          }\r\n        });\r\n        if (this._allData[i].to.length === 0) {\r\n          // if current value is a graph output, update its reference in outputIndices\r\n          ind = this._allOutputIndices.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allOutputIndices[ind] = i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\r\n   * @param nodeIndex The index of node to be deleted\r\n   */\r\n  private deleteNode(nodeIndex: number) {\r\n    const node = this._nodes[nodeIndex];\r\n    if (node.inputs.length > 1) {\r\n      throw new Error('Node deletion with multiple inputs is not supported. ');\r\n    }\r\n    if (node.outputs.length > 1) {\r\n      for (let i = 1; i < node.outputs.length; i++) {\r\n        if (this._allData[node.outputs[i]].to.length > 0) {\r\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\r\n        }\r\n      }\r\n    }\r\n\r\n    // this node wil not be executed\r\n    node.executeNode = false;\r\n    const inputValueIndex = node.inputs[0];\r\n    const outputValueIndex = node.outputs[0];\r\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\r\n\r\n    // remove this node from the to property of the input Value\r\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\r\n    // should not happen\r\n    if (delIndex === -1) {\r\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\r\n    }\r\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\r\n\r\n    // clear node indices consuming this output Value\r\n    this._allData[outputValueIndex]._to = [];\r\n\r\n    // if the output of this node is a graph output, adjust the index appropriately\r\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\r\n    if (index !== -1) {\r\n      this._allOutputIndices[index] = inputValueIndex;\r\n    }\r\n\r\n    // override the inputs for nodes consuming this node's output with the input to this node\r\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\r\n      for (const nodeIndex of nodesConsumingOutput) {\r\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\r\n        // should not happen\r\n        if (replaceIndex === -1) {\r\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\r\n        }\r\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\r\n        this._allData[inputValueIndex].to.push(nodeIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAllDropoutNodes() {\r\n    let nodeIndex = 0;\r\n    for (const node of this._nodes) {\r\n      // weed out 'Dropout' nodes so that no time is wasted in execution\r\n      if (node.opType === 'Dropout') {\r\n        // the node should have exactly 1 input and 1 or 2 outputs\r\n        if (node.inputs.length !== 1) {\r\n          throw new Error('Dropout nodes should only contain one input. ');\r\n        }\r\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\r\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\r\n        }\r\n        // the second output should not be referenced by any other node\r\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\r\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\r\n        }\r\n        this.deleteNode(nodeIndex);\r\n      }\r\n      nodeIndex++;\r\n    }\r\n  }\r\n\r\n  removeAllIdentityNodes() {\r\n    let nodeIndex = 0;\r\n    for (const node of this._nodes) {\r\n      // weed out 'Identity' nodes so that no time is wasted in execution\r\n      if (node.opType === 'Identity') {\r\n        this.deleteNode(nodeIndex);\r\n      }\r\n      nodeIndex++;\r\n    }\r\n  }\r\n\r\n  isActivation(n: Node): boolean {\r\n    switch (n.opType) {\r\n      // TODO: add other activation methods\r\n      case 'Relu':\r\n      case 'Sigmoid':\r\n      case 'Clip':\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  fuseConvActivationNodes() {\r\n    for (const node of this._nodes) {\r\n      if (node.opType === 'Conv') {\r\n        const next = this._allData[node.outputs[0]]._to;\r\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\r\n          const child = this._nodes[next[0]];\r\n          node.attributes.set('__internal_activation', 'string', (child.opType));\r\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\r\n          if (child.opType === 'Clip') {\r\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\r\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\r\n          }\r\n          this.deleteNode(next[0]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Env} from 'onnxruntime-common';\r\n\r\nimport {WebGLContext} from './backends/webgl/webgl-context';\r\n\r\nexport declare namespace Logger {\r\n  export interface SeverityTypeMap {\r\n    verbose: 'v';\r\n    info: 'i';\r\n    warning: 'w';\r\n    error: 'e';\r\n    fatal: 'f';\r\n  }\r\n\r\n  export type Severity = keyof SeverityTypeMap;\r\n\r\n  export type Provider = 'none'|'console';\r\n\r\n  /**\r\n   * Logging config that used to control the behavior of logger\r\n   */\r\n  export interface Config {\r\n    /**\r\n     * Specify the logging provider. 'console' by default\r\n     */\r\n    provider?: Provider;\r\n    /**\r\n     * Specify the minimal logger serverity. 'warning' by default\r\n     */\r\n    minimalSeverity?: Logger.Severity;\r\n    /**\r\n     * Whether to output date time in log. true by default\r\n     */\r\n    logDateTime?: boolean;\r\n    /**\r\n     * Whether to output source information (Not yet supported). false by default\r\n     */\r\n    logSourceLocation?: boolean;\r\n  }\r\n\r\n  export interface CategorizedLogger {\r\n    verbose(content: string): void;\r\n    info(content: string): void;\r\n    warning(content: string): void;\r\n    error(content: string): void;\r\n    fatal(content: string): void;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport interface Logger {\r\n  (category: string): Logger.CategorizedLogger;\r\n\r\n  verbose(content: string): void;\r\n  verbose(category: string, content: string): void;\r\n  info(content: string): void;\r\n  info(category: string, content: string): void;\r\n  warning(content: string): void;\r\n  warning(category: string, content: string): void;\r\n  error(content: string): void;\r\n  error(category: string, content: string): void;\r\n  fatal(content: string): void;\r\n  fatal(category: string, content: string): void;\r\n\r\n  /**\r\n   * Reset the logger configuration.\r\n   * @param config specify an optional default config\r\n   */\r\n  reset(config?: Logger.Config): void;\r\n  /**\r\n   * Set the logger's behavior on the given category\r\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\r\n   * '' is specified, the default behavior will be updated.\r\n   * @param config the config object to indicate the logger's behavior\r\n   */\r\n  set(category: string, config: Logger.Config): void;\r\n\r\n  /**\r\n   * Set the logger's behavior from ort-common env\r\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\r\n   */\r\n  setWithEnv(env: Env): void;\r\n}\r\n\r\ninterface LoggerProvider {\r\n  log(severity: Logger.Severity, content: string, category?: string): void;\r\n}\r\nclass NoOpLoggerProvider implements LoggerProvider {\r\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\r\n    // do nothing\r\n  }\r\n}\r\nclass ConsoleLoggerProvider implements LoggerProvider {\r\n  log(severity: Logger.Severity, content: string, category?: string) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\r\n  }\r\n\r\n  private color(severity: Logger.Severity) {\r\n    switch (severity) {\r\n      case 'verbose':\r\n        return '\\x1b[34;40mv\\x1b[0m';\r\n      case 'info':\r\n        return '\\x1b[32mi\\x1b[0m';\r\n      case 'warning':\r\n        return '\\x1b[30;43mw\\x1b[0m';\r\n      case 'error':\r\n        return '\\x1b[31;40me\\x1b[0m';\r\n      case 'fatal':\r\n        return '\\x1b[101mf\\x1b[0m';\r\n      default:\r\n        throw new Error(`unsupported severity: ${severity}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst SEVERITY_VALUE = {\r\n  verbose: 1000,\r\n  info: 2000,\r\n  warning: 4000,\r\n  error: 5000,\r\n  fatal: 6000\r\n};\r\n\r\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\r\n  ['none']: new NoOpLoggerProvider(),\r\n  ['console']: new ConsoleLoggerProvider()\r\n};\r\nconst LOGGER_DEFAULT_CONFIG = {\r\n  provider: 'console',\r\n  minimalSeverity: 'warning',\r\n  logDateTime: true,\r\n  logSourceLocation: false\r\n};\r\nlet LOGGER_CONFIG_MAP:\r\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\r\n\r\nfunction log(category: string): Logger.CategorizedLogger;\r\nfunction log(severity: Logger.Severity, content: string): void;\r\nfunction log(severity: Logger.Severity, category: string, content: string): void;\r\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\r\nfunction log(\r\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\r\n  if (arg1 === undefined) {\r\n    // log(category: string): Logger.CategorizedLogger;\r\n    return createCategorizedLogger(arg0);\r\n  } else if (arg2 === undefined) {\r\n    // log(severity, content);\r\n    logInternal(arg0 as Logger.Severity, arg1, 1);\r\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\r\n    // log(severity, content, stack)\r\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\r\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\r\n    // log(severity, category, content)\r\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\r\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\r\n    // log(severity, category, content, stack)\r\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\r\n  } else {\r\n    throw new TypeError('input is valid');\r\n  }\r\n}\r\n\r\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\r\n  return {\r\n    verbose: log.verbose.bind(null, category),\r\n    info: log.info.bind(null, category),\r\n    warning: log.warning.bind(null, category),\r\n    error: log.error.bind(null, category),\r\n    fatal: log.fatal.bind(null, category)\r\n  };\r\n}\r\n\r\n// NOTE: argument 'category' is put the last parameter beacause typescript\r\n// doesn't allow optional argument put in front of required argument. This\r\n// order is different from a usual logging API.\r\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\r\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\r\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\r\n    return;\r\n  }\r\n\r\n  if (config.logDateTime) {\r\n    content = `${new Date().toISOString()}|${content}`;\r\n  }\r\n\r\n  if (config.logSourceLocation) {\r\n    // TODO: calculate source location from 'stack'\r\n  }\r\n\r\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nnamespace log {\r\n  export function verbose(content: string): void;\r\n  export function verbose(category: string, content: string): void;\r\n  export function verbose(arg0: string, arg1?: string) {\r\n    log('verbose', arg0, arg1);\r\n  }\r\n  export function info(content: string): void;\r\n  export function info(category: string, content: string): void;\r\n  export function info(arg0: string, arg1?: string) {\r\n    log('info', arg0, arg1);\r\n  }\r\n  export function warning(content: string): void;\r\n  export function warning(category: string, content: string): void;\r\n  export function warning(arg0: string, arg1?: string) {\r\n    log('warning', arg0, arg1);\r\n  }\r\n  export function error(content: string): void;\r\n  export function error(category: string, content: string): void;\r\n  export function error(arg0: string, arg1?: string) {\r\n    log('error', arg0, arg1);\r\n  }\r\n  export function fatal(content: string): void;\r\n  export function fatal(category: string, content: string): void;\r\n  export function fatal(arg0: string, arg1?: string) {\r\n    log('fatal', arg0, arg1);\r\n  }\r\n\r\n  export function reset(config?: Logger.Config): void {\r\n    LOGGER_CONFIG_MAP = {};\r\n    set('', config || {});\r\n  }\r\n  export function set(category: string, config: Logger.Config): void {\r\n    if (category === '*') {\r\n      reset(config);\r\n    } else {\r\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\r\n      LOGGER_CONFIG_MAP[category] = {\r\n        provider: config.provider || previousConfig.provider,\r\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\r\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\r\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\r\n                                                                      config.logSourceLocation\r\n      };\r\n    }\r\n\r\n    // TODO: we want to support wildcard or regex?\r\n  }\r\n\r\n  export function setWithEnv(env: Env): void {\r\n    const config: Logger.Config = {};\r\n    if (env.logLevel) {\r\n      config.minimalSeverity = env.logLevel as Logger.Severity;\r\n    }\r\n    set('', config);\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\r\nexport const Logger: Logger = log;\r\n\r\nexport declare namespace Profiler {\r\n  export interface Config {\r\n    maxNumberEvents?: number;\r\n    flushBatchSize?: number;\r\n    flushIntervalInMilliseconds?: number;\r\n  }\r\n\r\n  export type EventCategory = 'session'|'node'|'op'|'backend';\r\n\r\n  export interface Event {\r\n    end(): void|Promise<void>;\r\n  }\r\n}\r\n// TODO\r\n// class WebGLEvent implements Profiler.Event {}\r\n\r\nclass Event implements Profiler.Event {\r\n  constructor(\r\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\r\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\r\n\r\n  end() {\r\n    return this.endCallback(this);\r\n  }\r\n\r\n  async checkTimer(): Promise<number> {\r\n    if (this.ctx === undefined || this.timer === undefined) {\r\n      throw new Error('No webgl timer found');\r\n    } else {\r\n      this.ctx.endTimer();\r\n      return this.ctx.waitForQueryAndGetTime(this.timer);\r\n    }\r\n  }\r\n}\r\n\r\nclass EventRecord {\r\n  constructor(\r\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\r\n}\r\n\r\nexport class Profiler {\r\n  static create(config?: Profiler.Config): Profiler {\r\n    if (config === undefined) {\r\n      return new this();\r\n    }\r\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\r\n  }\r\n\r\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\r\n    this._started = false;\r\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\r\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\r\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\r\n  }\r\n\r\n  // start profiling\r\n  start() {\r\n    this._started = true;\r\n    this._timingEvents = [];\r\n    this._flushTime = now();\r\n    this._flushPointer = 0;\r\n  }\r\n\r\n  // stop profiling\r\n  stop() {\r\n    this._started = false;\r\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\r\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\r\n    }\r\n  }\r\n\r\n  // create an event scope for the specific function\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\r\n\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\r\n      |Promise<T> {\r\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\r\n    let isPromise = false;\r\n\r\n    const res = func();\r\n\r\n    // we consider a then-able object is a promise\r\n    if (res && typeof (res as Promise<T>).then === 'function') {\r\n      isPromise = true;\r\n      return new Promise<T>((resolve, reject) => {\r\n        (res as Promise<T>)\r\n            .then(\r\n                async value => {  // fulfilled\r\n                  if (event) {\r\n                    await event.end();\r\n                  }\r\n                  resolve(value);\r\n                },\r\n                async reason => {  // rejected\r\n                  if (event) {\r\n                    await event.end();\r\n                  }\r\n                  reject(reason);\r\n                });\r\n      });\r\n    }\r\n    if (!isPromise && event) {\r\n      const eventRes = event.end();\r\n      if (eventRes && typeof eventRes.then === 'function') {\r\n        return new Promise<T>((resolve, reject) => {\r\n          (eventRes).then(\r\n              () => {  // fulfilled\r\n                resolve(res);\r\n              },\r\n              (reason) => {  // rejected\r\n                reject(reason);\r\n              });\r\n        });\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // begin an event\r\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\r\n    if (!this._started) {\r\n      throw new Error('profiler is not started yet');\r\n    }\r\n    if (ctx === undefined) {\r\n      const startTime = now();\r\n      this.flush(startTime);\r\n      return new Event(category, name, startTime, e => this.endSync(e));\r\n    } else {\r\n      const timer: WebGLQuery = ctx.beginTimer();\r\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\r\n    }\r\n  }\r\n\r\n  // end the specific event\r\n  private async end(event: Event): Promise<void> {\r\n    const endTime: number = await event.checkTimer();\r\n    if (this._timingEvents.length < this._maxNumberEvents) {\r\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\r\n      this.flush(endTime);\r\n    }\r\n  }\r\n\r\n  private endSync(event: Event): void {\r\n    const endTime: number = now();\r\n    if (this._timingEvents.length < this._maxNumberEvents) {\r\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\r\n      this.flush(endTime);\r\n    }\r\n  }\r\n\r\n  private logOneEvent(event: EventRecord) {\r\n    Logger.verbose(\r\n        `Profiler.${event.category}`,\r\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\r\n  }\r\n\r\n  private flush(currentTime: number) {\r\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\r\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\r\n      // should flush when either batch size accumlated or interval elepsed\r\n\r\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\r\n           this._flushPointer < this._timingEvents.length;\r\n           this._flushPointer++) {\r\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\r\n      }\r\n\r\n      this._flushTime = now();\r\n    }\r\n  }\r\n\r\n  get started() {\r\n    return this._started;\r\n  }\r\n  private _started = false;\r\n  private _timingEvents: EventRecord[];\r\n\r\n  private readonly _maxNumberEvents: number;\r\n\r\n  private readonly _flushBatchSize: number;\r\n  private readonly _flushIntervalInMilliseconds: number;\r\n\r\n  private _flushTime: number;\r\n  private _flushPointer = 0;\r\n}\r\n\r\n/**\r\n * returns a number to represent the current timestamp in a resolution as high as possible.\r\n */\r\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Graph} from './graph';\r\nimport {OpSet} from './opset';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\nimport {LongUtil} from './util';\r\n\r\nexport class Model {\r\n  // empty model\r\n  constructor() {}\r\n\r\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\r\n    if (!isOrtFormat) {\r\n      // isOrtFormat === false || isOrtFormat === undefined\r\n      try {\r\n        this.loadFromOnnxFormat(buf, graphInitializer);\r\n        return;\r\n      } catch (e) {\r\n        if (isOrtFormat !== undefined) {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.loadFromOrtFormat(buf, graphInitializer);\r\n  }\r\n\r\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\r\n    const modelProto = onnx.ModelProto.decode(buf);\r\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\r\n    if (irVersion < 3) {\r\n      throw new Error('only support ONNX model with IR_VERSION>=3');\r\n    }\r\n\r\n    this._opsets =\r\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\r\n\r\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\r\n  }\r\n\r\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\r\n    const fb = new flatbuffers.ByteBuffer(buf);\r\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\r\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\r\n    if (irVersion < 3) {\r\n      throw new Error('only support ONNX model with IR_VERSION>=3');\r\n    }\r\n    this._opsets = [];\r\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\r\n      const opsetId = ortModel.opsetImport(i)!;\r\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\r\n    }\r\n\r\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\r\n  }\r\n\r\n  private _graph: Graph;\r\n  get graph(): Graph {\r\n    return this._graph;\r\n  }\r\n\r\n  private _opsets: OpSet[];\r\n  get opsets(): readonly OpSet[] {\r\n    return this._opsets;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceHandler} from './backend';\r\nimport {Graph} from './graph';\r\nimport {Tensor} from './tensor';\r\n\r\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\r\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\r\n\r\nexport interface Operator {\r\n  readonly impl: OperatorImplementation<unknown>;\r\n  readonly context: Graph.Node|unknown;\r\n}\r\n\r\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\r\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\r\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\r\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from './graph';\r\nimport {OperatorImplementation, OperatorInitialization} from './operators';\r\n\r\nexport interface OpSet {\r\n  domain: string;\r\n  version: number;\r\n}\r\n\r\nexport declare namespace OpSet {\r\n  /**\r\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\r\n   */\r\n  type Domain = ''|'ai.onnx.ml';\r\n\r\n  /**\r\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\r\n   * operatorInitialization (optional)\r\n   */\r\n  type ResolveRule = [\r\n    string, Domain, string, OperatorImplementation<Graph.Node>\r\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\r\n}\r\n\r\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\r\n  for (const rule of rules) {\r\n    const opType = rule[0];\r\n    const domain = rule[1];\r\n    const versionSelector = rule[2];\r\n    const opImpl = rule[3];\r\n    const opInit = rule[4];\r\n\r\n    if (node.opType === opType) {  // operator type matches\r\n      for (const opset of opsets) {\r\n        // opset '' and 'ai.onnx' are considered the same.\r\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\r\n          if (matchSelector(opset.version, versionSelector)) {\r\n            return {opImpl, opInit};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\r\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\r\n}\r\n\r\nfunction matchSelector(version: number, selector: string): boolean {\r\n  if (selector.endsWith('+')) {\r\n    // minimum version match ('7+' expects version>=7)\r\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\r\n    return !isNaN(rangeStart) && rangeStart <= version;\r\n  } else if (selector.split('-').length === 2) {\r\n    // range match ('6-8' expects 6<=version<=8)\r\n    const pair = selector.split('-');\r\n    const rangeStart = Number.parseInt(pair[0], 10);\r\n    const rangeEnd = Number.parseInt(pair[1], 10);\r\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\r\n  } else {\r\n    // exact match ('7' expects version===7)\r\n    return Number.parseInt(selector, 10) === version;\r\n  }\r\n}\r\n","// automatically generated by the FlatBuffers compiler, do not modify\r\n/* eslint-disable */\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum AttributeType {\r\n    UNDEFINED = 0,\r\n    FLOAT = 1,\r\n    INT = 2,\r\n    STRING = 3,\r\n    TENSOR = 4,\r\n    GRAPH = 5,\r\n    FLOATS = 6,\r\n    INTS = 7,\r\n    STRINGS = 8,\r\n    TENSORS = 9,\r\n    GRAPHS = 10,\r\n    SPARSE_TENSOR = 11,\r\n    SPARSE_TENSORS = 12\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum TensorDataType {\r\n    UNDEFINED = 0,\r\n    FLOAT = 1,\r\n    UINT8 = 2,\r\n    INT8 = 3,\r\n    UINT16 = 4,\r\n    INT16 = 5,\r\n    INT32 = 6,\r\n    INT64 = 7,\r\n    STRING = 8,\r\n    BOOL = 9,\r\n    FLOAT16 = 10,\r\n    DOUBLE = 11,\r\n    UINT32 = 12,\r\n    UINT64 = 13,\r\n    COMPLEX64 = 14,\r\n    COMPLEX128 = 15,\r\n    BFLOAT16 = 16\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum NodeType {Primitive = 0, Fused = 1}\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\r\n}\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Shape {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Shape\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Shape= obj\r\n     * @returns Shape\r\n     */\r\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\r\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Shape= obj\r\n     * @returns Shape\r\n     */\r\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Dimension= obj\r\n     * @returns onnxruntime.experimental.fbs.Dimension\r\n     */\r\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startShape(builder: flatbuffers.Builder) {\r\n      builder.startObject(1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimOffset\r\n     */\r\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, dimOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Shape.startShape(builder);\r\n      Shape.addDim(builder, dimOffset);\r\n      return Shape.endShape(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Dimension {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Dimension\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Dimension= obj\r\n     * @returns Dimension\r\n     */\r\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\r\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Dimension= obj\r\n     * @returns Dimension\r\n     */\r\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\r\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\r\n     */\r\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    denotation(): string|null;\r\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startDimension(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueOffset\r\n     */\r\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, valueOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset denotationOffset\r\n     */\r\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, denotationOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createDimension(\r\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\r\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Dimension.startDimension(builder);\r\n      Dimension.addValue(builder, valueOffset);\r\n      Dimension.addDenotation(builder, denotationOffset);\r\n      return Dimension.endDimension(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class DimensionValue {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns DimensionValue\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param DimensionValue= obj\r\n     * @returns DimensionValue\r\n     */\r\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\r\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param DimensionValue= obj\r\n     * @returns DimensionValue\r\n     */\r\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\r\n     */\r\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dimValue(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    dimParam(): string|null;\r\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startDimensionValue(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\r\n     */\r\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\r\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long dimValue\r\n     */\r\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\r\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimParamOffset\r\n     */\r\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimParamOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createDimensionValue(\r\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\r\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      DimensionValue.startDimensionValue(builder);\r\n      DimensionValue.addDimType(builder, dimType);\r\n      DimensionValue.addDimValue(builder, dimValue);\r\n      DimensionValue.addDimParam(builder, dimParamOffset);\r\n      return DimensionValue.endDimensionValue(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class TensorTypeAndShape {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TensorTypeAndShape= obj\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\r\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TensorTypeAndShape= obj\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\r\n        TensorTypeAndShape {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Shape= obj\r\n     * @returns onnxruntime.experimental.fbs.Shape|null\r\n     */\r\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\r\n     */\r\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset shapeOffset\r\n     */\r\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, shapeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTensorTypeAndShape(\r\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\r\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\r\n      TensorTypeAndShape.addElemType(builder, elemType);\r\n      TensorTypeAndShape.addShape(builder, shapeOffset);\r\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class MapType {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns MapType\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param MapType= obj\r\n     * @returns MapType\r\n     */\r\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\r\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param MapType= obj\r\n     * @returns MapType\r\n     */\r\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startMapType(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\r\n     */\r\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueTypeOffset\r\n     */\r\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, valueTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createMapType(\r\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\r\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      MapType.startMapType(builder);\r\n      MapType.addKeyType(builder, keyType);\r\n      MapType.addValueType(builder, valueTypeOffset);\r\n      return MapType.endMapType(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SequenceType {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SequenceType\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SequenceType= obj\r\n     * @returns SequenceType\r\n     */\r\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\r\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SequenceType= obj\r\n     * @returns SequenceType\r\n     */\r\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSequenceType(builder: flatbuffers.Builder) {\r\n      builder.startObject(1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset elemTypeOffset\r\n     */\r\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, elemTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SequenceType.startSequenceType(builder);\r\n      SequenceType.addElemType(builder, elemTypeOffset);\r\n      return SequenceType.endSequenceType(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class EdgeEnd {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns EdgeEnd\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndex(): number {\r\n      return this.bb!.readUint32(this.bb_pos);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    srcArgIndex(): number {\r\n      return this.bb!.readInt32(this.bb_pos + 4);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dstArgIndex(): number {\r\n      return this.bb!.readInt32(this.bb_pos + 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number node_index\r\n     * @param number src_arg_index\r\n     * @param number dst_arg_index\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createEdgeEnd(\r\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\r\n        dst_arg_index: number): flatbuffers.Offset {\r\n      builder.prep(4, 12);\r\n      builder.writeInt32(dst_arg_index);\r\n      builder.writeInt32(src_arg_index);\r\n      builder.writeInt32(node_index);\r\n      return builder.offset();\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class NodeEdge {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns NodeEdge\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param NodeEdge= obj\r\n     * @returns NodeEdge\r\n     */\r\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\r\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param NodeEdge= obj\r\n     * @returns NodeEdge\r\n     */\r\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndex(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\r\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\r\n     */\r\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\r\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\r\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\r\n     */\r\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\r\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startNodeEdge(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number nodeIndex\r\n     */\r\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\r\n      builder.addFieldInt32(0, nodeIndex, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputEdgesOffset\r\n     */\r\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(12, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputEdgesOffset\r\n     */\r\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(12, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createNodeEdge(\r\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\r\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      NodeEdge.startNodeEdge(builder);\r\n      NodeEdge.addNodeIndex(builder, nodeIndex);\r\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\r\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\r\n      return NodeEdge.endNodeEdge(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Node {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Node\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Node= obj\r\n     * @returns Node\r\n     */\r\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\r\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Node= obj\r\n     * @returns Node\r\n     */\r\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    sinceVersion(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    index(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    opType(): string|null;\r\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    opType(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.NodeType\r\n     */\r\n    type(): onnxruntime.experimental.fbs.NodeType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    executionProviderType(): string|null;\r\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    inputs(index: number): string;\r\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    outputs(index: number): string;\r\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Attribute= obj\r\n     * @returns onnxruntime.experimental.fbs.Attribute\r\n     */\r\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\r\n        |null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    attributesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    inputArgCounts(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputArgCountsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Int32Array\r\n     */\r\n    inputArgCountsArray(): Int32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ?\r\n          new Int32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    implicitInputs(index: number): string;\r\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    implicitInputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startNode(builder: flatbuffers.Builder) {\r\n      builder.startObject(13);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number sinceVersion\r\n     */\r\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\r\n      builder.addFieldInt32(3, sinceVersion, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number index\r\n     */\r\n    static addIndex(builder: flatbuffers.Builder, index: number) {\r\n      builder.addFieldInt32(4, index, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset opTypeOffset\r\n     */\r\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, opTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.NodeType type\r\n     */\r\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\r\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset executionProviderTypeOffset\r\n     */\r\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputsOffset\r\n     */\r\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, inputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputsOffset\r\n     */\r\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(9, outputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset attributesOffset\r\n     */\r\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(10, attributesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputArgCountsOffset\r\n     */\r\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset implicitInputsOffset\r\n     */\r\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createNode(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\r\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\r\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\r\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Node.startNode(builder);\r\n      Node.addName(builder, nameOffset);\r\n      Node.addDocString(builder, docStringOffset);\r\n      Node.addDomain(builder, domainOffset);\r\n      Node.addSinceVersion(builder, sinceVersion);\r\n      Node.addIndex(builder, index);\r\n      Node.addOpType(builder, opTypeOffset);\r\n      Node.addType(builder, type);\r\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\r\n      Node.addInputs(builder, inputsOffset);\r\n      Node.addOutputs(builder, outputsOffset);\r\n      Node.addAttributes(builder, attributesOffset);\r\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\r\n      Node.addImplicitInputs(builder, implicitInputsOffset);\r\n      return Node.endNode(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class ValueInfo {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns ValueInfo\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param ValueInfo= obj\r\n     * @returns ValueInfo\r\n     */\r\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\r\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param ValueInfo= obj\r\n     * @returns ValueInfo\r\n     */\r\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startValueInfo(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset typeOffset\r\n     */\r\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, typeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createValueInfo(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      ValueInfo.startValueInfo(builder);\r\n      ValueInfo.addName(builder, nameOffset);\r\n      ValueInfo.addDocString(builder, docStringOffset);\r\n      ValueInfo.addType(builder, typeOffset);\r\n      return ValueInfo.endValueInfo(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class TypeInfo {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns TypeInfo\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TypeInfo= obj\r\n     * @returns TypeInfo\r\n     */\r\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\r\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TypeInfo= obj\r\n     * @returns TypeInfo\r\n     */\r\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    denotation(): string|null;\r\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\r\n     */\r\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Table obj\r\n     * @returns ?flatbuffers.Table\r\n     */\r\n    value<T extends flatbuffers.Table>(obj: T): T|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTypeInfo(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset denotationOffset\r\n     */\r\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, denotationOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\r\n     */\r\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\r\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueOffset\r\n     */\r\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, valueOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTypeInfo(\r\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\r\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      TypeInfo.startTypeInfo(builder);\r\n      TypeInfo.addDenotation(builder, denotationOffset);\r\n      TypeInfo.addValueType(builder, valueType);\r\n      TypeInfo.addValue(builder, valueOffset);\r\n      return TypeInfo.endTypeInfo(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class OperatorSetId {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns OperatorSetId\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param OperatorSetId= obj\r\n     * @returns OperatorSetId\r\n     */\r\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\r\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param OperatorSetId= obj\r\n     * @returns OperatorSetId\r\n     */\r\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    version(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startOperatorSetId(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long version\r\n     */\r\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\r\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createOperatorSetId(\r\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\r\n      OperatorSetId.startOperatorSetId(builder);\r\n      OperatorSetId.addDomain(builder, domainOffset);\r\n      OperatorSetId.addVersion(builder, version);\r\n      return OperatorSetId.endOperatorSetId(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Tensor {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Tensor\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Tensor= obj\r\n     * @returns Tensor\r\n     */\r\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\r\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Tensor= obj\r\n     * @returns Tensor\r\n     */\r\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dims(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    rawData(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    rawDataLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Uint8Array\r\n     */\r\n    rawDataArray(): Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ?\r\n          new Uint8Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    stringData(index: number): string;\r\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    stringDataLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTensor(builder: flatbuffers.Builder) {\r\n      builder.startObject(6);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimsOffset\r\n     */\r\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\r\n     */\r\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset rawDataOffset\r\n     */\r\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, rawDataOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(1, data.length, 1);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt8(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(1, numElems, 1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset stringDataOffset\r\n     */\r\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, stringDataOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTensor(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\r\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Tensor.startTensor(builder);\r\n      Tensor.addName(builder, nameOffset);\r\n      Tensor.addDocString(builder, docStringOffset);\r\n      Tensor.addDims(builder, dimsOffset);\r\n      Tensor.addDataType(builder, dataType);\r\n      Tensor.addRawData(builder, rawDataOffset);\r\n      Tensor.addStringData(builder, stringDataOffset);\r\n      return Tensor.endTensor(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SparseTensor {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SparseTensor\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SparseTensor= obj\r\n     * @returns SparseTensor\r\n     */\r\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\r\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SparseTensor= obj\r\n     * @returns SparseTensor\r\n     */\r\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dims(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSparseTensor(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valuesOffset\r\n     */\r\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, valuesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset indicesOffset\r\n     */\r\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, indicesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimsOffset\r\n     */\r\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSparseTensor(\r\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\r\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SparseTensor.startSparseTensor(builder);\r\n      SparseTensor.addValues(builder, valuesOffset);\r\n      SparseTensor.addIndices(builder, indicesOffset);\r\n      SparseTensor.addDims(builder, dimsOffset);\r\n      return SparseTensor.endSparseTensor(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Attribute {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Attribute\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Attribute= obj\r\n     * @returns Attribute\r\n     */\r\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\r\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Attribute= obj\r\n     * @returns Attribute\r\n     */\r\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.AttributeType\r\n     */\r\n    type(): onnxruntime.experimental.fbs.AttributeType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    f(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    i(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    s(): string|null;\r\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    s(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph|null\r\n     */\r\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    floats(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    floatsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Float32Array\r\n     */\r\n    floatsArray(): Float32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ?\r\n          new Float32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    ints(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    intsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    strings(index: number): string;\r\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    stringsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor\r\n     */\r\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    tensorsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph\r\n     */\r\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    graphsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startAttribute(builder: flatbuffers.Builder) {\r\n      builder.startObject(13);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.AttributeType type\r\n     */\r\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\r\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number f\r\n     */\r\n    static addF(builder: flatbuffers.Builder, f: number) {\r\n      builder.addFieldFloat32(3, f, 0.0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long i\r\n     */\r\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\r\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sOffset\r\n     */\r\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, sOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset tOffset\r\n     */\r\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, tOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset gOffset\r\n     */\r\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, gOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset floatsOffset\r\n     */\r\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, floatsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addFloat32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset intsOffset\r\n     */\r\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(9, intsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset stringsOffset\r\n     */\r\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(10, stringsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset tensorsOffset\r\n     */\r\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(11, tensorsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphsOffset\r\n     */\r\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(12, graphsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createAttribute(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\r\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\r\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\r\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Attribute.startAttribute(builder);\r\n      Attribute.addName(builder, nameOffset);\r\n      Attribute.addDocString(builder, docStringOffset);\r\n      Attribute.addType(builder, type);\r\n      Attribute.addF(builder, f);\r\n      Attribute.addI(builder, i);\r\n      Attribute.addS(builder, sOffset);\r\n      Attribute.addT(builder, tOffset);\r\n      Attribute.addG(builder, gOffset);\r\n      Attribute.addFloats(builder, floatsOffset);\r\n      Attribute.addInts(builder, intsOffset);\r\n      Attribute.addStrings(builder, stringsOffset);\r\n      Attribute.addTensors(builder, tensorsOffset);\r\n      Attribute.addGraphs(builder, graphsOffset);\r\n      return Attribute.endAttribute(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Graph {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Graph\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Graph= obj\r\n     * @returns Graph\r\n     */\r\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\r\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Graph= obj\r\n     * @returns Graph\r\n     */\r\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor\r\n     */\r\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    initializersLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.ValueInfo\r\n     */\r\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeArgsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Node= obj\r\n     * @returns onnxruntime.experimental.fbs.Node\r\n     */\r\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    maxNodeIndex(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\r\n     * @returns onnxruntime.experimental.fbs.NodeEdge\r\n     */\r\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    inputs(index: number): string;\r\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    outputs(index: number): string;\r\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\r\n     * @returns onnxruntime.experimental.fbs.SparseTensor\r\n     */\r\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\r\n        onnxruntime.experimental.fbs.SparseTensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    sparseInitializersLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startGraph(builder: flatbuffers.Builder) {\r\n      builder.startObject(8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset initializersOffset\r\n     */\r\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, initializersOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeArgsOffset\r\n     */\r\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodesOffset\r\n     */\r\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, nodesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number maxNodeIndex\r\n     */\r\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\r\n      builder.addFieldInt32(3, maxNodeIndex, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeEdgesOffset\r\n     */\r\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputsOffset\r\n     */\r\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, inputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputsOffset\r\n     */\r\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, outputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sparseInitializersOffset\r\n     */\r\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\r\n        flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createGraph(\r\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\r\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\r\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\r\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Graph.startGraph(builder);\r\n      Graph.addInitializers(builder, initializersOffset);\r\n      Graph.addNodeArgs(builder, nodeArgsOffset);\r\n      Graph.addNodes(builder, nodesOffset);\r\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\r\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\r\n      Graph.addInputs(builder, inputsOffset);\r\n      Graph.addOutputs(builder, outputsOffset);\r\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\r\n      return Graph.endGraph(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Model {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Model\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Model= obj\r\n     * @returns Model\r\n     */\r\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\r\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Model= obj\r\n     * @returns Model\r\n     */\r\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    irVersion(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\r\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\r\n     */\r\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\r\n        onnxruntime.experimental.fbs.OperatorSetId|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    opsetImportLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    producerName(): string|null;\r\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    producerVersion(): string|null;\r\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    modelVersion(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph|null\r\n     */\r\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    graphDocString(): string|null;\r\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startModel(builder: flatbuffers.Builder) {\r\n      builder.startObject(9);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long irVersion\r\n     */\r\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\r\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset opsetImportOffset\r\n     */\r\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, opsetImportOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset producerNameOffset\r\n     */\r\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, producerNameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset producerVersionOffset\r\n     */\r\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(3, producerVersionOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long modelVersion\r\n     */\r\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\r\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphOffset\r\n     */\r\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, graphOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphDocStringOffset\r\n     */\r\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createModel(\r\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\r\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\r\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\r\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Model.startModel(builder);\r\n      Model.addIrVersion(builder, irVersion);\r\n      Model.addOpsetImport(builder, opsetImportOffset);\r\n      Model.addProducerName(builder, producerNameOffset);\r\n      Model.addProducerVersion(builder, producerVersionOffset);\r\n      Model.addDomain(builder, domainOffset);\r\n      Model.addModelVersion(builder, modelVersion);\r\n      Model.addDocString(builder, docStringOffset);\r\n      Model.addGraph(builder, graphOffset);\r\n      Model.addGraphDocString(builder, graphDocStringOffset);\r\n      return Model.endModel(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class KernelCreateInfos {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns KernelCreateInfos\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param KernelCreateInfos= obj\r\n     * @returns KernelCreateInfos\r\n     */\r\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\r\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param KernelCreateInfos= obj\r\n     * @returns KernelCreateInfos\r\n     */\r\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\r\n        KernelCreateInfos {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    nodeIndices(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndicesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Uint32Array\r\n     */\r\n    nodeIndicesArray(): Uint32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ?\r\n          new Uint32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    kernelDefHashes(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    kernelDefHashesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeIndicesOffset\r\n     */\r\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset kernelDefHashesOffset\r\n     */\r\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createKernelCreateInfos(\r\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\r\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      KernelCreateInfos.startKernelCreateInfos(builder);\r\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\r\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\r\n      return KernelCreateInfos.endKernelCreateInfos(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SubGraphSessionState {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SubGraphSessionState\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SubGraphSessionState= obj\r\n     * @returns SubGraphSessionState\r\n     */\r\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\r\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SubGraphSessionState= obj\r\n     * @returns SubGraphSessionState\r\n     */\r\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\r\n        SubGraphSessionState {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    graphId(): string|null;\r\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.SessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SessionState|null\r\n     */\r\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphIdOffset\r\n     */\r\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, graphIdOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sessionStateOffset\r\n     */\r\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, sessionStateOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      builder.requiredField(offset, 4);  // graph_id\r\n      return offset;\r\n    }\r\n\r\n    static createSubGraphSessionState(\r\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\r\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SubGraphSessionState.startSubGraphSessionState(builder);\r\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\r\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\r\n      return SubGraphSessionState.endSubGraphSessionState(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SessionState {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SessionState\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SessionState= obj\r\n     * @returns SessionState\r\n     */\r\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\r\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SessionState= obj\r\n     * @returns SessionState\r\n     */\r\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\r\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\r\n     */\r\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\r\n     */\r\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\r\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    subGraphSessionStatesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSessionState(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset kernelsOffset\r\n     */\r\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, kernelsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\r\n     */\r\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\r\n        flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSessionState(\r\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\r\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SessionState.startSessionState(builder);\r\n      SessionState.addKernels(builder, kernelsOffset);\r\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\r\n      return SessionState.endSessionState(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class InferenceSession {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns InferenceSession\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param InferenceSession= obj\r\n     * @returns InferenceSession\r\n     */\r\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\r\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param InferenceSession= obj\r\n     * @returns InferenceSession\r\n     */\r\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns boolean\r\n     */\r\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\r\n      return bb.__has_identifier('ORTM');\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    ortVersion(): string|null;\r\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Model= obj\r\n     * @returns onnxruntime.experimental.fbs.Model|null\r\n     */\r\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.SessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SessionState|null\r\n     */\r\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startInferenceSession(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset ortVersionOffset\r\n     */\r\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, ortVersionOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset modelOffset\r\n     */\r\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, modelOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sessionStateOffset\r\n     */\r\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, sessionStateOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset offset\r\n     */\r\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\r\n      builder.finish(offset, 'ORTM');\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset offset\r\n     */\r\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\r\n      builder.finish(offset, 'ORTM', true);\r\n    }\r\n\r\n    static createInferenceSession(\r\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\r\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      InferenceSession.startInferenceSession(builder);\r\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\r\n      InferenceSession.addModel(builder, modelOffset);\r\n      InferenceSession.addSessionState(builder, sessionStateOffset);\r\n      return InferenceSession.endInferenceSession(builder);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\r\nimport {Session} from './session';\r\nimport {Tensor as OnnxjsTensor} from './tensor';\r\n\r\nexport class OnnxjsSessionHandler implements SessionHandler {\r\n  constructor(private session: Session) {\r\n    this.inputNames = this.session.inputNames;\r\n    this.outputNames = this.session.outputNames;\r\n  }\r\n\r\n  async dispose(): Promise<void> {}\r\n  inputNames: readonly string[];\r\n  outputNames: readonly string[];\r\n  async run(\r\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\r\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\r\n    const inputMap = new Map<string, OnnxjsTensor>();\r\n    for (const name in feeds) {\r\n      if (Object.hasOwnProperty.call(feeds, name)) {\r\n        const feed = feeds[name];\r\n        inputMap.set(\r\n            name,\r\n            new OnnxjsTensor(\r\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\r\n                feed.data as OnnxjsTensor.NumberType));\r\n      }\r\n    }\r\n    const outputMap = await this.session.run(inputMap);\r\n    const output: SessionHandler.ReturnType = {};\r\n    outputMap.forEach((tensor, name) => {\r\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\r\n    });\r\n    return output;\r\n  }\r\n  startProfiling(): void {\r\n    this.session.startProfiling();\r\n  }\r\n  endProfiling(): void {\r\n    this.session.endProfiling();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {readFile} from 'fs';\r\nimport {promisify} from 'util';\r\n\r\nimport {resolveBackend, SessionHandlerType} from './backend';\r\nimport {ExecutionPlan} from './execution-plan';\r\nimport {Graph} from './graph';\r\nimport {Profiler} from './instrument';\r\nimport {Model} from './model';\r\nimport {Operator} from './operators';\r\nimport {Tensor} from './tensor';\r\n\r\nexport declare namespace Session {\r\n  export interface Config {\r\n    backendHint?: string;\r\n    profiler?: Profiler.Config;\r\n  }\r\n\r\n  export interface Context {\r\n    profiler: Readonly<Profiler>;\r\n    graphInputTypes?: Tensor.DataType[];\r\n    graphInputDims?: Array<readonly number[]>;\r\n  }\r\n}\r\n\r\nexport class Session {\r\n  constructor(config: Session.Config = {}) {\r\n    this._initialized = false;\r\n    this.backendHint = config.backendHint;\r\n    this.profiler = Profiler.create(config.profiler);\r\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\r\n  }\r\n\r\n  get inputNames(): readonly string[] {\r\n    return this._model.graph.getInputNames();\r\n  }\r\n  get outputNames(): readonly string[] {\r\n    return this._model.graph.getOutputNames();\r\n  }\r\n\r\n  startProfiling() {\r\n    this.profiler.start();\r\n  }\r\n\r\n  endProfiling() {\r\n    this.profiler.stop();\r\n  }\r\n\r\n  async loadModel(uri: string): Promise<void>;\r\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\r\n  async loadModel(buffer: Uint8Array): Promise<void>;\r\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\r\n    await this.profiler.event('session', 'Session.loadModel', async () => {\r\n      // resolve backend and session handler\r\n      const backend = await resolveBackend(this.backendHint);\r\n      this.sessionHandler = backend.createSessionHandler(this.context);\r\n\r\n      this._model = new Model();\r\n      if (typeof arg === 'string') {\r\n        const isOrtFormat = arg.endsWith('.ort');\r\n        if (typeof fetch === 'undefined') {\r\n          // node\r\n          const buf = await promisify(readFile)(arg);\r\n          this.initialize(Buffer.from(buf), isOrtFormat);\r\n        } else {\r\n          // browser\r\n          const response = await fetch(arg);\r\n          const buf = await response.arrayBuffer();\r\n          this.initialize(new Uint8Array(buf), isOrtFormat);\r\n        }\r\n      } else if (!ArrayBuffer.isView(arg)) {\r\n        // load model from ArrayBuffer\r\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\r\n        this.initialize(arr);\r\n      } else {\r\n        // load model from Uint8array\r\n        this.initialize(arg);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\r\n    if (this._initialized) {\r\n      throw new Error('already initialized');\r\n    }\r\n\r\n    this.profiler.event('session', 'Session.initialize', () => {\r\n      // load graph\r\n      const graphInitializer =\r\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\r\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\r\n\r\n      // graph is completely initialzied at this stage , let the interested handlers know\r\n      if (this.sessionHandler.onGraphInitialized) {\r\n        this.sessionHandler.onGraphInitialized(this._model.graph);\r\n      }\r\n      // initialize each operator in the graph\r\n      this.initializeOps(this._model.graph);\r\n\r\n      // instantiate an ExecutionPlan object to be used by the Session object\r\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\r\n    });\r\n\r\n    this._initialized = true;\r\n  }\r\n\r\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\r\n    if (!this._initialized) {\r\n      throw new Error('session not initialized yet');\r\n    }\r\n\r\n    return this.profiler.event('session', 'Session.run', async () => {\r\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\r\n\r\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\r\n\r\n      return this.createOutput(outputTensors);\r\n    });\r\n  }\r\n\r\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\r\n    const modelInputNames = this._model.graph.getInputNames();\r\n\r\n    // normalize inputs\r\n    // inputs: Tensor[]\r\n    if (Array.isArray(inputs)) {\r\n      if (inputs.length !== modelInputNames.length) {\r\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\r\n      }\r\n    }\r\n    // convert map to array\r\n    // inputs: Map<string, Tensor>\r\n    else {\r\n      if (inputs.size !== modelInputNames.length) {\r\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\r\n      }\r\n\r\n      const sortedInputs = new Array<Tensor>(inputs.size);\r\n      let sortedInputsIndex = 0;\r\n      for (let i = 0; i < modelInputNames.length; ++i) {\r\n        const tensor = inputs.get(modelInputNames[i]);\r\n        if (!tensor) {\r\n          throw new Error(`missing input tensor for: '${name}'`);\r\n        }\r\n        sortedInputs[sortedInputsIndex++] = tensor;\r\n      }\r\n\r\n      inputs = sortedInputs;\r\n    }\r\n\r\n    // validate dims requirements\r\n    // First session run - graph input data is not cached for the session\r\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\r\n        this.context.graphInputDims.length === 0) {\r\n      const modelInputIndices = this._model.graph.getInputIndices();\r\n      const modelValues = this._model.graph.getValues();\r\n\r\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\r\n\r\n      for (let i = 0; i < modelInputIndices.length; ++i) {\r\n        const graphInput = modelValues[modelInputIndices[i]];\r\n        graphInputDims[i] = graphInput.type!.shape.dims;\r\n\r\n        // cached for second and subsequent runs.\r\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\r\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\r\n        this.context.graphInputDims!.push(inputs[i].dims);\r\n      }\r\n\r\n      this.validateInputTensorDims(graphInputDims, inputs, true);\r\n    }\r\n\r\n    // Second and subsequent session runs - graph input data is cached for the session\r\n    else {\r\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\r\n    }\r\n\r\n    // validate types requirement\r\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\r\n\r\n    return inputs;\r\n  }\r\n\r\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\r\n    for (let i = 0; i < givenInputs.length; i++) {\r\n      const expectedType = graphInputTypes[i];\r\n      const actualType = givenInputs[i].type;\r\n      if (expectedType !== actualType) {\r\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validateInputTensorDims(\r\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\r\n    for (let i = 0; i < givenInputs.length; i++) {\r\n      const expectedDims = graphInputDims[i];\r\n      const actualDims = givenInputs[i].dims;\r\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\r\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\r\n            actualDims.join(',')}]`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\r\n      boolean {\r\n    if (expectedDims.length !== actualDims.length) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < expectedDims.length; ++i) {\r\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\r\n        // data shape mis-match AND not a 'None' dimension.\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\r\n    const modelOutputNames = this._model.graph.getOutputNames();\r\n    if (outputTensors.length !== modelOutputNames.length) {\r\n      throw new Error('expected number of outputs do not match number of generated outputs');\r\n    }\r\n\r\n    const output = new Map<string, Tensor>();\r\n    for (let i = 0; i < modelOutputNames.length; ++i) {\r\n      output.set(modelOutputNames[i], outputTensors[i]);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  private initializeOps(graph: Graph): void {\r\n    const nodes = graph.getNodes();\r\n    this._ops = new Array(nodes.length);\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\r\n    }\r\n  }\r\n\r\n  private _model: Model;\r\n  private _initialized: boolean;\r\n\r\n  private _ops: Operator[];\r\n  private _executionPlan: ExecutionPlan;\r\n\r\n  private backendHint?: string;\r\n\r\n  private sessionHandler: SessionHandlerType;\r\n  private context: Session.Context;\r\n  private profiler: Readonly<Profiler>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Guid} from 'guid-typescript';\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\n\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\n\r\nimport {ProtoUtil, ShapeUtil} from './util';\r\n\r\nexport declare namespace Tensor {\r\n  export interface DataTypeMap {\r\n    bool: Uint8Array;\r\n    float32: Float32Array;\r\n    float64: Float64Array;\r\n    string: string[];\r\n    int8: Int8Array;\r\n    uint8: Uint8Array;\r\n    int16: Int16Array;\r\n    uint16: Uint16Array;\r\n    int32: Int32Array;\r\n    uint32: Uint32Array;\r\n  }\r\n\r\n  export type DataType = keyof DataTypeMap;\r\n\r\n  export type StringType = Tensor.DataTypeMap['string'];\r\n  export type BooleanType = Tensor.DataTypeMap['bool'];\r\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\r\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\r\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\r\n  export type NumberType = BooleanType|IntegerType|FloatType;\r\n\r\n  export type Id = Guid;\r\n}\r\n\r\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\r\n\r\ntype DataProvider = (id: Tensor.Id) => TensorData;\r\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\r\n\r\nexport class Tensor {\r\n  /**\r\n   * get the underlying tensor data\r\n   */\r\n  get data(): TensorData {\r\n    if (this.cache === undefined) {\r\n      const data = this.dataProvider!(this.dataId);\r\n      if (data.length !== this.size) {\r\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\r\n      }\r\n      this.cache = data;\r\n    }\r\n    return this.cache;\r\n  }\r\n\r\n  /**\r\n   * get the underlying string tensor data. Should only use when type is STRING\r\n   */\r\n  get stringData() {\r\n    if (this.type !== 'string') {\r\n      throw new TypeError('data type is not string');\r\n    }\r\n\r\n    return this.data as Tensor.StringType;\r\n  }\r\n\r\n  /**\r\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\r\n   * INT16, INT32, UINT32, BOOL)\r\n   */\r\n  get integerData() {\r\n    switch (this.type) {\r\n      case 'uint8':\r\n      case 'int8':\r\n      case 'uint16':\r\n      case 'int16':\r\n      case 'int32':\r\n      case 'uint32':\r\n      case 'bool':\r\n        return this.data as Tensor.IntegerType;\r\n\r\n      default:\r\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\r\n   */\r\n  get floatData() {\r\n    switch (this.type) {\r\n      case 'float32':\r\n      case 'float64':\r\n        return this.data as Tensor.FloatType;\r\n\r\n      default:\r\n        throw new TypeError('data type is not float (float32, float64)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\r\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\r\n   */\r\n  get numberData() {\r\n    if (this.type !== 'string') {\r\n      return this.data as Tensor.NumberType;\r\n    }\r\n    throw new TypeError('type cannot be non-number (string)');\r\n  }\r\n\r\n  /**\r\n   * get value of an element at the given indices\r\n   */\r\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\r\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\r\n  }\r\n\r\n  /**\r\n   * set value of an element at the given indices\r\n   */\r\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\r\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\r\n  }\r\n\r\n  /**\r\n   * get the underlying tensor data asynchronously\r\n   */\r\n  async getData(): Promise<TensorData> {\r\n    if (this.cache === undefined) {\r\n      this.cache = await this.asyncDataProvider!(this.dataId);\r\n    }\r\n    return this.cache;\r\n  }\r\n\r\n  /**\r\n   * get the number of elements in the tensor\r\n   */\r\n  public readonly size: number;\r\n\r\n  private _strides: readonly number[];\r\n  /**\r\n   * get the strides for each dimension\r\n   */\r\n  get strides(): readonly number[] {\r\n    if (!this._strides) {\r\n      this._strides = ShapeUtil.computeStrides(this.dims);\r\n    }\r\n    return this._strides;\r\n  }\r\n\r\n  constructor(\r\n      /**\r\n       * get the dimensions of the tensor\r\n       */\r\n      public readonly dims: readonly number[],\r\n      /**\r\n       * get the type of the tensor\r\n       */\r\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\r\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\r\n      /**\r\n       * get the data ID that used to map to a tensor data\r\n       */\r\n      public readonly dataId: Guid = Guid.create()) {\r\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\r\n    const size = this.size;\r\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\r\n\r\n    if (cache !== undefined) {\r\n      if (cache.length !== size) {\r\n        throw new RangeError('Input dims doesn\\'t match data length.');\r\n      }\r\n    }\r\n\r\n    if (type === 'string') {\r\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\r\n        throw new TypeError('cache should be a string array');\r\n      }\r\n\r\n      if (empty) {\r\n        this.cache = new Array<string>(size);\r\n      }\r\n    } else {\r\n      if (cache !== undefined) {\r\n        const constructor = dataviewConstructor(type);\r\n        if (!(cache instanceof constructor)) {\r\n          throw new TypeError(`cache should be type ${constructor.name}`);\r\n        }\r\n      }\r\n\r\n      if (empty) {\r\n        const buf = new ArrayBuffer(size * sizeof(type));\r\n        this.cache = createView(buf, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construct new Tensor from a ONNX Tensor object\r\n   * @param tensorProto the ONNX Tensor\r\n   */\r\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\r\n    if (!tensorProto) {\r\n      throw new Error('cannot construct Value from an empty tensor');\r\n    }\r\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\r\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\r\n\r\n    const value = new Tensor(dims, type);\r\n\r\n    if (type === 'string') {\r\n      // When it's STRING type, the value should always be stored in field\r\n      // 'stringData'\r\n      tensorProto.stringData!.forEach((str, i) => {\r\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\r\n        value.data[i] = buf.toString();\r\n      });\r\n\r\n    } else if (\r\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\r\n        tensorProto.rawData.byteLength > 0) {\r\n      // NOT considering segment for now (IMPORTANT)\r\n\r\n      // populate value from rawData\r\n      const dataDest = value.data;\r\n      const dataSource =\r\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\r\n      const elementSize = sizeofProto(tensorProto.dataType!);\r\n      const length = tensorProto.rawData.byteLength / elementSize;\r\n\r\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\r\n        throw new Error('invalid buffer length');\r\n      }\r\n      if (dataDest.length !== length) {\r\n        throw new Error('buffer length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\r\n        dataDest[i] = n;\r\n      }\r\n    } else {\r\n      // populate value from array\r\n      let array: Array<number|Long>;\r\n      switch (tensorProto.dataType) {\r\n        case onnx.TensorProto.DataType.FLOAT:\r\n          array = tensorProto.floatData!;\r\n          break;\r\n        case onnx.TensorProto.DataType.INT32:\r\n        case onnx.TensorProto.DataType.INT16:\r\n        case onnx.TensorProto.DataType.UINT16:\r\n        case onnx.TensorProto.DataType.INT8:\r\n        case onnx.TensorProto.DataType.UINT8:\r\n        case onnx.TensorProto.DataType.BOOL:\r\n          array = tensorProto.int32Data!;\r\n          break;\r\n        case onnx.TensorProto.DataType.INT64:\r\n          array = tensorProto.int64Data!;\r\n          break;\r\n        case onnx.TensorProto.DataType.DOUBLE:\r\n          array = tensorProto.doubleData!;\r\n          break;\r\n        case onnx.TensorProto.DataType.UINT32:\r\n        case onnx.TensorProto.DataType.UINT64:\r\n          array = tensorProto.uint64Data!;\r\n          break;\r\n        default:\r\n          // should never run here\r\n          throw new Error('unspecific error');\r\n      }\r\n\r\n      if (array === null || array === undefined) {\r\n        throw new Error('failed to populate data from a tensorproto value');\r\n      }\r\n\r\n      const data = value.data;\r\n      if (data.length !== array.length) {\r\n        throw new Error('array length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        if (Long.isLong(element)) {\r\n          data[i] = longToNumber(element, tensorProto.dataType);\r\n        } else {\r\n          data[i] = element;\r\n        }\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Construct new Tensor from raw data\r\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\r\n   * for other types of tensor.\r\n   * @param dims the dimensions of the tensor\r\n   * @param type the type of the tensor\r\n   */\r\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\r\n    return new Tensor(dims, type, undefined, undefined, data);\r\n  }\r\n\r\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\r\n    if (!ortTensor) {\r\n      throw new Error('cannot construct Value from an empty tensor');\r\n    }\r\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\r\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\r\n\r\n    const value = new Tensor(dims, type);\r\n\r\n    if (type === 'string') {\r\n      // When it's STRING type, the value should always be stored in field\r\n      // 'stringData'\r\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\r\n        value.data[i] = ortTensor.stringData(i);\r\n      }\r\n\r\n    } else if (\r\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\r\n      // NOT considering segment for now (IMPORTANT)\r\n\r\n      // populate value from rawData\r\n      const dataDest = value.data;\r\n      const dataSource = new DataView(\r\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\r\n      const elementSize = sizeofProto(ortTensor.dataType());\r\n      const length = ortTensor.rawDataLength() / elementSize;\r\n\r\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\r\n        throw new Error('invalid buffer length');\r\n      }\r\n      if (dataDest.length !== length) {\r\n        throw new Error('buffer length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\r\n        dataDest[i] = n;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction sizeof(type: Tensor.DataType): number {\r\n  switch (type) {\r\n    case 'bool':\r\n    case 'int8':\r\n    case 'uint8':\r\n      return 1;\r\n    case 'int16':\r\n    case 'uint16':\r\n      return 2;\r\n    case 'int32':\r\n    case 'uint32':\r\n    case 'float32':\r\n      return 4;\r\n    case 'float64':\r\n      return 8;\r\n    default:\r\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\r\n  }\r\n}\r\n\r\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\r\n  switch (type) {\r\n    case onnx.TensorProto.DataType.UINT8:\r\n    case onnx.TensorProto.DataType.INT8:\r\n    case onnx.TensorProto.DataType.BOOL:\r\n      return 1;\r\n    case onnx.TensorProto.DataType.UINT16:\r\n    case onnx.TensorProto.DataType.INT16:\r\n      return 2;\r\n    case onnx.TensorProto.DataType.FLOAT:\r\n    case onnx.TensorProto.DataType.INT32:\r\n    case onnx.TensorProto.DataType.UINT32:\r\n      return 4;\r\n    case onnx.TensorProto.DataType.INT64:\r\n    case onnx.TensorProto.DataType.DOUBLE:\r\n    case onnx.TensorProto.DataType.UINT64:\r\n      return 8;\r\n    default:\r\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n}\r\n\r\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\r\n  return new (dataviewConstructor(type))(dataBuffer);\r\n}\r\n\r\nfunction dataviewConstructor(type: Tensor.DataType) {\r\n  switch (type) {\r\n    case 'bool':\r\n    case 'uint8':\r\n      return Uint8Array;\r\n    case 'int8':\r\n      return Int8Array;\r\n    case 'int16':\r\n      return Int16Array;\r\n    case 'uint16':\r\n      return Uint16Array;\r\n    case 'int32':\r\n      return Int32Array;\r\n    case 'uint32':\r\n      return Uint32Array;\r\n    case 'float32':\r\n      return Float32Array;\r\n    case 'float64':\r\n      return Float64Array;\r\n    default:\r\n      // should never run to here\r\n      throw new Error('unspecified error');\r\n  }\r\n}\r\n\r\n// convert a long number to a 32-bit integer (cast-down)\r\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\r\n  // INT64, UINT32, UINT64\r\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\r\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\r\n      throw new TypeError('int64 is not supported');\r\n    }\r\n  } else if (\r\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\r\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\r\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\r\n      throw new TypeError('uint64 is not supported');\r\n    }\r\n  } else {\r\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n\r\n  return i.toNumber();\r\n}\r\n\r\n// read one value from TensorProto\r\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\r\n  switch (type) {\r\n    case onnx.TensorProto.DataType.BOOL:\r\n    case onnx.TensorProto.DataType.UINT8:\r\n      return view.getUint8(byteOffset);\r\n    case onnx.TensorProto.DataType.INT8:\r\n      return view.getInt8(byteOffset);\r\n    case onnx.TensorProto.DataType.UINT16:\r\n      return view.getUint16(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT16:\r\n      return view.getInt16(byteOffset, true);\r\n    case onnx.TensorProto.DataType.FLOAT:\r\n      return view.getFloat32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT32:\r\n      return view.getInt32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.UINT32:\r\n      return view.getUint32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT64:\r\n      return longToNumber(\r\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\r\n    case onnx.TensorProto.DataType.DOUBLE:\r\n      return view.getFloat64(byteOffset, true);\r\n    case onnx.TensorProto.DataType.UINT64:\r\n      return longToNumber(\r\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\r\n    default:\r\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Graph} from './graph';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport {Tensor} from './tensor';\r\n\r\n// check the inputs shape before running an OP.\r\n// return true when the inputs pass the check\r\n// return false when the inputs do not fit the requirement\r\n// throw exception when fatal error or not implemented\r\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\r\n  if (!inputs || inputs.length !== expectedDimensions.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Evaluates the given expression and asserts error message if condition is unmet.\r\nexport function assert(expr: boolean, msg: () => string) {\r\n  if (!expr) {\r\n    throw new Error(typeof msg === 'string' ? msg : msg());\r\n  }\r\n}\r\n\r\nexport class ArrayUtil {\r\n  /**\r\n   * Verifies if 2 input arrays contain the same elements.\r\n   * @param n1 Array 1\r\n   * @param n2 Array 2\r\n   * @returns Whether these 2 are equal\r\n   */\r\n  static arraysEqual(\r\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\r\n      Float32Array|Float64Array,\r\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\r\n      Float32Array|Float64Array) {\r\n    if (n1.length !== n2.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < n1.length; i++) {\r\n      if (n1[i] !== n2[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class MatMulUtil {\r\n  /**\r\n   * Fix the input shapes for MatMul operation if they need fixing\r\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\r\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\r\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\r\n   */\r\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\r\n      [readonly number[], readonly number[]] {\r\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\r\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\r\n    // removed.\r\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\r\n\r\n    // If the second argument is 1-D, it is promoted to a matrix by appending\r\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\r\n    // removed.\r\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\r\n\r\n    return [a, b];\r\n  }\r\n\r\n  /**\r\n   * Fix the output shape computed for MatMul operation if it needs fixing\r\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\r\n   * This will be mutated.\r\n   * @param aRank The rank of tensor A.\r\n   * @param bRank The rank of tensor B.\r\n   */\r\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\r\n    // Remove prepended dimension if first input is 1d\r\n    if (aRank === 1) {\r\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\r\n      outputShape.splice(outputShape.length - 2, 1);\r\n    }\r\n    // Remove appended dimension if second input is 1d\r\n    if (bRank === 1) {\r\n      outputShape.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the expected shape when matrix multiplication\r\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\r\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\r\n   * @returns The expected shape of the result, or undefined if N/A\r\n   */\r\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\r\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\r\n  }\r\n}\r\n\r\nexport class BroadcastUtil {\r\n  /**\r\n   * Calculate the expected shape when broadcasting 2 tensors\r\n   * @param a The shape of tensor A. Should be an array of positive integers\r\n   * @param b The shape of tensor B. Should be an array of positive integers\r\n   * @param isMatMul Whether the operation is MatMul\r\n   * @returns The expected shape of the result, or undefined if N/A\r\n   */\r\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\r\n    const arank = adims.length;\r\n    const brank = bdims.length;\r\n    if (arank === 0) {\r\n      return bdims;\r\n    }\r\n    if (brank === 0) {\r\n      return adims;\r\n    }\r\n    const crank = Math.max(adims.length, bdims.length);\r\n    const cdims = new Array<number>(crank);\r\n\r\n    // calculate the last 2 dimension if it is MatMul\r\n    if (isMatMul) {\r\n      if (arank < 2 || brank < 2) {\r\n        return undefined;\r\n      }\r\n      const cShapeMatMul =\r\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\r\n      if (cShapeMatMul === undefined) {\r\n        return undefined;\r\n      }\r\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\r\n    }\r\n\r\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\r\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\r\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\r\n\r\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\r\n        return undefined;\r\n      }\r\n      cdims[crank - i] = Math.max(aLen, bLen);\r\n    }\r\n\r\n    return cdims;\r\n  }\r\n\r\n  /**\r\n   * Given the indices of a broadcasted tensor, calculate the original indices\r\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\r\n   * @param originalShape The original shape of the tensor before broadcas\r\n   * @returns The calculated indices that maps to the original tensor.\r\n   */\r\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\r\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\r\n    // length as the broadcasted shape, and for each dimension the index should\r\n    // not be out of range.\r\n    const originalIndices = new Array(originalShape.length);\r\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\r\n    return originalIndices;\r\n  }\r\n\r\n  /**\r\n   * Given the indices of a broadcasted tensor, calculate the original indices\r\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\r\n   * @param originalShape The original shape of the tensor before broadcast\r\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\r\n   *     mutated).\r\n   */\r\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\r\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\r\n    // broadcasted shape, and for each dimension the index should not be out of range.\r\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\r\n    const dimOffset = broadcastedIndices.length - originalShape.length;\r\n    for (let i = 0; i < originalShape.length; i++) {\r\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform the broadcasting operation on the specific operator\r\n   * @param a The input tensor A\r\n   * @param b The input tensor B\r\n   * @param op The operator lambda function\r\n   * @param inplace Whether to write the result back to A.\r\n   * @returns The result tensor, or undefined if input not broadcastable.\r\n   */\r\n  static calc(\r\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\r\n      resultType?: Tensor.DataType): Tensor|undefined {\r\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\r\n\r\n    if (outputShape) {\r\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\r\n        // B is not broadcastable to A, failed to calculate inplace.\r\n        return undefined;\r\n      }\r\n\r\n      const size = ShapeUtil.size(outputShape);\r\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\r\n\r\n      // both inputs are scalars\r\n      if (outputShape.length === 0) {\r\n        c.set([], op(a.get([]), b.get([])));\r\n      }\r\n\r\n      // atleast one input is a non-scalar\r\n      else {\r\n        const outputIndices = new Array<number>(outputShape.length);\r\n        const originalIndicesA = new Array(a.dims.length);\r\n        const originalIndicesB = new Array(b.dims.length);\r\n        let valA: string|number = 0;\r\n        let valB: string|number = 0;\r\n        let isAScalar = false;\r\n        let isBScalar = false;\r\n        if (a.dims.length === 0) {\r\n          valA = a.get([]);\r\n          isAScalar = true;\r\n        }\r\n        if (b.dims.length === 0) {\r\n          valB = b.get([]);\r\n          isBScalar = true;\r\n        }\r\n        let rest: number;\r\n        for (let i = 0; i < size; i++) {\r\n          // traversal indices\r\n          rest = i;\r\n          for (let j = outputShape.length - 1; j >= 0; j--) {\r\n            outputIndices[j] = rest % outputShape[j];\r\n            rest = Math.floor(rest / outputShape[j]);\r\n          }\r\n\r\n          if (!isAScalar) {\r\n            // map outputIndices (which is actually broadcasted) to the originalIndices\r\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\r\n            valA = a.get(originalIndicesA);\r\n          }\r\n          if (!isBScalar) {\r\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\r\n            valB = b.get(originalIndicesB);\r\n          }\r\n\r\n          c.set(outputIndices, op(valA, valB));\r\n        }\r\n      }\r\n\r\n      return c;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Determine if a shape is unidirectional broadcastable to another shape\r\n   * @param shape The input shape\r\n   * @param finalShape The desired shape after broadcasting\r\n   */\r\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\r\n    // align shape to the right\r\n    const inputRank = shape.length;\r\n    const finalRank = finalShape.length;\r\n    if (inputRank > finalRank) {\r\n      return false;\r\n    }\r\n    for (let i = 1; i <= inputRank; i++) {\r\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determine the broadcasted dims in input shape based on the given output shape.\r\n   * Note that this function only returns the broadcasted dims.\r\n   * @param inputShape The input shape\r\n   * @param outputShape The output shape\r\n   * @returns The broadcasted dims in input shape.\r\n   */\r\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\r\n    const inRank = inputShape.length;\r\n    const dims: number[] = [];\r\n    for (let i = 0; i < inRank; i++) {\r\n      const dim = inRank - 1 - i;\r\n      const a = inputShape[dim] || 1;\r\n      const b = outputShape[outputShape.length - 1 - i] || 1;\r\n      if (b > 1 && a === 1) {\r\n        dims.unshift(dim);\r\n      }\r\n    }\r\n    return dims;\r\n  }\r\n}\r\n\r\n// copy array helper\r\n// mimics memcpy as much as possible\r\nexport function arrayCopyHelper(\r\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n    blockSize: number) {\r\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n    throw new Error('sourceIndex out of bounds');\r\n  }\r\n  if (targetIndex < 0 || targetIndex >= target.length) {\r\n    throw new Error('targetIndex out of bounds');\r\n  }\r\n  if (sourceIndex + blockSize > source.length) {\r\n    throw new Error('source indices to be copied are outside bounds');\r\n  }\r\n  if (targetIndex + blockSize > target.length) {\r\n    throw new Error('target array is too small to hold result');\r\n  }\r\n\r\n  for (let offset = 0; offset < blockSize; offset++) {\r\n    target[targetIndex + offset] = source[sourceIndex + offset];\r\n  }\r\n}\r\n\r\nexport class GemmUtil {\r\n  // will make sure input shapes are compatible for this op\r\n  // and return back the shape of the output in the form of a tuple\r\n  // will throw exception if the input shapes are not compatible\r\n  static getShapeOfGemmResult(\r\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\r\n      biasShape?: readonly number[]): readonly number[] {\r\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\r\n      throw new Error('shape need to be of size 2');\r\n    }\r\n\r\n    let M: number;\r\n    let K: number;\r\n    let N: number;\r\n\r\n    if (transLeft) {\r\n      M = leftShape[1];\r\n      K = leftShape[0];\r\n    } else {\r\n      M = leftShape[0];\r\n      K = leftShape[1];\r\n    }\r\n\r\n    let kDim = -1;\r\n\r\n    if (transRight) {\r\n      N = rightShape[0];\r\n      kDim = 1;\r\n    } else {\r\n      N = rightShape[1];\r\n      kDim = 0;\r\n    }\r\n\r\n    if (rightShape[kDim] !== K) {\r\n      throw new Error('dimension mismatch');\r\n    }\r\n\r\n    if (M <= 0 || N <= 0 || K <= 0) {\r\n      throw new Error('invalid shape specified');\r\n    }\r\n\r\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\r\n      throw new Error('gemm: invalid bias shape for broadcast');\r\n    }\r\n\r\n    return [M, N, K];\r\n  }\r\n}\r\n\r\nexport class ProtoUtil {\r\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\r\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\r\n    switch (typeProto) {\r\n      case onnx.TensorProto.DataType.INT8:\r\n        return 'int8';\r\n      case onnx.TensorProto.DataType.UINT8:\r\n        return 'uint8';\r\n      case onnx.TensorProto.DataType.BOOL:\r\n        return 'bool';\r\n      case onnx.TensorProto.DataType.INT16:\r\n        return 'int16';\r\n      case onnx.TensorProto.DataType.UINT16:\r\n        return 'uint16';\r\n      case onnx.TensorProto.DataType.INT32:\r\n        return 'int32';\r\n      case onnx.TensorProto.DataType.UINT32:\r\n        return 'uint32';\r\n      case onnx.TensorProto.DataType.FLOAT:\r\n        return 'float32';\r\n      case onnx.TensorProto.DataType.DOUBLE:\r\n        return 'float64';\r\n      case onnx.TensorProto.DataType.STRING:\r\n        return 'string';\r\n\r\n      // For INT64/UINT64, reduce their value to 32-bits.\r\n      // Should throw exception when overflow\r\n      case onnx.TensorProto.DataType.INT64:\r\n        return 'int32';\r\n      case onnx.TensorProto.DataType.UINT64:\r\n        return 'uint32';\r\n\r\n      default:\r\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\r\n    }\r\n  }\r\n\r\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\r\n    switch (type) {\r\n      case 'int8':\r\n        return onnx.TensorProto.DataType.INT8;\r\n      case 'uint8':\r\n        return onnx.TensorProto.DataType.UINT8;\r\n      case 'bool':\r\n        return onnx.TensorProto.DataType.BOOL;\r\n      case 'int16':\r\n        return onnx.TensorProto.DataType.INT16;\r\n      case 'uint16':\r\n        return onnx.TensorProto.DataType.UINT16;\r\n      case 'int32':\r\n        return onnx.TensorProto.DataType.INT32;\r\n      case 'uint32':\r\n        return onnx.TensorProto.DataType.UINT32;\r\n      case 'float32':\r\n        return onnx.TensorProto.DataType.FLOAT;\r\n      case 'float64':\r\n        return onnx.TensorProto.DataType.DOUBLE;\r\n      case 'string':\r\n        return onnx.TensorProto.DataType.STRING;\r\n      case 'int64':\r\n        return onnx.TensorProto.DataType.INT64;\r\n      case 'uint64':\r\n        return onnx.TensorProto.DataType.UINT64;\r\n\r\n      default:\r\n        throw new Error(`unsupported data type: ${type}`);\r\n    }\r\n  }\r\n\r\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\r\n    // get rid of Long type for dims\r\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\r\n  }\r\n\r\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\r\n    return {\r\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\r\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\r\n    };\r\n  }\r\n\r\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\r\n    const dims = [];\r\n    for (let i = 0; i < tensor.dimsLength(); i++) {\r\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\r\n    }\r\n    return dims;\r\n  }\r\n\r\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\r\n    const attributes = [];\r\n    for (let i = 0; i < node.attributesLength(); i++) {\r\n      attributes.push(node.attributes(i)!);\r\n    }\r\n    return attributes;\r\n  }\r\n}\r\n\r\nexport class LongUtil {\r\n  static longToNumber(n: Long|flatbuffers.Long|number) {\r\n    if (Long.isLong(n)) {\r\n      return n.toNumber();\r\n    } else if (n instanceof flatbuffers.Long) {\r\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\r\n    }\r\n    return n;\r\n  }\r\n  static isLong(n: unknown) {\r\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\r\n  }\r\n}\r\n\r\nexport class ShapeUtil {\r\n  static size(dims: readonly number[]): number {\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\r\n  }\r\n\r\n  // `axis` inclusive\r\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\r\n    if (axis < 0 || axis > dims.length) {\r\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\r\n    }\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\r\n  }\r\n\r\n  // `axis` exclusive\r\n  static sizeToDimension(dims: readonly number[], axis: number): number {\r\n    if (axis < 0 || axis > dims.length) {\r\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\r\n    }\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\r\n  }\r\n\r\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\r\n    let size = 1;\r\n    for (let i = start; i < end; i++) {\r\n      // safety check as this method is called by multiple other methods requiring size.\r\n      // size cannot be 0 or negative.\r\n      if (dims[i] <= 0) {\r\n        throw new Error(\r\n            // eslint-disable-next-line max-len\r\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\r\n      }\r\n      size *= dims[i];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  static computeStrides(dims: readonly number[]): readonly number[] {\r\n    const rank = dims.length;\r\n    if (rank === 0) {\r\n      return [];\r\n    } else if (rank === 1) {\r\n      return [1];\r\n    }\r\n    const strides = new Array(rank);\r\n    strides[rank - 1] = 1;\r\n    strides[rank - 2] = dims[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * dims[i + 1];\r\n    }\r\n    return strides;\r\n  }\r\n\r\n  static transpose(dims: readonly number[]): readonly number[] {\r\n    const copy = dims.slice();\r\n    return copy.reverse();\r\n  }\r\n\r\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\r\n    if (axis === undefined) {\r\n      axis = indices.length;\r\n    }\r\n    let offset = 0;\r\n    for (let i = 0; i < axis; ++i) {\r\n      offset += strides[i] * indices[i];\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\r\n    const rank = strides.length;\r\n    if (rank === 0) {\r\n      return [];\r\n    } else if (rank === 1) {\r\n      return [offset * strides[0]];\r\n    }\r\n    const indices: number[] = new Array(strides.length);\r\n    for (let i = 0; i < indices.length - 1; ++i) {\r\n      indices[i] = Math.floor(offset / strides[i]);\r\n      offset -= indices[i] * strides[i];\r\n    }\r\n    indices[indices.length - 1] = offset;\r\n    return indices;\r\n  }\r\n\r\n  /**\r\n   * normailze axis of range [-r, r) into [0, r).\r\n   */\r\n  static normalizeAxis(axis: number, tensorRank: number): number {\r\n    if (axis < -tensorRank && axis >= tensorRank) {\r\n      throw new Error('unsupported axis for this operation.');\r\n    }\r\n    return axis < 0 ? axis + tensorRank : axis;\r\n  }\r\n\r\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\r\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\r\n  }\r\n\r\n  // Increment an index into a tensor (in lexicographic\r\n  // ordering), wrapping around the specified upper_bound.\r\n  /**\r\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\r\n   * @param index Given index to increment (Will be mutated)\r\n   * @param dims The dimensions of the tensor for which the given index corresponds to\r\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\r\n   */\r\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\r\n    if (dims.length === 0 || index.length === 0) {\r\n      throw new Error('Index incrementing unsupported for scalar Tensor');\r\n    }\r\n    if (axisToIncrementOn === undefined) {\r\n      axisToIncrementOn = dims.length;\r\n    } else {\r\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\r\n        throw new Error('Incorrect axis to increment on');\r\n      }\r\n    }\r\n\r\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\r\n      index[k]++;\r\n      if (index[k] < dims[k]) {\r\n        break;\r\n      }\r\n      index[k] = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\r\n   * Used in Reshape\r\n   * @param originalDims Original Shape array\r\n   * @param shapeHints array containing values to compute the new dimensions\r\n   * For example:\r\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\r\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\r\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\r\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\r\n   */\r\n\r\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\r\n    // reshape to a Scalar Tensor\r\n    if (shapeHints.length === 0) {\r\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\r\n        return [];\r\n      } else {\r\n        throw new Error('cannot reshape to a scalar Tensor');\r\n      }\r\n    }\r\n\r\n    const nDims = shapeHints.length;\r\n    const reshapedDims = new Array<number>(nDims);\r\n    let unknownDimension = -1;\r\n    let newTensorSize = 1;\r\n    for (let i = 0; i < nDims; i++) {\r\n      if (shapeHints[i] < -1) {\r\n        throw new Error('a dimension in shape hints cannot be less than -1');\r\n      }\r\n      if (shapeHints[i] === -1) {\r\n        if (unknownDimension !== -1) {\r\n          throw new Error('at most one dimension in shape hints can be -1');\r\n        }\r\n        unknownDimension = i;\r\n      } else {\r\n        if (shapeHints[i] === 0) {\r\n          if (i >= originalDims.length) {\r\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\r\n          }\r\n          reshapedDims[i] = originalDims[i];\r\n        } else {\r\n          reshapedDims[i] = shapeHints[i];\r\n        }\r\n        newTensorSize *= reshapedDims[i];\r\n      }\r\n    }\r\n\r\n    const oldTensorSize = ShapeUtil.size(originalDims);\r\n    if (unknownDimension !== -1) {\r\n      if (oldTensorSize % newTensorSize !== 0) {\r\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\r\n            originalDims}] Output shape: [${shapeHints}]`);\r\n      }\r\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\r\n    }\r\n    // validate sizes from originalDims and reshapedDims match\r\n    else {\r\n      if (newTensorSize !== oldTensorSize) {\r\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\r\n      }\r\n    }\r\n    return reshapedDims;\r\n  }\r\n\r\n  /**\r\n   * Sorts a given array based on the indices in the Perm array\r\n   * Used in Transpose\r\n   * @param a Array to be sorted such as dims or strides\r\n   * @param perm Perm given; if null a will be reversed\r\n   */\r\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\r\n    if (perm) {\r\n      return perm.map((v) => a[v]);\r\n    } else {\r\n      return a.slice().reverse();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pads a given shape according to the padding values\r\n   * @param dims shape of the Tensor to be padded\r\n   * @param pad pad values\r\n   */\r\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\r\n    const rank = dims.length;\r\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\r\n  }\r\n\r\n  /**\r\n   * Determines if the two shapes are identical\r\n   * @param shape1\r\n   * @param shape2\r\n   */\r\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\r\n    if (shape1.length !== shape2.length) {\r\n      return false;\r\n    }\r\n    return shape1.every((v, i) => v === shape2[i]);\r\n  }\r\n\r\n  /**\r\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\r\n   * @param dims - input `dims` that needs to be checked\r\n   */\r\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\r\n    if (dims.length > 6) {\r\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\r\n    }\r\n    let size = 1;\r\n    for (const n of dims) {\r\n      if (!Number.isInteger(n)) {\r\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\r\n      }\r\n      if (n < 0 || n > 2147483647) {\r\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\r\n      }\r\n      size *= n;\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = flatten(x, axis)\r\n   * @param dims - shape of input tensor\r\n   * @param axis - flatten axis, in the range [-r, r]\r\n   */\r\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\r\n    if (axis < 0) {\r\n      axis += dims.length;\r\n    }\r\n    const total = dims.reduce((x, y) => x * y, 1);\r\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\r\n    const outputDims = [total / right, right];\r\n\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = squeeze(x, axes)\r\n   * @param dims - shape of input tensor\r\n   * @param axes - squeeze axes\r\n   */\r\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\r\n    const outputDims = new Array<number>();\r\n\r\n    // sanity check\r\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\r\n\r\n    for (let i = 0; i < dims.length; i++) {\r\n      const inSqueezeList = axes.indexOf(i) >= 0;\r\n      if (inSqueezeList && dims[i] !== 1) {\r\n        throw new Error('squeeze an axis of size different than 1');\r\n      }\r\n\r\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\r\n        outputDims.push(dims[i]);\r\n      }\r\n    }\r\n\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\r\n   * @param dims - shape of input tensor\r\n   * @param axes - unsqueeze axes\r\n   */\r\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\r\n    const outputDims = new Array<number>(dims.length + axes.length);\r\n\r\n    // initialize the array elements to 0\r\n    outputDims.fill(0);\r\n\r\n    // set all axes indices to 1 in outputDims and check for duplicates\r\n    for (let i = 0; i < axes.length; i++) {\r\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\r\n      if (axis >= outputDims.length) {\r\n        throw new Error('\\'axes\\' has an out of range axis');\r\n      }\r\n      if (outputDims[axis] !== 0) {\r\n        throw new Error('\\'axes\\' has a duplicate axis');\r\n      }\r\n\r\n      outputDims[axis] = 1;\r\n    }\r\n\r\n    // fill in the zero entries of outputDims with the input tensor's shape\r\n    let inputDimsIterator = 0;\r\n    for (let i = 0; i < outputDims.length; i++) {\r\n      if (outputDims[i] === 0) {\r\n        outputDims[i] = dims[inputDimsIterator++];\r\n      }\r\n    }\r\n\r\n    // sanity check assertion. 'inputDimsIterator'\r\n    // should be equal to the length of 'dims'\r\n    if (inputDimsIterator !== dims.length) {\r\n      throw new Error('the unsqueezed dimension could not be established');\r\n    }\r\n\r\n    return outputDims;\r\n  }\r\n}\r\n\r\n// bunch of helper methods that do a variety of math operations\r\nexport class MathUtil {\r\n  // y = (x*x) + y\r\n  static sqr(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\r\n    }\r\n  }\r\n\r\n  // y = ax + y\r\n  static axpy(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number, alpha: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\r\n    }\r\n  }\r\n\r\n  // y = pow(x, b)\r\n  static powx(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number, b: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\r\n    }\r\n  }\r\n\r\n  // y = x * y\r\n  static mul(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\r\n    }\r\n  }\r\n}\r\n\r\nexport class SplitUtil {\r\n  /**\r\n   * Calculates new Shapes from existing one and the splits given along the axis provides\r\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\r\n   * @param axis The dimension along which the Tensor will be split\r\n   * @param splits Offsets for the start of each split\r\n   */\r\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\r\n      [number[][], number[]] {\r\n    if (split.length === 0) {\r\n      if (!numOutputs) {\r\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\r\n      }\r\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\r\n    }\r\n\r\n    const shapes: number[][] = [];\r\n    const offsets = [0];\r\n    for (let i = 0; i < split.length; ++i) {\r\n      if (i !== 0) {\r\n        offsets.push(offsets[i - 1] + split[i - 1]);\r\n      }\r\n      const shape = dims.slice();\r\n      shape[axis] = split[i];\r\n      shapes.push(shape);\r\n    }\r\n    return [shapes, offsets];\r\n  }\r\n\r\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\r\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\r\n    if (numElementsAlongAxis % numOutputs !== 0) {\r\n      throw new Error('cannot split tensor to equal sized parts');\r\n    }\r\n    for (let i = 0; i < numOutputs; ++i) {\r\n      split.push(numElementsAlongAxis / numOutputs);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ReduceUtil {\r\n  /**\r\n   * Perform reduce operations on the specific operator\r\n   * @param a Input tensor data\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param keepdims If set to true, the axes which are reduced are left in the\r\n   *    result as dimensions with size one.\r\n   * @param op1 The operation to be performed on each element in the tensor\r\n   * @param op2 The operation to be performed between elements in the tensor\r\n   */\r\n  static calcReduce(\r\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\r\n      op2: (a: number, b: number) => number): Tensor {\r\n    const dims = a.dims.slice(0);\r\n    // if axes is not set, perform reduce on all axes\r\n    if (axes.length === 0) {\r\n      dims.forEach((d, ind) => axes.push(ind));\r\n    }\r\n    // get a temporary broadcastable output shape\r\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\r\n\r\n    // loop through the output and calculate result one by one\r\n    const size = ShapeUtil.size(outputDims);\r\n    const y = new Tensor(outputDims, a.type);\r\n    const strides = ShapeUtil.computeStrides(outputDims);\r\n    const inputStrides = ShapeUtil.computeStrides(dims);\r\n    const indicesY = new Array(dims.length);\r\n    for (let i = 0; i < size; i++) {\r\n      const indices = ShapeUtil.offsetToIndices(i, strides);\r\n      // map index\r\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\r\n      y.set(\r\n          indices,\r\n          ReduceUtil.calcReduceByAxis(\r\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\r\n    }\r\n\r\n    if (keepdims) {\r\n      return y;\r\n    } else {\r\n      // keepdims == 0, calculate the expected shape\r\n      return new Tensor(\r\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform reduce operations on the specific operator on specific axes\r\n   * @param a Input tensor data\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param dims The input dimension.\r\n   * @param curAxisInd Index in axes specifying the current dimension along\r\n   *      which the tensor will be reduced\r\n   * @param pos The current index of element to perform operation\r\n   * @param op1 The operation to be performed on each element in the tensor\r\n   * @param op2 The operation to be performed between elements in the tensor\r\n   */\r\n  static calcReduceByAxis(\r\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\r\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\r\n    let res = 0;\r\n    if (curAxisInd >= axes.length) {\r\n      return op1(input[pos]);\r\n    }\r\n    const axis = axes[curAxisInd];\r\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\r\n    for (let i = 0; i < dims[axis]; i++) {\r\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\r\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\r\n      pos += step;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Calculate the expected shape of a reduce operation\r\n   * @param dims The input tensor dimension\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param keepdims If set to true, the axes which are reduced are left in the\r\n   *    result as dimensions with size one.\r\n   */\r\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\r\n    const outputDims = dims.slice();\r\n    for (let i = 0; i < axes.length; i++) {\r\n      if (keepDims) {\r\n        outputDims[axes[i]] = 1;\r\n      } else {\r\n        outputDims[axes[i]] = 0;\r\n      }\r\n    }\r\n    return outputDims.filter(dim => dim !== 0);\r\n  }\r\n}\r\n\r\nexport class PoolConvUtil {\r\n  /**\r\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\r\n   * @param isGlobalOperator If true, perform global pooling.\r\n   * @param inputDims The input tensor dimension.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param strides Stride along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   */\r\n  static adjustPoolAttributes(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\r\n      pads: number[]) {\r\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\r\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\r\n    }\r\n\r\n    if (isGlobalOperator) {\r\n      // adjust kernel shape to cover the input dims\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        if (dim >= kernelShape.length) {\r\n          kernelShape.push(inputDims[dim + 2]);\r\n        } else {\r\n          kernelShape[dim] = inputDims[dim + 2];\r\n        }\r\n      }\r\n    }\r\n\r\n    // adjust strides length to match kernel shape length\r\n    for (let dim = 0; dim < kernelShape.length; dim++) {\r\n      if (dim < strides.length) {\r\n        if (strides[dim] < 0) {\r\n          throw new Error('strides should be greater than or equal to 1');\r\n        }\r\n      } else {\r\n        strides.push(1);\r\n      }\r\n    }\r\n\r\n    // adjust pads length to match 2 * kernel shape length\r\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\r\n      if (dim < pads.length) {\r\n        if (pads[dim] < 0) {\r\n          throw new Error('pad should be greater than or equal to 1');\r\n        }\r\n      } else {\r\n        pads.push(0);\r\n      }\r\n    }\r\n\r\n    // sanity checks for values in kernel shapes and pads\r\n    for (let dim = 0; dim < kernelShape.length; dim++) {\r\n      if (kernelShape[dim] <= 0) {\r\n        throw new Error('kernel shapes need to be greater than 0');\r\n      }\r\n\r\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\r\n        throw new Error('pads should be smaller than kernel');\r\n      }\r\n    }\r\n  }\r\n\r\n  // adjust pad values based on 'autoPad' attribute\r\n  static adjustPadsBasedOnAutoPad(\r\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\r\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\r\n    if (!autoPad) {\r\n      return;\r\n    }\r\n\r\n    if (pads.length !== 2 * (inputDims.length - 2)) {\r\n      throw new Error('length of pads should be twice the length of data dimensions');\r\n    }\r\n\r\n    if (strides.length !== (inputDims.length - 2)) {\r\n      throw new Error('length of strides should be the length of data dimensions');\r\n    }\r\n\r\n    if (kernelShape.length !== (inputDims.length - 2)) {\r\n      throw new Error('length of kernel shapes should be the length of data dimensions');\r\n    }\r\n\r\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n      PoolConvUtil.adjustPadAndReturnShape(\r\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\r\n          autoPad);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\r\n   * @param isGlobalOperator If true, perform global pooling.\r\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\r\n   * @param strides Stride along each axis.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\r\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\r\n   */\r\n  static computePoolOutputShape(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\r\n      autoPad?: string): number[] {\r\n    if (inputDims.length <= 0) {\r\n      throw new Error('input shape must be of size greater than 0');\r\n    }\r\n\r\n    // Add batch size and number of channels of output\r\n    const outputDims = [inputDims[0], inputDims[1]];\r\n\r\n    // TODO: support dilations for pool operators\r\n    const dilations = new Array<number>(kernelShape.length).fill(1);\r\n\r\n    PoolConvUtil.computeShapeHelper(\r\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\r\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\r\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\r\n   * @param strides Stride along each axis.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\r\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\r\n   */\r\n  static computeConvOutputShape(\r\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\r\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\r\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\r\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\r\n    }\r\n\r\n    // Add batch size and number of channels of output\r\n    const outputDims = [inputDims[0], filterDims[0]];\r\n\r\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\r\n    return outputDims;\r\n  }\r\n\r\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\r\n  // called by computePoolOutputShape() and computeConvOutputShape()\r\n  // adjust pads based on 'autoPad' attribute prior to shape computation\r\n  private static computeShapeHelper(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\r\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\r\n    if (isGlobalOperator) {\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        outputDims.push(1);\r\n      }\r\n    } else {\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\r\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\r\n            autoPad));\r\n      }\r\n    }\r\n  }\r\n\r\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\r\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\r\n  private static adjustPadAndReturnShape(\r\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\r\n      padTailIndex: number, autoPad?: string): number {\r\n    const dkernel = dilation * (kernel - 1) + 1;\r\n    if (autoPad && autoPad !== 'NOTSET') {\r\n      switch (autoPad) {\r\n        case 'VALID':\r\n          pads[padHeadIndex] = 0;\r\n          pads[padTailIndex] = 0;\r\n          return Math.floor(((inSize - dkernel) / stride) + 1);\r\n        case 'SAME_LOWER':\r\n        case 'SAME_UPPER':\r\n          if (dilation !== 1) {\r\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\r\n          } else {\r\n            const legacyTargetSize = (inSize + stride - 1) / stride;\r\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\r\n            pads[padHeadIndex] =\r\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\r\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\r\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\r\n          }\r\n        default:\r\n          throw new Error('Unsupported AutoPad type');\r\n      }\r\n    } else {\r\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\ninterface ExtraOptionsHandler {\r\n  (name: string, value: string): void;\r\n}\r\n\r\nexport const iterateExtraOptions =\r\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\r\n     handler: ExtraOptionsHandler): void => {\r\n      if (typeof options == 'object' && options !== null) {\r\n        if (seen.has(options)) {\r\n          throw new Error('Circular reference in options');\r\n        } else {\r\n          seen.add(options);\r\n        }\r\n      }\r\n\r\n      Object.entries(options).forEach(([key, value]) => {\r\n        const name = (prefix) ? prefix + key : key;\r\n        if (typeof value === 'object') {\r\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\r\n        } else if (typeof value === 'string' || typeof value === 'number') {\r\n          handler(name, value.toString());\r\n        } else if (typeof value === 'boolean') {\r\n          handler(name, (value) ? '1' : '0');\r\n        } else {\r\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\r\n        }\r\n      });\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env, InferenceSession} from 'onnxruntime-common';\r\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\r\nimport * as core from './wasm-core-impl';\r\nimport {initializeWebAssembly} from './wasm-factory';\r\n\r\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\r\nlet proxyWorker: Worker|undefined;\r\nlet initializing = false;\r\nlet initialized = false;\r\nlet aborted = false;\r\n\r\n// resolve; reject\r\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\r\n\r\nlet initWasmCallbacks: PromiseCallbacks;\r\nlet initOrtCallbacks: PromiseCallbacks;\r\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\r\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\r\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\r\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\r\n\r\nconst ensureWorker = (): void => {\r\n  if (initializing || !initialized || aborted || !proxyWorker) {\r\n    throw new Error('worker not ready');\r\n  }\r\n};\r\n\r\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\r\n  switch (ev.data.type) {\r\n    case 'init-wasm':\r\n      initializing = false;\r\n      if (ev.data.err) {\r\n        aborted = true;\r\n        initWasmCallbacks[1](ev.data.err);\r\n      } else {\r\n        initialized = true;\r\n        initWasmCallbacks[0]();\r\n      }\r\n      break;\r\n    case 'init-ort':\r\n      if (ev.data.err) {\r\n        initOrtCallbacks[1](ev.data.err);\r\n      } else {\r\n        initOrtCallbacks[0]();\r\n      }\r\n      break;\r\n    case 'create':\r\n      if (ev.data.err) {\r\n        createSessionCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        createSessionCallbacks.shift()![0](ev.data.out!);\r\n      }\r\n      break;\r\n    case 'release':\r\n      if (ev.data.err) {\r\n        releaseSessionCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        releaseSessionCallbacks.shift()![0]();\r\n      }\r\n      break;\r\n    case 'run':\r\n      if (ev.data.err) {\r\n        runCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        runCallbacks.shift()![0](ev.data.out!);\r\n      }\r\n      break;\r\n    case 'end-profiling':\r\n      if (ev.data.err) {\r\n        endProfilingCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        endProfilingCallbacks.shift()![0]();\r\n      }\r\n      break;\r\n    default:\r\n  }\r\n};\r\n\r\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\r\n\r\nexport const initWasm = async(): Promise<void> => {\r\n  if (isProxy()) {\r\n    if (initialized) {\r\n      return;\r\n    }\r\n    if (initializing) {\r\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\r\n    }\r\n    if (aborted) {\r\n      throw new Error('previous call to \\'initWasm()\\' failed.');\r\n    }\r\n\r\n    initializing = true;\r\n\r\n    // overwrite wasm filepaths\r\n    if (env.wasm.wasmPaths === undefined) {\r\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\r\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\r\n      }\r\n    }\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      proxyWorker?.terminate();\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\r\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\r\n      proxyWorker.onmessage = onProxyWorkerMessage;\r\n      initWasmCallbacks = [resolve, reject];\r\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\r\n      proxyWorker.postMessage(message);\r\n    });\r\n\r\n  } else {\r\n    return initializeWebAssembly(env.wasm);\r\n  }\r\n};\r\n\r\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      initOrtCallbacks = [resolve, reject];\r\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.initOrt(numThreads, loggingLevel);\r\n  }\r\n};\r\n\r\nexport const createSession =\r\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\r\n      createSessionCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\r\n      proxyWorker!.postMessage(message, [model.buffer]);\r\n    });\r\n  } else {\r\n    return core.createSession(model, options);\r\n  }\r\n};\r\n\r\nexport const releaseSession = async(sessionId: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      releaseSessionCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.releaseSession(sessionId);\r\n  }\r\n};\r\n\r\nexport const run = async(\r\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\r\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\r\n      runCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\r\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\r\n    });\r\n  } else {\r\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\r\n  }\r\n};\r\n\r\nexport const endProfiling = async(sessionId: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      endProfilingCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.endProfiling(sessionId);\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession} from 'onnxruntime-common';\r\n\r\nimport {iterateExtraOptions} from './options-utils';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\r\n  const wasm = getInstance();\r\n  let runOptionsHandle = 0;\r\n  const allocs: number[] = [];\r\n\r\n  const runOptions: InferenceSession.RunOptions = options || {};\r\n\r\n  try {\r\n    if (options?.logSeverityLevel === undefined) {\r\n      runOptions.logSeverityLevel = 2;  // Default to warning\r\n    } else if (\r\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\r\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\r\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\r\n    }\r\n\r\n    if (options?.logVerbosityLevel === undefined) {\r\n      runOptions.logVerbosityLevel = 0;  // Default to 0\r\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\r\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\r\n    }\r\n\r\n    if (options?.terminate === undefined) {\r\n      runOptions.terminate = false;\r\n    }\r\n\r\n    let tagDataOffset = 0;\r\n    if (options?.tag !== undefined) {\r\n      tagDataOffset = allocWasmString(options.tag, allocs);\r\n    }\r\n\r\n    runOptionsHandle = wasm._OrtCreateRunOptions(\r\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\r\n    if (runOptionsHandle === 0) {\r\n      throw new Error('Can\\'t create run options');\r\n    }\r\n\r\n    if (options?.extra !== undefined) {\r\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\r\n        const keyDataOffset = allocWasmString(key, allocs);\r\n        const valueDataOffset = allocWasmString(value, allocs);\r\n\r\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\r\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    return [runOptionsHandle, allocs];\r\n  } catch (e) {\r\n    if (runOptionsHandle !== 0) {\r\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\r\n    }\r\n    allocs.forEach(wasm._free);\r\n    throw e;\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\r\n\r\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\r\n\r\nlet ortInit: boolean;\r\n\r\n\r\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\r\n  switch (logLevel) {\r\n    case 'verbose':\r\n      return 0;\r\n    case 'info':\r\n      return 1;\r\n    case 'warning':\r\n      return 2;\r\n    case 'error':\r\n      return 3;\r\n    case 'fatal':\r\n      return 4;\r\n    default:\r\n      throw new Error(`unsupported logging level: ${logLevel}`);\r\n  }\r\n};\r\n\r\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\r\n  private sessionId: number;\r\n\r\n  inputNames: string[];\r\n  outputNames: string[];\r\n\r\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\r\n    if (!ortInit) {\r\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\r\n      ortInit = true;\r\n    }\r\n\r\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\r\n  }\r\n\r\n  async dispose(): Promise<void> {\r\n    return releaseSession(this.sessionId);\r\n  }\r\n\r\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\r\n      Promise<SessionHandler.ReturnType> {\r\n    const inputArray: Tensor[] = [];\r\n    const inputIndices: number[] = [];\r\n    Object.entries(feeds).forEach(kvp => {\r\n      const name = kvp[0];\r\n      const tensor = kvp[1];\r\n      const index = this.inputNames.indexOf(name);\r\n      if (index === -1) {\r\n        throw new Error(`invalid input '${name}'`);\r\n      }\r\n      inputArray.push(tensor);\r\n      inputIndices.push(index);\r\n    });\r\n\r\n    const outputIndices: number[] = [];\r\n    Object.entries(fetches).forEach(kvp => {\r\n      const name = kvp[0];\r\n      // TODO: support pre-allocated output\r\n      const index = this.outputNames.indexOf(name);\r\n      if (index === -1) {\r\n        throw new Error(`invalid output '${name}'`);\r\n      }\r\n      outputIndices.push(index);\r\n    });\r\n\r\n    const outputs =\r\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\r\n\r\n    const result: SessionHandler.ReturnType = {};\r\n    for (let i = 0; i < outputs.length; i++) {\r\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  startProfiling(): void {\r\n    // TODO: implement profiling\r\n  }\r\n\r\n  endProfiling(): void {\r\n    void endProfiling(this.sessionId);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession} from 'onnxruntime-common';\r\n\r\nimport {iterateExtraOptions} from './options-utils';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\r\n  switch (graphOptimizationLevel) {\r\n    case 'disabled':\r\n      return 0;\r\n    case 'basic':\r\n      return 1;\r\n    case 'extended':\r\n      return 2;\r\n    case 'all':\r\n      return 99;\r\n    default:\r\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\r\n  }\r\n};\r\n\r\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\r\n  switch (executionMode) {\r\n    case 'sequential':\r\n      return 0;\r\n    case 'parallel':\r\n      return 1;\r\n    default:\r\n      throw new Error(`unsupported execution mode: ${executionMode}`);\r\n  }\r\n};\r\n\r\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\r\n  if (!options.extra) {\r\n    options.extra = {};\r\n  }\r\n  if (!options.extra.session) {\r\n    options.extra.session = {};\r\n  }\r\n  const session = options.extra.session as Record<string, string>;\r\n  if (!session.use_ort_model_bytes_directly) {\r\n    // eslint-disable-next-line camelcase\r\n    session.use_ort_model_bytes_directly = '1';\r\n  }\r\n};\r\n\r\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\r\n  const wasm = getInstance();\r\n  let sessionOptionsHandle = 0;\r\n  const allocs: number[] = [];\r\n\r\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\r\n  appendDefaultOptions(sessionOptions);\r\n\r\n  try {\r\n    if (options?.graphOptimizationLevel === undefined) {\r\n      sessionOptions.graphOptimizationLevel = 'all';\r\n    }\r\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\r\n\r\n    if (options?.enableCpuMemArena === undefined) {\r\n      sessionOptions.enableCpuMemArena = true;\r\n    }\r\n\r\n    if (options?.enableMemPattern === undefined) {\r\n      sessionOptions.enableMemPattern = true;\r\n    }\r\n\r\n    if (options?.executionMode === undefined) {\r\n      sessionOptions.executionMode = 'sequential';\r\n    }\r\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\r\n\r\n    let logIdDataOffset = 0;\r\n    if (options?.logId !== undefined) {\r\n      logIdDataOffset = allocWasmString(options.logId, allocs);\r\n    }\r\n\r\n    if (options?.logSeverityLevel === undefined) {\r\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\r\n    } else if (\r\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\r\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\r\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\r\n    }\r\n\r\n    if (options?.logVerbosityLevel === undefined) {\r\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\r\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\r\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\r\n    }\r\n\r\n    if (options?.enableProfiling === undefined) {\r\n      sessionOptions.enableProfiling = false;\r\n    }\r\n\r\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\r\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\r\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\r\n        sessionOptions.logVerbosityLevel!);\r\n    if (sessionOptionsHandle === 0) {\r\n      throw new Error('Can\\'t create session options');\r\n    }\r\n\r\n    if (options?.extra !== undefined) {\r\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\r\n        const keyDataOffset = allocWasmString(key, allocs);\r\n        const valueDataOffset = allocWasmString(value, allocs);\r\n\r\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\r\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (options?.executionProviders) {\r\n      for (const ep of options.executionProviders) {\r\n        const name = typeof ep === 'string' ? ep : ep.name;\r\n        if (name === 'webnn') {\r\n          let deviceType = 2;\r\n          let powerPreference = 0;\r\n          if (typeof ep !== 'string') {\r\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\r\n            if (webnnOptions?.deviceType) {\r\n              deviceType = webnnOptions.deviceType;\r\n            }\r\n            if (webnnOptions?.powerPreference) {\r\n              powerPreference = webnnOptions.powerPreference;\r\n            }\r\n          }\r\n          const preferenceValues = [0, 1, 2];\r\n          if (!preferenceValues.includes(deviceType)) {\r\n            throw new Error(\"Invalid deviceType value, it shoule be one of {0, 1, 2}\");\r\n          }\r\n          if (!preferenceValues.includes(powerPreference)) {\r\n            throw new Error(\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\");\r\n          }\r\n          const deviceTypeNames = [\"Auto\", \"GPU\", \"CPU\"];\r\n          const powerPreferenceNames = [\"Auto\", \"High-performance\", \"Low-power\"];\r\n          console.log(`webnn device type: ${deviceTypeNames[deviceType]}`);\r\n          console.log(`webnn power preference: ${powerPreferenceNames[powerPreference]}`);\r\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, deviceType, powerPreference) !== 0) {\r\n            throw new Error(`Can't append WebNN execution provider`);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [sessionOptionsHandle, allocs];\r\n  } catch (e) {\r\n    if (sessionOptionsHandle !== 0) {\r\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\r\n    }\r\n    allocs.forEach(wasm._free);\r\n    throw e;\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getInstance} from './wasm-factory';\r\n\r\nexport const allocWasmString = (data: string, allocs: number[]): number => {\r\n  const wasm = getInstance();\r\n\r\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\r\n  const dataOffset = wasm._malloc(dataLength);\r\n  wasm.stringToUTF8(data, dataOffset, dataLength);\r\n  allocs.push(dataOffset);\r\n\r\n  return dataOffset;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\r\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\r\nimport {setRunOptions} from './run-options';\r\nimport {setSessionOptions} from './session-options';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\n/**\r\n * initialize ORT environment.\r\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\r\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\r\n */\r\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\r\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\r\n  if (errorCode !== 0) {\r\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\r\n  }\r\n};\r\n\r\n/**\r\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\r\n */\r\ntype SessionMetadata = [number, number[], number[]];\r\n\r\nconst activeSessions: Array<SessionMetadata|undefined> = [];\r\n\r\n/**\r\n * create an instance of InferenceSession.\r\n * @returns the metadata of InferenceSession. 0-value handle for failure.\r\n */\r\nexport const createSession =\r\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\r\n      const wasm = getInstance();\r\n      const modelDataOffset = wasm._malloc(model.byteLength);\r\n      let sessionHandle = 0;\r\n      let sessionOptionsHandle = 0;\r\n      let allocs: number[] = [];\r\n\r\n      try {\r\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\r\n\r\n        wasm.HEAPU8.set(model, modelDataOffset);\r\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\r\n        if (sessionHandle === 0) {\r\n          throw new Error('Can\\'t create a session');\r\n        }\r\n      } finally {\r\n        wasm._free(modelDataOffset);\r\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\r\n        allocs.forEach(wasm._free);\r\n      }\r\n\r\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\r\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\r\n\r\n      const inputNames = [];\r\n      const inputNamesUTF8Encoded = [];\r\n      const outputNames = [];\r\n      const outputNamesUTF8Encoded = [];\r\n      for (let i = 0; i < inputCount; i++) {\r\n        const name = wasm._OrtGetInputName(sessionHandle, i);\r\n        if (name === 0) {\r\n          throw new Error('Can\\'t get an input name');\r\n        }\r\n        inputNamesUTF8Encoded.push(name);\r\n        inputNames.push(wasm.UTF8ToString(name));\r\n      }\r\n      for (let i = 0; i < outputCount; i++) {\r\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\r\n        if (name === 0) {\r\n          throw new Error('Can\\'t get an output name');\r\n        }\r\n        outputNamesUTF8Encoded.push(name);\r\n        outputNames.push(wasm.UTF8ToString(name));\r\n      }\r\n\r\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\r\n      return [activeSessions.length - 1, inputNames, outputNames];\r\n    };\r\n\r\nexport const releaseSession = (sessionId: number): void => {\r\n  const wasm = getInstance();\r\n  const session = activeSessions[sessionId];\r\n  if (!session) {\r\n    throw new Error('invalid session id');\r\n  }\r\n  const sessionHandle = session[0];\r\n  const inputNamesUTF8Encoded = session[1];\r\n  const outputNamesUTF8Encoded = session[2];\r\n\r\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\r\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\r\n  wasm._OrtReleaseSession(sessionHandle);\r\n  activeSessions[sessionId] = undefined;\r\n};\r\n\r\n/**\r\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\r\n */\r\nconst enum DataType {\r\n  undefined = 0,\r\n  float = 1,\r\n  uint8 = 2,\r\n  int8 = 3,\r\n  uint16 = 4,\r\n  int16 = 5,\r\n  int32 = 6,\r\n  int64 = 7,\r\n  string = 8,\r\n  bool = 9,\r\n  float16 = 10,\r\n  double = 11,\r\n  uint32 = 12,\r\n  uint64 = 13,\r\n  complex64 = 14,\r\n  complex128 = 15,\r\n  bfloat16 = 16\r\n}\r\n\r\n\r\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\r\n  switch (type) {\r\n    case 'int8':\r\n      return DataType.int8;\r\n    case 'uint8':\r\n      return DataType.uint8;\r\n    case 'bool':\r\n      return DataType.bool;\r\n    case 'int16':\r\n      return DataType.int16;\r\n    case 'uint16':\r\n      return DataType.uint16;\r\n    case 'int32':\r\n      return DataType.int32;\r\n    case 'uint32':\r\n      return DataType.uint32;\r\n    case 'float32':\r\n      return DataType.float;\r\n    case 'float64':\r\n      return DataType.double;\r\n    case 'string':\r\n      return DataType.string;\r\n    case 'int64':\r\n      return DataType.int64;\r\n    case 'uint64':\r\n      return DataType.uint64;\r\n\r\n    default:\r\n      throw new Error(`unsupported data type: ${type}`);\r\n  }\r\n};\r\n\r\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\r\n  switch (typeProto) {\r\n    case DataType.int8:\r\n      return 'int8';\r\n    case DataType.uint8:\r\n      return 'uint8';\r\n    case DataType.bool:\r\n      return 'bool';\r\n    case DataType.int16:\r\n      return 'int16';\r\n    case DataType.uint16:\r\n      return 'uint16';\r\n    case DataType.int32:\r\n      return 'int32';\r\n    case DataType.uint32:\r\n      return 'uint32';\r\n    case DataType.float:\r\n      return 'float32';\r\n    case DataType.double:\r\n      return 'float64';\r\n    case DataType.string:\r\n      return 'string';\r\n    case DataType.int64:\r\n      return 'int32';\r\n    case DataType.uint64:\r\n      return 'uint32';\r\n\r\n    default:\r\n      throw new Error(`unsupported data type: ${typeProto}`);\r\n  }\r\n};\r\n\r\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\r\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\r\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\r\n      switch (type) {\r\n        case 'float32':\r\n          return Float32Array;\r\n        case 'uint8':\r\n          return Uint8Array;\r\n        case 'int8':\r\n          return Int8Array;\r\n        case 'uint16':\r\n          return Uint16Array;\r\n        case 'int16':\r\n          return Int16Array;\r\n        case 'int32':\r\n          return Int32Array;\r\n        case 'bool':\r\n          return Uint8Array;\r\n        case 'float64':\r\n          return Float64Array;\r\n        case 'uint32':\r\n          return Uint32Array;\r\n        case 'int64':\r\n          return BigInt64Array;\r\n        case 'uint64':\r\n          return BigUint64Array;\r\n        default:\r\n          throw new Error(`unsupported type: ${type}`);\r\n      }\r\n    };\r\n\r\n/**\r\n * perform inference run\r\n */\r\nexport const run =\r\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\r\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\r\n      const wasm = getInstance();\r\n      const session = activeSessions[sessionId];\r\n      if (!session) {\r\n        throw new Error('invalid session id');\r\n      }\r\n      const sessionHandle = session[0];\r\n      const inputNamesUTF8Encoded = session[1];\r\n      const outputNamesUTF8Encoded = session[2];\r\n\r\n      const inputCount = inputIndices.length;\r\n      const outputCount = outputIndices.length;\r\n\r\n      let runOptionsHandle = 0;\r\n      let runOptionsAllocs: number[] = [];\r\n\r\n      const inputValues: number[] = [];\r\n      const inputAllocs: number[] = [];\r\n\r\n      try {\r\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\r\n\r\n        // create input tensors\r\n        for (let i = 0; i < inputCount; i++) {\r\n          const dataType = inputs[i][0];\r\n          const dims = inputs[i][1];\r\n          const data = inputs[i][2];\r\n\r\n          let dataOffset: number;\r\n          let dataByteLength: number;\r\n\r\n          if (Array.isArray(data)) {\r\n            // string tensor\r\n            dataByteLength = 4 * data.length;\r\n            dataOffset = wasm._malloc(dataByteLength);\r\n            inputAllocs.push(dataOffset);\r\n            let dataIndex = dataOffset / 4;\r\n            for (let i = 0; i < data.length; i++) {\r\n              if (typeof data[i] !== 'string') {\r\n                throw new TypeError(`tensor data at index ${i} is not a string`);\r\n              }\r\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\r\n            }\r\n          } else {\r\n            dataByteLength = data.byteLength;\r\n            dataOffset = wasm._malloc(dataByteLength);\r\n            inputAllocs.push(dataOffset);\r\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\r\n          }\r\n\r\n          const stack = wasm.stackSave();\r\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\r\n          try {\r\n            let dimIndex = dimsOffset / 4;\r\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\r\n            const tensor = wasm._OrtCreateTensor(\r\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\r\n            if (tensor === 0) {\r\n              throw new Error('Can\\'t create a tensor');\r\n            }\r\n            inputValues.push(tensor);\r\n          } finally {\r\n            wasm.stackRestore(stack);\r\n          }\r\n        }\r\n\r\n        const beforeRunStack = wasm.stackSave();\r\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\r\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\r\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\r\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\r\n\r\n        try {\r\n          let inputValuesIndex = inputValuesOffset / 4;\r\n          let inputNamesIndex = inputNamesOffset / 4;\r\n          let outputValuesIndex = outputValuesOffset / 4;\r\n          let outputNamesIndex = outputNamesOffset / 4;\r\n          for (let i = 0; i < inputCount; i++) {\r\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\r\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\r\n          }\r\n          for (let i = 0; i < outputCount; i++) {\r\n            wasm.HEAPU32[outputValuesIndex++] = 0;\r\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\r\n          }\r\n\r\n          // support RunOptions\r\n          let errorCode = wasm._OrtRun(\r\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\r\n              outputValuesOffset, runOptionsHandle);\r\n\r\n          const output: SerializableTensor[] = [];\r\n\r\n          if (errorCode === 0) {\r\n            for (let i = 0; i < outputCount; i++) {\r\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\r\n\r\n              const beforeGetTensorDataStack = wasm.stackSave();\r\n              // stack allocate 4 pointer value\r\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\r\n\r\n              let type: Tensor.Type|undefined, dataOffset = 0;\r\n              try {\r\n                errorCode = wasm._OrtGetTensorData(\r\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\r\n                if (errorCode !== 0) {\r\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\r\n                }\r\n                let tensorDataIndex = tensorDataOffset / 4;\r\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\r\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\r\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\r\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\r\n                const dims = [];\r\n                for (let i = 0; i < dimsLength; i++) {\r\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\r\n                }\r\n                wasm._OrtFree(dimsOffset);\r\n\r\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\r\n                type = tensorDataTypeEnumToString(dataType);\r\n                if (type === 'string') {\r\n                  const stringData: string[] = [];\r\n                  let dataIndex = dataOffset / 4;\r\n                  for (let i = 0; i < size; i++) {\r\n                    const offset = wasm.HEAPU32[dataIndex++];\r\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\r\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\r\n                  }\r\n                  output.push([type, dims, stringData]);\r\n                } else {\r\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\r\n                  const data = new typedArrayConstructor(size);\r\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\r\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\r\n                  output.push([type, dims, data]);\r\n                }\r\n              } finally {\r\n                wasm.stackRestore(beforeGetTensorDataStack);\r\n                if (type === 'string' && dataOffset) {\r\n                  wasm._free(dataOffset);\r\n                }\r\n                wasm._OrtReleaseTensor(tensor);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (errorCode === 0) {\r\n            return output;\r\n          } else {\r\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\r\n          }\r\n        } finally {\r\n          wasm.stackRestore(beforeRunStack);\r\n        }\r\n      } finally {\r\n        inputValues.forEach(wasm._OrtReleaseTensor);\r\n        inputAllocs.forEach(wasm._free);\r\n\r\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\r\n        runOptionsAllocs.forEach(wasm._free);\r\n      }\r\n    };\r\n\r\n/**\r\n * end profiling\r\n */\r\nexport const endProfiling = (sessionId: number): void => {\r\n  const wasm = getInstance();\r\n  const session = activeSessions[sessionId];\r\n  if (!session) {\r\n    throw new Error('invalid session id');\r\n  }\r\n  const sessionHandle = session[0];\r\n\r\n  // profile file name is not used yet, but it must be freed.\r\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\r\n  if (profileFileName === 0) {\r\n    throw new Error('Can\\'t get an profile file name');\r\n  }\r\n  wasm._OrtFree(profileFileName);\r\n};\r\n\r\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\r\n  const buffers: ArrayBufferLike[] = [];\r\n  for (const tensor of tensors) {\r\n    const data = tensor[2];\r\n    if (!Array.isArray(data) && data.buffer) {\r\n      buffers.push(data.buffer);\r\n    }\r\n  }\r\n  return buffers;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Env} from 'onnxruntime-common';\r\nimport * as path from 'path';\r\n\r\nimport {OrtWasmModule} from './binding/ort-wasm';\r\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\r\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\r\nimport ortWasmFactory from './binding/ort-wasm.js';\r\n\r\nlet wasm: OrtWasmModule|undefined;\r\nlet initialized = false;\r\nlet initializing = false;\r\nlet aborted = false;\r\n\r\nconst isMultiThreadSupported = (): boolean => {\r\n  try {\r\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\r\n    if (typeof SharedArrayBuffer === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    // Test for transferability of SABs (for browsers. needed for Firefox)\r\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\r\n    if (typeof MessageChannel !== 'undefined') {\r\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\r\n    }\r\n\r\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\r\n    // This typed array is a WebAssembly program containing threaded instructions.\r\n    return WebAssembly.validate(new Uint8Array([\r\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\r\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\r\n    ]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isSimdSupported = (): boolean => {\r\n  try {\r\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\r\n    // This typed array is a WebAssembly program containing SIMD instructions.\r\n    return WebAssembly.validate(new Uint8Array(\r\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\r\n  if (useThreads) {\r\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\r\n  } else {\r\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\r\n  }\r\n};\r\n\r\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\r\n  if (initialized) {\r\n    return Promise.resolve();\r\n  }\r\n  if (initializing) {\r\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\r\n  }\r\n  if (aborted) {\r\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\r\n  }\r\n\r\n  initializing = true;\r\n\r\n  // wasm flags are already initialized\r\n  const timeout = flags.initTimeout!;\r\n  const numThreads = flags.numThreads!;\r\n  const simd = flags.simd!;\r\n\r\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\r\n  const useSimd = simd && isSimdSupported();\r\n\r\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\r\n  const wasmFileName = getWasmFileName(false, useThreads);\r\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\r\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\r\n\r\n  let isTimeout = false;\r\n\r\n  const tasks: Array<Promise<void>> = [];\r\n\r\n  // promise for timeout\r\n  if (timeout > 0) {\r\n    tasks.push(new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        isTimeout = true;\r\n        resolve();\r\n      }, timeout);\r\n    }));\r\n  }\r\n\r\n  // promise for module initialization\r\n  tasks.push(new Promise((resolve, reject) => {\r\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\r\n    const config: Partial<OrtWasmModule> = {\r\n      locateFile: (fileName: string, scriptDirectory: string) => {\r\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\r\n          return URL.createObjectURL(new Blob(\r\n              [\r\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\r\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\r\n                require('./binding/ort-wasm-threaded.worker.js')\r\n              ],\r\n              {type: 'text/javascript'}));\r\n        }\r\n\r\n        if (fileName === wasmFileName) {\r\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\r\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\r\n        }\r\n\r\n        return scriptDirectory + fileName;\r\n      }\r\n    };\r\n\r\n    if (useThreads) {\r\n      if (typeof Blob === 'undefined') {\r\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\r\n      } else {\r\n        const scriptSourceCode =\r\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\r\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\r\n      }\r\n    }\r\n\r\n    factory(config).then(\r\n        // wasm module initialized successfully\r\n        module => {\r\n          initializing = false;\r\n          initialized = true;\r\n          wasm = module;\r\n          resolve();\r\n        },\r\n        // wasm module failed to initialize\r\n        (what) => {\r\n          initializing = false;\r\n          aborted = true;\r\n          reject(what);\r\n        });\r\n  }));\r\n\r\n  await Promise.race(tasks);\r\n\r\n  if (isTimeout) {\r\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\r\n  }\r\n};\r\n\r\nexport const getInstance = (): OrtWasmModule => {\r\n  if (initialized && wasm) {\r\n    return wasm;\r\n  }\r\n\r\n  throw new Error('WebAssembly is not initialized yet.');\r\n};\r\n\r\nexport const dispose = (): void => {\r\n  if (initialized && !initializing && !aborted) {\r\n    initializing = true;\r\n\r\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\r\n    wasm = undefined;\r\n\r\n    initializing = false;\r\n    initialized = false;\r\n    aborted = true;\r\n  }\r\n};\r\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){function t(){return F.buffer!=G&&se(F.buffer),V}function r(){return F.buffer!=G&&se(F.buffer),q}function a(){return F.buffer!=G&&se(F.buffer),X}function o(){return F.buffer!=G&&se(F.buffer),J}function i(){return F.buffer!=G&&se(F.buffer),$}function u(){return F.buffer!=G&&se(F.buffer),Z}function s(){return F.buffer!=G&&se(F.buffer),K}var c,f,l;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){f=e,l=t}));var p,d={};for(p in c)c.hasOwnProperty(p)&&(d[p]=c[p]);var m=\\\"./this.program\\\";function h(e,t){throw t}var g,v,y,b,_,w=\\\"object\\\"==typeof window,A=\\\"function\\\"==typeof importScripts,T=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function S(e){return c.locateFile?c.locateFile(e,E):E+e}if(T){if(E=A?n(622).dirname(E)+\\\"/\\\":__dirname+\\\"/\\\",g=function(e,t){return b||(b=n(747)),_||(_=n(622)),e=_.normalize(e),b.readFileSync(e,t?null:\\\"utf8\\\")},y=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),U(e.buffer),e},v=function(e,t,r){b||(b=n(747)),_||(_=n(622)),e=_.normalize(e),b.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof Dn))throw e})),process.on(\\\"unhandledRejection\\\",Ae),h=function(e,t){if(ge())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===global.Worker){var k;try{k=n(13)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=k.Worker}}else(w||A)&&(A?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",T?(g=function(e,t){return b||(b=n(747)),_||(_=n(622)),e=_.normalize(e),b.readFileSync(e,t?null:\\\"utf8\\\")},y=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),U(e.buffer),e},v=function(e,t,r){b||(b=n(747)),_||(_=n(622)),e=_.normalize(e),b.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},A&&(y=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));T&&\\\"undefined\\\"==typeof performance&&(global.performance=n(630).performance);var C,M,P=c.print||console.log.bind(console),x=c.printErr||console.warn.bind(console);for(p in d)d.hasOwnProperty(p)&&(c[p]=d[p]);d=null,c.thisProgram&&(m=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(M=c.wasmBinary);var D=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&Ae(\\\"no native wasm support detected\\\");var F,R,I,W=!1;function U(e,t){e||Ae(\\\"Assertion failed: \\\"+t)}function j(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var L=\\\"undefined\\\"!=typeof TextDecoder?new j(\\\"utf8\\\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&L)return L.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(e,t){return e?H(r(),e,t):\\\"\\\"}function N(e,t,n,r){if(!(0<r))return 0;var a=n;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++]=i}else{if(2047>=i){if(n+1>=r)break;t[n++]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++]=224|i>>12}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63}t[n++]=128|i>>6&63}t[n++]=128|63&i}}return t[n]=0,n-a}function z(e,t,n){return N(e,r(),t,n)}function B(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}var G,V,q,X,J,$,Z,Q,K,ee=\\\"undefined\\\"!=typeof TextDecoder?new j(\\\"utf-16le\\\"):void 0;function te(e,t){for(var n=e>>1,i=n+t/2;!(n>=i)&&o()[n];)++n;if(32<(n<<=1)-e&&ee)return ee.decode(r().subarray(e,n));for(n=\\\"\\\",i=0;!(i>=t/2);++i){var u=a()[e+2*i>>1];if(0==u)break;n+=String.fromCharCode(u)}return n}function ne(e,t,n){if(void 0===n&&(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var o=0;o<n;++o){var i=e.charCodeAt(o);a()[t>>1]=i,t+=2}return a()[t>>1]=0,t-r}function re(e){return 2*e.length}function ae(e,t){for(var n=0,r=\\\"\\\";!(n>=t/4);){var a=i()[e+4*n>>2];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r}function oe(e,t,n){if(void 0===n&&(n=2147483647),4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),i()[t>>2]=o,(t+=4)+4>n)break}return i()[t>>2]=0,t-r}function ie(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t}function ue(e){var n=B(e)+1,r=an(n);return r&&N(e,t(),r,n),r}function se(e){G=e,c.HEAP8=V=new Int8Array(e),c.HEAP16=X=new Int16Array(e),c.HEAP32=$=new Int32Array(e),c.HEAPU8=q=new Uint8Array(e),c.HEAPU16=J=new Uint16Array(e),c.HEAPU32=Z=new Uint32Array(e),c.HEAPF32=Q=new Float32Array(e),c.HEAPF64=K=new Float64Array(e)}O&&(G=c.buffer);var ce=c.INITIAL_MEMORY||16777216;if(O)F=c.wasmMemory,G=c.buffer;else if(c.wasmMemory)F=c.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:ce/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw x(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),T&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");F&&(G=F.buffer),ce=G.byteLength,se(G);var fe,le=[],pe=[],de=[],me=[],he=0;function ge(){return D||0<he}function ve(){var e=c.preRun.shift();le.unshift(e)}var ye,be=0,_e=null,we=null;function Ae(e){throw c.onAbort&&c.onAbort(e),U(!O),x(e),W=!0,I=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function Te(){return ye.startsWith(\\\"data:application/octet-stream;base64,\\\")}function Oe(){var e=ye;try{if(e==ye&&M)return new Uint8Array(M);if(y)return y(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Ae(e)}}c.preloadedImages={},c.preloadedAudios={},ye=\\\"ort-wasm-threaded.wasm\\\",Te()||(ye=S(ye));var Ee={985396:function(){throw\\\"Canceled!\\\"}};function Se(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.qc;\\\"number\\\"==typeof n?void 0===t.Jb?fe.get(n)():fe.get(n)(t.Jb):n(void 0===t.Jb?null:t.Jb)}}}function ke(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),xn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),xn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function Ce(e){if(O)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=Pe.Eb[e];t&&(i()[e+12>>2]=0,Pe.Ub(t.worker))}c._emscripten_futex_wake=ke;var Me,Pe={Hb:[],Gb:[],bc:[],bd:function(){},vc:function(){for(var e=an(228),t=0;57>t;++t)u()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=an(512);for(t=0;128>t;++t)u()[n/4+t]=0;Atomics.store(u(),e+100>>2,n),Atomics.store(u(),e+40>>2,e),bn(e,!A,1),ln(e)},wc:function(){Pe.receiveObjectTransfer=Pe.Cc,Pe.threadInit=Pe.Mc,Pe.threadCancel=Pe.Lc,Pe.threadExit=Pe.kc,Pe.setExitStatus=Pe.Ec},Eb:{},ac:[],hc:function(){for(;0<Pe.ac.length;)Pe.ac.pop()();wn()},ic:function(e,t){Atomics.store(u(),e+56>>2,1),Atomics.store(u(),e+60>>2,0),Pe.hc(),Atomics.store(u(),e+4>>2,t),Atomics.store(u(),e+0>>2,1),ke(e+0,2147483647),bn(0,0,0)},Ec:function(e){I=e},kc:function(e){var t=sn();t&&(Pe.ic(t,e),O&&postMessage({cmd:\\\"exit\\\"}))},Lc:function(){Pe.ic(sn(),-1),postMessage({cmd:\\\"cancelDone\\\"})},jc:function(){for(var e in Pe.Eb){var t=Pe.Eb[e];t&&t.worker&&Pe.Ub(t.worker)}for(Pe.Eb={},e=0;e<Pe.Hb.length;++e){var n=Pe.Hb[e];n.terminate()}for(Pe.Hb=[],e=0;e<Pe.Gb.length;++e)t=(n=Pe.Gb[e]).Db,Pe.Zb(t),n.terminate();Pe.Gb=[]},Zb:function(e){if(e){if(e.Fb){var t=i()[e.Fb+100>>2];i()[e.Fb+100>>2]=0,un(t),un(e.Fb)}e.Fb=0,e.Yb&&e.Ib&&un(e.Ib),e.Ib=0,e.worker&&(e.worker.Db=null)}},Ub:function(e){Pe.Dc((function(){delete Pe.Eb[e.Db.Fb],Pe.Hb.push(e),Pe.Gb.splice(Pe.Gb.indexOf(e),1),Pe.Zb(e.Db),e.Db=void 0}))},Dc:function(e){i()[Pn>>2]=0;try{e()}finally{i()[Pn>>2]=1}},Cc:function(){},Mc:function(){for(var e in Pe.bc)Pe.bc[e]()},zc:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.Db&&(Pe.oc=e.Db.Fb),r.targetThread&&r.targetThread!=sn()){var o=Pe.Eb[r.jd];o?o.worker.postMessage(n.data,r.transferList):x('Internal error! Worker sent a message \\\"'+a+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===a)mn();else if(\\\"spawnThread\\\"===a)Re(n.data);else if(\\\"cleanupThread\\\"===a)Ce(r.thread);else if(\\\"killThread\\\"===a){if(n=r.thread,O)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=Pe.Eb[n],delete Pe.Eb[n],r.worker.terminate(),Pe.Zb(r),Pe.Gb.splice(Pe.Gb.indexOf(r.worker),1),r.worker.Db=void 0}else if(\\\"cancelThread\\\"===a){if(n=r.thread,O)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";Pe.Eb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===a)e.loaded=!0,t&&t(e),e.Ob&&(e.Ob(),delete e.Ob);else if(\\\"print\\\"===a)P(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===a)x(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===a)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===a)e.Db&&Atomics.load(u(),e.Db.Fb+64>>2)&&Pe.Ub(e);else if(\\\"exitProcess\\\"===a)try{Rn(r.returnCode)}catch(e){if(e instanceof Dn)return;throw e}else\\\"cancelDone\\\"===a?Pe.Ub(e):\\\"objectTransfer\\\"!==a&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):x(\\\"worker sent an unknown command \\\"+a));Pe.oc=void 0},e.onerror=function(e){x(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},T&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:F,wasmModule:R})},lc:function(){var e=S(\\\"ort-wasm-threaded.worker.js\\\");Pe.Hb.push(new Worker(e))},rc:function(){return 0==Pe.Hb.length&&(Pe.lc(),Pe.zc(Pe.Hb[0])),Pe.Hb.pop()},Sc:function(e){for(e=performance.now()+e;performance.now()<e;);}};function xe(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[on()>>2]=28,-1;e=Me()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function De(e,t){if(O)return Pt(1,1,e,t);de.unshift({qc:e,Jb:t})}function Fe(e){this.Nb=e-16,this.Jc=function(e){i()[this.Nb+4>>2]=e},this.Gc=function(e){i()[this.Nb+8>>2]=e},this.Hc=function(){i()[this.Nb>>2]=0},this.Fc=function(){t()[this.Nb+12>>0]=0},this.Ic=function(){t()[this.Nb+13>>0]=0},this.tc=function(e,t){this.Jc(e),this.Gc(t),this.Hc(),this.Fc(),this.Ic()}}function Re(e){if(O)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=Pe.rc();if(!t)return 6;if(void 0!==t.Db)throw\\\"Internal error!\\\";if(!e.Tb)throw\\\"Internal error, no pthread ptr!\\\";Pe.Gb.push(t);for(var n=an(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var a=e.Ib+e.Kb,o=(r=Pe.Eb[e.Tb]={worker:t,Ib:e.Ib,Kb:e.Kb,Yb:e.Yb,Fb:e.Tb}).Fb>>2;Atomics.store(u(),o+16,e.detached),Atomics.store(u(),o+25,n),Atomics.store(u(),o+10,r.Fb),Atomics.store(u(),o+20,e.Kb),Atomics.store(u(),o+19,a),Atomics.store(u(),o+26,e.Kb),Atomics.store(u(),o+28,a),Atomics.store(u(),o+29,e.detached),n=_n()+40,Atomics.store(u(),o+43,n),t.Db=r;var s={cmd:\\\"run\\\",start_routine:e.Kc,arg:e.Jb,threadInfoStruct:e.Tb,stackBase:e.Ib,stackSize:e.Kb};return t.Ob=function(){s.time=performance.now(),t.postMessage(s,e.Rc)},t.loaded&&(t.Ob(),delete t.Ob),0}function Ie(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),xn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),xn>>2,0),-73;if(0==(a=Atomics.exchange(i(),xn>>2,0)))break;if(mn(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),xn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function We(){T||A||(C||(C={}),C[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(C[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,x(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){Cn(e,t),Sn(e)},c.invokeEntryPoint=function(e,t){return fe.get(e)(t)},Me=T?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:O?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Ue={},je=[null,[],[]];function Le(e,t){var n=je[e];0===t||10===t?((1===e?P:x)(H(n,0)),n.length=0):n.push(t)}var He={};function Ye(e,t){return O?Pt(2,1,e,t):(e=Y(e),He.Wc(e,t))}function Ne(e,t,n){return O?Pt(3,1,e,t,n):0}function ze(e,t){if(O)return Pt(4,1,e,t)}function Be(e,t,n){if(O)return Pt(5,1,e,t,n)}function Ge(e,t,n){return O?Pt(6,1,e,t,n):0}function Ve(e,t){if(O)return Pt(7,1,e,t)}function qe(e,t){return O?Pt(8,1,e,t):(e=Y(e),He.Xc(e,t))}function Xe(e,t,n,a,o,i){if(O)t=Pt(9,1,e,t,n,a,o,i);else if(i<<=12,0!=(16&a)&&0!=e%65536)t=-28;else if(0!=(32&a)){var u=65536*Math.ceil(t/65536);(e=Mn(65536,u))?r().fill(0,e,e+u):e=0,e?(Ue[e]={Bc:e,yc:t,mc:!0,fd:o,ed:n,flags:a,offset:i},t=e):t=-48}else t=-52;return t}function Je(e,t){if(O)e=Pt(10,1,e,t);else{var n=Ue[e];0!==t&&n?(t===n.yc&&(Ue[e]=null,n.mc&&un(n.Bc)),e=0):e=-28}return e}function $e(e,t,n){if(O)return Pt(11,1,e,t,n)}function Ze(e,t,n){return O?Pt(12,1,e,t,n):(e=Y(e),He.Yc(e,t,n))}function Qe(e){if(O)return Pt(13,1,e)}function Ke(e,t){if(O)return Pt(14,1,e,t)}function et(e){if(O)return Pt(15,1,e)}function tt(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var nt=void 0;function rt(e){for(var t=\\\"\\\";r()[e];)t+=nt[r()[e++]];return t}var at={},ot={},it={};function ut(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return 48<=t&&57>=t?\\\"_\\\"+e:e}function st(e,t){return e=ut(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function ct(e){var t=Error,n=st(e,(function(t){this.name=e,this.message=t,void 0!==(t=Error(t).stack)&&(this.stack=this.toString()+\\\"\\\\n\\\"+t.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var ft=void 0;function lt(e){throw new ft(e)}function pt(e,t,n){if(n=n||{},!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=t.name;if(e||lt('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),ot.hasOwnProperty(e)){if(n.sc)return;lt(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}ot[e]=t,delete it[e],at.hasOwnProperty(e)&&(t=at[e],delete at[e],t.forEach((function(e){e()})))}var dt=[],mt=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function ht(e){4<e&&0==--mt[e].$b&&(mt[e]=void 0,dt.push(e))}function gt(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=dt.length?dt.pop():mt.length;return mt[t]={$b:1,value:e},t}}function vt(e){return this.fromWireType(u()[e>>2])}function yt(e){if(null===e)return\\\"null\\\";var t=typeof e;return\\\"object\\\"===t||\\\"array\\\"===t||\\\"function\\\"===t?e.toString():\\\"\\\"+e}function bt(e,t){switch(t){case 2:return function(e){var t=this.fromWireType;return F.buffer!=G&&se(F.buffer),t.call(this,Q[e>>2])};case 3:return function(e){return this.fromWireType(s()[e>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function _t(e,n,s){switch(n){case 0:return s?function(e){return t()[e]}:function(e){return r()[e]};case 1:return s?function(e){return a()[e>>1]}:function(e){return o()[e>>1]};case 2:return s?function(e){return i()[e>>2]}:function(e){return u()[e>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}function wt(e){return e||lt(\\\"Cannot use deleted val. handle = \\\"+e),mt[e].value}function At(e,t){var n=ot[e];if(void 0===n){var r=rt(e=cn(e));un(e),lt(t+\\\" has unknown type \\\"+r)}return n}var Tt={};function Ot(e){var t=Tt[e];return void 0===t?rt(e):t}var Et=[];function St(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var kt={};function Ct(){if(O)return Pt(16,1);Ae()}var Mt=[];function Pt(e,t){for(var n=arguments.length-2,r=En(),a=kn(8*n),o=a>>3,i=0;i<n;i++){var u=arguments[2+i];s()[o+i]=u}return n=hn(e,n,a,t),Sn(r),n}var xt=[],Dt=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Ft(e){return e=2<e?Y(e):e,Dt[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Rt(e,t,n){var r=Ft(e);if(!r)return-4;if(r.Sb&&(i()[r.Sb>>2]=t,i()[r.Sb+4>>2]=n),!r.fc&&r.Uc){if(r.Sb){r=i()[r.Sb+8>>2],e=e?Y(e):\\\"\\\";var a=En(),o=kn(12),u=0;if(e){u=B(e)+1;var s=an(u);z(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,gn(0,r,657457152,0,u,o),Sn(a),1}return-4}return r.fc&&(r=r.fc),e=!1,r.Rb&&r.Rb.Qb&&(e=0===(e=r.Rb.Qb.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.Rb.Qb.viewport(0,0,t,n),0}function It(e,t,n){return O?Pt(17,1,e,t,n):Rt(e,t,n)}var Wt,Ut=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],jt={};function Lt(){if(!Wt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(e in jt)void 0===jt[e]?delete t[e]:t[e]=jt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Wt=n}return Wt}function Ht(e,n){if(O)return Pt(18,1,e,n);var r=0;return Lt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Yt(e,t){if(O)return Pt(19,1,e,t);var n=Lt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function Nt(e){return O?Pt(20,1,e):0}function zt(e,n){return O?Pt(21,1,e,n):(e=1==e||2==e?2:Ae(),t()[n>>0]=e,0)}function Bt(e,t,n,r){return O?Pt(22,1,e,t,n,r):(e=He.$c(e),t=He.Zc(e,t,n),i()[r>>2]=t,0)}function Gt(e,t,n,r,a){if(O)return Pt(23,1,e,t,n,r,a)}function Vt(e,t,n,a){if(O)return Pt(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],f=0;f<c;f++)Le(e,r()[s+f]);o+=c}return i()[a>>2]=o,0}function qt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(O)return Pt(25,1);if(!qt.nc){qt.nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[On()>>2]=60*o,i()[Tn()>>2]=Number(t!=a),n=e(n),r=e(r),n=ue(n),r=ue(r),a<t?(i()[An()>>2]=n,i()[An()+4>>2]=r):(i()[An()>>2]=r,i()[An()+4>>2]=n)}}function Xt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Jt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var $t=[31,29,31,30,31,30,31,31,30,31,30,31],Zt=[31,28,31,30,31,30,31,31,30,31,30,31];function Qt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Xt(e.getFullYear())?$t:Zt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Kt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Qt(new Date(e.Cb+1900,0,1),e.Xb);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=i()[a+40>>2];for(var p in a={Pc:i()[a>>2],Oc:i()[a+4>>2],Vb:i()[a+8>>2],Pb:i()[a+12>>2],Lb:i()[a+16>>2],Cb:i()[a+20>>2],Wb:i()[a+24>>2],Xb:i()[a+28>>2],kd:i()[a+32>>2],Nc:i()[a+36>>2],Qc:l?Y(l):\\\"\\\"},r=Y(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),l[p]);var d=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),m=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in l={\\\"%a\\\":function(e){return d[e.Wb].substring(0,3)},\\\"%A\\\":function(e){return d[e.Wb]},\\\"%b\\\":function(e){return m[e.Lb].substring(0,3)},\\\"%B\\\":function(e){return m[e.Lb]},\\\"%C\\\":function(e){return u((e.Cb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.Pb,2)},\\\"%e\\\":function(e){return o(e.Pb,2,\\\" \\\")},\\\"%g\\\":function(e){return f(e).toString().substring(2)},\\\"%G\\\":function(e){return f(e)},\\\"%H\\\":function(e){return u(e.Vb,2)},\\\"%I\\\":function(e){return 0==(e=e.Vb)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.Pb+Jt(Xt(e.Cb+1900)?$t:Zt,e.Lb-1),3)},\\\"%m\\\":function(e){return u(e.Lb+1,2)},\\\"%M\\\":function(e){return u(e.Oc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Vb&&12>e.Vb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.Pc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Wb||7},\\\"%U\\\":function(e){var t=new Date(e.Cb+1900,0,1),n=0===t.getDay()?t:Qt(t,7-t.getDay());return 0>s(n,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-n.getDate()+(Jt(Xt(e.getFullYear())?$t:Zt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Cb+1901,0,4),n=c(new Date(e.Cb+1900,0,4));t=c(t);var r=Qt(new Date(e.Cb+1900,0,1),e.Xb);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Cb+1900?e.Xb+32-n.getDate():e.Xb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Wb},\\\"%W\\\":function(e){var t=new Date(e.Cb,0,1),n=1===t.getDay()?t:Qt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-n.getDate()+(Jt(Xt(e.getFullYear())?$t:Zt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Cb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Nc);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Qc},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),l[p](a)));return(p=function(e){var t=Array(B(e)+1);return N(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(p,e),p.length-1)}for(var en=Array(256),tn=0;256>tn;++tn)en[tn]=String.fromCharCode(tn);nt=en,ft=c.BindingError=ct(\\\"BindingError\\\"),c.InternalError=ct(\\\"InternalError\\\"),c.count_emval_handles=function(){for(var e=0,t=5;t<mt.length;++t)void 0!==mt[t]&&++e;return e},c.get_first_emval=function(){for(var e=5;e<mt.length;++e)if(void 0!==mt[e])return mt[e];return null};var nn=[null,De,Ye,Ne,ze,Be,Ge,Ve,qe,Xe,Je,$e,Ze,Qe,Ke,et,Ct,It,Ht,Yt,Nt,zt,Bt,Gt,Vt,qt],rn={u:function(e,t,n,r){Ae(\\\"Assertion failed: \\\"+Y(e)+\\\", at: \\\"+[t?Y(t):\\\"unknown filename\\\",n,r?Y(r):\\\"unknown function\\\"])},da:function(e,t){return xe(e,t)},b:function(e){return an(e+16)+16},e:function(e,t){return De(e,t)},l:function(e,t){Pe.ac.push((function(){fe.get(e)(t)}))},c:function(e,t,n){throw new Fe(e).tc(t,n),e},ra:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return x(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return x(\\\"pthread_create called with a null thread pointer!\\\"),28;var a=[];if(O&&0===a.length)return dn(687865856,e,t,n,r);var o=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,o=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==o)?o=Mn(16,c):U(0<(o-=c));for(var f=an(228),l=0;57>l;++l)u()[(f>>2)+l]=0;return i()[e>>2]=f,i()[f+12>>2]=f,e=f+152,i()[e>>2]=e,n={Ib:o,Kb:c,Yb:t,detached:s,Kc:n,Tb:f,Jb:r,Rc:a},O?(n.Tc=\\\"spawnThread\\\",postMessage(n,a),0):Re(n)},pa:function(e){throw O?Pe.kc(e):(Pe.hc(),Rn(e)),\\\"unwind\\\"},qa:function(e,t){return function(e,t){if(!e)return x(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(O&&sn()==e)return x(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!O&&pn()==e)return x(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return x(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(u(),e+64>>2))return x(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(We();;){var n=Atomics.load(u(),e+0>>2);if(1==n)return n=Atomics.load(u(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(u(),e+64>>2,1),O?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):Ce(e),0;vn(),O||mn(),Ie(e+0,n,O?100:1)}}(e,t)},ca:Ye,I:Ne,ja:ze,ma:Be,K:function(){return 42},X:Ge,ia:Ve,ha:qe,la:Xe,ka:Je,E:$e,ba:Ze,fa:Qe,L:Ke,ga:et,U:function(){},Ba:function(e,n,r,o,u){var s=tt(r);pt(e,{name:n=rt(n),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?o:u},argPackAdvance:8,readValueFromPointer:function(e){if(1===r)var o=t();else if(2===r)o=a();else{if(4!==r)throw new TypeError(\\\"Unknown boolean type size: \\\"+n);o=i()}return this.fromWireType(o[e>>s])},Mb:null})},Aa:function(e,t){pt(e,{name:t=rt(t),fromWireType:function(e){var t=mt[e].value;return ht(e),t},toWireType:function(e,t){return gt(t)},argPackAdvance:8,readValueFromPointer:vt,Mb:null})},N:function(e,t,n){n=tt(n),pt(e,{name:t=rt(t),fromWireType:function(e){return e},toWireType:function(e,t){if(\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t)throw new TypeError('Cannot convert \\\"'+yt(t)+'\\\" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:bt(t,n),Mb:null})},t:function(e,t,n,r,a){function o(e){return e}t=rt(t),-1===a&&(a=4294967295);var i=tt(n);if(0===r){var u=32-8*n;o=function(e){return e<<u>>>u}}var s=t.includes(\\\"unsigned\\\");pt(e,{name:t,fromWireType:o,toWireType:function(e,n){if(\\\"number\\\"!=typeof n&&\\\"boolean\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+yt(n)+'\\\" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number \\\"'+yt(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+t+'\\\", which is outside the valid range ['+r+\\\", \\\"+a+\\\"]!\\\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:_t(t,i,0!==r),Mb:null})},s:function(e,t,n){function r(e){e>>=2;var t=u();return new a(G,t[e+1],t[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];pt(e,{name:n=rt(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{sc:!0})},O:function(e,t){var n=\\\"std::string\\\"===(t=rt(t));pt(e,{name:t,fromWireType:function(e){var t=u()[e>>2];if(n)for(var a=e+4,o=0;o<=t;++o){var i=e+4+o;if(o==t||0==r()[i]){if(a=Y(a,i-a),void 0===s)var s=a;else s+=String.fromCharCode(0),s+=a;a=i+1}}else{for(s=Array(t),o=0;o<t;++o)s[o]=String.fromCharCode(r()[e+4+o]);s=s.join(\\\"\\\")}return un(e),s},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var a=\\\"string\\\"==typeof t;a||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||lt(\\\"Cannot pass non-string to std::string\\\");var o=(n&&a?function(){return B(t)}:function(){return t.length})(),i=an(4+o+1);if(u()[i>>2]=o,n&&a)z(t,i+4,o+1);else if(a)for(a=0;a<o;++a){var s=t.charCodeAt(a);255<s&&(un(i),lt(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),r()[i+4+a]=s}else for(a=0;a<o;++a)r()[i+4+a]=t[a];return null!==e&&e.push(un,i),i},argPackAdvance:8,readValueFromPointer:vt,Mb:function(e){un(e)}})},F:function(e,t,n){if(n=rt(n),2===t)var r=te,a=ne,i=re,s=function(){return o()},c=1;else 4===t&&(r=ae,a=oe,i=ie,s=function(){return u()},c=2);pt(e,{name:n,fromWireType:function(e){for(var n,a=u()[e>>2],o=s(),i=e+4,f=0;f<=a;++f){var l=e+4+f*t;f!=a&&0!=o[l>>c]||(i=r(i,l-i),void 0===n?n=i:(n+=String.fromCharCode(0),n+=i),i=l+t)}return un(e),n},toWireType:function(e,r){\\\"string\\\"!=typeof r&&lt(\\\"Cannot pass non-string to C++ string type \\\"+n);var o=i(r),s=an(4+o+t);return u()[s>>2]=o>>c,a(r,s+4,o+t),null!==e&&e.push(un,s),s},argPackAdvance:8,readValueFromPointer:vt,Mb:function(e){un(e)}})},Ca:function(e,t){pt(e,{xc:!0,name:t=rt(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},xa:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(O)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=Pe.Eb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},G:function(e,t,n){e=wt(e),t=At(t,\\\"emval::as\\\");var r=[],a=gt(r);return i()[n>>2]=a,t.toWireType(r,e)},r:function(e,t,n,r,a){e=Et[e],t=wt(t),n=Ot(n);var o=[];return i()[r>>2]=gt(o),e(t,n,o,a)},n:function(e,t,n,r){(e=Et[e])(t=wt(t),n=Ot(n),null,r)},d:ht,P:function(e,t){return(e=wt(e))==wt(t)},R:function(e){return 0===e?gt(St()):(e=Ot(e),gt(St()[e]))},i:function(e,t){for(var n=(t=function(e,t){for(var n=Array(e),r=0;r<e;++r)n[r]=At(i()[(t>>2)+r],\\\"parameter \\\"+r);return n}(e,t))[0],r=n.name+\\\"_$\\\"+t.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",a=[\\\"retType\\\"],o=[n],u=\\\"\\\",s=0;s<e-1;++s)u+=(0!==s?\\\", \\\":\\\"\\\")+\\\"arg\\\"+s,a.push(\\\"argType\\\"+s),o.push(t[1+s]);r=\\\"return function \\\"+ut(\\\"methodCaller_\\\"+r)+\\\"(handle, name, destructors, args) {\\\\n\\\";var c=0;for(s=0;s<e-1;++s)r+=\\\"    var arg\\\"+s+\\\" = argType\\\"+s+\\\".readValueFromPointer(args\\\"+(c?\\\"+\\\"+c:\\\"\\\")+\\\");\\\\n\\\",c+=t[s+1].argPackAdvance;for(r+=\\\"    var rv = handle[name](\\\"+u+\\\");\\\\n\\\",s=0;s<e-1;++s)t[s+1].deleteObject&&(r+=\\\"    argType\\\"+s+\\\".deleteObject(arg\\\"+s+\\\");\\\\n\\\");return n.xc||(r+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),a.push(r+\\\"};\\\\n\\\"),function(e){var t=Et.length;return Et.push(e),t}(e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=st(t.name||\\\"unknownFunctionName\\\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a).apply(null,o))},A:function(e,t){return gt((e=wt(e))[t=wt(t)])},h:function(e){4<e&&(mt[e].$b+=1)},Da:function(e,t,n,r){e=wt(e);var a=kt[t];if(!a){a=\\\"\\\";for(var o=0;o<t;++o)a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o;var i=\\\"return function emval_allocator_\\\"+t+\\\"(constructor, argTypes, args) {\\\\n\\\";for(o=0;o<t;++o)i+=\\\"var argType\\\"+o+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \\\"+o+'], \\\"parameter '+o+'\\\");\\\\nvar arg'+o+\\\" = argType\\\"+o+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+o+\\\"['argPackAdvance'];\\\\n\\\";a=new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",i+\\\"var obj = new constructor(\\\"+a+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\")(At,c,gt),kt[t]=a}return a(e,n,r)},o:function(){return gt([])},f:function(e){return gt(Ot(e))},j:function(){return gt({})},p:function(e){for(var t=mt[e].value;t.length;){var n=t.pop();t.pop()(n)}ht(e)},g:function(e,t,n){e=wt(e),t=wt(t),n=wt(n),e[t]=n},k:function(e,t){return gt(e=(e=At(e,\\\"_emval_take_value\\\")).readValueFromPointer(t))},m:Ct,Q:xe,Fa:function(e,t){return e-t},ea:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},z:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},na:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Y:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ya:function(e,t,n){var a;for(Mt.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Mt.push(a?s()[n++>>1]:i()[n]),++n;return Ee[e].apply(null,Mt)},Z:We,B:function(){},x:Ie,w:ke,oa:function(){return 2147483648},v:Me,V:function(e,t,n){r().copyWithin(e,t,t+n)},C:function(){return T?n(87).cpus().length:navigator.hardwareConcurrency},ua:function(e,t,n){xt.length=t,n>>=3;for(var r=0;r<t;r++)xt[r]=s()[n+r];return(0>e?Ee[-e-1]:nn[e]).apply(null,xt)},W:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296),0<(a=Math.max(e,a))%65536&&(a+=65536-a%65536);e:{try{F.grow(Math.min(2147483648,a)-G.byteLength+65535>>>16),se(F.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},va:function(e,t,n){return Ft(e)?Rt(e,t,n):It(e,t,n)},M:function(){},ta:function(e,t,n){return he+=1,setTimeout((function(){--he,function(e){if(!W){try{e()}catch(e){if(e instanceof Dn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&x(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!ge())try{O?yn(I):Rn(I)}catch(e){if(!(e instanceof Dn))throw e}}}((function(){fe.get(e)(n)}))}),t)},wa:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ut[n],failIfMajorPerformanceCaveat:!!i()[t+7],Ac:i()[t+8],cd:i()[t+9],dc:i()[t+10],pc:i()[t+11],gd:i()[t+12],hd:i()[t+13]},!(e=Ft(e))||t.pc?0:function(e,t){e.ec||(e.ec=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.ec(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=an(8);i()[n+4>>2]=sn();var r={ad:n,attributes:t,version:t.Ac,Qb:e};return e.canvas&&(e.canvas.Rb=r),(void 0===t.dc||t.dc)&&function(e){if(e||(e=void 0),!e.uc){e.uc=!0;var t=e.Qb;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,o){t.drawElementsInstancedANGLE(e,n,r,a,o)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.Vc=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.dd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},$:Ht,aa:Yt,y:Nt,_:zt,J:Bt,T:Gt,D:Vt,za:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Ga:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.cc||(e.cc=ue(\\\"GMT\\\")),i()[n+40>>2]=e.cc,n},sa:function(){Pe.vc()},H:function(e,t){qt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[An()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:F||c.wasmMemory,S:function(e){qt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Ea:Kt,q:function(e,t,n,r){return Kt(e,t,n,r)}};!function(){function e(e,t){c.asm=e.exports,fe=c.asm.ab,pe.unshift(c.asm.Ha),Pe.bc.push(c.asm.fb),R=t,O||(be--,c.monitorRunDependencies&&c.monitorRunDependencies(be),0==be&&(null!==_e&&(clearInterval(_e),_e=null),we&&(e=we,we=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!M&&(w||A)){if(\\\"function\\\"==typeof fetch&&!ye.startsWith(\\\"file://\\\"))return fetch(ye,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ye+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return Oe()}));if(v)return new Promise((function(e,t){v(ye,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Oe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){x(\\\"failed to asynchronously prepare wasm: \\\"+e),Ae(e)}))}var r={a:rn};if(O||(be++,c.monitorRunDependencies&&c.monitorRunDependencies(be)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return x(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Te()||ye.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ye,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return x(\\\"wasm streaming compile failed: \\\"+e),x(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.Ha).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.Ia).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.Ja).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.Ka).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.La).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.Ma).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.Na).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.Oa).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.Pa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.Qa).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Ra).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Sa).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.Ta).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Ua).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Va).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.Wa).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.Xa).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.Ya).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Za).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm._a).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.$a).apply(null,arguments)};var an=c._malloc=function(){return(an=c._malloc=c.asm.bb).apply(null,arguments)},on=c.___errno_location=function(){return(on=c.___errno_location=c.asm.cb).apply(null,arguments)},un=c._free=function(){return(un=c._free=c.asm.db).apply(null,arguments)},sn=c._pthread_self=function(){return(sn=c._pthread_self=c.asm.eb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.fb).apply(null,arguments)};var cn=c.___getTypeName=function(){return(cn=c.___getTypeName=c.asm.gb).apply(null,arguments)};c.___embind_register_native_and_builtin_types=function(){return(c.___embind_register_native_and_builtin_types=c.asm.hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.ib).apply(null,arguments)};var fn,ln=c._emscripten_register_main_browser_thread_id=function(){return(ln=c._emscripten_register_main_browser_thread_id=c.asm.jb).apply(null,arguments)},pn=c._emscripten_main_browser_thread_id=function(){return(pn=c._emscripten_main_browser_thread_id=c.asm.kb).apply(null,arguments)},dn=c._emscripten_sync_run_in_main_thread_4=function(){return(dn=c._emscripten_sync_run_in_main_thread_4=c.asm.lb).apply(null,arguments)},mn=c._emscripten_main_thread_process_queued_calls=function(){return(mn=c._emscripten_main_thread_process_queued_calls=c.asm.mb).apply(null,arguments)},hn=c._emscripten_run_in_main_runtime_thread_js=function(){return(hn=c._emscripten_run_in_main_runtime_thread_js=c.asm.nb).apply(null,arguments)},gn=c.__emscripten_call_on_thread=function(){return(gn=c.__emscripten_call_on_thread=c.asm.ob).apply(null,arguments)},vn=c._pthread_testcancel=function(){return(vn=c._pthread_testcancel=c.asm.pb).apply(null,arguments)},yn=c._pthread_exit=function(){return(yn=c._pthread_exit=c.asm.qb).apply(null,arguments)},bn=c.__emscripten_thread_init=function(){return(bn=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)},_n=c._emscripten_get_global_libc=function(){return(_n=c._emscripten_get_global_libc=c.asm.sb).apply(null,arguments)},wn=c.___pthread_tsd_run_dtors=function(){return(wn=c.___pthread_tsd_run_dtors=c.asm.tb).apply(null,arguments)},An=c.__get_tzname=function(){return(An=c.__get_tzname=c.asm.ub).apply(null,arguments)},Tn=c.__get_daylight=function(){return(Tn=c.__get_daylight=c.asm.vb).apply(null,arguments)},On=c.__get_timezone=function(){return(On=c.__get_timezone=c.asm.wb).apply(null,arguments)},En=c.stackSave=function(){return(En=c.stackSave=c.asm.xb).apply(null,arguments)},Sn=c.stackRestore=function(){return(Sn=c.stackRestore=c.asm.yb).apply(null,arguments)},kn=c.stackAlloc=function(){return(kn=c.stackAlloc=c.asm.zb).apply(null,arguments)},Cn=c._emscripten_stack_set_limits=function(){return(Cn=c._emscripten_stack_set_limits=c.asm.Ab).apply(null,arguments)},Mn=c._memalign=function(){return(Mn=c._memalign=c.asm.Bb).apply(null,arguments)},Pn=c.__emscripten_allow_main_runtime_queued_calls=984944,xn=c.__emscripten_main_thread_futex=989072;function Dn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function Fn(){function e(){if(!fn&&(fn=!0,c.calledRun=!0,!W)&&(O||Se(pe),f(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!O)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();me.unshift(e)}Se(me)}}if(!(0<be))if(O)f(c),O||Se(pe),postMessage({cmd:\\\"loaded\\\"});else{if(!O){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ve();Se(le)}0<be||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function Rn(e){if(I=e,O)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new Dn(e);ge()||(Pe.jc(),O||(Se(de),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),je[1].length&&Le(1,10),je[2].length&&Le(2,10))),I=e,ge()||(Pe.jc(),c.onExit&&c.onExit(e),W=!0),h(e,new Dn(e))}if(c.UTF8ToString=Y,c.stringToUTF8=z,c.lengthBytesUTF8=B,c.keepRuntimeAlive=ge,c.PThread=Pe,c.stackSave=En,c.stackRestore=Sn,c.stackAlloc=kn,c.PThread=Pe,c.wasmMemory=F,c.ExitStatus=Dn,we=function e(){fn||Fn(),fn||(we=e)},c.run=Fn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return O&&(D=!1,Pe.wc()),Fn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,o=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,n=a.data.stackBase+a.data.stackSize;e.establishStackSpace(n,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit(),s||(e.___embind_register_native_and_builtin_types(),s=!0);try{var c=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(c):e.PThread.threadExit(c)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(o(\\\"worker.js received unknown command \\\"+a.data.cmd),o(a.data)))}catch(e){throw o(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&o(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||__filename,function(e){var t,r,a;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,a=t}));var o,i={};for(o in t)t.hasOwnProperty(o)&&(i[o]=t[o]);var u,s,c,f,l,p=\\\"./this.program\\\",d=\\\"object\\\"==typeof window,m=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";h?(g=m?n(622).dirname(g)+\\\"/\\\":__dirname+\\\"/\\\",u=function(e,t){return f||(f=n(747)),l||(l=n(622)),e=l.normalize(e),f.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||ne(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){f||(f=n(747)),l||(l=n(622)),e=l.normalize(e),f.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",ne),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||m)&&(m?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},m&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,y=t.print||console.log.bind(console),b=t.printErr||console.warn.bind(console);for(o in i)i.hasOwnProperty(o)&&(t[o]=i[o]);i=null,t.thisProgram&&(p=t.thisProgram),t.wasmBinary&&(v=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&ne(\\\"no native wasm support detected\\\");var _,w=!1,A=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function T(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&A)return A.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function O(e,t){return e?T(P,e,t):\\\"\\\"}function E(e,t,n,r){if(!(0<r))return 0;var a=n;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++]=i}else{if(2047>=i){if(n+1>=r)break;t[n++]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++]=224|i>>12}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63}t[n++]=128|i>>6&63}t[n++]=128|63&i}}return t[n]=0,n-a}function S(e,t,n){return E(e,P,t,n)}function k(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}var C,M,P,x,D,F,R,I,W,U=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function j(e,t){for(var n=e>>1,r=n+t/2;!(n>=r)&&D[n];)++n;if(32<(n<<=1)-e&&U)return U.decode(P.subarray(e,n));for(n=\\\"\\\",r=0;!(r>=t/2);++r){var a=x[e+2*r>>1];if(0==a)break;n+=String.fromCharCode(a)}return n}function L(e,t,n){if(void 0===n&&(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var a=0;a<n;++a)x[t>>1]=e.charCodeAt(a),t+=2;return x[t>>1]=0,t-r}function H(e){return 2*e.length}function Y(e,t){for(var n=0,r=\\\"\\\";!(n>=t/4);){var a=F[e+4*n>>2];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r}function N(e,t,n){if(void 0===n&&(n=2147483647),4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),F[t>>2]=o,(t+=4)+4>n)break}return F[t>>2]=0,t-r}function z(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t}function B(e){var t=k(e)+1,n=Ke(t);return n&&E(e,M,n,t),n}function G(){var e=_.buffer;C=e,t.HEAP8=M=new Int8Array(e),t.HEAP16=x=new Int16Array(e),t.HEAP32=F=new Int32Array(e),t.HEAPU8=P=new Uint8Array(e),t.HEAPU16=D=new Uint16Array(e),t.HEAPU32=R=new Uint32Array(e),t.HEAPF32=I=new Float32Array(e),t.HEAPF64=W=new Float64Array(e)}var V,q=[],X=[],J=[],$=[];function Z(){var e=t.preRun.shift();q.unshift(e)}var Q,K=0,ee=null,te=null;function ne(e){throw t.onAbort&&t.onAbort(e),b(e),w=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),a(e),e}function re(){return Q.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},Q=\\\"ort-wasm.wasm\\\",!re()){var ae=Q;Q=t.locateFile?t.locateFile(ae,g):g+ae}function oe(){var e=Q;try{if(e==Q&&v)return new Uint8Array(v);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){ne(e)}}function ie(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.ib;\\\"number\\\"==typeof r?void 0===n.Za?V.get(r)():V.get(r)(n.Za):r(void 0===n.Za?null:n.Za)}}}function ue(e){this.ab=e-16,this.tb=function(e){F[this.ab+4>>2]=e},this.qb=function(e){F[this.ab+8>>2]=e},this.rb=function(){F[this.ab>>2]=0},this.pb=function(){M[this.ab+12>>0]=0},this.sb=function(){M[this.ab+13>>0]=0},this.lb=function(e,t){this.tb(e),this.qb(t),this.rb(),this.pb(),this.sb()}}var se={},ce=[null,[],[]],fe={};function le(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var pe=void 0;function de(e){for(var t=\\\"\\\";P[e];)t+=pe[P[e++]];return t}var me={},he={},ge={};function ve(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return 48<=t&&57>=t?\\\"_\\\"+e:e}function ye(e,t){return e=ve(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function be(e){var t=Error,n=ye(e,(function(t){this.name=e,this.message=t,void 0!==(t=Error(t).stack)&&(this.stack=this.toString()+\\\"\\\\n\\\"+t.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var _e=void 0;function we(e){throw new _e(e)}function Ae(e,t,n){if(n=n||{},!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=t.name;if(e||we('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),he.hasOwnProperty(e)){if(n.kb)return;we(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}he[e]=t,delete ge[e],me.hasOwnProperty(e)&&(t=me[e],delete me[e],t.forEach((function(e){e()})))}var Te=[],Oe=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Ee(e){4<e&&0==--Oe[e].gb&&(Oe[e]=void 0,Te.push(e))}function Se(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=Te.length?Te.pop():Oe.length;return Oe[t]={gb:1,value:e},t}}function ke(e){return this.fromWireType(R[e>>2])}function Ce(e){if(null===e)return\\\"null\\\";var t=typeof e;return\\\"object\\\"===t||\\\"array\\\"===t||\\\"function\\\"===t?e.toString():\\\"\\\"+e}function Me(e,t){switch(t){case 2:return function(e){return this.fromWireType(I[e>>2])};case 3:return function(e){return this.fromWireType(W[e>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function Pe(e,t,n){switch(t){case 0:return n?function(e){return M[e]}:function(e){return P[e]};case 1:return n?function(e){return x[e>>1]}:function(e){return D[e>>1]};case 2:return n?function(e){return F[e>>2]}:function(e){return R[e>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}function xe(e){return e||we(\\\"Cannot use deleted val. handle = \\\"+e),Oe[e].value}function De(e,t){var n=he[e];if(void 0===n){var r=de(e=nt(e));tt(e),we(t+\\\" has unknown type \\\"+r)}return n}var Fe={};function Re(e){var t=Fe[e];return void 0===t?de(e):t}var Ie=[];function We(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var Ue,je={};Ue=h?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var Le,He,Ye={};function Ne(){if(!Le){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in Ye)void 0===Ye[e]?delete t[e]:t[e]=Ye[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Le=n}return Le}function ze(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!He){He=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);F[it()>>2]=60*o,F[ot()>>2]=Number(t!=a),n=e(n),r=e(r),n=B(n),r=B(r),a<t?(F[at()>>2]=n,F[at()+4>>2]=r):(F[at()>>2]=r,F[at()+4>>2]=n)}}function Be(e){return 0==e%4&&(0!=e%100||0==e%400)}function Ge(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ve=[31,29,31,30,31,30,31,31,30,31,30,31],qe=[31,28,31,30,31,30,31,31,30,31,30,31];function Xe(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Be(e.getFullYear())?Ve:qe)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Je(e,t,n,r){function a(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\\\"0\\\")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Xe(new Date(e.Xa+1900,0,1),e.fb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=i(n,e)?0>=i(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=F[r+40>>2];for(var f in r={wb:F[r>>2],vb:F[r+4>>2],cb:F[r+8>>2],bb:F[r+12>>2],Ya:F[r+16>>2],Xa:F[r+20>>2],eb:F[r+24>>2],fb:F[r+28>>2],Eb:F[r+32>>2],ub:F[r+36>>2],xb:c?O(c):\\\"\\\"},n=O(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),c[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in c={\\\"%a\\\":function(e){return l[e.eb].substring(0,3)},\\\"%A\\\":function(e){return l[e.eb]},\\\"%b\\\":function(e){return p[e.Ya].substring(0,3)},\\\"%B\\\":function(e){return p[e.Ya]},\\\"%C\\\":function(e){return o((e.Xa+1900)/100|0,2)},\\\"%d\\\":function(e){return o(e.bb,2)},\\\"%e\\\":function(e){return a(e.bb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return o(e.cb,2)},\\\"%I\\\":function(e){return 0==(e=e.cb)?e=12:12<e&&(e-=12),o(e,2)},\\\"%j\\\":function(e){return o(e.bb+Ge(Be(e.Xa+1900)?Ve:qe,e.Ya-1),3)},\\\"%m\\\":function(e){return o(e.Ya+1,2)},\\\"%M\\\":function(e){return o(e.vb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.cb&&12>e.cb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return o(e.wb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.eb||7},\\\"%U\\\":function(e){var t=new Date(e.Xa+1900,0,1),n=0===t.getDay()?t:Xe(t,7-t.getDay());return 0>i(n,e=new Date(e.Xa+1900,e.Ya,e.bb))?o(Math.ceil((31-n.getDate()+(Ge(Be(e.getFullYear())?Ve:qe,e.getMonth()-1)-31)+e.getDate())/7),2):0===i(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Xa+1901,0,4),n=u(new Date(e.Xa+1900,0,4));t=u(t);var r=Xe(new Date(e.Xa+1900,0,1),e.fb);return 0>i(r,n)?\\\"53\\\":0>=i(t,r)?\\\"01\\\":o(Math.ceil((n.getFullYear()<e.Xa+1900?e.fb+32-n.getDate():e.fb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.eb},\\\"%W\\\":function(e){var t=new Date(e.Xa,0,1),n=1===t.getDay()?t:Xe(t,0===t.getDay()?1:7-t.getDay()+1);return 0>i(n,e=new Date(e.Xa+1900,e.Ya,e.bb))?o(Math.ceil((31-n.getDate()+(Ge(Be(e.getFullYear())?Ve:qe,e.getMonth()-1)-31)+e.getDate())/7),2):0===i(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Xa+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Xa+1900},\\\"%z\\\":function(e){var t=0<=(e=e.ub);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.xb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),c[f](r)));return(f=function(e){var t=Array(k(e)+1);return E(e,t,0,t.length),t}(n)).length>t?0:(M.set(f,e),f.length-1)}for(var $e=Array(256),Ze=0;256>Ze;++Ze)$e[Ze]=String.fromCharCode(Ze);pe=$e,_e=t.BindingError=be(\\\"BindingError\\\"),t.InternalError=be(\\\"InternalError\\\"),t.count_emval_handles=function(){for(var e=0,t=5;t<Oe.length;++t)void 0!==Oe[t]&&++e;return e},t.get_first_emval=function(){for(var e=5;e<Oe.length;++e)if(void 0!==Oe[e])return Oe[e];return null};var Qe={a:function(e){return Ke(e+16)+16},c:function(e,t){J.unshift({ib:e,Za:t})},k:function(e,t){J.unshift({ib:e,Za:t})},b:function(e,t,n){throw new ue(e).lb(t,n),e},X:function(e,t){return e=O(e),fe.yb(e,t)},B:function(){return 0},aa:function(){},da:function(){},D:function(){return 42},Q:function(){return 0},$:function(){},_:function(e,t){return e=O(e),fe.zb(e,t)},ca:function(e,t,n,r,a,o){if(o<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var i=ft(65536,e);i?(P.fill(0,i,i+e),e=i):e=0,e?(se[e]={ob:e,nb:t,jb:!0,fd:a,Db:n,flags:r,offset:o},t=e):t=-48}else t=-52;return t},ba:function(e,t){var n=se[e];return 0!==t&&n?(t===n.nb&&(se[e]=null,n.jb&&tt(n.ob)),e=0):e=-28,e},x:function(){},W:function(e,t,n){return e=O(e),fe.Ab(e,t,n)},Y:function(){},G:function(){},Z:function(){},O:function(){},ha:function(e,t,n,r,a){var o=le(n);Ae(e,{name:t=de(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:a},argPackAdvance:8,readValueFromPointer:function(e){if(1===n)var r=M;else if(2===n)r=x;else{if(4!==n)throw new TypeError(\\\"Unknown boolean type size: \\\"+t);r=F}return this.fromWireType(r[e>>o])},$a:null})},ga:function(e,t){Ae(e,{name:t=de(t),fromWireType:function(e){var t=Oe[e].value;return Ee(e),t},toWireType:function(e,t){return Se(t)},argPackAdvance:8,readValueFromPointer:ke,$a:null})},H:function(e,t,n){n=le(n),Ae(e,{name:t=de(t),fromWireType:function(e){return e},toWireType:function(e,t){if(\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t)throw new TypeError('Cannot convert \\\"'+Ce(t)+'\\\" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Me(t,n),$a:null})},r:function(e,t,n,r,a){function o(e){return e}t=de(t),-1===a&&(a=4294967295);var i=le(n);if(0===r){var u=32-8*n;o=function(e){return e<<u>>>u}}var s=t.includes(\\\"unsigned\\\");Ae(e,{name:t,fromWireType:o,toWireType:function(e,n){if(\\\"number\\\"!=typeof n&&\\\"boolean\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+Ce(n)+'\\\" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number \\\"'+Ce(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+t+'\\\", which is outside the valid range ['+r+\\\", \\\"+a+\\\"]!\\\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Pe(t,i,0!==r),$a:null})},q:function(e,t,n){function r(e){var t=R;return new a(C,t[1+(e>>=2)],t[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];Ae(e,{name:n=de(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{kb:!0})},I:function(e,t){var n=\\\"std::string\\\"===(t=de(t));Ae(e,{name:t,fromWireType:function(e){var t=R[e>>2];if(n)for(var r=e+4,a=0;a<=t;++a){var o=e+4+a;if(a==t||0==P[o]){if(r=O(r,o-r),void 0===i)var i=r;else i+=String.fromCharCode(0),i+=r;r=o+1}}else{for(i=Array(t),a=0;a<t;++a)i[a]=String.fromCharCode(P[e+4+a]);i=i.join(\\\"\\\")}return tt(e),i},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r=\\\"string\\\"==typeof t;r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||we(\\\"Cannot pass non-string to std::string\\\");var a=(n&&r?function(){return k(t)}:function(){return t.length})(),o=Ke(4+a+1);if(R[o>>2]=a,n&&r)S(t,o+4,a+1);else if(r)for(r=0;r<a;++r){var i=t.charCodeAt(r);255<i&&(tt(o),we(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),P[o+4+r]=i}else for(r=0;r<a;++r)P[o+4+r]=t[r];return null!==e&&e.push(tt,o),o},argPackAdvance:8,readValueFromPointer:ke,$a:function(e){tt(e)}})},y:function(e,t,n){if(n=de(n),2===t)var r=j,a=L,o=H,i=function(){return D},u=1;else 4===t&&(r=Y,a=N,o=z,i=function(){return R},u=2);Ae(e,{name:n,fromWireType:function(e){for(var n,a=R[e>>2],o=i(),s=e+4,c=0;c<=a;++c){var f=e+4+c*t;c!=a&&0!=o[f>>u]||(s=r(s,f-s),void 0===n?n=s:(n+=String.fromCharCode(0),n+=s),s=f+t)}return tt(e),n},toWireType:function(e,r){\\\"string\\\"!=typeof r&&we(\\\"Cannot pass non-string to C++ string type \\\"+n);var i=o(r),s=Ke(4+i+t);return R[s>>2]=i>>u,a(r,s+4,i+t),null!==e&&e.push(tt,s),s},argPackAdvance:8,readValueFromPointer:ke,$a:function(e){tt(e)}})},ia:function(e,t){Ae(e,{mb:!0,name:t=de(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},z:function(e,t,n){e=xe(e),t=De(t,\\\"emval::as\\\");var r=[],a=Se(r);return F[n>>2]=a,t.toWireType(r,e)},p:function(e,t,n,r,a){e=Ie[e],t=xe(t),n=Re(n);var o=[];return F[r>>2]=Se(o),e(t,n,o,a)},l:function(e,t,n,r){(e=Ie[e])(t=xe(t),n=Re(n),null,r)},d:Ee,K:function(e,t){return(e=xe(e))==xe(t)},L:function(e){return 0===e?Se(We()):(e=Re(e),Se(We()[e]))},h:function(e,t){for(var n=(t=function(e,t){for(var n=Array(e),r=0;r<e;++r)n[r]=De(F[(t>>2)+r],\\\"parameter \\\"+r);return n}(e,t))[0],r=n.name+\\\"_$\\\"+t.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",a=[\\\"retType\\\"],o=[n],i=\\\"\\\",u=0;u<e-1;++u)i+=(0!==u?\\\", \\\":\\\"\\\")+\\\"arg\\\"+u,a.push(\\\"argType\\\"+u),o.push(t[1+u]);r=\\\"return function \\\"+ve(\\\"methodCaller_\\\"+r)+\\\"(handle, name, destructors, args) {\\\\n\\\";var s=0;for(u=0;u<e-1;++u)r+=\\\"    var arg\\\"+u+\\\" = argType\\\"+u+\\\".readValueFromPointer(args\\\"+(s?\\\"+\\\"+s:\\\"\\\")+\\\");\\\\n\\\",s+=t[u+1].argPackAdvance;for(r+=\\\"    var rv = handle[name](\\\"+i+\\\");\\\\n\\\",u=0;u<e-1;++u)t[u+1].deleteObject&&(r+=\\\"    argType\\\"+u+\\\".deleteObject(arg\\\"+u+\\\");\\\\n\\\");return n.mb||(r+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),a.push(r+\\\"};\\\\n\\\"),function(e){var t=Ie.length;return Ie.push(e),t}(e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=ye(t.name||\\\"unknownFunctionName\\\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a).apply(null,o))},u:function(e,t){return Se((e=xe(e))[t=xe(t)])},g:function(e){4<e&&(Oe[e].gb+=1)},ja:function(e,n,r,a){e=xe(e);var o=je[n];if(!o){o=\\\"\\\";for(var i=0;i<n;++i)o+=(0!==i?\\\", \\\":\\\"\\\")+\\\"arg\\\"+i;var u=\\\"return function emval_allocator_\\\"+n+\\\"(constructor, argTypes, args) {\\\\n\\\";for(i=0;i<n;++i)u+=\\\"var argType\\\"+i+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \\\"+i+'], \\\"parameter '+i+'\\\");\\\\nvar arg'+i+\\\" = argType\\\"+i+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+i+\\\"['argPackAdvance'];\\\\n\\\";o=new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",u+\\\"var obj = new constructor(\\\"+o+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\")(De,t,Se),je[n]=o}return o(e,r,a)},m:function(){return Se([])},e:function(e){return Se(Re(e))},i:function(){return Se({})},n:function(e){for(var t=Oe[e].value;t.length;){var n=t.pop();t.pop()(n)}Ee(e)},f:function(e,t,n){e=xe(e),t=xe(t),n=xe(n),e[t]=n},j:function(e,t){return Se(e=(e=De(e,\\\"_emval_take_value\\\")).readValueFromPointer(t))},v:function(){ne()},J:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return F[et()>>2]=28,-1;e=Ue()}return F[t>>2]=e/1e3|0,F[t+4>>2]=e%1e3*1e6|0,0},M:function(e,t){return e-t},ma:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},t:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},na:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},la:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ea:function(){return 2147483648},P:function(e,t,n){P.copyWithin(e,t,t+n)},w:function(e){var t=P.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{_.grow(Math.min(2147483648,r)-C.byteLength+65535>>>16),G();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},V:function(e){for(var t=Ue();Ue()-t<e;);},T:function(e,t){var n=0;return Ne().forEach((function(r,a){var o=t+n;for(a=F[e+4*a>>2]=o,o=0;o<r.length;++o)M[a++>>0]=r.charCodeAt(o);M[a>>0]=0,n+=r.length+1})),0},U:function(e,t){var n=Ne();F[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),F[t>>2]=r,0},s:function(){return 0},R:function(e,t){return e=1==e||2==e?2:ne(),M[t>>0]=e,0},C:function(e,t,n,r){return e=fe.Cb(e),t=fe.Bb(e,t,n),F[r>>2]=t,0},N:function(){},E:function(e,t,n,r){for(var a=0,o=0;o<n;o++){for(var i=F[t+8*o>>2],u=F[t+(8*o+4)>>2],s=0;s<u;s++){var c=P[i+s],f=ce[e];0===c||10===c?((1===e?y:b)(T(f,0)),f.length=0):f.push(c)}a+=u}return F[r>>2]=a,0},fa:function(e){var t=Date.now();return F[e>>2]=t/1e3|0,F[e+4>>2]=t%1e3*1e3|0,0},S:function e(t,n){return t=new Date(1e3*F[t>>2]),F[n>>2]=t.getUTCSeconds(),F[n+4>>2]=t.getUTCMinutes(),F[n+8>>2]=t.getUTCHours(),F[n+12>>2]=t.getUTCDate(),F[n+16>>2]=t.getUTCMonth(),F[n+20>>2]=t.getUTCFullYear()-1900,F[n+24>>2]=t.getUTCDay(),F[n+36>>2]=0,F[n+32>>2]=0,F[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.hb||(e.hb=B(\\\"GMT\\\")),F[n+40>>2]=e.hb,n},F:function(e,t){ze(),e=new Date(1e3*F[e>>2]),F[t>>2]=e.getSeconds(),F[t+4>>2]=e.getMinutes(),F[t+8>>2]=e.getHours(),F[t+12>>2]=e.getDate(),F[t+16>>2]=e.getMonth(),F[t+20>>2]=e.getFullYear()-1900,F[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);F[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,F[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),F[t+32>>2]=e,e=F[at()+(e?4:0)>>2],F[t+40>>2]=e,t},A:function(e){ze();var t=new Date(F[e+20>>2]+1900,F[e+16>>2],F[e+12>>2],F[e+8>>2],F[e+4>>2],F[e>>2],0),n=F[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=a.getTimezoneOffset(),u=Math.min(i,o);return 0>n?F[e+32>>2]=Number(o!=i&&u==r):0<n!=(u==r)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<n?u:o)-r))),F[e+24>>2]=t.getDay(),F[e+28>>2]=(t.getTime()-a.getTime())/864e5|0,F[e>>2]=t.getSeconds(),F[e+4>>2]=t.getMinutes(),F[e+8>>2]=t.getHours(),F[e+12>>2]=t.getDate(),F[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},ka:Je,o:function(e,t,n,r){return Je(e,t,n,r)}};!function(){function e(e){t.asm=e.exports,_=t.asm.oa,G(),V=t.asm.Wa,X.unshift(t.asm.pa),K--,t.monitorRunDependencies&&t.monitorRunDependencies(K),0==K&&(null!==ee&&(clearInterval(ee),ee=null),te&&(e=te,te=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!v&&(d||m)){if(\\\"function\\\"==typeof fetch&&!Q.startsWith(\\\"file://\\\"))return fetch(Q,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+Q+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return oe()}));if(s)return new Promise((function(e,t){s(Q,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return oe()}))}().then((function(e){return WebAssembly.instantiate(e,o)})).then(e,(function(e){b(\\\"failed to asynchronously prepare wasm: \\\"+e),ne(e)}))}var o={a:Qe};if(K++,t.monitorRunDependencies&&t.monitorRunDependencies(K),t.instantiateWasm)try{return t.instantiateWasm(o,e)}catch(e){return b(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(v||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||re()||Q.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(Q,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,o).then(n,(function(e){return b(\\\"wasm streaming compile failed: \\\"+e),b(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.pa).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.qa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.ra).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.sa).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.ta).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.ua).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.va).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.wa).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.xa).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.ya).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.za).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Aa).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Ba).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Ca).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Da).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ea).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Fa).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Ga).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Ha).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Ia).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Ja).apply(null,arguments)};var Ke=t._malloc=function(){return(Ke=t._malloc=t.asm.Ka).apply(null,arguments)},et=t.___errno_location=function(){return(et=t.___errno_location=t.asm.La).apply(null,arguments)},tt=t._free=function(){return(tt=t._free=t.asm.Ma).apply(null,arguments)},nt=t.___getTypeName=function(){return(nt=t.___getTypeName=t.asm.Na).apply(null,arguments)};t.___embind_register_native_and_builtin_types=function(){return(t.___embind_register_native_and_builtin_types=t.asm.Oa).apply(null,arguments)};var rt,at=t.__get_tzname=function(){return(at=t.__get_tzname=t.asm.Pa).apply(null,arguments)},ot=t.__get_daylight=function(){return(ot=t.__get_daylight=t.asm.Qa).apply(null,arguments)},it=t.__get_timezone=function(){return(it=t.__get_timezone=t.asm.Ra).apply(null,arguments)},ut=t.stackSave=function(){return(ut=t.stackSave=t.asm.Sa).apply(null,arguments)},st=t.stackRestore=function(){return(st=t.stackRestore=t.asm.Ta).apply(null,arguments)},ct=t.stackAlloc=function(){return(ct=t.stackAlloc=t.asm.Ua).apply(null,arguments)},ft=t._memalign=function(){return(ft=t._memalign=t.asm.Va).apply(null,arguments)};function lt(){function e(){if(!rt&&(rt=!0,t.calledRun=!0,!w)){if(ie(X),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();$.unshift(e)}ie($)}}if(!(0<K)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)Z();ie(q),0<K||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=O,t.stringToUTF8=S,t.lengthBytesUTF8=k,t.stackSave=ut,t.stackRestore=st,t.stackAlloc=ct,te=function e(){rt||lt(),rt||(te=e)},t.run=lt,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return lt(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,a,o){if(\\\"object\\\"==typeof e&&null!==e){if(a.has(e))throw new Error(\\\"Circular reference in options\\\");a.add(e)}Object.entries(e).forEach((function(e){var i=n(e,2),u=i[0],s=i[1],c=r?r+u:u;if(\\\"object\\\"==typeof s)t.iterateExtraOptions(s,c+\\\".\\\",a,o);else if(\\\"string\\\"==typeof s||\\\"number\\\"==typeof s)o(c,s.toString());else{if(\\\"boolean\\\"!=typeof s)throw new Error(\\\"Can't handle extra config type: \\\"+typeof s);o(c,s?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),a=n(983),o=n(361);t.setRunOptions=function(e){var t=o.getInstance(),n=0,i=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var s=0;if(void 0!==(null==e?void 0:e.tag)&&(s=a.allocWasmString(e.tag,i)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,s)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var o=a.allocWasmString(e,i),u=a.allocWasmString(r,i);if(0!==t._OrtAddRunConfigEntry(n,o,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),i.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var a=n(967),o=n(983),i=n(361);t.setSessionOptions=function(e){var t,n,u=i.getInstance(),s=0,c=[],f=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(f);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(f.graphOptimizationLevel=\\\"all\\\");var l=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(f.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(f.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(f.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(f.executionMode=\\\"sequential\\\");var p=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(f.executionMode),d=0;if(void 0!==(null==e?void 0:e.logId)&&(d=o.allocWasmString(e.logId,c)),void 0===(null==e?void 0:e.logSeverityLevel))f.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))f.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(f.enableProfiling=!1),0===(s=u._OrtCreateSessionOptions(l,!!f.enableCpuMemArena,!!f.enableMemPattern,p,!!f.enableProfiling,0,d,f.logSeverityLevel,f.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&a.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=o.allocWasmString(e,c),r=o.allocWasmString(t,c);if(0!==u._OrtAddSessionConfigEntry(s,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var m=r(e.executionProviders),h=m.next();!h.done;h=m.next()){var g=h.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof g?g:g.name)){var v=2,y=0;if(\\\"string\\\"!=typeof g){var b=g;(null==b?void 0:b.deviceType)&&(v=b.deviceType),(null==b?void 0:b.powerPreference)&&(y=b.powerPreference)}var _=[0,1,2];if(!_.includes(v))throw new Error(\\\"Invalid deviceType value, it shoule be one of {0, 1, 2}\\\");if(!_.includes(y))throw new Error(\\\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\\\");if(console.log(\\\"webnn device type: \\\"+[\\\"Auto\\\",\\\"GPU\\\",\\\"CPU\\\"][v]),console.log(\\\"webnn power preference: \\\"+[\\\"Auto\\\",\\\"High-performance\\\",\\\"Low-power\\\"][y]),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(s,v,y))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=m.return)&&n.call(m)}finally{if(t)throw t.error}}return[s,c]}catch(e){throw 0!==s&&u._OrtReleaseSessionOptions(s),c.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),a=n.lengthBytesUTF8(e)+1,o=n._malloc(a);return n.stringToUTF8(e,o,a),t.push(o),o}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i},a=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var o=n(586),i=n(919),u=n(983),s=n(361);t.initOrt=function(e,t){var n=s.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var c=[];t.createSession=function(e,t){var n,a=s.getInstance(),o=a._malloc(e.byteLength),u=0,f=0,l=[];try{if(f=(n=r(i.setSessionOptions(t),2))[0],l=n[1],a.HEAPU8.set(e,o),0===(u=a._OrtCreateSession(o,e.byteLength,f)))throw new Error(\\\"Can't create a session\\\")}finally{a._free(o),a._OrtReleaseSessionOptions(f),l.forEach(a._free)}for(var p=a._OrtGetInputCount(u),d=a._OrtGetOutputCount(u),m=[],h=[],g=[],v=[],y=0;y<p;y++){var b=a._OrtGetInputName(u,y);if(0===b)throw new Error(\\\"Can't get an input name\\\");h.push(b),m.push(a.UTF8ToString(b))}for(y=0;y<d;y++){var _=a._OrtGetOutputName(u,y);if(0===_)throw new Error(\\\"Can't get an output name\\\");v.push(_),g.push(a.UTF8ToString(_))}return c.push([u,h,v]),[c.length-1,m,g]},t.releaseSession=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=n[1],o=n[2];a.forEach(t._OrtFree),o.forEach(t._OrtFree),t._OrtReleaseSession(r),c[e]=void 0};var f=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},l=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,a,i){var p,d=s.getInstance(),m=c[e];if(!m)throw new Error(\\\"invalid session id\\\");var h=m[0],g=m[1],v=m[2],y=t.length,b=a.length,_=0,w=[],A=[],T=[];try{_=(p=r(o.setRunOptions(i),2))[0],w=p[1];for(var O=function(e){var t=n[e][0],r=n[e][1],a=n[e][2],o=void 0,i=void 0;if(Array.isArray(a)){i=4*a.length,o=d._malloc(i),T.push(o);for(var s=o/4,c=0;c<a.length;c++){if(\\\"string\\\"!=typeof a[c])throw new TypeError(\\\"tensor data at index \\\"+c+\\\" is not a string\\\");d.HEAPU32[s++]=u.allocWasmString(a[c],T)}}else i=a.byteLength,o=d._malloc(i),T.push(o),d.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,i),o);var f=d.stackSave(),l=d.stackAlloc(4*r.length);try{var p=l/4;r.forEach((function(e){return d.HEAP32[p++]=e}));var m=d._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),o,i,l,r.length);if(0===m)throw new Error(\\\"Can't create a tensor\\\");A.push(m)}finally{d.stackRestore(f)}},E=0;E<y;E++)O(E);var S=d.stackSave(),k=d.stackAlloc(4*y),C=d.stackAlloc(4*y),M=d.stackAlloc(4*b),P=d.stackAlloc(4*b);try{var x=k/4,D=C/4,F=M/4,R=P/4;for(E=0;E<y;E++)d.HEAPU32[x++]=A[E],d.HEAPU32[D++]=g[t[E]];for(E=0;E<b;E++)d.HEAPU32[F++]=0,d.HEAPU32[R++]=v[a[E]];var I=d._OrtRun(h,C,k,y,P,b,M,_),W=[];if(0===I)for(E=0;E<b;E++){var U=d.HEAPU32[M/4+E],j=d.stackSave(),L=d.stackAlloc(16),H=void 0,Y=0;try{if(0!==(I=d._OrtGetTensorData(U,L,L+4,L+8,L+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+I);var N=L/4,z=d.HEAPU32[N++];Y=d.HEAPU32[N++];for(var B=d.HEAPU32[N++],G=d.HEAPU32[N++],V=[],q=0;q<G;q++)V.push(d.HEAPU32[B/4+q]);d._OrtFree(B);var X=0===V.length?1:V.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(H=f(z))){for(var J=[],$=Y/4,Z=0;Z<X;Z++){var Q=d.HEAPU32[$++],K=Z===X-1?void 0:d.HEAPU32[$]-Q;J.push(d.UTF8ToString(Q,K))}W.push([H,V,J])}else{var ee=new(l(H))(X);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(d.HEAPU8.subarray(Y,Y+ee.byteLength)),W.push([H,V,ee])}}finally{d.stackRestore(j),\\\"string\\\"===H&&Y&&d._free(Y),d._OrtReleaseTensor(U)}}if(0===I)return W;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+I+\\\".\\\")}finally{d.stackRestore(S)}}finally{A.forEach(d._OrtReleaseTensor),T.forEach(d._free),d._OrtReleaseRunOptions(_),w.forEach(d._free)}},t.endProfiling=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],a=t._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(a)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var o=a(e),i=o.next();!i.done;i=o.next()){var u=i.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function u(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;i;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){i.label=o[1];break}if(6===o[0]&&i.label<a[1]){i.label=a[1],a=o;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(o);break}a[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var c,f=o(n(622)),l=s(n(474)),p=s(n(932)),d=!1,m=!1,h=!1,g=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return i(void 0,void 0,void 0,(function(){var t,r,a,o,i,s,v,y,b,_,w;return u(this,(function(u){switch(u.label){case 0:if(d)return[2,Promise.resolve()];if(m)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return m=!0,t=e.initTimeout,r=e.numThreads,a=e.simd,o=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),i=a&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),s=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,v=g(!1,o),y=g(i,o),b=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[y]:void 0,_=!1,w=[],t>0&&w.push(new Promise((function(e){setTimeout((function(){_=!0,e()}),t)}))),w.push(new Promise((function(e,t){var r=o?l.default:p.default,a={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===v?null!=b?b:(null!=s?s:t)+y:t+e}};if(o)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=f.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{var i=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+l.default.toString()+\\\"})();\\\";a.mainScriptUrlOrBlob=new Blob([i],{type:\\\"text/javascript\\\"})}r(a).then((function(t){m=!1,d=!0,c=t,e()}),(function(e){m=!1,h=!0,t(e)}))}))),[4,Promise.race(w)];case 1:if(u.sent(),_)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(d&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!d||m||h||(m=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,m=!1,d=!1,h=!0)}},747:function(e){\\\"use strict\\\";e.exports=require(\\\"fs\\\")},87:function(e){\\\"use strict\\\";e.exports=require(\\\"os\\\")},622:function(e){\\\"use strict\\\";e.exports=require(\\\"path\\\")},630:function(e){\\\"use strict\\\";e.exports=require(\\\"perf_hooks\\\")},13:function(e){\\\"use strict\\\";e.exports=require(\\\"worker_threads\\\")}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}!function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,a=r.numThreads,o=r.loggingLevel;e.initOrt(a,o),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var i=n.data.in,u=i.model,s=i.options,c=e.createSession(u,s);postMessage({type:\\\"create\\\",out:c})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var f=n.data.in;e.releaseSession(f),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var l=n.data.in,p=l.sessionId,d=l.inputIndices,m=l.inputs,h=l.outputIndices,g=(s=l.options,e.run(p,d,m,h,s));postMessage({type:\\\"run\\\",out:g},e.extractTransferableBuffers(g))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{f=n.data.in,e.endProfiling(f),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"perf_hooks\");;","module.exports = require(\"util\");;","module.exports = require(\"worker_threads\");;","module.exports = require(\"onnxruntime-common\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}