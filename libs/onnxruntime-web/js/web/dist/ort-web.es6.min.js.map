{"version":3,"sources":["webpack://onnxruntime-web/webpack/universalModuleDefinition","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/global","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__2174__","_scriptDir","e","document","currentScript","src","n","F","buffer","B","ue","L","r","z","t","V","J","o","X","Q","u","Z","c","f","s","ready","Promise","l","p","hasOwnProperty","d","m","h","b","g","y","_","v","window","w","importScripts","A","process","versions","node","T","ENVIRONMENT_IS_PTHREAD","E","k","locateFile","__dirname","normalize","readFileSync","Uint8Array","W","readFile","argv","length","replace","slice","on","xr","we","he","exitCode","exit","inspect","Worker","O","console","error","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","C","S","M","print","log","bind","D","printErr","warn","thisProgram","quit","wasmBinary","x","noExitRuntime","WebAssembly","I","P","R","U","TextDecoder","this","decode","SharedArrayBuffer","call","j","H","subarray","String","fromCharCode","Y","G","charCodeAt","N","q","K","$","ee","ne","re","te","ae","oe","ie","ar","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","ce","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","fe","se","le","pe","de","me","be","preRun","shift","unshift","ge","ye","_e","ve","onAbort","RuntimeError","Ae","startsWith","Te","preloadedImages","preloadedAudios","Ee","985396","ke","qc","Jb","get","Oe","Atomics","load","Dr","compareExchange","notify","Ce","Me","Eb","Ub","worker","_emscripten_futex_wake","Se","Hb","Gb","bc","bd","vc","store","yr","sr","wc","receiveObjectTransfer","Cc","threadInit","Mc","threadCancel","Lc","threadExit","kc","setExitStatus","Ec","ac","hc","pop","vr","ic","ur","postMessage","cmd","jc","terminate","Db","Zb","Fb","ir","Yb","Ib","Dc","push","splice","Mr","zc","onmessage","data","oc","targetThread","jd","transferList","dr","Ie","thread","loaded","Ob","threadId","text","alert","Ir","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","lc","rc","Sc","now","De","Date","or","xe","Dn","Fe","Nb","Jc","Gc","Hc","Fc","Ic","tc","Tb","Kb","detached","_r","start_routine","Kc","arg","threadInfoStruct","stackBase","stackSize","time","Rc","Pe","exchange","wait","Re","establishStackSpace","Cr","kr","invokeEntryPoint","hrtime","__performance_now_clock_drift","We","Ue","je","He","Ye","Wc","Ge","Ne","qe","Be","Le","ze","Xc","Ve","Math","ceil","Sr","fill","Bc","yc","mc","fd","ed","flags","offset","Je","Xe","Qe","Yc","Ke","Ze","$e","en","TypeError","nn","rn","tn","an","un","cn","Function","fn","name","stack","toString","prototype","Object","create","constructor","sn","ln","pn","sc","forEach","dn","mn","value","hn","$b","bn","gn","fromWireType","yn","_n","vn","wn","An","cr","Tn","En","kn","On","globalThis","Cn","Sn","Mn","arguments","Er","Or","mr","xn","Fn","In","querySelector","Pn","Sb","fc","Uc","hr","Rb","Qb","getParameter","width","height","viewport","Rn","Wn","Un","jn","Hn","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","Yn","Gn","Nn","qn","Bn","$c","Zc","Ln","zn","Vn","toTimeString","match","nc","getFullYear","getTimezoneOffset","max","Tr","Ar","Number","wr","Jn","Xn","Qn","Kn","Zn","getTime","getMonth","getDate","setDate","setMonth","setFullYear","$n","getDay","Cb","Xb","Pc","Oc","Vb","Pb","Lb","Wb","kd","Nc","Qc","RegExp","split","substring","abs","includes","Array","set","er","nr","BindingError","InternalError","count_emval_handles","get_first_emval","rr","tr","da","ra","pr","Tc","pa","qa","lr","br","ca","ja","ma","ia","ha","la","ka","ba","fa","ga","Ba","toWireType","argPackAdvance","readValueFromPointer","Mb","Aa","join","ArrayBuffer","Uint8ClampedArray","Ca","xc","xa","map","deleteObject","apply","Da","Fa","ea","na","ya","oa","copyWithin","hardwareConcurrency","ua","min","grow","va","ta","setTimeout","gr","wa","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Ac","cd","dc","pc","gd","hd","ec","getContext","WebGLRenderingContext","ad","attributes","version","canvas","uc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","Vc","dd","getSupportedExtensions","aa","za","Ga","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","cc","sa","getSeconds","getMinutes","getHours","setTime","Ea","asm","ab","Ha","fb","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Ia","_OrtCreateSessionOptions","Ja","_OrtSessionOptionsAppendExecutionProviderWebNN","Ka","_OrtAddSessionConfigEntry","La","_OrtReleaseSessionOptions","Ma","_OrtCreateSession","Na","_OrtReleaseSession","Oa","_OrtGetInputCount","Pa","_OrtGetOutputCount","Qa","_OrtGetInputName","Ra","_OrtGetOutputName","Sa","_OrtFree","Ta","_OrtCreateTensor","Ua","_OrtGetTensorData","Va","_OrtReleaseTensor","Wa","_OrtCreateRunOptions","Xa","_OrtAddRunConfigEntry","Ya","_OrtReleaseRunOptions","Za","_OrtRun","_a","_OrtEndProfiling","$a","_malloc","bb","___errno_location","cb","_free","db","_pthread_self","eb","_emscripten_tls_init","___getTypeName","gb","___embind_register_native_and_builtin_types","hb","_emscripten_current_thread_process_queued_calls","ib","fr","_emscripten_register_main_browser_thread_id","jb","_emscripten_main_browser_thread_id","kb","_emscripten_sync_run_in_main_thread_4","lb","_emscripten_main_thread_process_queued_calls","mb","_emscripten_run_in_main_runtime_thread_js","nb","__emscripten_call_on_thread","ob","_pthread_testcancel","pb","_pthread_exit","qb","__emscripten_thread_init","rb","_emscripten_get_global_libc","sb","___pthread_tsd_run_dtors","tb","__get_tzname","ub","__get_daylight","vb","__get_timezone","wb","stackSave","xb","stackRestore","yb","stackAlloc","zb","_emscripten_stack_set_limits","Ab","_memalign","Bb","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","Fr","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","type","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","object","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","input","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","onnxjsBackend","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","wasmBackend","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","registerBackend","AttributeWithCacheKeyImpl","assign","_cacheKey","getOwnPropertyNames","sort","createAttributeWithCacheKey","ortFbs","onnxruntime","experimental","fbs","Attribute","_attributes","Map","attr","getValue","getType","delete","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","createSessionHandler","dispose","isBackend","init","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","CoordsGlslLib","GlslLib","super","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","strides","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputLayout","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","coordsSnippet","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","packedSampler","valuesPerRow","squeezedShape","keptDims","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","newShape","squeezeShape","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","layout","getValueFromSingle","varName","transpose","FunctionType","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","EncodingGlslLib","encodeFloat32","decodeFloat32","endianness","FragColorGlslLib","setFragColor","getColorAsFloat","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","GlslContext","glslRegistry","lib","libName","routinesInLib","getFunctions","currentNode","GlslLibRoutineNode","addDependency","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","TopologicalSortGlslRoutines","returnOrderedNodes","samplers","uniformLines","sampler","arrayLength","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","textureType","calculateTextureWidthAndHeight","layoutStrategy","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","executeProgram","tensor","TextureType","packed","td","getTextureData","dataId","unpack","packedLastDimension","group","channels","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","reshapePacked","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","batchNormalization","parseBatchNormalizationAttributes","clip","parseClipAttributes","concat","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","gemm","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","leakyRelu","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","relu","reshape","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","epsilon","getFloat","momentum","spatial","getInt","scaleWidth","scaleHeight","scale","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","metadata","inputCount","axis","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","autoPad","dilations","kernelShape","pads","calculateOutputShape","activationFunction","applyActivation","getActicationSnippet","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","conv2d","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","reshapeUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","getString","getInts","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","activation","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","beta","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","bias","getFloats","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","reversedInputWH","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","kw","sw","pwStart","pwEnd","dimW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","padCode","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getReshapedInputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","isCheapReshape","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","scales","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","GlslPreprocessor","fragScript","preprocess","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","PreferLogicalStrategy","maxTextureSize","ProgramManager","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","WebGLInferenceHandler","initializers","getValues","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","dest","ALPHA","UNSIGNED_BYTE","_textureSize","isEmptyArray","parseAxisParam","assert","ax","isInt","sizeFromShape","sizeToSquarishShape","prefs","breakAxis","wsize","hsize","totalSize","wh","computeTexture","logShape","squeezeResult","dimsToSkip","computeTextureWH","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","subscribers","createAndWaitForFence","tensorData","deleteTexture","_dataType","checkFn","delayFn","_counter","maxCounter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","ACTIVE_TEXTURE","TEXTURE0","TEXTURE_BINDING_2D","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","RedFloat32DataEncoder","isRenderFloat32Supported","RGBAFloatDataEncoder","textureHalfFloatExtension","HALF_FLOAT_OES","Uint8DataEncoder","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createBuffer","geometry","createDefaultGeometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","timeElapsed","QUERY_RESULT","deleteQuery","repeatedTry","isTimerResultAvailable","getTimerResult","fenceContext","createFence","pollFence","isFencePassed","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","isDoneFn","resolveFn","pollItems","KernelOp","getNodes","_ops","_starter","resolved","_values","getInputIndices","sessionHandler","modelInputs","createInferenceHandler","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","to","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","Graph","graphProto","GraphImpl","Value","_from","_to","ProtoUtil","tensorValueTypeFromProto","Node","_nodeProto","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","_allInputNames","_allOutputIndices","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","deleteNode","isActivation","child","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","_severity","_content","_category","severity","content","category","color","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","Event","startTime","endCallback","timer","endTimer","waitForQueryAndGetTime","EventRecord","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","logOneEvent","isPromise","reason","eventRes","endSync","beginTimer","checkTimer","toFixed","currentTime","previousPointer","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","Shape","__init","builder","numElems","startShape","addDim","endShape","DimensionValue","optionalEncoding","valueOffset","denotationOffset","startDimension","addValue","addDenotation","endDimension","UNKNOWN","dimType","dimParamOffset","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","UNDEFINED","shapeOffset","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","MapType","TypeInfo","keyType","valueTypeOffset","startMapType","addKeyType","addValueType","endMapType","SequenceType","elemTypeOffset","startSequenceType","endSequenceType","EdgeEnd","node_index","src_arg_index","dst_arg_index","NodeEdge","inputEdgesOffset","outputEdgesOffset","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","Primitive","nameOffset","docStringOffset","domainOffset","sinceVersion","opTypeOffset","executionProviderTypeOffset","inputsOffset","outputsOffset","attributesOffset","inputArgCountsOffset","implicitInputsOffset","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","ValueInfo","typeOffset","startValueInfo","endValueInfo","NONE","startTypeInfo","endTypeInfo","OperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","dimsOffset","rawDataOffset","stringDataOffset","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","SparseTensor","valuesOffset","indicesOffset","startSparseTensor","addValues","addIndices","endSparseTensor","sOffset","tOffset","gOffset","floatsOffset","intsOffset","stringsOffset","tensorsOffset","graphsOffset","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","initializersOffset","nodeArgsOffset","nodesOffset","maxNodeIndex","nodeEdgesOffset","sparseInitializersOffset","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","Model","opsetImportOffset","producerNameOffset","producerVersionOffset","graphOffset","graphDocStringOffset","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","KernelCreateInfos","nodeIndicesOffset","kernelDefHashesOffset","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","SubGraphSessionState","SessionState","graphIdOffset","sessionStateOffset","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","kernelsOffset","subGraphSessionStatesOffset","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","ortVersionOffset","modelOffset","startInferenceSession","addOrtVersion","addModel","endInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","Profiler","graphInputTypes","graphInputDims","_model","getInputNames","getOutputNames","stop","isView","modelProtoBlob","onGraphInitialized","initializeOps","_executionPlan","ExecutionPlan","normalizeAndValidateInputs","outputTensors","execute","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","indices","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","ortTensor","stringDataLength","rawDataArray","rawDataLength","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","MatMulUtil","dimsA","dimsB","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","rest","valA","valB","isAScalar","isBScalar","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","isValidBroadcast","typeProto","dimsLength","getSizeFromDimensionRange","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","determineSplit","numElementsAlongAxis","ReduceUtil","keepdims","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","isProxy","proxyWorker","initWasmCallbacks","initOrtCallbacks","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","deviceType","webnnOptions","preferenceValues","deviceTypeNames","powerPreferenceNames","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort-web.es6.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__2174__) {\nreturn ","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function n(){return F.buffer!=B&&ue(F.buffer),L}function r(){return F.buffer!=B&&ue(F.buffer),z}function t(){return F.buffer!=B&&ue(F.buffer),V}function a(){return F.buffer!=B&&ue(F.buffer),J}function o(){return F.buffer!=B&&ue(F.buffer),X}function i(){return F.buffer!=B&&ue(F.buffer),Q}function u(){return F.buffer!=B&&ue(F.buffer),Z}var c,f,s;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,n){f=e,s=n}));var l,p={};for(l in c)c.hasOwnProperty(l)&&(p[l]=c[l]);var d=\"./this.program\";function m(e,n){throw n}var h,b,g,y,_,v=\"object\"==typeof window,w=\"function\"==typeof importScripts,A=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,T=c.ENVIRONMENT_IS_PTHREAD||!1,E=\"\";function k(e){return c.locateFile?c.locateFile(e,E):E+e}if(A){if(E=w?require(\"path\").dirname(E)+\"/\":__dirname+\"/\",h=function(e,n){return y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFileSync(e,n?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),W(e.buffer),e},b=function(e,n,r){y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFile(e,(function(e,t){e?r(e):n(t.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof xr))throw e})),process.on(\"unhandledRejection\",we),m=function(e,n){if(he())throw process.exitCode=e,n;process.exit(e)},c.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var O;try{O=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=O.Worker}}else(v||w)&&(w?E=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\"blob:\")?E.substr(0,E.lastIndexOf(\"/\")+1):\"\",A?(h=function(e,n){return y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFileSync(e,n?null:\"utf8\")},g=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),W(e.buffer),e},b=function(e,n,r){y||(y=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),y.readFile(e,(function(e,t){e?r(e):n(t.buffer)}))}):(h=function(e){var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(null),n.responseText},w&&(g=function(e){var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),b=function(e,n,r){var t=new XMLHttpRequest;t.open(\"GET\",e,!0),t.responseType=\"arraybuffer\",t.onload=function(){200==t.status||0==t.status&&t.response?n(t.response):r()},t.onerror=r,t.send(null)}));A&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var C,S,M=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(l in p)p.hasOwnProperty(l)&&(c[l]=p[l]);p=null,c.thisProgram&&(d=c.thisProgram),c.quit&&(m=c.quit),c.wasmBinary&&(S=c.wasmBinary);var x=c.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&we(\"no native wasm support detected\");var F,I,P,R=!1;function W(e,n){e||we(\"Assertion failed: \"+n)}function U(e){var n=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),n.decode.call(n,e)}}var j=\"undefined\"!=typeof TextDecoder?new U(\"utf8\"):void 0;function H(e,n,r){var t=n+r;for(r=n;e[r]&&!(r>=t);)++r;if(16<r-n&&e.subarray&&j)return j.decode(e.subarray(n,r));for(t=\"\";n<r;){var a=e[n++];if(128&a){var o=63&e[n++];if(192==(224&a))t+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[n++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[n++])?t+=String.fromCharCode(a):(a-=65536,t+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else t+=String.fromCharCode(a)}return t}function Y(e,n){return e?H(r(),e,n):\"\"}function G(e,n,r,t){if(!(0<t))return 0;var a=r;t=r+t-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(r>=t)break;n[r++]=i}else{if(2047>=i){if(r+1>=t)break;n[r++]=192|i>>6}else{if(65535>=i){if(r+2>=t)break;n[r++]=224|i>>12}else{if(r+3>=t)break;n[r++]=240|i>>18,n[r++]=128|i>>12&63}n[r++]=128|i>>6&63}n[r++]=128|63&i}}return n[r]=0,r-a}function N(e,n,t){return G(e,r(),n,t)}function q(e){for(var n=0,r=0;r<e.length;++r){var t=e.charCodeAt(r);55296<=t&&57343>=t&&(t=65536+((1023&t)<<10)|1023&e.charCodeAt(++r)),127>=t?++n:n=2047>=t?n+2:65535>=t?n+3:n+4}return n}var B,L,z,V,J,X,Q,K,Z,$=\"undefined\"!=typeof TextDecoder?new U(\"utf-16le\"):void 0;function ee(e,n){for(var o=e>>1,i=o+n/2;!(o>=i)&&a()[o];)++o;if(32<(o<<=1)-e&&$)return $.decode(r().subarray(e,o));for(o=\"\",i=0;!(i>=n/2);++i){var u=t()[e+2*i>>1];if(0==u)break;o+=String.fromCharCode(u)}return o}function ne(e,n,r){if(void 0===r&&(r=2147483647),2>r)return 0;var a=n;r=(r-=2)<2*e.length?r/2:e.length;for(var o=0;o<r;++o){var i=e.charCodeAt(o);t()[n>>1]=i,n+=2}return t()[n>>1]=0,n-a}function re(e){return 2*e.length}function te(e,n){for(var r=0,t=\"\";!(r>=n/4);){var a=o()[e+4*r>>2];if(0==a)break;++r,65536<=a?(a-=65536,t+=String.fromCharCode(55296|a>>10,56320|1023&a)):t+=String.fromCharCode(a)}return t}function ae(e,n,r){if(void 0===r&&(r=2147483647),4>r)return 0;var t=n;r=t+r-4;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),o()[n>>2]=i,(n+=4)+4>r)break}return o()[n>>2]=0,n-t}function oe(e){for(var n=0,r=0;r<e.length;++r){var t=e.charCodeAt(r);55296<=t&&57343>=t&&++r,n+=4}return n}function ie(e){var r=q(e)+1,t=ar(r);return t&&G(e,n(),t,r),t}function ue(e){B=e,c.HEAP8=L=new Int8Array(e),c.HEAP16=V=new Int16Array(e),c.HEAP32=X=new Int32Array(e),c.HEAPU8=z=new Uint8Array(e),c.HEAPU16=J=new Uint16Array(e),c.HEAPU32=Q=new Uint32Array(e),c.HEAPF32=K=new Float32Array(e),c.HEAPF64=Z=new Float64Array(e)}T&&(B=c.buffer);var ce=c.INITIAL_MEMORY||16777216;if(T)F=c.wasmMemory,B=c.buffer;else if(c.wasmMemory)F=c.wasmMemory;else if(!((F=new WebAssembly.Memory({initial:ce/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),A&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");F&&(B=F.buffer),ce=B.byteLength,ue(B);var fe,se=[],le=[],pe=[],de=[],me=0;function he(){return x||0<me}function be(){var e=c.preRun.shift();se.unshift(e)}var ge,ye=0,_e=null,ve=null;function we(e){throw c.onAbort&&c.onAbort(e),W(!T),D(e),R=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function Ae(){return ge.startsWith(\"data:application/octet-stream;base64,\")}function Te(){var e=ge;try{if(e==ge&&S)return new Uint8Array(S);if(g)return g(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){we(e)}}c.preloadedImages={},c.preloadedAudios={},ge=\"ort-wasm-threaded.wasm\",Ae()||(ge=k(ge));var Ee={985396:function(){throw\"Canceled!\"}};function ke(e){for(;0<e.length;){var n=e.shift();if(\"function\"==typeof n)n(c);else{var r=n.qc;\"number\"==typeof r?void 0===n.Jb?fe.get(r)():fe.get(r)(n.Jb):r(void 0===n.Jb?null:n.Jb)}}}function Oe(e,r){if(0>=e||e>n().length||1&e||0>r)return-28;if(0==r)return 0;2147483647<=r&&(r=1/0);var t=Atomics.load(o(),Dr>>2),a=0;if(t==e&&Atomics.compareExchange(o(),Dr>>2,t,0)==t&&(a=1,0>=--r))return 1;if(0<=(e=Atomics.notify(o(),e>>2,r)))return e+a;throw\"Atomics.notify returned an unexpected value \"+e}function Ce(e){if(T)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var n=Me.Eb[e];n&&(o()[e+12>>2]=0,Me.Ub(n.worker))}c._emscripten_futex_wake=Oe;var Se,Me={Hb:[],Gb:[],bc:[],bd:function(){},vc:function(){for(var e=ar(228),n=0;57>n;++n)i()[e/4+n]=0;o()[e+12>>2]=e,n=e+152,o()[n>>2]=n;var r=ar(512);for(n=0;128>n;++n)i()[r/4+n]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),yr(e,!w,1),sr(e)},wc:function(){Me.receiveObjectTransfer=Me.Cc,Me.threadInit=Me.Mc,Me.threadCancel=Me.Lc,Me.threadExit=Me.kc,Me.setExitStatus=Me.Ec},Eb:{},ac:[],hc:function(){for(;0<Me.ac.length;)Me.ac.pop()();vr()},ic:function(e,n){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Me.hc(),Atomics.store(i(),e+4>>2,n),Atomics.store(i(),e+0>>2,1),Oe(e+0,2147483647),yr(0,0,0)},Ec:function(e){P=e},kc:function(e){var n=ur();n&&(Me.ic(n,e),T&&postMessage({cmd:\"exit\"}))},Lc:function(){Me.ic(ur(),-1),postMessage({cmd:\"cancelDone\"})},jc:function(){for(var e in Me.Eb){var n=Me.Eb[e];n&&n.worker&&Me.Ub(n.worker)}for(Me.Eb={},e=0;e<Me.Hb.length;++e){var r=Me.Hb[e];r.terminate()}for(Me.Hb=[],e=0;e<Me.Gb.length;++e)n=(r=Me.Gb[e]).Db,Me.Zb(n),r.terminate();Me.Gb=[]},Zb:function(e){if(e){if(e.Fb){var n=o()[e.Fb+100>>2];o()[e.Fb+100>>2]=0,ir(n),ir(e.Fb)}e.Fb=0,e.Yb&&e.Ib&&ir(e.Ib),e.Ib=0,e.worker&&(e.worker.Db=null)}},Ub:function(e){Me.Dc((function(){delete Me.Eb[e.Db.Fb],Me.Hb.push(e),Me.Gb.splice(Me.Gb.indexOf(e),1),Me.Zb(e.Db),e.Db=void 0}))},Dc:function(e){o()[Mr>>2]=0;try{e()}finally{o()[Mr>>2]=1}},Cc:function(){},Mc:function(){for(var e in Me.bc)Me.bc[e]()},zc:function(e,n){e.onmessage=function(r){var t=r.data,a=t.cmd;if(e.Db&&(Me.oc=e.Db.Fb),t.targetThread&&t.targetThread!=ur()){var u=Me.Eb[t.jd];u?u.worker.postMessage(r.data,t.transferList):D('Internal error! Worker sent a message \"'+a+'\" to target pthread '+t.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)dr();else if(\"spawnThread\"===a)Ie(r.data);else if(\"cleanupThread\"===a)Ce(t.thread);else if(\"killThread\"===a){if(r=t.thread,T)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!r)throw\"Internal Error! Null pthread_ptr in killThread!\";o()[r+12>>2]=0,t=Me.Eb[r],delete Me.Eb[r],t.worker.terminate(),Me.Zb(t),Me.Gb.splice(Me.Gb.indexOf(t.worker),1),t.worker.Db=void 0}else if(\"cancelThread\"===a){if(r=t.thread,T)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!r)throw\"Internal Error! Null pthread_ptr in cancelThread!\";Me.Eb[r].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,n&&n(e),e.Ob&&(e.Ob(),delete e.Ob);else if(\"print\"===a)M(\"Thread \"+t.threadId+\": \"+t.text);else if(\"printErr\"===a)D(\"Thread \"+t.threadId+\": \"+t.text);else if(\"alert\"===a)alert(\"Thread \"+t.threadId+\": \"+t.text);else if(\"exit\"===a)e.Db&&Atomics.load(i(),e.Db.Fb+64>>2)&&Me.Ub(e);else if(\"exitProcess\"===a)try{Ir(t.returnCode)}catch(e){if(e instanceof xr)return;throw e}else\"cancelDone\"===a?Me.Ub(e):\"objectTransfer\"!==a&&(\"setimmediate\"===r.data.target?e.postMessage(r.data):D(\"worker sent an unknown command \"+a));Me.oc=void 0},e.onerror=function(e){D(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},A&&void 0!==e.on&&(e.on(\"message\",(function(n){e.onmessage({data:n})})),e.on(\"error\",(function(n){e.onerror(n)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:F,wasmModule:I})},lc:function(){var e=k(\"ort-wasm-threaded.worker.js\");Me.Hb.push(new Worker(e))},rc:function(){return 0==Me.Hb.length&&(Me.lc(),Me.zc(Me.Hb[0])),Me.Hb.pop()},Sc:function(e){for(e=performance.now()+e;performance.now()<e;);}};function De(e,n){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return o()[or()>>2]=28,-1;e=Se()}return o()[n>>2]=e/1e3|0,o()[n+4>>2]=e%1e3*1e6|0,0}function xe(e,n){if(T)return Dn(1,1,e,n);pe.unshift({qc:e,Jb:n})}function Fe(e){this.Nb=e-16,this.Jc=function(e){o()[this.Nb+4>>2]=e},this.Gc=function(e){o()[this.Nb+8>>2]=e},this.Hc=function(){o()[this.Nb>>2]=0},this.Fc=function(){n()[this.Nb+12>>0]=0},this.Ic=function(){n()[this.Nb+13>>0]=0},this.tc=function(e,n){this.Jc(e),this.Gc(n),this.Hc(),this.Fc(),this.Ic()}}function Ie(e){if(T)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var n=Me.rc();if(!n)return 6;if(void 0!==n.Db)throw\"Internal error!\";if(!e.Tb)throw\"Internal error, no pthread ptr!\";Me.Gb.push(n);for(var r=ar(512),t=0;128>t;++t)o()[r+4*t>>2]=0;var a=e.Ib+e.Kb,u=(t=Me.Eb[e.Tb]={worker:n,Ib:e.Ib,Kb:e.Kb,Yb:e.Yb,Fb:e.Tb}).Fb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,r),Atomics.store(i(),u+10,t.Fb),Atomics.store(i(),u+20,e.Kb),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.Kb),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached),r=_r()+40,Atomics.store(i(),u+43,r),n.Db=t;var c={cmd:\"run\",start_routine:e.Kc,arg:e.Jb,threadInfoStruct:e.Tb,stackBase:e.Ib,stackSize:e.Kb};return n.Ob=function(){c.time=performance.now(),n.postMessage(c,e.Rc)},n.loaded&&(n.Ob(),delete n.Ob),0}function Pe(e,r,t){if(0>=e||e>n().length||1&e)return-28;if(v){if(Atomics.load(o(),e>>2)!=r)return-6;var a=performance.now();for(t=a+t,Atomics.exchange(o(),Dr>>2,e);;){if((a=performance.now())>t)return Atomics.exchange(o(),Dr>>2,0),-73;if(0==(a=Atomics.exchange(o(),Dr>>2,0)))break;if(dr(),Atomics.load(o(),e>>2)!=r)return-6;Atomics.exchange(o(),Dr>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(o(),e>>2,r,t)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function Re(){A||w||(C||(C={}),C[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(C[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,D(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}c.establishStackSpace=function(e,n){Cr(e,n),kr(e)},c.invokeEntryPoint=function(e,n){return fe.get(e)(n)},Se=A?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:T?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var We={},Ue=[null,[],[]];function je(e,n){var r=Ue[e];0===n||10===n?((1===e?M:D)(H(r,0)),r.length=0):r.push(n)}var He={};function Ye(e,n){return T?Dn(2,1,e,n):(e=Y(e),He.Wc(e,n))}function Ge(e,n,r){return T?Dn(3,1,e,n,r):0}function Ne(e,n){if(T)return Dn(4,1,e,n)}function qe(e,n,r){if(T)return Dn(5,1,e,n,r)}function Be(e,n,r){return T?Dn(6,1,e,n,r):0}function Le(e,n){if(T)return Dn(7,1,e,n)}function ze(e,n){return T?Dn(8,1,e,n):(e=Y(e),He.Xc(e,n))}function Ve(e,n,t,a,o,i){if(T)n=Dn(9,1,e,n,t,a,o,i);else if(i<<=12,0!=(16&a)&&0!=e%65536)n=-28;else if(0!=(32&a)){var u=65536*Math.ceil(n/65536);(e=Sr(65536,u))?r().fill(0,e,e+u):e=0,e?(We[e]={Bc:e,yc:n,mc:!0,fd:o,ed:t,flags:a,offset:i},n=e):n=-48}else n=-52;return n}function Je(e,n){if(T)e=Dn(10,1,e,n);else{var r=We[e];0!==n&&r?(n===r.yc&&(We[e]=null,r.mc&&ir(r.Bc)),e=0):e=-28}return e}function Xe(e,n,r){if(T)return Dn(11,1,e,n,r)}function Qe(e,n,r){return T?Dn(12,1,e,n,r):(e=Y(e),He.Yc(e,n,r))}function Ke(e){if(T)return Dn(13,1,e)}function Ze(e,n){if(T)return Dn(14,1,e,n)}function $e(e){if(T)return Dn(15,1,e)}function en(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+e)}}var nn=void 0;function rn(e){for(var n=\"\";r()[e];)n+=nn[r()[e++]];return n}var tn={},an={},on={};function un(e){if(void 0===e)return\"_unknown\";var n=(e=e.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return 48<=n&&57>=n?\"_\"+e:e}function cn(e,n){return e=un(e),new Function(\"body\",\"return function \"+e+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(n)}function fn(e){var n=Error,r=cn(e,(function(n){this.name=e,this.message=n,void 0!==(n=Error(n).stack)&&(this.stack=this.toString()+\"\\n\"+n.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},r}var sn=void 0;function ln(e){throw new sn(e)}function pn(e,n,r){if(r=r||{},!(\"argPackAdvance\"in n))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var t=n.name;if(e||ln('type \"'+t+'\" must have a positive integer typeid pointer'),an.hasOwnProperty(e)){if(r.sc)return;ln(\"Cannot register type '\"+t+\"' twice\")}an[e]=n,delete on[e],tn.hasOwnProperty(e)&&(n=tn[e],delete tn[e],n.forEach((function(e){e()})))}var dn=[],mn=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function hn(e){4<e&&0==--mn[e].$b&&(mn[e]=void 0,dn.push(e))}function bn(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var n=dn.length?dn.pop():mn.length;return mn[n]={$b:1,value:e},n}}function gn(e){return this.fromWireType(i()[e>>2])}function yn(e){if(null===e)return\"null\";var n=typeof e;return\"object\"===n||\"array\"===n||\"function\"===n?e.toString():\"\"+e}function _n(e,n){switch(n){case 2:return function(e){var n=this.fromWireType;return F.buffer!=B&&ue(F.buffer),n.call(this,K[e>>2])};case 3:return function(e){return this.fromWireType(u()[e>>3])};default:throw new TypeError(\"Unknown float type: \"+e)}}function vn(e,u,c){switch(u){case 0:return c?function(e){return n()[e]}:function(e){return r()[e]};case 1:return c?function(e){return t()[e>>1]}:function(e){return a()[e>>1]};case 2:return c?function(e){return o()[e>>2]}:function(e){return i()[e>>2]};default:throw new TypeError(\"Unknown integer type: \"+e)}}function wn(e){return e||ln(\"Cannot use deleted val. handle = \"+e),mn[e].value}function An(e,n){var r=an[e];if(void 0===r){var t=rn(e=cr(e));ir(e),ln(n+\" has unknown type \"+t)}return r}var Tn={};function En(e){var n=Tn[e];return void 0===n?rn(e):n}var kn=[];function On(){return\"object\"==typeof globalThis?globalThis:Function(\"return this\")()}var Cn={};function Sn(){if(T)return Dn(16,1);we()}var Mn=[];function Dn(e,n){for(var r=arguments.length-2,t=Er(),a=Or(8*r),o=a>>3,i=0;i<r;i++){var c=arguments[2+i];u()[o+i]=c}return r=mr(e,r,a,n),kr(t),r}var xn=[],Fn=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function In(e){return e=2<e?Y(e):e,Fn[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Pn(e,n,r){var t=In(e);if(!t)return-4;if(t.Sb&&(o()[t.Sb>>2]=n,o()[t.Sb+4>>2]=r),!t.fc&&t.Uc){if(t.Sb){t=o()[t.Sb+8>>2],e=e?Y(e):\"\";var a=Er(),i=Or(12),u=0;if(e){u=q(e)+1;var c=ar(u);N(e,c,u),u=c}return o()[i>>2]=u,o()[i+4>>2]=n,o()[i+8>>2]=r,hr(0,t,657457152,0,u,i),kr(a),1}return-4}return t.fc&&(t=t.fc),e=!1,t.Rb&&t.Rb.Qb&&(e=0===(e=t.Rb.Qb.getParameter(2978))[0]&&0===e[1]&&e[2]===t.width&&e[3]===t.height),t.width=n,t.height=r,e&&t.Rb.Qb.viewport(0,0,n,r),0}function Rn(e,n,r){return T?Dn(17,1,e,n,r):Pn(e,n,r)}var Wn,Un=[\"default\",\"low-power\",\"high-performance\"],jn={};function Hn(){if(!Wn){var e,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in jn)void 0===jn[e]?delete n[e]:n[e]=jn[e];var r=[];for(e in n)r.push(e+\"=\"+n[e]);Wn=r}return Wn}function Yn(e,r){if(T)return Dn(18,1,e,r);var t=0;return Hn().forEach((function(a,i){var u=r+t;for(i=o()[e+4*i>>2]=u,u=0;u<a.length;++u)n()[i++>>0]=a.charCodeAt(u);n()[i>>0]=0,t+=a.length+1})),0}function Gn(e,n){if(T)return Dn(19,1,e,n);var r=Hn();o()[e>>2]=r.length;var t=0;return r.forEach((function(e){t+=e.length+1})),o()[n>>2]=t,0}function Nn(e){return T?Dn(20,1,e):0}function qn(e,r){return T?Dn(21,1,e,r):(e=1==e||2==e?2:we(),n()[r>>0]=e,0)}function Bn(e,n,r,t){return T?Dn(22,1,e,n,r,t):(e=He.$c(e),n=He.Zc(e,n,r),o()[t>>2]=n,0)}function Ln(e,n,r,t,a){if(T)return Dn(23,1,e,n,r,t,a)}function zn(e,n,t,a){if(T)return Dn(24,1,e,n,t,a);for(var i=0,u=0;u<t;u++){for(var c=o()[n+8*u>>2],f=o()[n+(8*u+4)>>2],s=0;s<f;s++)je(e,r()[c+s]);i+=f}return o()[a>>2]=i,0}function Vn(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(T)return Dn(25,1);if(!Vn.nc){Vn.nc=!0;var n=(new Date).getFullYear(),r=new Date(n,0,1),t=new Date(n,6,1);n=r.getTimezoneOffset();var a=t.getTimezoneOffset(),i=Math.max(n,a);o()[Tr()>>2]=60*i,o()[Ar()>>2]=Number(n!=a),r=e(r),t=e(t),r=ie(r),t=ie(t),a<n?(o()[wr()>>2]=r,o()[wr()+4>>2]=t):(o()[wr()>>2]=t,o()[wr()+4>>2]=r)}}function Jn(e){return 0==e%4&&(0!=e%100||0==e%400)}function Xn(e,n){for(var r=0,t=0;t<=n;r+=e[t++]);return r}var Qn=[31,29,31,30,31,30,31,31,30,31,30,31],Kn=[31,28,31,30,31,30,31,31,30,31,30,31];function Zn(e,n){for(e=new Date(e.getTime());0<n;){var r=e.getMonth(),t=(Jn(e.getFullYear())?Qn:Kn)[r];if(!(n>t-e.getDate())){e.setDate(e.getDate()+n);break}n-=t-e.getDate()+1,e.setDate(1),11>r?e.setMonth(r+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function $n(e,r,t,a){function i(e,n,r){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<n;)e=r[0]+e;return e}function u(e,n){return i(e,n,\"0\")}function c(e,n){function r(e){return 0>e?-1:0<e?1:0}var t;return 0===(t=r(e.getFullYear()-n.getFullYear()))&&0===(t=r(e.getMonth()-n.getMonth()))&&(t=r(e.getDate()-n.getDate())),t}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Zn(new Date(e.Cb+1900,0,1),e.Xb);var n=new Date(e.getFullYear()+1,0,4),r=f(new Date(e.getFullYear(),0,4));return n=f(n),0>=c(r,e)?0>=c(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=o()[a+40>>2];for(var p in a={Pc:o()[a>>2],Oc:o()[a+4>>2],Vb:o()[a+8>>2],Pb:o()[a+12>>2],Lb:o()[a+16>>2],Cb:o()[a+20>>2],Wb:o()[a+24>>2],Xb:o()[a+28>>2],kd:o()[a+32>>2],Nc:o()[a+36>>2],Qc:l?Y(l):\"\"},t=Y(t),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})t=t.replace(new RegExp(p,\"g\"),l[p]);var d=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(e){return d[e.Wb].substring(0,3)},\"%A\":function(e){return d[e.Wb]},\"%b\":function(e){return m[e.Lb].substring(0,3)},\"%B\":function(e){return m[e.Lb]},\"%C\":function(e){return u((e.Cb+1900)/100|0,2)},\"%d\":function(e){return u(e.Pb,2)},\"%e\":function(e){return i(e.Pb,2,\" \")},\"%g\":function(e){return s(e).toString().substring(2)},\"%G\":function(e){return s(e)},\"%H\":function(e){return u(e.Vb,2)},\"%I\":function(e){return 0==(e=e.Vb)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.Pb+Xn(Jn(e.Cb+1900)?Qn:Kn,e.Lb-1),3)},\"%m\":function(e){return u(e.Lb+1,2)},\"%M\":function(e){return u(e.Oc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.Vb&&12>e.Vb?\"AM\":\"PM\"},\"%S\":function(e){return u(e.Pc,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.Wb||7},\"%U\":function(e){var n=new Date(e.Cb+1900,0,1),r=0===n.getDay()?n:Zn(n,7-n.getDay());return 0>c(r,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-r.getDate()+(Xn(Jn(e.getFullYear())?Qn:Kn,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(r,n)?\"01\":\"00\"},\"%V\":function(e){var n=new Date(e.Cb+1901,0,4),r=f(new Date(e.Cb+1900,0,4));n=f(n);var t=Zn(new Date(e.Cb+1900,0,1),e.Xb);return 0>c(t,r)?\"53\":0>=c(n,t)?\"01\":u(Math.ceil((r.getFullYear()<e.Cb+1900?e.Xb+32-r.getDate():e.Xb+1-r.getDate())/7),2)},\"%w\":function(e){return e.Wb},\"%W\":function(e){var n=new Date(e.Cb,0,1),r=1===n.getDay()?n:Zn(n,0===n.getDay()?1:7-n.getDay()+1);return 0>c(r,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-r.getDate()+(Xn(Jn(e.getFullYear())?Qn:Kn,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(r,n)?\"01\":\"00\"},\"%y\":function(e){return(e.Cb+1900).toString().substring(2)},\"%Y\":function(e){return e.Cb+1900},\"%z\":function(e){var n=0<=(e=e.Nc);return e=Math.abs(e)/60,(n?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.Qc},\"%%\":function(){return\"%\"}})t.includes(p)&&(t=t.replace(new RegExp(p,\"g\"),l[p](a)));return(p=function(e){var n=Array(q(e)+1);return G(e,n,0,n.length),n}(t)).length>r?0:(function(e,r){n().set(e,r)}(p,e),p.length-1)}for(var er=Array(256),nr=0;256>nr;++nr)er[nr]=String.fromCharCode(nr);nn=er,sn=c.BindingError=fn(\"BindingError\"),c.InternalError=fn(\"InternalError\"),c.count_emval_handles=function(){for(var e=0,n=5;n<mn.length;++n)void 0!==mn[n]&&++e;return e},c.get_first_emval=function(){for(var e=5;e<mn.length;++e)if(void 0!==mn[e])return mn[e];return null};var rr=[null,xe,Ye,Ge,Ne,qe,Be,Le,ze,Ve,Je,Xe,Qe,Ke,Ze,$e,Sn,Rn,Yn,Gn,Nn,qn,Bn,Ln,zn,Vn],tr={u:function(e,n,r,t){we(\"Assertion failed: \"+Y(e)+\", at: \"+[n?Y(n):\"unknown filename\",r,t?Y(t):\"unknown function\"])},da:function(e,n){return De(e,n)},b:function(e){return ar(e+16)+16},e:function(e,n){return xe(e,n)},l:function(e,n){Me.ac.push((function(){fe.get(e)(n)}))},c:function(e,n,r){throw new Fe(e).tc(n,r),e},ra:function(e,n,r,t){if(\"undefined\"==typeof SharedArrayBuffer)return D(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return D(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(T&&0===a.length)return pr(687865856,e,n,r,t);var u=0,c=0;if(n&&-1!=n){var f=o()[n>>2];f+=81920,u=o()[n+8>>2],c=0!==o()[n+12>>2]}else f=2097152;(n=0==u)?u=Sr(16,f):W(0<(u-=f));for(var s=ar(228),l=0;57>l;++l)i()[(s>>2)+l]=0;return o()[e>>2]=s,o()[s+12>>2]=s,e=s+152,o()[e>>2]=e,r={Ib:u,Kb:f,Yb:n,detached:c,Kc:r,Tb:s,Jb:t,Rc:a},T?(r.Tc=\"spawnThread\",postMessage(r,a),0):Ie(r)},pa:function(e){throw T?Me.kc(e):(Me.hc(),Ir(e)),\"unwind\"},qa:function(e,n){return function(e,n){if(!e)return D(\"pthread_join attempted on a null thread pointer!\"),71;if(T&&ur()==e)return D(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!T&&lr()==e)return D(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(o()[e+12>>2]!==e)return D(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return D(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(Re();;){var r=Atomics.load(i(),e+0>>2);if(1==r)return r=Atomics.load(i(),e+4>>2),n&&(o()[n>>2]=r),Atomics.store(i(),e+64>>2,1),T?postMessage({cmd:\"cleanupThread\",thread:e}):Ce(e),0;br(),T||dr(),Pe(e+0,r,T?100:1)}}(e,n)},ca:Ye,I:Ge,ja:Ne,ma:qe,K:function(){return 42},X:Be,ia:Le,ha:ze,la:Ve,ka:Je,E:Xe,ba:Qe,fa:Ke,L:Ze,ga:$e,U:function(){},Ba:function(e,r,a,i,u){var c=en(a);pn(e,{name:r=rn(r),fromWireType:function(e){return!!e},toWireType:function(e,n){return n?i:u},argPackAdvance:8,readValueFromPointer:function(e){if(1===a)var i=n();else if(2===a)i=t();else{if(4!==a)throw new TypeError(\"Unknown boolean type size: \"+r);i=o()}return this.fromWireType(i[e>>c])},Mb:null})},Aa:function(e,n){pn(e,{name:n=rn(n),fromWireType:function(e){var n=mn[e].value;return hn(e),n},toWireType:function(e,n){return bn(n)},argPackAdvance:8,readValueFromPointer:gn,Mb:null})},N:function(e,n,r){r=en(r),pn(e,{name:n=rn(n),fromWireType:function(e){return e},toWireType:function(e,n){if(\"number\"!=typeof n&&\"boolean\"!=typeof n)throw new TypeError('Cannot convert \"'+yn(n)+'\" to '+this.name);return n},argPackAdvance:8,readValueFromPointer:_n(n,r),Mb:null})},t:function(e,n,r,t,a){function o(e){return e}n=rn(n),-1===a&&(a=4294967295);var i=en(r);if(0===t){var u=32-8*r;o=function(e){return e<<u>>>u}}var c=n.includes(\"unsigned\");pn(e,{name:n,fromWireType:o,toWireType:function(e,r){if(\"number\"!=typeof r&&\"boolean\"!=typeof r)throw new TypeError('Cannot convert \"'+yn(r)+'\" to '+this.name);if(r<t||r>a)throw new TypeError('Passing a number \"'+yn(r)+'\" from JS side to C/C++ side to an argument of type \"'+n+'\", which is outside the valid range ['+t+\", \"+a+\"]!\");return c?r>>>0:0|r},argPackAdvance:8,readValueFromPointer:vn(n,i,0!==t),Mb:null})},s:function(e,n,r){function t(e){e>>=2;var n=i();return new a(B,n[e+1],n[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][n];pn(e,{name:r=rn(r),fromWireType:t,argPackAdvance:8,readValueFromPointer:t},{sc:!0})},O:function(e,n){var t=\"std::string\"===(n=rn(n));pn(e,{name:n,fromWireType:function(e){var n=i()[e>>2];if(t)for(var a=e+4,o=0;o<=n;++o){var u=e+4+o;if(o==n||0==r()[u]){if(a=Y(a,u-a),void 0===c)var c=a;else c+=String.fromCharCode(0),c+=a;a=u+1}}else{for(c=Array(n),o=0;o<n;++o)c[o]=String.fromCharCode(r()[e+4+o]);c=c.join(\"\")}return ir(e),c},toWireType:function(e,n){n instanceof ArrayBuffer&&(n=new Uint8Array(n));var a=\"string\"==typeof n;a||n instanceof Uint8Array||n instanceof Uint8ClampedArray||n instanceof Int8Array||ln(\"Cannot pass non-string to std::string\");var o=(t&&a?function(){return q(n)}:function(){return n.length})(),u=ar(4+o+1);if(i()[u>>2]=o,t&&a)N(n,u+4,o+1);else if(a)for(a=0;a<o;++a){var c=n.charCodeAt(a);255<c&&(ir(u),ln(\"String has UTF-16 code units that do not fit in 8 bits\")),r()[u+4+a]=c}else for(a=0;a<o;++a)r()[u+4+a]=n[a];return null!==e&&e.push(ir,u),u},argPackAdvance:8,readValueFromPointer:gn,Mb:function(e){ir(e)}})},F:function(e,n,r){if(r=rn(r),2===n)var t=ee,o=ne,u=re,c=function(){return a()},f=1;else 4===n&&(t=te,o=ae,u=oe,c=function(){return i()},f=2);pn(e,{name:r,fromWireType:function(e){for(var r,a=i()[e>>2],o=c(),u=e+4,s=0;s<=a;++s){var l=e+4+s*n;s!=a&&0!=o[l>>f]||(u=t(u,l-u),void 0===r?r=u:(r+=String.fromCharCode(0),r+=u),u=l+n)}return ir(e),r},toWireType:function(e,t){\"string\"!=typeof t&&ln(\"Cannot pass non-string to C++ string type \"+r);var a=u(t),c=ar(4+a+n);return i()[c>>2]=a>>f,o(t,c+4,a+n),null!==e&&e.push(ir,c),c},argPackAdvance:8,readValueFromPointer:gn,Mb:function(e){ir(e)}})},Ca:function(e,n){pn(e,{xc:!0,name:n=rn(n),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},xa:function(e,n){if(e==n)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(T)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=Me.Eb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},G:function(e,n,r){e=wn(e),n=An(n,\"emval::as\");var t=[],a=bn(t);return o()[r>>2]=a,n.toWireType(t,e)},r:function(e,n,r,t,a){e=kn[e],n=wn(n),r=En(r);var i=[];return o()[t>>2]=bn(i),e(n,r,i,a)},n:function(e,n,r,t){(e=kn[e])(n=wn(n),r=En(r),null,t)},d:hn,P:function(e,n){return(e=wn(e))==wn(n)},R:function(e){return 0===e?bn(On()):(e=En(e),bn(On()[e]))},i:function(e,n){for(var r=(n=function(e,n){for(var r=Array(e),t=0;t<e;++t)r[t]=An(o()[(n>>2)+t],\"parameter \"+t);return r}(e,n))[0],t=r.name+\"_$\"+n.slice(1).map((function(e){return e.name})).join(\"_\")+\"$\",a=[\"retType\"],i=[r],u=\"\",c=0;c<e-1;++c)u+=(0!==c?\", \":\"\")+\"arg\"+c,a.push(\"argType\"+c),i.push(n[1+c]);t=\"return function \"+un(\"methodCaller_\"+t)+\"(handle, name, destructors, args) {\\n\";var f=0;for(c=0;c<e-1;++c)t+=\"    var arg\"+c+\" = argType\"+c+\".readValueFromPointer(args\"+(f?\"+\"+f:\"\")+\");\\n\",f+=n[c+1].argPackAdvance;for(t+=\"    var rv = handle[name](\"+u+\");\\n\",c=0;c<e-1;++c)n[c+1].deleteObject&&(t+=\"    argType\"+c+\".deleteObject(arg\"+c+\");\\n\");return r.xc||(t+=\"    return retType.toWireType(destructors, rv);\\n\"),a.push(t+\"};\\n\"),function(e){var n=kn.length;return kn.push(e),n}(e=function(e){var n=Function;if(!(n instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof n+\" which is not a function\");var r=cn(n.name||\"unknownFunctionName\",(function(){}));return r.prototype=n.prototype,r=new r,(e=n.apply(r,e))instanceof Object?e:r}(a).apply(null,i))},A:function(e,n){return bn((e=wn(e))[n=wn(n)])},h:function(e){4<e&&(mn[e].$b+=1)},Da:function(e,n,r,t){e=wn(e);var a=Cn[n];if(!a){a=\"\";for(var o=0;o<n;++o)a+=(0!==o?\", \":\"\")+\"arg\"+o;var i=\"return function emval_allocator_\"+n+\"(constructor, argTypes, args) {\\n\";for(o=0;o<n;++o)i+=\"var argType\"+o+\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \"+o+'], \"parameter '+o+'\");\\nvar arg'+o+\" = argType\"+o+\".readValueFromPointer(args);\\nargs += argType\"+o+\"['argPackAdvance'];\\n\";a=new Function(\"requireRegisteredType\",\"Module\",\"__emval_register\",i+\"var obj = new constructor(\"+a+\");\\nreturn __emval_register(obj);\\n}\\n\")(An,c,bn),Cn[n]=a}return a(e,r,t)},o:function(){return bn([])},f:function(e){return bn(En(e))},j:function(){return bn({})},p:function(e){for(var n=mn[e].value;n.length;){var r=n.pop();n.pop()(r)}hn(e)},g:function(e,n,r){e=wn(e),n=wn(n),r=wn(r),e[n]=r},k:function(e,n){return bn(e=(e=An(e,\"_emval_take_value\")).readValueFromPointer(n))},m:Sn,Q:De,Fa:function(e,n){return e-n},ea:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},z:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},na:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Y:function(){we(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ya:function(e,n,t){var a;for(Mn.length=0,t>>=2;a=r()[n++];)(a=105>a)&&1&t&&t++,Mn.push(a?u()[t++>>1]:o()[t]),++t;return Ee[e].apply(null,Mn)},Z:Re,B:function(){},x:Pe,w:Oe,oa:function(){return 2147483648},v:Se,V:function(e,n,t){r().copyWithin(e,n,n+t)},C:function(){return A?require(\"os\").cpus().length:navigator.hardwareConcurrency},ua:function(e,n,r){xn.length=n,r>>=3;for(var t=0;t<n;t++)xn[t]=u()[r+t];return(0>e?Ee[-e-1]:rr[e]).apply(null,xn)},W:function(e){var n=r().length;if((e>>>=0)<=n||2147483648<e)return!1;for(var t=1;4>=t;t*=2){var a=n*(1+.2/t);a=Math.min(a,e+100663296),0<(a=Math.max(e,a))%65536&&(a+=65536-a%65536);e:{try{F.grow(Math.min(2147483648,a)-B.byteLength+65535>>>16),ue(F.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},va:function(e,n,r){return In(e)?Pn(e,n,r):Rn(e,n,r)},M:function(){},ta:function(e,n,r){return me+=1,setTimeout((function(){--me,function(e){if(!R){try{e()}catch(e){if(e instanceof xr)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&D(\"exception thrown: \"+[e,e.stack]),e}if(!he())try{T?gr(P):Ir(P)}catch(e){if(!(e instanceof xr))throw e}}}((function(){fe.get(e)(r)}))}),n)},wa:function(e,n){n>>=2;var r=o()[n+6];return n={alpha:!!o()[n],depth:!!o()[n+1],stencil:!!o()[n+2],antialias:!!o()[n+3],premultipliedAlpha:!!o()[n+4],preserveDrawingBuffer:!!o()[n+5],powerPreference:Un[r],failIfMajorPerformanceCaveat:!!o()[n+7],Ac:o()[n+8],cd:o()[n+9],dc:o()[n+10],pc:o()[n+11],gd:o()[n+12],hd:o()[n+13]},!(e=In(e))||n.pc?0:function(e,n){e.ec||(e.ec=e.getContext,e.getContext=function(n,r){return\"webgl\"==n==(r=e.ec(n,r))instanceof WebGLRenderingContext?r:null});var r=e.getContext(\"webgl\",n);return r?function(e,n){var r=ar(8);o()[r+4>>2]=ur();var t={ad:r,attributes:n,version:n.Ac,Qb:e};return e.canvas&&(e.canvas.Rb=t),(void 0===n.dc||n.dc)&&function(e){if(e||(e=void 0),!e.uc){e.uc=!0;var n=e.Qb;!function(e){var n=e.getExtension(\"ANGLE_instanced_arrays\");n&&(e.vertexAttribDivisor=function(e,r){n.vertexAttribDivisorANGLE(e,r)},e.drawArraysInstanced=function(e,r,t,a){n.drawArraysInstancedANGLE(e,r,t,a)},e.drawElementsInstanced=function(e,r,t,a,o){n.drawElementsInstancedANGLE(e,r,t,a,o)})}(n),function(e){var n=e.getExtension(\"OES_vertex_array_object\");n&&(e.createVertexArray=function(){return n.createVertexArrayOES()},e.deleteVertexArray=function(e){n.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){n.bindVertexArrayOES(e)},e.isVertexArray=function(e){return n.isVertexArrayOES(e)})}(n),function(e){var n=e.getExtension(\"WEBGL_draw_buffers\");n&&(e.drawBuffers=function(e,r){n.drawBuffersWEBGL(e,r)})}(n),n.Vc=n.getExtension(\"EXT_disjoint_timer_query\"),n.dd=n.getExtension(\"WEBGL_multi_draw\"),(n.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||n.getExtension(e)}))}}(t),r}(r,n):0}(e,n)},$:Yn,aa:Gn,y:Nn,_:qn,J:Bn,T:Ln,D:zn,za:function(e){var n=Date.now();return o()[e>>2]=n/1e3|0,o()[e+4>>2]=n%1e3*1e3|0,0},Ga:function e(n,r){return n=new Date(1e3*o()[n>>2]),o()[r>>2]=n.getUTCSeconds(),o()[r+4>>2]=n.getUTCMinutes(),o()[r+8>>2]=n.getUTCHours(),o()[r+12>>2]=n.getUTCDate(),o()[r+16>>2]=n.getUTCMonth(),o()[r+20>>2]=n.getUTCFullYear()-1900,o()[r+24>>2]=n.getUTCDay(),o()[r+36>>2]=0,o()[r+32>>2]=0,n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[r+28>>2]=n,e.cc||(e.cc=ie(\"GMT\")),o()[r+40>>2]=e.cc,r},sa:function(){Me.vc()},H:function(e,n){Vn(),e=new Date(1e3*o()[e>>2]),o()[n>>2]=e.getSeconds(),o()[n+4>>2]=e.getMinutes(),o()[n+8>>2]=e.getHours(),o()[n+12>>2]=e.getDate(),o()[n+16>>2]=e.getMonth(),o()[n+20>>2]=e.getFullYear()-1900,o()[n+24>>2]=e.getDay();var r=new Date(e.getFullYear(),0,1),t=(e.getTime()-r.getTime())/864e5|0;return o()[n+28>>2]=t,o()[n+36>>2]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(t!=(r=r.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(r,t)),o()[n+32>>2]=e,e=o()[wr()+(e?4:0)>>2],o()[n+40>>2]=e,n},a:F||c.wasmMemory,S:function(e){Vn();var n=new Date(o()[e+20>>2]+1900,o()[e+16>>2],o()[e+12>>2],o()[e+8>>2],o()[e+4>>2],o()[e>>2],0),r=o()[e+32>>2],t=n.getTimezoneOffset(),a=new Date(n.getFullYear(),0,1),i=new Date(n.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,i);return 0>r?o()[e+32>>2]=Number(i!=u&&c==t):0<r!=(c==t)&&(i=Math.max(u,i),n.setTime(n.getTime()+6e4*((0<r?c:i)-t))),o()[e+24>>2]=n.getDay(),r=(n.getTime()-a.getTime())/864e5|0,o()[e+28>>2]=r,o()[e>>2]=n.getSeconds(),o()[e+4>>2]=n.getMinutes(),o()[e+8>>2]=n.getHours(),o()[e+12>>2]=n.getDate(),o()[e+16>>2]=n.getMonth(),n.getTime()/1e3|0},Ea:$n,q:function(e,n,r,t){return $n(e,n,r,t)}};!function(){function e(e,n){c.asm=e.exports,fe=c.asm.ab,le.unshift(c.asm.Ha),Me.bc.push(c.asm.fb),I=n,T||(ye--,c.monitorRunDependencies&&c.monitorRunDependencies(ye),0==ye&&(null!==_e&&(clearInterval(_e),_e=null),ve&&(e=ve,ve=null,e())))}function n(n){e(n.instance,n.module)}function r(e){return function(){if(!S&&(v||w)){if(\"function\"==typeof fetch&&!ge.startsWith(\"file://\"))return fetch(ge,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ge+\"'\";return e.arrayBuffer()})).catch((function(){return Te()}));if(b)return new Promise((function(e,n){b(ge,(function(n){e(new Uint8Array(n))}),n)}))}return Promise.resolve().then((function(){return Te()}))}().then((function(e){return WebAssembly.instantiate(e,t)})).then(e,(function(e){D(\"failed to asynchronously prepare wasm: \"+e),we(e)}))}var t={a:tr};if(T||(ye++,c.monitorRunDependencies&&c.monitorRunDependencies(ye)),c.instantiateWasm)try{return c.instantiateWasm(t,e)}catch(e){return D(\"Module.instantiateWasm callback failed with error: \"+e),!1}(S||\"function\"!=typeof WebAssembly.instantiateStreaming||Ae()||ge.startsWith(\"file://\")||\"function\"!=typeof fetch?r(n):fetch(ge,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,t).then(n,(function(e){return D(\"wasm streaming compile failed: \"+e),D(\"falling back to ArrayBuffer instantiation\"),r(n)}))}))).catch(s)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.Ha).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.Ia).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.Ja).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.Ka).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.La).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.Ma).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.Na).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.Oa).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.Pa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.Qa).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Ra).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Sa).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.Ta).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Ua).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Va).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.Wa).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.Xa).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.Ya).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Za).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm._a).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.$a).apply(null,arguments)};var ar=c._malloc=function(){return(ar=c._malloc=c.asm.bb).apply(null,arguments)},or=c.___errno_location=function(){return(or=c.___errno_location=c.asm.cb).apply(null,arguments)},ir=c._free=function(){return(ir=c._free=c.asm.db).apply(null,arguments)},ur=c._pthread_self=function(){return(ur=c._pthread_self=c.asm.eb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.fb).apply(null,arguments)};var cr=c.___getTypeName=function(){return(cr=c.___getTypeName=c.asm.gb).apply(null,arguments)};c.___embind_register_native_and_builtin_types=function(){return(c.___embind_register_native_and_builtin_types=c.asm.hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.ib).apply(null,arguments)};var fr,sr=c._emscripten_register_main_browser_thread_id=function(){return(sr=c._emscripten_register_main_browser_thread_id=c.asm.jb).apply(null,arguments)},lr=c._emscripten_main_browser_thread_id=function(){return(lr=c._emscripten_main_browser_thread_id=c.asm.kb).apply(null,arguments)},pr=c._emscripten_sync_run_in_main_thread_4=function(){return(pr=c._emscripten_sync_run_in_main_thread_4=c.asm.lb).apply(null,arguments)},dr=c._emscripten_main_thread_process_queued_calls=function(){return(dr=c._emscripten_main_thread_process_queued_calls=c.asm.mb).apply(null,arguments)},mr=c._emscripten_run_in_main_runtime_thread_js=function(){return(mr=c._emscripten_run_in_main_runtime_thread_js=c.asm.nb).apply(null,arguments)},hr=c.__emscripten_call_on_thread=function(){return(hr=c.__emscripten_call_on_thread=c.asm.ob).apply(null,arguments)},br=c._pthread_testcancel=function(){return(br=c._pthread_testcancel=c.asm.pb).apply(null,arguments)},gr=c._pthread_exit=function(){return(gr=c._pthread_exit=c.asm.qb).apply(null,arguments)},yr=c.__emscripten_thread_init=function(){return(yr=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)},_r=c._emscripten_get_global_libc=function(){return(_r=c._emscripten_get_global_libc=c.asm.sb).apply(null,arguments)},vr=c.___pthread_tsd_run_dtors=function(){return(vr=c.___pthread_tsd_run_dtors=c.asm.tb).apply(null,arguments)},wr=c.__get_tzname=function(){return(wr=c.__get_tzname=c.asm.ub).apply(null,arguments)},Ar=c.__get_daylight=function(){return(Ar=c.__get_daylight=c.asm.vb).apply(null,arguments)},Tr=c.__get_timezone=function(){return(Tr=c.__get_timezone=c.asm.wb).apply(null,arguments)},Er=c.stackSave=function(){return(Er=c.stackSave=c.asm.xb).apply(null,arguments)},kr=c.stackRestore=function(){return(kr=c.stackRestore=c.asm.yb).apply(null,arguments)},Or=c.stackAlloc=function(){return(Or=c.stackAlloc=c.asm.zb).apply(null,arguments)},Cr=c._emscripten_stack_set_limits=function(){return(Cr=c._emscripten_stack_set_limits=c.asm.Ab).apply(null,arguments)},Sr=c._memalign=function(){return(Sr=c._memalign=c.asm.Bb).apply(null,arguments)},Mr=c.__emscripten_allow_main_runtime_queued_calls=984944,Dr=c.__emscripten_main_thread_futex=989072;function xr(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function Fr(){function e(){if(!fr&&(fr=!0,c.calledRun=!0,!R)&&(T||ke(le),f(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!T)){if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();de.unshift(e)}ke(de)}}if(!(0<ye))if(T)f(c),T||ke(le),postMessage({cmd:\"loaded\"});else{if(!T){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)be();ke(se)}0<ye||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){c.setStatus(\"\")}),1),e()}),1)):e())}}function Ir(e){if(P=e,T)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new xr(e);he()||(Me.jc(),T||(ke(pe),\"undefined\"!=typeof _fflush&&_fflush(0),Ue[1].length&&je(1,10),Ue[2].length&&je(2,10))),P=e,he()||(Me.jc(),c.onExit&&c.onExit(e),R=!0),m(e,new xr(e))}if(c.UTF8ToString=Y,c.stringToUTF8=N,c.lengthBytesUTF8=q,c.keepRuntimeAlive=he,c.PThread=Me,c.stackSave=Er,c.stackRestore=kr,c.stackAlloc=Or,c.PThread=Me,c.wasmMemory=F,c.ExitStatus=xr,ve=function e(){fr||Fr(),fr||(ve=e)},c.run=Fr,c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return T&&(x=!1,Me.wc()),Fr(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\r\nvar ortWasm = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar e;e||(e=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;e.ready=new Promise(function(a,b){aa=a;ba=b});var k={},u;for(u in e)e.hasOwnProperty(u)&&(k[u]=e[u]);var ca=\"./this.program\",da=\"object\"===typeof window,v=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,x=\"\",fa,y,z,A,B;\r\nif(ea)x=v?require(\"path\").dirname(x)+\"/\":__dirname+\"/\",fa=function(a,b){A||(A=require(\"fs\"));B||(B=require(\"path\"));a=B.normalize(a);return A.readFileSync(a,b?null:\"utf8\")},z=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||C(\"Assertion failed: undefined\");return a},y=function(a,b,c){A||(A=require(\"fs\"));B||(B=require(\"path\"));a=B.normalize(a);A.readFile(a,function(d,f){d?c(d):b(f.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\r\nfunction(a){throw a;}),process.on(\"unhandledRejection\",C),e.inspect=function(){return\"[Emscripten Module object]\"};else if(da||v)v?x=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.lastIndexOf(\"/\")+1):x=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},v&&(z=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\r\nb.send(null);return new Uint8Array(b.response)}),y=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var ha=e.print||console.log.bind(console),D=e.printErr||console.warn.bind(console);for(u in k)k.hasOwnProperty(u)&&(e[u]=k[u]);k=null;e.thisProgram&&(ca=e.thisProgram);var E;e.wasmBinary&&(E=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!1;\r\n\"object\"!==typeof WebAssembly&&C(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction la(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(d=\"\";b<c;){var f=a[b++];if(f&128){var h=a[b++]&63;if(192==(f&224))d+=String.fromCharCode((f&31)<<6|h);else{var l=a[b++]&63;f=224==(f&240)?(f&15)<<12|h<<6|l:(f&7)<<18|h<<12|l<<6|a[b++]&63;65536>f?d+=String.fromCharCode(f):(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else d+=String.fromCharCode(f)}return d}function F(a,b){return a?la(H,a,b):\"\"}\r\nfunction ma(a,b,c,d){if(!(0<d))return 0;var f=c;d=c+d-1;for(var h=0;h<a.length;++h){var l=a.charCodeAt(h);if(55296<=l&&57343>=l){var m=a.charCodeAt(++h);l=65536+((l&1023)<<10)|m&1023}if(127>=l){if(c>=d)break;b[c++]=l}else{if(2047>=l){if(c+1>=d)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=d)break;b[c++]=224|l>>12}else{if(c+3>=d)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-f}function na(a,b,c){return ma(a,H,b,c)}\r\nfunction oa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}var pa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function qa(a,b){var c=a>>1;for(var d=c+b/2;!(c>=d)&&ra[c];)++c;c<<=1;if(32<c-a&&pa)return pa.decode(H.subarray(a,c));c=\"\";for(d=0;!(d>=b/2);++d){var f=I[a+2*d>>1];if(0==f)break;c+=String.fromCharCode(f)}return c}\r\nfunction sa(a,b,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=b;c=c<2*a.length?c/2:a.length;for(var f=0;f<c;++f)I[b>>1]=a.charCodeAt(f),b+=2;I[b>>1]=0;return b-d}function ta(a){return 2*a.length}function ua(a,b){for(var c=0,d=\"\";!(c>=b/4);){var f=J[a+4*c>>2];if(0==f)break;++c;65536<=f?(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023)):d+=String.fromCharCode(f)}return d}\r\nfunction va(a,b,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=b;c=d+c-4;for(var f=0;f<a.length;++f){var h=a.charCodeAt(f);if(55296<=h&&57343>=h){var l=a.charCodeAt(++f);h=65536+((h&1023)<<10)|l&1023}J[b>>2]=h;b+=4;if(b+4>c)break}J[b>>2]=0;return b-d}function wa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&++c;b+=4}return b}function xa(a){var b=oa(a)+1,c=K(b);c&&ma(a,L,c,b);return c}var ya,L,H,I,ra,J,N,za,Aa;\r\nfunction Ba(){var a=ia.buffer;ya=a;e.HEAP8=L=new Int8Array(a);e.HEAP16=I=new Int16Array(a);e.HEAP32=J=new Int32Array(a);e.HEAPU8=H=new Uint8Array(a);e.HEAPU16=ra=new Uint16Array(a);e.HEAPU32=N=new Uint32Array(a);e.HEAPF32=za=new Float32Array(a);e.HEAPF64=Aa=new Float64Array(a)}var Ca,Da=[],Ea=[],Fa=[],Ga=[];function Ha(){var a=e.preRun.shift();Da.unshift(a)}var O=0,Ia=null,P=null;e.preloadedImages={};e.preloadedAudios={};\r\nfunction C(a){if(e.onAbort)e.onAbort(a);D(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function Ja(){return Q.startsWith(\"data:application/octet-stream;base64,\")}var Q;Q=\"ort-wasm.wasm\";if(!Ja()){var Ka=Q;Q=e.locateFile?e.locateFile(Ka,x):x+Ka}function La(){var a=Q;try{if(a==Q&&E)return new Uint8Array(E);if(z)return z(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){C(b)}}\r\nfunction Ma(){if(!E&&(da||v)){if(\"function\"===typeof fetch&&!Q.startsWith(\"file://\"))return fetch(Q,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Q+\"'\";return a.arrayBuffer()}).catch(function(){return La()});if(y)return new Promise(function(a,b){y(Q,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return La()})}\r\nfunction Na(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(e);else{var c=b.ib;\"number\"===typeof c?void 0===b.Za?Ca.get(c)():Ca.get(c)(b.Za):c(void 0===b.Za?null:b.Za)}}}function Oa(a){this.ab=a-16;this.tb=function(b){J[this.ab+4>>2]=b};this.qb=function(b){J[this.ab+8>>2]=b};this.rb=function(){J[this.ab>>2]=0};this.pb=function(){L[this.ab+12>>0]=0};this.sb=function(){L[this.ab+13>>0]=0};this.lb=function(b,c){this.tb(b);this.qb(c);this.rb();this.pb();this.sb()}}\r\nvar Pa=0,Qa={},Ra=[null,[],[]],R={};function Sa(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var Ta=void 0;function S(a){for(var b=\"\";H[a];)b+=Ta[H[a++]];return b}var Ua={},Va={},Wa={};function Xa(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}\r\nfunction Ya(a,b){a=Xa(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}function Za(a){var b=Error,c=Ya(a,function(d){this.name=a;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(b.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}\r\nvar $a=void 0;function T(a){throw new $a(a);}function U(a,b,c){c=c||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=b.name;a||T('type \"'+d+'\" must have a positive integer typeid pointer');if(Va.hasOwnProperty(a)){if(c.kb)return;T(\"Cannot register type '\"+d+\"' twice\")}Va[a]=b;delete Wa[a];Ua.hasOwnProperty(a)&&(b=Ua[a],delete Ua[a],b.forEach(function(f){f()}))}var ab=[],V=[{},{value:void 0},{value:null},{value:!0},{value:!1}];\r\nfunction bb(a){4<a&&0===--V[a].gb&&(V[a]=void 0,ab.push(a))}function W(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=ab.length?ab.pop():V.length;V[b]={gb:1,value:a};return b}}function cb(a){return this.fromWireType(N[a>>2])}function db(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}\r\nfunction eb(a,b){switch(b){case 2:return function(c){return this.fromWireType(za[c>>2])};case 3:return function(c){return this.fromWireType(Aa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}\r\nfunction fb(a,b,c){switch(b){case 0:return c?function(d){return L[d]}:function(d){return H[d]};case 1:return c?function(d){return I[d>>1]}:function(d){return ra[d>>1]};case 2:return c?function(d){return J[d>>2]}:function(d){return N[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function X(a){a||T(\"Cannot use deleted val. handle = \"+a);return V[a].value}function gb(a,b){var c=Va[a];if(void 0===c){a=hb(a);var d=S(a);Y(a);T(b+\" has unknown type \"+d)}return c}var ib={};\r\nfunction jb(a){var b=ib[a];return void 0===b?S(a):b}var kb=[];function lb(){return\"object\"===typeof globalThis?globalThis:Function(\"return this\")()}function mb(a){var b=kb.length;kb.push(a);return b}function nb(a,b){for(var c=Array(a),d=0;d<a;++d)c[d]=gb(J[(b>>2)+d],\"parameter \"+d);return c}\r\nfunction ob(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var c=Ya(b.name||\"unknownFunctionName\",function(){});c.prototype=b.prototype;c=new c;a=b.apply(c,a);return a instanceof Object?a:c}var qb={},rb;rb=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var sb={};\r\nfunction tb(){if(!ub){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in sb)void 0===sb[b]?delete a[b]:a[b]=sb[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);ub=c}return ub}var ub;\r\nfunction vb(a,b){a=new Date(1E3*J[a>>2]);J[b>>2]=a.getUTCSeconds();J[b+4>>2]=a.getUTCMinutes();J[b+8>>2]=a.getUTCHours();J[b+12>>2]=a.getUTCDate();J[b+16>>2]=a.getUTCMonth();J[b+20>>2]=a.getUTCFullYear()-1900;J[b+24>>2]=a.getUTCDay();J[b+36>>2]=0;J[b+32>>2]=0;J[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;vb.hb||(vb.hb=xa(\"GMT\"));J[b+40>>2]=vb.hb;return b}\r\nfunction wb(){function a(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}if(!xb){xb=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),d=new Date(b,6,1);b=c.getTimezoneOffset();var f=d.getTimezoneOffset(),h=Math.max(b,f);J[yb()>>2]=60*h;J[zb()>>2]=Number(b!=f);c=a(c);d=a(d);c=xa(c);d=xa(d);f<b?(J[Z()>>2]=c,J[Z()+4>>2]=d):(J[Z()>>2]=d,J[Z()+4>>2]=c)}}var xb;function Ab(a){return 0===a%4&&(0!==a%100||0===a%400)}function Bb(a,b){for(var c=0,d=0;d<=b;c+=a[d++]);return c}\r\nvar Cb=[31,29,31,30,31,30,31,31,30,31,30,31],Db=[31,28,31,30,31,30,31,31,30,31,30,31];function Eb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),d=(Ab(a.getFullYear())?Cb:Db)[c];if(b>d-a.getDate())b-=d-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\r\nfunction Fb(a,b,c,d){function f(g,n,t){for(g=\"number\"===typeof g?g.toString():g||\"\";g.length<n;)g=t[0]+g;return g}function h(g,n){return f(g,n,\"0\")}function l(g,n){function t(pb){return 0>pb?-1:0<pb?1:0}var M;0===(M=t(g.getFullYear()-n.getFullYear()))&&0===(M=t(g.getMonth()-n.getMonth()))&&(M=t(g.getDate()-n.getDate()));return M}function m(g){switch(g.getDay()){case 0:return new Date(g.getFullYear()-1,11,29);case 1:return g;case 2:return new Date(g.getFullYear(),0,3);case 3:return new Date(g.getFullYear(),\r\n0,2);case 4:return new Date(g.getFullYear(),0,1);case 5:return new Date(g.getFullYear()-1,11,31);case 6:return new Date(g.getFullYear()-1,11,30)}}function p(g){g=Eb(new Date(g.Xa+1900,0,1),g.fb);var n=new Date(g.getFullYear()+1,0,4),t=m(new Date(g.getFullYear(),0,4));n=m(n);return 0>=l(t,g)?0>=l(n,g)?g.getFullYear()+1:g.getFullYear():g.getFullYear()-1}var r=J[d+40>>2];d={wb:J[d>>2],vb:J[d+4>>2],cb:J[d+8>>2],bb:J[d+12>>2],Ya:J[d+16>>2],Xa:J[d+20>>2],eb:J[d+24>>2],fb:J[d+28>>2],Eb:J[d+32>>2],ub:J[d+\r\n36>>2],xb:r?F(r):\"\"};c=F(c);r={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var q in r)c=c.replace(new RegExp(q,\"g\"),r[q]);var w=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\r\nG=\"January February March April May June July August September October November December\".split(\" \");r={\"%a\":function(g){return w[g.eb].substring(0,3)},\"%A\":function(g){return w[g.eb]},\"%b\":function(g){return G[g.Ya].substring(0,3)},\"%B\":function(g){return G[g.Ya]},\"%C\":function(g){return h((g.Xa+1900)/100|0,2)},\"%d\":function(g){return h(g.bb,2)},\"%e\":function(g){return f(g.bb,2,\" \")},\"%g\":function(g){return p(g).toString().substring(2)},\"%G\":function(g){return p(g)},\"%H\":function(g){return h(g.cb,\r\n2)},\"%I\":function(g){g=g.cb;0==g?g=12:12<g&&(g-=12);return h(g,2)},\"%j\":function(g){return h(g.bb+Bb(Ab(g.Xa+1900)?Cb:Db,g.Ya-1),3)},\"%m\":function(g){return h(g.Ya+1,2)},\"%M\":function(g){return h(g.vb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(g){return 0<=g.cb&&12>g.cb?\"AM\":\"PM\"},\"%S\":function(g){return h(g.wb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(g){return g.eb||7},\"%U\":function(g){var n=new Date(g.Xa+1900,0,1),t=0===n.getDay()?n:Eb(n,7-n.getDay());g=new Date(g.Xa+1900,g.Ya,g.bb);return 0>\r\nl(t,g)?h(Math.ceil((31-t.getDate()+(Bb(Ab(g.getFullYear())?Cb:Db,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(t,n)?\"01\":\"00\"},\"%V\":function(g){var n=new Date(g.Xa+1901,0,4),t=m(new Date(g.Xa+1900,0,4));n=m(n);var M=Eb(new Date(g.Xa+1900,0,1),g.fb);return 0>l(M,t)?\"53\":0>=l(n,M)?\"01\":h(Math.ceil((t.getFullYear()<g.Xa+1900?g.fb+32-t.getDate():g.fb+1-t.getDate())/7),2)},\"%w\":function(g){return g.eb},\"%W\":function(g){var n=new Date(g.Xa,0,1),t=1===n.getDay()?n:Eb(n,0===n.getDay()?1:7-n.getDay()+1);g=\r\nnew Date(g.Xa+1900,g.Ya,g.bb);return 0>l(t,g)?h(Math.ceil((31-t.getDate()+(Bb(Ab(g.getFullYear())?Cb:Db,g.getMonth()-1)-31)+g.getDate())/7),2):0===l(t,n)?\"01\":\"00\"},\"%y\":function(g){return(g.Xa+1900).toString().substring(2)},\"%Y\":function(g){return g.Xa+1900},\"%z\":function(g){g=g.ub;var n=0<=g;g=Math.abs(g)/60;return(n?\"+\":\"-\")+String(\"0000\"+(g/60*100+g%60)).slice(-4)},\"%Z\":function(g){return g.xb},\"%%\":function(){return\"%\"}};for(q in r)c.includes(q)&&(c=c.replace(new RegExp(q,\"g\"),r[q](d)));q=Gb(c);\r\nif(q.length>b)return 0;L.set(q,a);return q.length-1}for(var Hb=Array(256),Ib=0;256>Ib;++Ib)Hb[Ib]=String.fromCharCode(Ib);Ta=Hb;$a=e.BindingError=Za(\"BindingError\");e.InternalError=Za(\"InternalError\");e.count_emval_handles=function(){for(var a=0,b=5;b<V.length;++b)void 0!==V[b]&&++a;return a};e.get_first_emval=function(){for(var a=5;a<V.length;++a)if(void 0!==V[a])return V[a];return null};function Gb(a){var b=Array(oa(a)+1);ma(a,b,0,b.length);return b}\r\nvar Lb={a:function(a){return K(a+16)+16},c:function(a,b){Fa.unshift({ib:a,Za:b})},k:function(a,b){Fa.unshift({ib:a,Za:b})},b:function(a,b,c){(new Oa(a)).lb(b,c);Pa++;throw a;},X:function(a,b){a=F(a);return R.yb(a,b)},B:function(){return 0},aa:function(){},da:function(){},D:function(){return 42},Q:function(){return 0},$:function(){},_:function(a,b){a=F(a);return R.zb(a,b)},ca:function(a,b,c,d,f,h){h<<=12;if(0!==(d&16)&&0!==a%65536)b=-28;else if(0!==(d&32)){a=65536*Math.ceil(b/65536);var l=Jb(65536,\r\na);l?(H.fill(0,l,l+a),a=l):a=0;a?(Qa[a]={ob:a,nb:b,jb:!0,fd:f,Db:c,flags:d,offset:h},b=a):b=-48}else b=-52;return b},ba:function(a,b){var c=Qa[a];0!==b&&c?(b===c.nb&&(Qa[a]=null,c.jb&&Y(c.ob)),a=0):a=-28;return a},x:function(){},W:function(a,b,c){a=F(a);return R.Ab(a,b,c)},Y:function(){},G:function(){},Z:function(){},O:function(){},ha:function(a,b,c,d,f){var h=Sa(c);b=S(b);U(a,{name:b,fromWireType:function(l){return!!l},toWireType:function(l,m){return m?d:f},argPackAdvance:8,readValueFromPointer:function(l){if(1===\r\nc)var m=L;else if(2===c)m=I;else if(4===c)m=J;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(m[l>>h])},$a:null})},ga:function(a,b){b=S(b);U(a,{name:b,fromWireType:function(c){var d=V[c].value;bb(c);return d},toWireType:function(c,d){return W(d)},argPackAdvance:8,readValueFromPointer:cb,$a:null})},H:function(a,b,c){c=Sa(c);b=S(b);U(a,{name:b,fromWireType:function(d){return d},toWireType:function(d,f){if(\"number\"!==typeof f&&\"boolean\"!==typeof f)throw new TypeError('Cannot convert \"'+\r\ndb(f)+'\" to '+this.name);return f},argPackAdvance:8,readValueFromPointer:eb(b,c),$a:null})},r:function(a,b,c,d,f){function h(r){return r}b=S(b);-1===f&&(f=4294967295);var l=Sa(c);if(0===d){var m=32-8*c;h=function(r){return r<<m>>>m}}var p=b.includes(\"unsigned\");U(a,{name:b,fromWireType:h,toWireType:function(r,q){if(\"number\"!==typeof q&&\"boolean\"!==typeof q)throw new TypeError('Cannot convert \"'+db(q)+'\" to '+this.name);if(q<d||q>f)throw new TypeError('Passing a number \"'+db(q)+'\" from JS side to C/C++ side to an argument of type \"'+\r\nb+'\", which is outside the valid range ['+d+\", \"+f+\"]!\");return p?q>>>0:q|0},argPackAdvance:8,readValueFromPointer:fb(b,l,0!==d),$a:null})},q:function(a,b,c){function d(h){h>>=2;var l=N;return new f(ya,l[h+1],l[h])}var f=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][b];c=S(c);U(a,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{kb:!0})},I:function(a,b){b=S(b);var c=\"std::string\"===b;U(a,{name:b,fromWireType:function(d){var f=N[d>>2];\r\nif(c)for(var h=d+4,l=0;l<=f;++l){var m=d+4+l;if(l==f||0==H[m]){h=F(h,m-h);if(void 0===p)var p=h;else p+=String.fromCharCode(0),p+=h;h=m+1}}else{p=Array(f);for(l=0;l<f;++l)p[l]=String.fromCharCode(H[d+4+l]);p=p.join(\"\")}Y(d);return p},toWireType:function(d,f){f instanceof ArrayBuffer&&(f=new Uint8Array(f));var h=\"string\"===typeof f;h||f instanceof Uint8Array||f instanceof Uint8ClampedArray||f instanceof Int8Array||T(\"Cannot pass non-string to std::string\");var l=(c&&h?function(){return oa(f)}:function(){return f.length})(),\r\nm=K(4+l+1);N[m>>2]=l;if(c&&h)na(f,m+4,l+1);else if(h)for(h=0;h<l;++h){var p=f.charCodeAt(h);255<p&&(Y(m),T(\"String has UTF-16 code units that do not fit in 8 bits\"));H[m+4+h]=p}else for(h=0;h<l;++h)H[m+4+h]=f[h];null!==d&&d.push(Y,m);return m},argPackAdvance:8,readValueFromPointer:cb,$a:function(d){Y(d)}})},y:function(a,b,c){c=S(c);if(2===b){var d=qa;var f=sa;var h=ta;var l=function(){return ra};var m=1}else 4===b&&(d=ua,f=va,h=wa,l=function(){return N},m=2);U(a,{name:c,fromWireType:function(p){for(var r=\r\nN[p>>2],q=l(),w,G=p+4,g=0;g<=r;++g){var n=p+4+g*b;if(g==r||0==q[n>>m])G=d(G,n-G),void 0===w?w=G:(w+=String.fromCharCode(0),w+=G),G=n+b}Y(p);return w},toWireType:function(p,r){\"string\"!==typeof r&&T(\"Cannot pass non-string to C++ string type \"+c);var q=h(r),w=K(4+q+b);N[w>>2]=q>>m;f(r,w+4,q+b);null!==p&&p.push(Y,w);return w},argPackAdvance:8,readValueFromPointer:cb,$a:function(p){Y(p)}})},ia:function(a,b){b=S(b);U(a,{mb:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},\r\nz:function(a,b,c){a=X(a);b=gb(b,\"emval::as\");var d=[],f=W(d);J[c>>2]=f;return b.toWireType(d,a)},p:function(a,b,c,d,f){a=kb[a];b=X(b);c=jb(c);var h=[];J[d>>2]=W(h);return a(b,c,h,f)},l:function(a,b,c,d){a=kb[a];b=X(b);c=jb(c);a(b,c,null,d)},d:bb,K:function(a,b){a=X(a);b=X(b);return a==b},L:function(a){if(0===a)return W(lb());a=jb(a);return W(lb()[a])},h:function(a,b){b=nb(a,b);for(var c=b[0],d=c.name+\"_$\"+b.slice(1).map(function(r){return r.name}).join(\"_\")+\"$\",f=[\"retType\"],h=[c],l=\"\",m=0;m<a-1;++m)l+=\r\n(0!==m?\", \":\"\")+\"arg\"+m,f.push(\"argType\"+m),h.push(b[1+m]);d=\"return function \"+Xa(\"methodCaller_\"+d)+\"(handle, name, destructors, args) {\\n\";var p=0;for(m=0;m<a-1;++m)d+=\"    var arg\"+m+\" = argType\"+m+\".readValueFromPointer(args\"+(p?\"+\"+p:\"\")+\");\\n\",p+=b[m+1].argPackAdvance;d+=\"    var rv = handle[name](\"+l+\");\\n\";for(m=0;m<a-1;++m)b[m+1].deleteObject&&(d+=\"    argType\"+m+\".deleteObject(arg\"+m+\");\\n\");c.mb||(d+=\"    return retType.toWireType(destructors, rv);\\n\");f.push(d+\"};\\n\");a=ob(f).apply(null,\r\nh);return mb(a)},u:function(a,b){a=X(a);b=X(b);return W(a[b])},g:function(a){4<a&&(V[a].gb+=1)},ja:function(a,b,c,d){a=X(a);var f=qb[b];if(!f){f=\"\";for(var h=0;h<b;++h)f+=(0!==h?\", \":\"\")+\"arg\"+h;var l=\"return function emval_allocator_\"+b+\"(constructor, argTypes, args) {\\n\";for(h=0;h<b;++h)l+=\"var argType\"+h+\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \"+h+'], \"parameter '+h+'\");\\nvar arg'+h+\" = argType\"+h+\".readValueFromPointer(args);\\nargs += argType\"+h+\"['argPackAdvance'];\\n\";f=\r\n(new Function(\"requireRegisteredType\",\"Module\",\"__emval_register\",l+(\"var obj = new constructor(\"+f+\");\\nreturn __emval_register(obj);\\n}\\n\")))(gb,e,W);qb[b]=f}return f(a,c,d)},m:function(){return W([])},e:function(a){return W(jb(a))},i:function(){return W({})},n:function(a){for(var b=V[a].value;b.length;){var c=b.pop();b.pop()(c)}bb(a)},f:function(a,b,c){a=X(a);b=X(b);c=X(c);a[b]=c},j:function(a,b){a=gb(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return W(a)},v:function(){C()},J:function(a,\r\nb){if(0===a)a=Date.now();else if(1===a||4===a)a=rb();else return J[Kb()>>2]=28,-1;J[b>>2]=a/1E3|0;J[b+4>>2]=a%1E3*1E6|0;return 0},M:function(a,b){return a-b},ma:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},t:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},na:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\r\nla:function(){C(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ea:function(){return 2147483648},P:function(a,b,c){H.copyWithin(a,b,b+c)},w:function(a){var b=H.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{ia.grow(Math.min(2147483648,d)-ya.byteLength+65535>>>16);Ba();var f=1;break a}catch(h){}f=void 0}if(f)return!0}return!1},\r\nV:function(a){for(var b=rb();rb()-b<a;);},T:function(a,b){var c=0;tb().forEach(function(d,f){var h=b+c;f=J[a+4*f>>2]=h;for(h=0;h<d.length;++h)L[f++>>0]=d.charCodeAt(h);L[f>>0]=0;c+=d.length+1});return 0},U:function(a,b){var c=tb();J[a>>2]=c.length;var d=0;c.forEach(function(f){d+=f.length+1});J[b>>2]=d;return 0},s:function(){return 0},R:function(a,b){a=1==a||2==a?2:C();L[b>>0]=a;return 0},C:function(a,b,c,d){a=R.Cb(a);b=R.Bb(a,b,c);J[d>>2]=b;return 0},N:function(){},E:function(a,b,c,d){for(var f=\r\n0,h=0;h<c;h++){for(var l=J[b+8*h>>2],m=J[b+(8*h+4)>>2],p=0;p<m;p++){var r=H[l+p],q=Ra[a];0===r||10===r?((1===a?ha:D)(la(q,0)),q.length=0):q.push(r)}f+=m}J[d>>2]=f;return 0},fa:function(a){var b=Date.now();J[a>>2]=b/1E3|0;J[a+4>>2]=b%1E3*1E3|0;return 0},S:vb,F:function(a,b){wb();a=new Date(1E3*J[a>>2]);J[b>>2]=a.getSeconds();J[b+4>>2]=a.getMinutes();J[b+8>>2]=a.getHours();J[b+12>>2]=a.getDate();J[b+16>>2]=a.getMonth();J[b+20>>2]=a.getFullYear()-1900;J[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),\r\n0,1);J[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;J[b+36>>2]=-(60*a.getTimezoneOffset());var d=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(d!=c&&a.getTimezoneOffset()==Math.min(c,d))|0;J[b+32>>2]=a;a=J[Z()+(a?4:0)>>2];J[b+40>>2]=a;return b},A:function(a){wb();var b=new Date(J[a+20>>2]+1900,J[a+16>>2],J[a+12>>2],J[a+8>>2],J[a+4>>2],J[a>>2],0),c=J[a+32>>2],d=b.getTimezoneOffset(),f=new Date(b.getFullYear(),0,1),h=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\r\nl=f.getTimezoneOffset(),m=Math.min(l,h);0>c?J[a+32>>2]=Number(h!=l&&m==d):0<c!=(m==d)&&(h=Math.max(l,h),b.setTime(b.getTime()+6E4*((0<c?m:h)-d)));J[a+24>>2]=b.getDay();J[a+28>>2]=(b.getTime()-f.getTime())/864E5|0;J[a>>2]=b.getSeconds();J[a+4>>2]=b.getMinutes();J[a+8>>2]=b.getHours();J[a+12>>2]=b.getDate();J[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},ka:Fb,o:function(a,b,c,d){return Fb(a,b,c,d)}};\r\n(function(){function a(f){e.asm=f.exports;ia=e.asm.oa;Ba();Ca=e.asm.Wa;Ea.unshift(e.asm.pa);O--;e.monitorRunDependencies&&e.monitorRunDependencies(O);0==O&&(null!==Ia&&(clearInterval(Ia),Ia=null),P&&(f=P,P=null,f()))}function b(f){a(f.instance)}function c(f){return Ma().then(function(h){return WebAssembly.instantiate(h,d)}).then(f,function(h){D(\"failed to asynchronously prepare wasm: \"+h);C(h)})}var d={a:Lb};O++;e.monitorRunDependencies&&e.monitorRunDependencies(O);if(e.instantiateWasm)try{return e.instantiateWasm(d,\r\na)}catch(f){return D(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return E||\"function\"!==typeof WebAssembly.instantiateStreaming||Ja()||Q.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(Q,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,d).then(b,function(h){D(\"wasm streaming compile failed: \"+h);D(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\r\ne.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.pa).apply(null,arguments)};e._OrtInit=function(){return(e._OrtInit=e.asm.qa).apply(null,arguments)};e._OrtCreateSessionOptions=function(){return(e._OrtCreateSessionOptions=e.asm.ra).apply(null,arguments)};e._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(e._OrtSessionOptionsAppendExecutionProviderWebNN=e.asm.sa).apply(null,arguments)};\r\ne._OrtAddSessionConfigEntry=function(){return(e._OrtAddSessionConfigEntry=e.asm.ta).apply(null,arguments)};e._OrtReleaseSessionOptions=function(){return(e._OrtReleaseSessionOptions=e.asm.ua).apply(null,arguments)};e._OrtCreateSession=function(){return(e._OrtCreateSession=e.asm.va).apply(null,arguments)};e._OrtReleaseSession=function(){return(e._OrtReleaseSession=e.asm.wa).apply(null,arguments)};e._OrtGetInputCount=function(){return(e._OrtGetInputCount=e.asm.xa).apply(null,arguments)};\r\ne._OrtGetOutputCount=function(){return(e._OrtGetOutputCount=e.asm.ya).apply(null,arguments)};e._OrtGetInputName=function(){return(e._OrtGetInputName=e.asm.za).apply(null,arguments)};e._OrtGetOutputName=function(){return(e._OrtGetOutputName=e.asm.Aa).apply(null,arguments)};e._OrtFree=function(){return(e._OrtFree=e.asm.Ba).apply(null,arguments)};e._OrtCreateTensor=function(){return(e._OrtCreateTensor=e.asm.Ca).apply(null,arguments)};\r\ne._OrtGetTensorData=function(){return(e._OrtGetTensorData=e.asm.Da).apply(null,arguments)};e._OrtReleaseTensor=function(){return(e._OrtReleaseTensor=e.asm.Ea).apply(null,arguments)};e._OrtCreateRunOptions=function(){return(e._OrtCreateRunOptions=e.asm.Fa).apply(null,arguments)};e._OrtAddRunConfigEntry=function(){return(e._OrtAddRunConfigEntry=e.asm.Ga).apply(null,arguments)};e._OrtReleaseRunOptions=function(){return(e._OrtReleaseRunOptions=e.asm.Ha).apply(null,arguments)};\r\ne._OrtRun=function(){return(e._OrtRun=e.asm.Ia).apply(null,arguments)};e._OrtEndProfiling=function(){return(e._OrtEndProfiling=e.asm.Ja).apply(null,arguments)};var K=e._malloc=function(){return(K=e._malloc=e.asm.Ka).apply(null,arguments)},Kb=e.___errno_location=function(){return(Kb=e.___errno_location=e.asm.La).apply(null,arguments)},Y=e._free=function(){return(Y=e._free=e.asm.Ma).apply(null,arguments)},hb=e.___getTypeName=function(){return(hb=e.___getTypeName=e.asm.Na).apply(null,arguments)};\r\ne.___embind_register_native_and_builtin_types=function(){return(e.___embind_register_native_and_builtin_types=e.asm.Oa).apply(null,arguments)};\r\nvar Z=e.__get_tzname=function(){return(Z=e.__get_tzname=e.asm.Pa).apply(null,arguments)},zb=e.__get_daylight=function(){return(zb=e.__get_daylight=e.asm.Qa).apply(null,arguments)},yb=e.__get_timezone=function(){return(yb=e.__get_timezone=e.asm.Ra).apply(null,arguments)},Mb=e.stackSave=function(){return(Mb=e.stackSave=e.asm.Sa).apply(null,arguments)},Nb=e.stackRestore=function(){return(Nb=e.stackRestore=e.asm.Ta).apply(null,arguments)},Ob=e.stackAlloc=function(){return(Ob=e.stackAlloc=e.asm.Ua).apply(null,\r\narguments)},Jb=e._memalign=function(){return(Jb=e._memalign=e.asm.Va).apply(null,arguments)};e.UTF8ToString=F;e.stringToUTF8=na;e.lengthBytesUTF8=oa;e.stackSave=Mb;e.stackRestore=Nb;e.stackAlloc=Ob;var Pb;P=function Qb(){Pb||Rb();Pb||(P=Qb)};\r\nfunction Rb(){function a(){if(!Pb&&(Pb=!0,e.calledRun=!0,!ja)){Na(Ea);aa(e);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();Ga.unshift(b)}Na(Ga)}}if(!(0<O)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)Ha();Na(Da);0<O||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}e.run=Rb;\r\nif(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();Rb();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/* eslint-disable import/no-internal-modules */\r\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\r\nimport {Session} from './onnxjs/session';\r\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\r\n\r\nclass OnnxjsBackend implements Backend {\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  async init(): Promise<void> {}\r\n\r\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\r\n      Promise<SessionHandler> {\r\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\r\n    // onnxruntime-common).\r\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\r\n    //       Currently we allow this to happen to make test runner work.\r\n    const session = new Session(options as unknown as Session.Config);\r\n\r\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\r\n    if (typeof pathOrBuffer === 'string') {\r\n      await session.loadModel(pathOrBuffer);\r\n    } else {\r\n      await session.loadModel(pathOrBuffer);\r\n    }\r\n\r\n    return new OnnxjsSessionHandler(session);\r\n  }\r\n}\r\n\r\nexport const onnxjsBackend = new OnnxjsBackend();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {readFile} from 'fs';\r\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\r\nimport {cpus} from 'os';\r\nimport {promisify} from 'util';\r\nimport {initWasm} from './wasm/proxy-wrapper';\r\n\r\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\r\n\r\n/**\r\n * This function initializes all flags for WebAssembly.\r\n *\r\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\r\n * being created, to override default value.\r\n */\r\nexport const initializeFlags = (): void => {\r\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\r\n    env.wasm.initTimeout = 0;\r\n  }\r\n\r\n  if (typeof env.wasm.simd !== 'boolean') {\r\n    env.wasm.simd = true;\r\n  }\r\n\r\n  if (typeof env.wasm.proxy !== 'boolean') {\r\n    env.wasm.proxy = false;\r\n  }\r\n\r\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\r\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\r\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\r\n  }\r\n};\r\n\r\nclass OnnxruntimeWebAssemblyBackend implements Backend {\r\n  async init(): Promise<void> {\r\n    // populate wasm flags\r\n    initializeFlags();\r\n\r\n    // init wasm\r\n    await initWasm();\r\n  }\r\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\r\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\r\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\r\n      Promise<SessionHandler> {\r\n    let buffer: Uint8Array;\r\n    if (typeof pathOrBuffer === 'string') {\r\n      if (typeof fetch === 'undefined') {\r\n        // node\r\n        buffer = await promisify(readFile)(pathOrBuffer);\r\n      } else {\r\n        // browser\r\n        const response = await fetch(pathOrBuffer);\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        buffer = new Uint8Array(arrayBuffer);\r\n      }\r\n    } else {\r\n      buffer = pathOrBuffer;\r\n    }\r\n\r\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\r\n    await handler.loadModel(buffer, options);\r\n    return Promise.resolve(handler);\r\n  }\r\n}\r\n\r\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nexport * from 'onnxruntime-common';\r\nimport {registerBackend} from 'onnxruntime-common';\r\nimport {onnxjsBackend} from './backend-onnxjs';\r\nimport {wasmBackend} from './backend-wasm';\r\n\r\nregisterBackend('webgl', onnxjsBackend, 1);\r\nregisterBackend('wasm', wasmBackend, 2);\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nclass AttributeWithCacheKeyImpl {\r\n  constructor(attribute: Record<string, unknown>) {\r\n    Object.assign(this, attribute);\r\n  }\r\n\r\n  private _cacheKey: string;\r\n  public get cacheKey(): string {\r\n    if (!this._cacheKey) {\r\n      this._cacheKey =\r\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\r\n    }\r\n    return this._cacheKey;\r\n  }\r\n}\r\n\r\nexport interface AttributeWithCacheKey {\r\n  readonly cacheKey: string;\r\n}\r\n\r\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\r\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\n\r\nimport {Tensor} from './tensor';\r\nimport {LongUtil} from './util';\r\n\r\nexport declare namespace Attribute {\r\n  export interface DataTypeMap {\r\n    float: number;\r\n    int: number;\r\n    string: string;\r\n    tensor: Tensor;\r\n    floats: number[];\r\n    ints: number[];\r\n    strings: string[];\r\n    tensors: Tensor[];\r\n  }\r\n\r\n  export type DataType = keyof DataTypeMap;\r\n}\r\n\r\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\r\n\r\ntype Value = [ValueTypes, Attribute.DataType];\r\n\r\nexport class Attribute {\r\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\r\n    this._attributes = new Map();\r\n    if (attributes !== null && attributes !== undefined) {\r\n      for (const attr of attributes) {\r\n        if (attr instanceof onnx.AttributeProto) {\r\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\r\n        } else if (attr instanceof ortFbs.Attribute) {\r\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\r\n        }\r\n      }\r\n      if (this._attributes.size < attributes.length) {\r\n        throw new Error('duplicated attribute names');\r\n      }\r\n    }\r\n  }\r\n\r\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\r\n    this._attributes.set(key, [value, type]);\r\n  }\r\n  delete(key: string): void {\r\n    this._attributes.delete(key);\r\n  }\r\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\r\n    return this.get(key, 'float', defaultValue);\r\n  }\r\n\r\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\r\n    return this.get(key, 'int', defaultValue);\r\n  }\r\n\r\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\r\n    return this.get(key, 'string', defaultValue);\r\n  }\r\n\r\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\r\n    return this.get(key, 'tensor', defaultValue);\r\n  }\r\n\r\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\r\n    return this.get(key, 'floats', defaultValue);\r\n  }\r\n\r\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\r\n    return this.get(key, 'ints', defaultValue);\r\n  }\r\n\r\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\r\n    return this.get(key, 'strings', defaultValue);\r\n  }\r\n\r\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\r\n    return this.get(key, 'tensors', defaultValue);\r\n  }\r\n\r\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\r\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\r\n    const valueAndType = this._attributes.get(key);\r\n    if (valueAndType === undefined) {\r\n      if (defaultValue !== undefined) {\r\n        return defaultValue;\r\n      }\r\n      throw new Error(`required attribute not found: ${key}`);\r\n    }\r\n    if (valueAndType[1] !== type) {\r\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\r\n    }\r\n    return valueAndType[0] as V;\r\n  }\r\n\r\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\r\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\r\n    switch (type) {\r\n      case onnx.AttributeProto.AttributeType.FLOAT:\r\n        return 'float';\r\n      case onnx.AttributeProto.AttributeType.INT:\r\n        return 'int';\r\n      case onnx.AttributeProto.AttributeType.STRING:\r\n        return 'string';\r\n      case onnx.AttributeProto.AttributeType.TENSOR:\r\n        return 'tensor';\r\n      case onnx.AttributeProto.AttributeType.FLOATS:\r\n        return 'floats';\r\n      case onnx.AttributeProto.AttributeType.INTS:\r\n        return 'ints';\r\n      case onnx.AttributeProto.AttributeType.STRINGS:\r\n        return 'strings';\r\n      case onnx.AttributeProto.AttributeType.TENSORS:\r\n        return 'tensors';\r\n      default:\r\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\r\n    }\r\n  }\r\n\r\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\r\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\r\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\r\n      throw new Error('graph attribute is not supported yet');\r\n    }\r\n\r\n    const value = this.getValueNoCheck(attr);\r\n\r\n    // cast LONG to number\r\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\r\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\r\n    }\r\n\r\n    // cast LONG[] to number[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\r\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\r\n      const numberValue: number[] = new Array<number>(arr.length);\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        const maybeLong = arr[i];\r\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\r\n      }\r\n\r\n      return numberValue;\r\n    }\r\n\r\n    // cast onnx.TensorProto to onnxjs.Tensor\r\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\r\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\r\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\r\n    }\r\n\r\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const tensorProtos = value as onnx.ITensorProto[];\r\n        return tensorProtos.map(value => Tensor.fromProto(value));\r\n      } else if (attr instanceof ortFbs.Attribute) {\r\n        const tensorProtos = value as ortFbs.Tensor[];\r\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\r\n      }\r\n    }\r\n\r\n    // cast Uint8Array to string\r\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\r\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\r\n      // string attributes are returned as string, so no conversion is needed.\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const utf8String = value as Uint8Array;\r\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\r\n      }\r\n    }\r\n\r\n    // cast Uint8Array[] to string[]\r\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\r\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\r\n      // format strings attributes are returned as string[], so no conversion is needed.\r\n      if (attr instanceof onnx.AttributeProto) {\r\n        const utf8Strings = value as Uint8Array[];\r\n        return utf8Strings.map(\r\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\r\n      }\r\n    }\r\n\r\n    return value as ValueTypes;\r\n  }\r\n\r\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\r\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\r\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\r\n  }\r\n\r\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\r\n    switch (attr.type!) {\r\n      case onnx.AttributeProto.AttributeType.FLOAT:\r\n        return attr.f;\r\n      case onnx.AttributeProto.AttributeType.INT:\r\n        return attr.i;\r\n      case onnx.AttributeProto.AttributeType.STRING:\r\n        return attr.s;\r\n      case onnx.AttributeProto.AttributeType.TENSOR:\r\n        return attr.t;\r\n      case onnx.AttributeProto.AttributeType.GRAPH:\r\n        return attr.g;\r\n      case onnx.AttributeProto.AttributeType.FLOATS:\r\n        return attr.floats;\r\n      case onnx.AttributeProto.AttributeType.INTS:\r\n        return attr.ints;\r\n      case onnx.AttributeProto.AttributeType.STRINGS:\r\n        return attr.strings;\r\n      case onnx.AttributeProto.AttributeType.TENSORS:\r\n        return attr.tensors;\r\n      case onnx.AttributeProto.AttributeType.GRAPHS:\r\n        return attr.graphs;\r\n      default:\r\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\r\n    }\r\n  }\r\n\r\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\r\n    switch (attr.type()) {\r\n      case ortFbs.AttributeType.FLOAT:\r\n        return attr.f();\r\n      case ortFbs.AttributeType.INT:\r\n        return attr.i();\r\n      case ortFbs.AttributeType.STRING:\r\n        return attr.s();\r\n      case ortFbs.AttributeType.TENSOR:\r\n        return attr.t();\r\n      case ortFbs.AttributeType.GRAPH:\r\n        return attr.g();\r\n      case ortFbs.AttributeType.FLOATS:\r\n        return attr.floatsArray();\r\n      case ortFbs.AttributeType.INTS: {\r\n        const ints = [];\r\n        for (let i = 0; i < attr.intsLength(); i++) {\r\n          ints.push(attr.ints(i)!);\r\n        }\r\n        return ints;\r\n      }\r\n      case ortFbs.AttributeType.STRINGS: {\r\n        const strings = [];\r\n        for (let i = 0; i < attr.stringsLength(); i++) {\r\n          strings.push(attr.strings(i));\r\n        }\r\n        return strings;\r\n      }\r\n      case ortFbs.AttributeType.TENSORS: {\r\n        const tensors = [];\r\n        for (let i = 0; i < attr.tensorsLength(); i++) {\r\n          tensors.push(attr.tensors(i)!);\r\n        }\r\n        return tensors;\r\n      }\r\n      // case ortFbs.AttributeType.GRAPHS:\r\n      // TODO: Subgraph not supported yet.\r\n      // const graphs = [];\r\n      // for (let i = 0; i < attr.graphsLength(); i++) {\r\n      //   graphs.push(attr.graphs(i)!);\r\n      // }\r\n      // return graphs;\r\n      default:\r\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\r\n    }\r\n  }\r\n\r\n  protected _attributes: Map<string, Value>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {WebGLBackend} from './backends/backend-webgl';\r\nimport {Graph} from './graph';\r\nimport {Operator} from './operators';\r\nimport {OpSet} from './opset';\r\nimport {Session} from './session';\r\n\r\nexport interface InferenceHandler {\r\n  /**\r\n   * dispose the inference handler. it will be called as the last step in Session.run()\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\nexport interface SessionHandler {\r\n  /**\r\n   * transform the graph at initialization time\r\n   * @param graphTransformer the graph transformer to manipulate the model graph\r\n   */\r\n  transformGraph?(graphTransformer: Graph.Transformer): void;\r\n\r\n  /**\r\n   * create an instance of InferenceHandler to use in a Session.run() call\r\n   */\r\n  createInferenceHandler(): InferenceHandler;\r\n\r\n  /**\r\n   * dispose the session handler. it will be called when a session is being disposed explicitly\r\n   */\r\n  dispose(): void;\r\n\r\n  /**\r\n   * Resolves the operator from the name and opset version; backend specific\r\n   * @param node the node to resolve\r\n   * @param opsets a list of opsets that exported from the model\r\n   * @param graph the completely initialized graph\r\n   */\r\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\r\n\r\n  /**\r\n   * This method let's the sessionHandler know that the graph initialization is complete\r\n   * @param graph the completely initialized graph\r\n   */\r\n  onGraphInitialized?(graph: Graph): void;\r\n\r\n  /**\r\n   * a reference to the corresponding backend\r\n   */\r\n  readonly backend: Backend;\r\n\r\n  /**\r\n   * a reference to the session context\r\n   */\r\n  readonly context: Session.Context;\r\n}\r\n\r\nexport interface Backend {\r\n  /**\r\n   * initialize the backend. will be called only once, when the first time the\r\n   * backend it to be used\r\n   */\r\n  initialize(): boolean|Promise<boolean>;\r\n\r\n  /**\r\n   * create an instance of SessionHandler to use in a Session object's lifecycle\r\n   */\r\n  createSessionHandler(context: Session.Context): SessionHandler;\r\n\r\n  /**\r\n   * dispose the backend. currently this will not be called\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\n// caches all initialized backend instances\r\nconst backendsCache: Map<string, Backend> = new Map();\r\n\r\nexport const backend: {[name: string]: Backend} = {\r\n  webgl: new WebGLBackend(),\r\n};\r\n\r\n/**\r\n * Resolve a reference to the backend. If a hint is specified, the corresponding\r\n * backend will be used.\r\n */\r\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\r\n  if (!hint) {\r\n    return resolveBackend(['webgl']);\r\n  } else {\r\n    const hints = typeof hint === 'string' ? [hint] : hint;\r\n\r\n    for (const backendHint of hints) {\r\n      const cache = backendsCache.get(backendHint);\r\n      if (cache) {\r\n        return cache;\r\n      }\r\n\r\n      const backend = await tryLoadBackend(backendHint);\r\n      if (backend) {\r\n        return backend;\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('no available backend to use');\r\n}\r\n\r\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\r\n  const backendObj = backend;\r\n\r\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\r\n    const backend = backendObj[backendHint];\r\n    let init = backend.initialize();\r\n    if (typeof init === 'object' && 'then' in init) {\r\n      init = await init;\r\n    }\r\n    if (init) {\r\n      backendsCache.set(backendHint, backend);\r\n      return backend;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction isBackend(obj: unknown) {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const o = obj as any;\r\n\r\n  // check if an object is a Backend instance\r\n  if (\r\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\r\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\r\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport type BackendType = Backend;\r\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\r\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\nimport {Backend, SessionHandler} from '../backend';\r\nimport {Logger} from '../instrument';\r\nimport {Session} from '../session';\r\n\r\nimport {WebGLSessionHandler} from './webgl/session-handler';\r\nimport {WebGLContext} from './webgl/webgl-context';\r\nimport {createWebGLContext} from './webgl/webgl-context-factory';\r\n\r\n/**\r\n * WebGLBackend is the entry point for all WebGL opeartions\r\n * When it starts it created the WebGLRenderingContext\r\n * and other main framework components such as Program and Texture Managers\r\n */\r\nexport class WebGLBackend implements Backend {\r\n  glContext: WebGLContext;\r\n\r\n  get contextId(): 'webgl'|'webgl2'|undefined {\r\n    return env.webgl.contextId;\r\n  }\r\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\r\n    env.webgl.contextId = value;\r\n  }\r\n\r\n  get matmulMaxBatchSize(): number|undefined {\r\n    return env.webgl.matmulMaxBatchSize;\r\n  }\r\n  set matmulMaxBatchSize(value: number|undefined) {\r\n    env.webgl.matmulMaxBatchSize = value;\r\n  }\r\n\r\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\r\n    return env.webgl.textureCacheMode;\r\n  }\r\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\r\n    env.webgl.textureCacheMode = value;\r\n  }\r\n\r\n  get pack(): boolean|undefined {\r\n    return env.webgl.pack;\r\n  }\r\n  set pack(value: boolean|undefined) {\r\n    env.webgl.pack = value;\r\n  }\r\n\r\n  get async(): boolean|undefined {\r\n    return env.webgl.async;\r\n  }\r\n  set async(value: boolean|undefined) {\r\n    env.webgl.async = value;\r\n  }\r\n\r\n  initialize(): boolean {\r\n    try {\r\n      this.glContext = createWebGLContext(this.contextId);\r\n      if (typeof this.matmulMaxBatchSize !== 'number') {\r\n        this.matmulMaxBatchSize = 16;\r\n      }\r\n      if (typeof this.textureCacheMode !== 'string') {\r\n        this.textureCacheMode = 'full';\r\n      }\r\n      if (typeof this.pack !== 'boolean') {\r\n        this.pack = false;\r\n      }\r\n      if (typeof this.async !== 'boolean') {\r\n        this.async = false;\r\n      }\r\n\r\n      Logger.setWithEnv(env);\r\n\r\n      Logger.verbose(\r\n          'WebGLBackend',\r\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\r\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\r\n              this.async}.`);\r\n      return true;\r\n    } catch (e) {\r\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\r\n      return false;\r\n    }\r\n  }\r\n  createSessionHandler(context: Session.Context): SessionHandler {\r\n    return new WebGLSessionHandler(this, context);\r\n  }\r\n  dispose(): void {\r\n    this.glContext.dispose();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\nimport {getGlsl} from './glsl-source';\r\nimport {squeezeShape} from './texture-layout-strategy';\r\nimport {TextureLayout} from './types';\r\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\r\n\r\n/**\r\n * GLSL Library responsible for data types and routines for manipulating\r\n * coordinates and mapping to/from tensor indices\r\n */\r\nexport class CoordsGlslLib extends GlslLib {\r\n  returnType: string;\r\n\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      ...this.offsetToCoords(),\r\n      ...this.coordsToOffset(),\r\n      ...this.toVec(),\r\n      ...this.valueFrom(),\r\n      // TODO return these only when packing is enabled.\r\n      ...this.getCommonUtilFuncs(),\r\n      ...this.getInputsSamplingSnippets(),\r\n      ...this.getOutputSamplingSnippet()\r\n    };\r\n  }\r\n  getCustomTypes() {\r\n    return {};\r\n  }\r\n  /**\r\n   * Produces a function that can map from\r\n   * 2D normalzied coordinates (s,t) to a flat offset\r\n   */\r\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\r\n    const funcName = 'offsetToCoords';\r\n    return {\r\n      offsetToCoords: new GlslLibRoutine(`\r\n      vec2 ${funcName}(int offset, int width, int height) {\r\n        int t = offset / width;\r\n        int s = offset - t*width;\r\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\r\n        return coords;\r\n      }\r\n      `)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Produces a function that can map from\r\n   * 2D normalzied coordinates (s,t) to a flat offset\r\n   */\r\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\r\n    const funcName = 'coordsToOffset';\r\n    return {\r\n      coordsToOffset: new GlslLibRoutine(`\r\n      int ${funcName}(vec2 coords, int width, int height) {\r\n        float s = coords.s * float(width);\r\n        float t = coords.t * float(height);\r\n        int offset = int(t) * width + int(s);\r\n        return offset;\r\n      }\r\n      `)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generates code for output sampler.\r\n   */\r\n\r\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    if (outputLayout.isPacked) {\r\n      return this.getPackedOutputSamplingSnippet(outputLayout);\r\n    } else {\r\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates code for packed output sampler.\r\n   */\r\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\r\n    const outShape = outputLayout.unpackedShape;\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const funcName = 'getOutputCoords';\r\n    switch (outShape.length) {\r\n      case 0:\r\n        result[funcName] = this.getOutputScalarCoords();\r\n        break;\r\n      case 1:\r\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\r\n        break;\r\n      case 2:\r\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 3:\r\n        result[funcName] =\r\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      default:\r\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    // TODO we need this to properly return a packed vec4 from kernels.\r\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\r\n    const floatTextureSetRGBASource = `\r\n      void setOutput(vec4 val) {\r\n        ${glsl.output} = val;\r\n      }\r\n    `;\r\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\r\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generates code for unpacked output sampler.\r\n   */\r\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\r\n    const outShape = outputLayout.unpackedShape;\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const funcName = 'getOutputCoords';\r\n    switch (outShape.length) {\r\n      case 0:\r\n        result[funcName] = this.getOutputScalarCoords();\r\n        break;\r\n      case 1:\r\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\r\n        break;\r\n      case 2:\r\n        result[funcName] =\r\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 3:\r\n        result[funcName] =\r\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 4:\r\n        result[funcName] = this.getOutputUnpacked4DCoords(\r\n            outShape as [number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 5:\r\n        result[funcName] = this.getOutputUnpacked5DCoords(\r\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      case 6:\r\n        result[funcName] = this.getOutputUnpacked6DCoords(\r\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    // TODO we need this to properly return a packed vec4 from kernels.\r\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\r\n    const floatTextureSetRSource = `\r\n        void setOutput(float val) {\r\n          ${glsl.output} = vec4(val, 0, 0, 0);\r\n        }\r\n    `;\r\n    const floatTextureSetRFuncName = 'floatTextureSetR';\r\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Scalar output coordinates.\r\n   */\r\n  protected getOutputScalarCoords(): GlslLibRoutine {\r\n    return new GlslLibRoutine(`\r\n      int getOutputCoords() {\r\n        return 0;\r\n      }\r\n    `);\r\n  }\r\n\r\n  /**\r\n   * 1D packed output coordinates.\r\n   */\r\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = texShape;\r\n    let source = '';\r\n    if (packedTexShape[0] === 1) {\r\n      source = `\r\n          int getOutputCoords() {\r\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    if (packedTexShape[1] === 1) {\r\n      source = `\r\n          int getOutputCoords() {\r\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    source = `\r\n        int getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * 2D packed output coordinates.\r\n   */\r\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\r\n    let source = '';\r\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\r\n      source = `\r\n        ivec2 getOutputCoords() {\r\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\r\n        }\r\n      `;\r\n      return new GlslLibRoutine(source);\r\n    }\r\n\r\n    const packedTexShape = texShape;\r\n    // texels needed to accommodate a logical row\r\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\r\n\r\n    /**\r\n     * getOutputCoords\r\n     *\r\n     * resTexRC: The rows and columns of the texels. If you move over one\r\n     * texel to the right in the packed texture, you are moving over one column\r\n     * (not two).\r\n     *\r\n     * index: The texel index\r\n     */\r\n    source = `\r\n        ivec2 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n\r\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n          // reverse r and c order for packed texture\r\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n          int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n          return ivec2(r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * 3D packed output coordinates.\r\n   */\r\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\r\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\r\n    const source = `\r\n        ivec3 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n          int b = index / ${texelsInBatch};\r\n          index -= b * ${texelsInBatch};\r\n\r\n          // reverse r and c order for packed texture\r\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n          int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n          return ivec3(b, r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * ND packed output coordinates.\r\n   */\r\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n\r\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\r\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\r\n    let texelsInBatchN = texelsInBatch;\r\n    let batches = '';\r\n    let coords = 'b, r, c';\r\n\r\n    for (let b = 2; b < shape.length - 1; b++) {\r\n      texelsInBatchN *= shape[shape.length - b - 1];\r\n      batches = `\r\n      int b${b} = index / ${texelsInBatchN};\r\n      index -= b${b} * ${texelsInBatchN};\r\n    ` + batches;\r\n      coords = `b${b}, ` + coords;\r\n    }\r\n    const source = `\r\n      ivec${shape.length} getOutputCoords() {\r\n        ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\r\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\r\n\r\n        ${batches}\r\n\r\n        int b = index / ${texelsInBatch};\r\n        index -= b * ${texelsInBatch};\r\n\r\n        // reverse r and c order for packed texture\r\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\r\n        int c = 2 * (index / ${texelsInLogicalRow});\r\n\r\n        return ivec${shape.length}(${coords});\r\n      }\r\n    `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 1D output coordinates.\r\n   */\r\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\r\n    const source = `\r\n        int getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 2D output coordinates.\r\n   */\r\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\r\n    const source = `\r\n        ivec2 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          int r = index / ${shape[1]};\r\n          int c = index - r * ${shape[1]};\r\n          return ivec2(r, c);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 3D output coordinates.\r\n   */\r\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n        ivec3 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec3(r, c, d);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 4D output coordinates.\r\n   */\r\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\r\n      GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n      ivec4 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec4(r, c, d, d2);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 5D output coordinates.\r\n   */\r\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\r\n      GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n      ivec5 getOutputCoords() {\r\n          ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                                vec2(${texShape[0]}, ${texShape[1]}));\r\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n          ${coordsFromIndexSnippet}\r\n          return ivec5(r, c, d, d2, d3);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 6D output coordinates.\r\n   */\r\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\r\n    number, number\r\n  ]): GlslLibRoutine {\r\n    let source = '';\r\n    const rank = shape.length;\r\n\r\n    let strides = null;\r\n    if (rank < 2) {\r\n      strides = [];\r\n    }\r\n\r\n    strides = new Array(rank - 1);\r\n    strides[rank - 2] = shape[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * shape[i + 1];\r\n    }\r\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\r\n    const coordsFromIndexSnippet =\r\n        strides\r\n            .map((stride, i) => {\r\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\r\n              const line2 = i === strides.length - 1 ?\r\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\r\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\r\n              return `${line1}; ${line2};`;\r\n            })\r\n            .join('');\r\n\r\n    source = `\r\n     ivec6 getOutputCoords() {\r\n         ivec2 resTexRC = ivec2(TexCoords.xy *\r\n                               vec2(${texShape[0]}, ${texShape[1]}));\r\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\r\n         ${coordsFromIndexSnippet}\r\n         return ivec6(r, c, d, d2, d3, d4);\r\n       }\r\n     `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Generates code for common UV coords computation utility functions.\r\n   */\r\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    let funcName = 'uvFromFlat';\r\n    result[funcName] = new GlslLibRoutine(`\r\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\r\n      int texC = index / texNumR;\r\n      int texR = index - texC * texNumR;\r\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\r\n      //       v.\r\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\r\n    }\r\n    `);\r\n    funcName = 'packedUVfrom1D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\r\n        int texelIndex = index / 2;\r\n        int texR = texelIndex / texNumC;\r\n        int texC = texelIndex - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'packedUVfrom2D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\r\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\r\n        int texR = texelIndex / texNumC;\r\n        int texC = texelIndex - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'packedUVfrom3D';\r\n    result[funcName] = new GlslLibRoutine(`\r\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\r\n          int texelsInBatch, int texelsInLogicalRow, int b,\r\n          int row, int col) {\r\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\r\n        int texR = index / texNumC;\r\n        int texC = index - texR * texNumC;\r\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\r\n      }\r\n      `);\r\n    funcName = 'sampleTexture';\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    result[funcName] = new GlslLibRoutine(`\r\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\r\n            return ${glsl.texture2D}(textureSampler, uv).r;\r\n        }`);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for inputs\r\n   */\r\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\r\n      const inputLayout = this.context.inputTextureLayouts[i];\r\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\r\n      if (inputLayout.isPacked) {\r\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\r\n      } else {\r\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\r\n      }\r\n\r\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\r\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\r\n        if (inputLayout.isPacked) {\r\n          result[outCoordFuncName] =\r\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\r\n        } else {\r\n          result[outCoordFuncName] =\r\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\r\n        }\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for output coordinates of samplers\r\n   */\r\n  protected getPackedSamplerAtOutputCoords(\r\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\r\n    const inShape = inputLayout.unpackedShape;\r\n    const outShape = outputLayout.unpackedShape;\r\n    const texName = name;\r\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\r\n\r\n    const inRank = inShape.length;\r\n    const outRank = outShape.length;\r\n\r\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n\r\n    const type = getCoordsDataType(outRank);\r\n    const rankDiff = outRank - inRank;\r\n    let coordsSnippet: string;\r\n    const fields = getGlChannels();\r\n\r\n    if (inRank === 0) {\r\n      coordsSnippet = '';\r\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\r\n      coordsSnippet = 'coords = 0;';\r\n    } else {\r\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\r\n    }\r\n    let unpackedCoordsSnippet = '';\r\n    if (outRank < 2 && inRank > 0) {\r\n      unpackedCoordsSnippet = 'coords';\r\n    } else {\r\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\r\n    }\r\n\r\n    let output = 'return outputValue;';\r\n    const inSize = ShapeUtil.size(inShape);\r\n    const isInputScalar = inSize === 1;\r\n    const outSize = ShapeUtil.size(outShape);\r\n    const isOutputScalar = outSize === 1;\r\n\r\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\r\n      output = `\r\n        return vec4(outputValue.xy, outputValue.xy);\r\n      `;\r\n    } else if (isInputScalar && !isOutputScalar) {\r\n      if (outRank === 1) {\r\n        output = `\r\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\r\n        `;\r\n      } else {\r\n        output = `\r\n          return vec4(outputValue.x);\r\n        `;\r\n      }\r\n    } else if (broadcastDims.length) {\r\n      const rows = inRank - 2;\r\n      const cols = inRank - 1;\r\n\r\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\r\n        output = 'return vec4(outputValue.x);';\r\n      } else if (broadcastDims.indexOf(rows) > -1) {\r\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\r\n            'outputValue.x, outputValue.y);';\r\n      } else if (broadcastDims.indexOf(cols) > -1) {\r\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\r\n      }\r\n    }\r\n\r\n    const swapLastDimsSnippet = `\r\n        int lastDim = coords.${fields[outRank - 1]};\r\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\r\n        coords.${fields[outRank - 2]} = lastDim;\r\n      `;\r\n    const source = `\r\n      vec4 ${funcName}() {\r\n        ${type} coords = getOutputCoords();\r\n        ${swapLastDimsSnippet}\r\n        ${coordsSnippet}\r\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\r\n        ${output}\r\n      }\r\n    `;\r\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for unpacked output coordinates of samplers\r\n   */\r\n  protected getUnpackedSamplerAtOutputCoords(\r\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\r\n    const outTexShape = [outputLayout.width, outputLayout.height];\r\n    const inTexShape = [inputLayout.width, inputLayout.height];\r\n    const inRank = inputLayout.unpackedShape.length;\r\n    const outRank = outputLayout.unpackedShape.length;\r\n    const inShape = inputLayout.unpackedShape;\r\n    const outShape = outputLayout.unpackedShape;\r\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\r\n\r\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\r\n      const source = `\r\n          float ${funcName}() {\r\n            return sampleTexture(${name}, TexCoords);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const type = getCoordsDataType(outRank);\r\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n    const rankDiff = outRank - inRank;\r\n    let coordsSnippet: string;\r\n    const fields = getGlChannels();\r\n\r\n    if (inRank === 0) {\r\n      coordsSnippet = '';\r\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\r\n      coordsSnippet = 'coords = 0;';\r\n    } else {\r\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\r\n    }\r\n    let unpackedCoordsSnippet = '';\r\n    if (outRank < 2 && inRank > 0) {\r\n      unpackedCoordsSnippet = 'coords';\r\n    } else {\r\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\r\n    }\r\n    const source = `\r\n        float ${funcName}() {\r\n          ${type} coords = getOutputCoords();\r\n          ${coordsSnippet}\r\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for packed operations.\r\n   */\r\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    switch (inputLayout.unpackedShape.length) {\r\n      case 0:\r\n        return this.getPackedSamplerScalar(funcName, name);\r\n      case 1:\r\n        return this.getPackedSampler1D(funcName, name, inputLayout);\r\n      case 2:\r\n        return this.getPackedSampler2D(funcName, name, inputLayout);\r\n      case 3:\r\n        return this.getPackedSampler3D(funcName, name, inputLayout);\r\n      default:\r\n        return this.getPackedSamplerND(funcName, name, inputLayout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Constructing snippets for unpacked operations.\r\n   */\r\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    switch (shape.length) {\r\n      case 0:\r\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\r\n      case 1:\r\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\r\n      case 2:\r\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\r\n      case 3:\r\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\r\n      case 4:\r\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\r\n      case 5:\r\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\r\n      case 6:\r\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\r\n      default:\r\n        // TODO support more dimensionalities\r\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Packed scalar snippet.\r\n   */\r\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    const source = `\r\n          vec4 ${funcName}() {\r\n            return ${glsl.texture2D}(${name}, halfCR);\r\n          }\r\n        `;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Packed 1D snippet.\r\n   */\r\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const packedTexShape = [texShape[1], texShape[0]];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    const packedSampler = `vec4 ${funcName}(int index) {\r\n      vec2 uv = packedUVfrom1D(\r\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\r\n  }\r\n\r\n  /**\r\n   * Packed 2D snippet.\r\n   */\r\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    const texNumR = texShape[0];\r\n    const texNumC = texShape[1];\r\n\r\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\r\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\r\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\r\n        return ${glsl.texture2D}(${name}, uv);\r\n      }`;\r\n\r\n      return new GlslLibRoutine(packedSampler);\r\n    }\r\n    const packedTexShape = texShape;\r\n    const valuesPerRow = Math.ceil(shape[1] / 2);\r\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\r\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\r\n  }\r\n\r\n  /**\r\n   * Packed 3D snippet.\r\n   */\r\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    if (shape[0] === 1) {\r\n      const squeezedShape = shape.slice(1);\r\n      const keptDims = [1, 2];\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      const params = ['b', 'row', 'col'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\r\n      const packedSampler = `${samplerRoutine.routineBody}\r\n      vec4 ${funcName}(int b, int row, int col) {\r\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n      } `;\r\n      const source = packedSampler;\r\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\r\n    }\r\n    const texNumR = packedTexShape[0];\r\n    const texNumC = packedTexShape[1];\r\n\r\n    const valuesPerRow = Math.ceil(shape[2] / 2);\r\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\r\n\r\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\r\n      vec2 uv = packedUVfrom3D(\r\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\r\n      return ${glsl.texture2D}(${name}, uv);}`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\r\n  }\r\n  /*\r\n   * Packed ND snippet.\r\n   */\r\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const rank = shape.length;\r\n    const texShape = [inputLayout.width, inputLayout.height];\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n\r\n    const packedTexShape = [texShape[0], texShape[1]];\r\n    const texNumR = packedTexShape[1];\r\n    const texNumC = packedTexShape[0];\r\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\r\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\r\n    let params = 'int b, int row, int col';\r\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\r\n    for (let b = 2; b < rank - 1; b++) {\r\n      params = `int b${b}, ` + params;\r\n      texelsInBatch *= shape[rank - b - 1];\r\n      index = `b${b} * ${texelsInBatch} + ` + index;\r\n    }\r\n    const packedSampler = `vec4 ${funcName}(${params}) {\r\n      int index = ${index};\r\n      int texR = index / ${texNumC};\r\n      int texC = index - texR * ${texNumC};\r\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\r\n      return ${glsl.texture2D}(${name}, uv);\r\n    }`;\r\n    const source = packedSampler;\r\n    return new GlslLibRoutine(source);\r\n  }\r\n\r\n  /**\r\n   * Unpacked scalar snippet.\r\n   */\r\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\r\n    if (texNumR === 1 && texNumC === 1) {\r\n      const source = `\r\n          float ${funcName}() {\r\n            return sampleTexture(${name}, halfCR);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const source = `\r\n        float ${funcName}() {\r\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 1D snippet.\r\n   */\r\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const tNumR = inputLayout.width;\r\n    const tNumC = inputLayout.height;\r\n\r\n    if (tNumC === 1 && tNumR === 1) {\r\n      const source = `\r\n        float ${funcName}(int index) {\r\n          return sampleTexture(${name}, halfCR);\r\n        }\r\n      `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    if (tNumC === 1) {\r\n      const source = `\r\n          float ${funcName}(int index) {\r\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n    if (tNumR === 1) {\r\n      const source = `\r\n          float ${funcName}(int index) {\r\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n    const source = `\r\n        float ${funcName}(int index) {\r\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 2D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n\r\n    // TODO: modify row/col order for other dimensions.\r\n    const texShape = [inputLayout.height, inputLayout.width];\r\n\r\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\r\n      const texNumR = texShape[1];\r\n      const texNumC = texShape[0];\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    const squeezedShape = newShape;\r\n    if (squeezedShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const params = ['col', 'row'];\r\n      const source = `\r\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n          float ${funcName}(int row, int col) {\r\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\r\n    }\r\n\r\n    const texNumR = texShape[1];\r\n    const texNumC = texShape[0];\r\n    if (texNumC === 1) {\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\r\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    }\r\n\r\n    if (texNumR === 1) {\r\n      const source = `\r\n          float ${funcName}(int row, int col) {\r\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\r\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\r\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    }\r\n\r\n    const source = `\r\n        float ${funcName}(int row, int col) {\r\n          int index = col * ${shape[1]} + row;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 3D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride0 = shape[1] * shape[2];\r\n    const stride1 = shape[2];\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    const squeezedShape = newShape;\r\n    if (squeezedShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\r\n      const params = ['batch', 'col', 'row'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\r\n      // TODO: revisit the logic here to make it simpler\r\n      const revDims = keptDims.reverse();\r\n      const source = `\r\n          ${routine.routineBody}\r\n          float ${funcName}(int batch, int row, int col) {\r\n            return ${funcName}(${getSqueezedParams(params, revDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, routine.dependencies);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n          float ${funcName}(int depth, int row, int col) {\r\n            // Explicitly use integer operations as dot() only works on floats.\r\n            int index = depth * ${stride0} + col * ${stride1} + row;\r\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n      `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 4D snippet.\r\n   */\r\n\r\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride2 = shape[3];\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    //\r\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\r\n    //\r\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    // if (newShape.length < shape.length) {\r\n    //   const newInputShape = squeezeInputShape(shape, newShape);\r\n    //   const params = ['row', 'col', 'depth', 'depth2'];\r\n    //   // Deep copy of input texture layout.\r\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n    //   newInputLayout.unpackedShape = newInputShape;\r\n    //   const source = `\r\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\r\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n    //       }\r\n    //     `;\r\n    //   return new GlslLibRoutine(\r\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n    // }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n        float ${funcName}(int row, int col, int depth, int depth2) {\r\n          int index = row * ${stride0} + col * ${stride1} +\r\n              depth2 * ${stride2} + depth;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 5D snippet.\r\n   */\r\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride3 = shape[4];\r\n    const stride2 = shape[3] * stride3;\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    if (newShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, newShape);\r\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const source = `\r\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\r\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n          }\r\n        `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\r\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\r\n          depth3 * ${stride3} + depth2;\r\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n          return sampleTexture(${name}, uv);\r\n        }\r\n      `;\r\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n  }\r\n\r\n  /**\r\n   * Unpacked 6D snippet.\r\n   */\r\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\r\n    const shape = inputLayout.unpackedShape;\r\n    const stride4 = shape[5];\r\n    const stride3 = shape[4] * stride4;\r\n    const stride2 = shape[3] * stride3;\r\n    const stride1 = shape[2] * stride2;\r\n    const stride0 = shape[1] * stride1;\r\n\r\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\r\n    if (newShape.length < shape.length) {\r\n      const newInputShape = squeezeInputShape(shape, newShape);\r\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\r\n      // Deep copy of input texture layout.\r\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\r\n      newInputLayout.unpackedShape = newInputShape;\r\n\r\n      const source = `\r\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\r\n            float ${funcName}(int row, int col, int depth,\r\n              int depth2, int depth3, int depth4) {\r\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\r\n            }\r\n          `;\r\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\r\n    }\r\n\r\n    const texNumR = inputLayout.width;\r\n    const texNumC = inputLayout.height;\r\n    const source = `\r\n          float ${funcName}(int row, int col, int depth,\r\n            int depth2, int depth3, int depth4) {\r\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\r\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\r\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\r\n            return sampleTexture(${name}, uv);\r\n          }\r\n        `;\r\n    return new GlslLibRoutine(\r\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\r\n  }\r\n\r\n  /**\r\n   * This is the main function to map from the given texture coordiantes (s,t)\r\n   * to logical indices for the output\r\n   * There will only be one single variation of this\r\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\r\n   */\r\n  protected toVec(): {[name: string]: GlslLibRoutine} {\r\n    const output = this.context.outputTextureLayout;\r\n    const rank = output.shape.length;\r\n    const strides = output.strides;\r\n    const xScale = output.width;\r\n    const yScale = output.height;\r\n\r\n    const stridesBlock = [];\r\n    for (let i = 0; i < rank - 1; ++i) {\r\n      stridesBlock.push(`\r\n        c[${i}] = offset / ${strides[i]};`);\r\n      stridesBlock.push(`\r\n        offset -= c[${i}] * ${strides[i]};`);\r\n    }\r\n    stridesBlock.push(`\r\n        c[${rank - 1}] = offset;`);\r\n    const body = `\r\n      void toVec(vec2 texCoords, out int c[${rank}]) {\r\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\r\n        ${stridesBlock.join('')}\r\n      }\r\n      void toVec(int offset, out int c[${rank}]) {\r\n        ${stridesBlock.join('')}\r\n      }\r\n    `;\r\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\r\n  }\r\n  /**\r\n   * These are value getter functions generated for each input\r\n   * Each function is hardwired to the name and dimensions of the input\r\n   * An '_T' variation is also produced which accesses values as if the\r\n   * input was transposed\r\n   */\r\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const layout = this.context.inputTextureLayouts[i];\r\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\r\n      const rank = shape.length;\r\n      let funcName = `_${name}`;\r\n      result[funcName] = new GlslLibRoutine(\r\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\r\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\r\n      funcName = funcName + '_T';\r\n      result[funcName] = new GlslLibRoutine(\r\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\r\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\r\n    });\r\n    return result;\r\n  }\r\n  /**\r\n   * Produces one value getter function for the name and rank given\r\n   * If a transpose is set proper offsetToCoords mapping will be used\r\n   * @param name name of the function\r\n   * @param rank rank of the input\r\n   * @param transpose whether or not should generate a transpose variation\r\n   */\r\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\r\n      string {\r\n    let name = `_${varName}`;\r\n    if (transpose) {\r\n      name = name + '_T';\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return `\r\n        float ${name}(int m[${rank}]) {\r\n          int offset = indicesToOffset${name}(m);\r\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\r\n          return value;\r\n        }\r\n        `;\r\n  }\r\n\r\n  /**\r\n   * Produces a packed value getter function for the name and rank given\r\n   * If a transpose is set proper offsetToCoords mapping will be used\r\n   * @param name name of the function\r\n   * @param rank rank of the input\r\n   * @param transpose whether or not should generate a transpose variation\r\n   */\r\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\r\n      string {\r\n    let name = `_${varName}_Pack`;\r\n    if (transpose) {\r\n      name = name + '_T';\r\n    }\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return `\r\n        vec4 ${name}(int m[${rank}]) {\r\n          int offset = indicesToOffset_${varName}(m);\r\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n          return ${glsl.texture2D}(${varName}, coords);\r\n        }\r\n        `;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ProgramInfo, TextureLayout} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\nexport enum FunctionType {\r\n  ValueBased,\r\n  Positional\r\n}\r\nexport interface GlslFunction<T extends FunctionType> {\r\n  body: string;\r\n  name: string;\r\n  type: T;\r\n}\r\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\r\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\r\n  inputShape: readonly number[];\r\n  outputShape: readonly number[];\r\n}\r\n\r\nexport class GlslContext {\r\n  constructor(\r\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\r\n      public outputTextureLayout: TextureLayout) {}\r\n}\r\nexport abstract class GlslLib {\r\n  constructor(public context: GlslContext) {}\r\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\r\n  abstract getCustomTypes(): {[name: string]: string};\r\n}\r\n\r\n// abstraction to represent a GLSL library routine and it's dependencies\r\nexport class GlslLibRoutine {\r\n  constructor(public routineBody: string, public dependencies?: string[]) {}\r\n}\r\n\r\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\r\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\r\nexport class GlslLibRoutineNode {\r\n  dependencies: GlslLibRoutineNode[];\r\n  routineBody: string;\r\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\r\n    if (dependencies) {\r\n      this.dependencies = dependencies;\r\n    } else {\r\n      this.dependencies = [];\r\n    }\r\n\r\n    if (routineBody) {\r\n      this.routineBody = routineBody;\r\n    }\r\n  }\r\n  addDependency(node: GlslLibRoutineNode) {\r\n    if (node) {\r\n      this.dependencies.push(node);\r\n    }\r\n  }\r\n}\r\n\r\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\r\nexport class TopologicalSortGlslRoutines {\r\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\r\n    if (!nodes || nodes.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (nodes.length === 1) {\r\n      return nodes;\r\n    }\r\n\r\n    const cycleCheck = new Set<string>();\r\n    const alreadyTraversed = new Set<string>();\r\n    const result = new Array<GlslLibRoutineNode>();\r\n\r\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\r\n    return result;\r\n  }\r\n\r\n  private static createOrderedNodes(\r\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\r\n      result: GlslLibRoutineNode[]) {\r\n    for (let i = 0; i < graphNodes.length; ++i) {\r\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\r\n    }\r\n  }\r\n\r\n  private static dfsTraverse(\r\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\r\n    // if this root has already been traversed return\r\n    if (!root || alreadyTraversed.has(root.name)) {\r\n      return;\r\n    }\r\n\r\n    // cyclic dependency has been detected\r\n    if (cycleCheck.has(root.name)) {\r\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\r\n    }\r\n\r\n    // hold this node to detect cycles if any\r\n    cycleCheck.add(root.name);\r\n\r\n    // traverse children in a dfs fashion\r\n    const dependencies = root.dependencies;\r\n    if (dependencies && dependencies.length > 0) {\r\n      for (let i = 0; i < dependencies.length; ++i) {\r\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\r\n      }\r\n    }\r\n\r\n    // add to result holder\r\n    result.push(root);\r\n\r\n    // mark this node as traversed so that we don't traverse from this again\r\n    alreadyTraversed.add(root.name);\r\n\r\n    // release the hold\r\n    cycleCheck.delete(root.name);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * This GLSL library handles routines converting\r\n * float32 to/from Unsigned byte or float 16\r\n */\r\nexport class EncodingGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\r\n        return vec4(f, 0.0, 0.0, 0.0);\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\r\n        return rgba.r;\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\r\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\r\n   */\r\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\r\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\r\n    return {\r\n      encode: new GlslLibRoutine(`\r\n      highp vec4 encode(highp float f) {\r\n        highp float F = abs(f);\r\n        highp float Sign = step(0.0,-f);\r\n        highp float Exponent = floor(log2(F));\r\n        highp float Mantissa = (exp2(- Exponent) * F);\r\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\r\n        highp vec4 rgba;\r\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\r\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\r\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\r\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\r\n        ${endianness}\r\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\r\n        return rgba;\r\n    }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * returns the routine to encode a vec4 of unsigned bytes to float32\r\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\r\n   */\r\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\r\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\r\n    return {\r\n      decode: new GlslLibRoutine(`\r\n        highp float decode(highp vec4 rgba) {\r\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\r\n          ${endianness}\r\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\r\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\r\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\r\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\r\n          return Result;\r\n      }\r\n        `)\r\n    };\r\n  }\r\n  /**\r\n   * Determines if the machine is little endian or not\r\n   * @credit: https://gist.github.com/TooTallNate/4750953\r\n   */\r\n  static isLittleEndian(): boolean {\r\n    const b = new ArrayBuffer(4);\r\n    const a = new Uint32Array(b);\r\n    const c = new Uint8Array(b);\r\n    a[0] = 0xdeadbeef;\r\n    if (c[0] === 0xef) {\r\n      return true;\r\n    }\r\n    if (c[0] === 0xde) {\r\n      return false;\r\n    }\r\n    throw new Error('unknown endianness');\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\nimport {getGlsl} from './glsl-source';\r\n\r\n/**\r\n * This GLSL library handles routines around reading a texlet and writing to it\r\n * Reading and writing could be more than just dealing with one channel\r\n * It may require encoding/decoding to/from 4 channels into one\r\n */\r\nexport class FragColorGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\r\n    const glsl = getGlsl(this.context.glContext.version);\r\n    return {\r\n      setFragColor: new GlslLibRoutine(\r\n          `\r\n        void setFragColor(float value) {\r\n            ${glsl.output} = encode(value);\r\n        }\r\n        `,\r\n          ['encoding.encode'])\r\n    };\r\n  }\r\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      getColorAsFloat: new GlslLibRoutine(\r\n          `\r\n        float getColorAsFloat(vec4 color) {\r\n            return decode(color);\r\n        }\r\n        `,\r\n          ['encoding.decode'])\r\n    };\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\r\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\r\n/**\r\n * GLSL preprocessor responsible for resolving @inline directives\r\n */\r\nexport function replaceInlines(script: string): string {\r\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\r\n  let match;\r\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\r\n    const params = match[3]\r\n                       .split(',')\r\n                       .map(s => {\r\n                         const tokens = s.trim().split(' ');\r\n                         if (tokens && tokens.length === 2) {\r\n                           return {type: tokens[0], name: tokens[1]};\r\n                         }\r\n                         return null;\r\n                       })\r\n                       .filter(v => v !== null);\r\n    inlineDefs[match[2]] = {params, body: match[4]};\r\n  }\r\n  for (const name in inlineDefs) {\r\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\r\n    const regex = new RegExp(regexString, 'gm');\r\n    while ((match = regex.exec(script)) !== null) {\r\n      const type = match[1];\r\n      const variable = match[2];\r\n      const params = match[3].split(',');\r\n      const declLine = (type) ? `${type} ${variable};` : '';\r\n      let newBody: string = inlineDefs[name].body;\r\n      let paramRedecLine = '';\r\n      inlineDefs[name].params.forEach((v, i) => {\r\n        if (v) {\r\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\r\n        }\r\n      });\r\n      newBody = `${paramRedecLine}\\n ${newBody}`;\r\n      newBody = newBody.replace('return', `${variable} = `);\r\n      const replacement = `\r\n      ${declLine}\r\n      {\r\n        ${newBody}\r\n      }\r\n      `;\r\n      script = script.replace(match[0], replacement);\r\n    }\r\n  }\r\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\r\n  return script;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\r\nimport {replaceInlines} from './glsl-function-inliner';\r\nimport {glslRegistry} from './glsl-registered-libs';\r\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\r\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/**\r\n * Preprocessor for the additions to the GLSL language\r\n * It deals with:\r\n *  @include directives\r\n *  @inline\r\n *  Loop unrolling (not implemented)\r\n *  Macro resolution (not implemented)\r\n */\r\nexport class GlslPreprocessor {\r\n  readonly context: GlslContext;\r\n  readonly libs: {[name: string]: GlslLib} = {};\r\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\r\n\r\n  constructor(\r\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\r\n      outputTextureLayout: TextureLayout) {\r\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\r\n\r\n    // construct GlslLibs\r\n    Object.keys(glslRegistry).forEach((name: string) => {\r\n      const lib = new glslRegistry[name](this.context);\r\n      this.libs[name] = lib;\r\n    });\r\n\r\n    // construct GlslRoutineDependencyGraph\r\n    const map = this.glslLibRoutineDependencyGraph;\r\n    for (const libName in this.libs) {\r\n      const lib = this.libs[libName];\r\n      const routinesInLib = lib.getFunctions();\r\n      for (const routine in routinesInLib) {\r\n        const key = libName + '.' + routine;\r\n        let currentNode: GlslLibRoutineNode;\r\n        if (map[key]) {\r\n          currentNode = map[key];\r\n          currentNode.routineBody = routinesInLib[routine].routineBody;\r\n        } else {\r\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\r\n          map[key] = currentNode;\r\n        }\r\n        const dependencies = routinesInLib[routine].dependencies;\r\n        if (dependencies) {\r\n          for (let i = 0; i < dependencies.length; ++i) {\r\n            if (!map[dependencies[i]]) {\r\n              const node = new GlslLibRoutineNode(dependencies[i]);\r\n              map[dependencies[i]] = node;\r\n              currentNode.addDependency(node);\r\n            } else {\r\n              currentNode.addDependency(map[dependencies[i]]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  preprocess(): string {\r\n    const programInfo = this.context.programInfo;\r\n    let source = programInfo.shaderSource;\r\n\r\n    // append main() function\r\n    if (!this.context.programInfo.hasMain) {\r\n      source = `${source}\r\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\r\n    }\r\n    // replace inlines\r\n    source = replaceInlines(source);\r\n\r\n    // concat final source string\r\n    return `${getFragShaderPreamble(this.context.glContext.version)}\r\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\r\n    ${this.getImports(source)}\r\n    ${source}`;\r\n  }\r\n\r\n  protected getImports(script: string): string {\r\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\r\n\r\n    if (routinesIncluded.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    let routines = '';\r\n    for (let i = 0; i < routinesIncluded.length; ++i) {\r\n      if (routinesIncluded[i].routineBody) {\r\n        routines += routinesIncluded[i].routineBody + '\\n';\r\n      } else {\r\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\r\n      }\r\n    }\r\n\r\n    return routines;\r\n  }\r\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\r\n    const nodes: GlslLibRoutineNode[] = [];\r\n\r\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\r\n      const routine = classAndRoutine.split('.')[1];\r\n      if (script.indexOf(routine) !== -1) {\r\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\r\n      }\r\n    });\r\n\r\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\r\n  }\r\n\r\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\r\n    const uniformLines: string[] = [];\r\n    if (samplers) {\r\n      for (const sampler of samplers) {\r\n        uniformLines.push(`uniform sampler2D ${sampler};`);\r\n      }\r\n    }\r\n    if (variables) {\r\n      for (const variable of variables) {\r\n        uniformLines.push(\r\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\r\n      }\r\n    }\r\n    return uniformLines.join('\\n');\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\r\nimport {GlslContext, GlslLib} from './glsl-definitions';\r\nimport {EncodingGlslLib} from './glsl-encoding-lib';\r\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\r\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\r\nimport {VecGlslLib} from './glsl-vec-lib';\r\n\r\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\r\n  'encoding': EncodingGlslLib,\r\n  'fragcolor': FragColorGlslLib,\r\n  'vec': VecGlslLib,\r\n  'shapeUtils': ShapeUtilsGlslLib,\r\n  'coordinates': CoordsGlslLib,\r\n  //  'arrays': ArrayGlslSLib\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * GLSL Library responsible for data types and routines for manipulating\r\n * coordinates and mapping to/from tensor indices\r\n */\r\nexport class ShapeUtilsGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {\r\n      ...this.bcastIndex(),\r\n      ...this.bcastMatmulIndex(),\r\n      ...this.offsetToIndices(),\r\n      ...this.indicesToOffset(),\r\n      ...this.incrementIndices()\r\n    };\r\n  }\r\n  getCustomTypes() {\r\n    return {};\r\n  }\r\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\r\n    const outputRank = this.context.outputTextureLayout.shape.length;\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\r\n      if (shape.length <= outputRank) {\r\n        const rank = shape.length;\r\n        const dimOffset = outputRank - rank;\r\n        const funcName = `bcastIndices_${name}`;\r\n        let block = '';\r\n        for (let i = 0; i < rank; ++i) {\r\n          block += `\r\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\r\n          `;\r\n        }\r\n        const body = `\r\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\r\n          ${block}\r\n        }\r\n        `;\r\n        result[funcName] = new GlslLibRoutine(body);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\r\n    const outputRank = this.context.outputTextureLayout.shape.length;\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      if (!(shape.length < 2 || shape.length > outputRank)) {\r\n        const rank = shape.length;\r\n        const dimOffset = outputRank - rank;\r\n        const funcName = `bcastMatmulIndices_${name}`;\r\n        let block = '';\r\n        for (let i = 0; i < rank - 2; ++i) {\r\n          block += `\r\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\r\n          `;\r\n        }\r\n        const body = `\r\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\r\n          ${block}\r\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\r\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\r\n        }\r\n        `;\r\n        result[funcName] = new GlslLibRoutine(body);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const strides = this.context.inputTextureLayouts[i].strides;\r\n      const rank = shape.length;\r\n      let funcName = `indicesToOffset_${name}`;\r\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\r\n      funcName = `indicesToOffset_${name}_T`;\r\n      result[funcName] =\r\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\r\n    });\r\n    return result;\r\n  }\r\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\r\n    let block = '';\r\n    for (let i = rank - 1; i >= 0; --i) {\r\n      block += `\r\n        offset += indices[${i}] * ${strides[i]};\r\n        `;\r\n    }\r\n    return `\r\n      int ${name}(int indices[${rank}]) {\r\n        int offset = 0;\r\n        ${block}\r\n        return offset;\r\n      }\r\n      `;\r\n  }\r\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const strides = this.context.inputTextureLayouts[i].strides;\r\n      const rank = shape.length;\r\n      let funcName = `offsetToIndices_${name}`;\r\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\r\n      funcName = `offsetToIndices_${name}_T`;\r\n      result[funcName] =\r\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\r\n    });\r\n    return result;\r\n  }\r\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\r\n    const stridesBlock = [];\r\n    for (let i = 0; i < rank - 1; ++i) {\r\n      stridesBlock.push(`\r\n      indices[${i}] = offset / ${strides[i]};`);\r\n      stridesBlock.push(`\r\n        offset -= indices[${i}] * ${strides[i]};`);\r\n    }\r\n    stridesBlock.push(`\r\n      indices[${rank - 1}] = offset;`);\r\n    return `\r\n      void ${name}(int offset, out int indices[${rank}]) {\r\n        ${stridesBlock.join('')}\r\n      }\r\n      `;\r\n  }\r\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    this.context.programInfo.inputNames.forEach((name, i) => {\r\n      const shape = this.context.inputTextureLayouts[i].shape;\r\n      const rank = shape.length;\r\n      const funcName = `incrementIndices_${name}`;\r\n      let shapeInit = '';\r\n      for (let i = 0; i < rank; ++i) {\r\n        shapeInit += `\r\n        shape[${i}] = ${shape[i]};`;\r\n      }\r\n      const body = `\r\n        void ${funcName}(int axis, out int indices[${rank}]) {\r\n          int shape[${rank}];\r\n          ${shapeInit};\r\n          for(int i = ${rank} -1 ; i >= 0; --i) {\r\n            if(i > axis) continue;\r\n            indices[i] += 1;\r\n            if(indices[i] < shape[i]) {\r\n              break;\r\n            }\r\n            indices[i] = 0;\r\n          }\r\n        }\r\n        `;\r\n      result[funcName] = new GlslLibRoutine(body);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\n/**\r\n * represent a version irrelevant abstraction of for GLSL source code\r\n */\r\nexport interface Glsl {\r\n  readonly version: string;\r\n  readonly attribute: string;\r\n  readonly varyingVertex: string;\r\n  readonly varyingFrag: string;\r\n  readonly texture2D: string;\r\n  readonly output: string;\r\n  readonly outputDeclaration: string;\r\n}\r\n\r\nconst GLSL_ES_2_0: Glsl = {\r\n  version: '',\r\n  attribute: 'attribute',\r\n  varyingVertex: 'varying',\r\n  varyingFrag: 'varying',\r\n  texture2D: 'texture2D',\r\n  output: 'gl_FragColor',\r\n  outputDeclaration: '',\r\n};\r\nconst GLSL_ES_3_0: Glsl = {\r\n  version: '#version 300 es',\r\n  attribute: 'in',\r\n  varyingVertex: 'out',\r\n  varyingFrag: 'in',\r\n  texture2D: 'texture',\r\n  output: 'outputColor',\r\n  outputDeclaration: 'out vec4 outputColor;',\r\n};\r\n\r\nexport function getGlsl(version: 1|2) {\r\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\r\n}\r\n\r\nexport function getVertexShaderSource(version: 1|2): string {\r\n  const glsl = getGlsl(version);\r\n  return `${glsl.version}\r\n      precision highp float;\r\n      ${glsl.attribute} vec3 position;\r\n      ${glsl.attribute} vec2 textureCoord;\r\n\r\n      ${glsl.varyingVertex} vec2 TexCoords;\r\n\r\n      void main()\r\n      {\r\n          gl_Position = vec4(position, 1.0);\r\n          TexCoords = textureCoord;\r\n      }`;\r\n}\r\n\r\nexport function getFragShaderPreamble(version: 1|2): string {\r\n  const glsl = getGlsl(version);\r\n  return `${glsl.version}\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2D;\r\n    ${glsl.varyingFrag} vec2 TexCoords;\r\n    ${glsl.outputDeclaration}\r\n    const vec2 halfCR = vec2(0.5, 0.5);\r\n\r\n    // Custom vector types to handle higher dimenalities.\r\n    struct ivec5\r\n    {\r\n      int x;\r\n      int y;\r\n      int z;\r\n      int w;\r\n      int u;\r\n    };\r\n\r\n    struct ivec6\r\n    {\r\n      int x;\r\n      int y;\r\n      int z;\r\n      int w;\r\n      int u;\r\n      int v;\r\n    };\r\n\r\n    int imod(int x, int y) {\r\n      return x - y * (x / y);\r\n    }\r\n\r\n    `;\r\n}\r\n\r\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\r\n  const glsl = getGlsl(version);\r\n  return `\r\n  void main() {\r\n    int indices[${outputShapeLength}];\r\n    toVec(TexCoords, indices);\r\n    vec4 result = vec4(process(indices));\r\n    ${glsl.output} = result;\r\n  }\r\n  `;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\r\n\r\n/**\r\n * GLSL Library responsible for vec routines\r\n * Vec is an varible length int array. The length is fixed at the time of\r\n * generating the library functions from the dimensions of the output.\r\n */\r\nexport class VecGlslLib extends GlslLib {\r\n  constructor(context: GlslContext) {\r\n    super(context);\r\n  }\r\n  getCustomTypes(): {[name: string]: string} {\r\n    return {};\r\n  }\r\n  getFunctions(): {[name: string]: GlslLibRoutine} {\r\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\r\n  }\r\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\r\n    const result: {[name: string]: GlslLibRoutine} = {};\r\n    for (const name in nameOp) {\r\n      const fname = `${name}Vec`;\r\n      let assignmentBlock = '';\r\n      for (let i = 0; i < rank; ++i) {\r\n        assignmentBlock += `\r\n          dest[${i}] ${nameOp[name]} src[${i}];\r\n          `;\r\n      }\r\n      const body = `\r\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\r\n          ${assignmentBlock}\r\n        }\r\n        `;\r\n      result[fname] = new GlslLibRoutine(body);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let assignmentBlock = '';\r\n    for (let i = 0; i < rank; ++i) {\r\n      assignmentBlock += `\r\n        dest[${i}] = src[${i}];\r\n        `;\r\n    }\r\n    const body = `\r\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\r\n        ${assignmentBlock}\r\n      }\r\n      `;\r\n    return {copyVec: new GlslLibRoutine(body)};\r\n  }\r\n\r\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let block = `\r\n        if(index < 0)\r\n            index =${rank} + index;\r\n        if (index == 0)\r\n            m[0] = value;\r\n        `;\r\n    for (let i = 1; i < rank - 1; ++i) {\r\n      block += `\r\n        else if (index == ${i})\r\n            m[${i}] = value;\r\n            `;\r\n    }\r\n    block += `\r\n        else\r\n            m[${rank - 1}] = value;\r\n        `;\r\n    const body = `\r\n      void setVecItem(out int m[${rank}], int index, int value) {\r\n        ${block}\r\n      }\r\n        `;\r\n    return {setVecItem: new GlslLibRoutine(body)};\r\n  }\r\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\r\n    const outputLayout = this.context.outputTextureLayout;\r\n    const rank = outputLayout.shape.length;\r\n    let block = `\r\n        if(index < 0)\r\n            index = ${rank} + index;\r\n        if (index == 0)\r\n            return m[0];\r\n      `;\r\n    for (let i = 1; i < rank - 1; ++i) {\r\n      block += `\r\n        else if (index == ${i})\r\n            return m[${i}];\r\n      `;\r\n    }\r\n    block += `\r\n        else\r\n            return m[${rank - 1}];\r\n        `;\r\n    const body = `\r\n      int getVecItem(int m[${rank}], int index) {\r\n        ${block}\r\n      }\r\n    `;\r\n    return {getVecItem: new GlslLibRoutine(body)};\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceHandler} from '../../backend';\r\nimport {Logger} from '../../instrument';\r\nimport {Tensor} from '../../tensor';\r\nimport {ShapeUtil} from '../../util';\r\nimport {createPackProgramInfoLoader} from './ops/pack';\r\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\r\n\r\nimport {encodeAsUint8} from './ops/uint8-encode';\r\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\r\nimport {WebGLSessionHandler} from './session-handler';\r\nimport {Encoder} from './texture-data-encoder';\r\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\r\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\r\n\r\nconst getProgramInfoUniqueKey =\r\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\r\n      const inputs =\r\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\r\n              .join('_');\r\n      let key = programInfo.name;\r\n      if (programInfo.cacheHint) {\r\n        key += '[' + programInfo.cacheHint + ']';\r\n      }\r\n      key += ':' + inputs;\r\n      return key;\r\n    };\r\n\r\nexport class WebGLInferenceHandler implements InferenceHandler {\r\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  constructor(public session: WebGLSessionHandler) {\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n\r\n  /**\r\n   * @returns [width, height]\r\n   */\r\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\r\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\r\n  }\r\n\r\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\r\n    if (inputs.length < program.inputNames.length) {\r\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\r\n    }\r\n    if (program.inputNames.length !== program.inputTypes.length) {\r\n      throw new Error('input names size does not match input types');\r\n    }\r\n\r\n    // create texture info for input\r\n    const inputTextureDatas: TextureData[] = [];\r\n    for (let i = 0; i < program.inputNames.length; ++i) {\r\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\r\n    }\r\n\r\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\r\n    let artifact = this.session.programManager.getArtifact(key);\r\n    const programInfo = artifact ?\r\n        artifact.programInfo :\r\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\r\n                                                                    (program as ProgramInfo));\r\n\r\n    // create texture info for output\r\n    const outputTextureLayout = createTextureLayoutFromTextureType(\r\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\r\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\r\n\r\n    if (!artifact) {\r\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\r\n      this.session.programManager.setArtifact(key, artifact);\r\n    }\r\n\r\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\r\n    return outputTextureData;\r\n  }\r\n\r\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\r\n    const outputTextureData = this.executeProgram(program, inputs);\r\n    return outputTextureData.tensor;\r\n  }\r\n\r\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\r\n    // input should match\r\n    for (let i = 0; i < inputs.length; ++i) {\r\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\r\n        throw new Error(`input[${i}] property packed inconsistent`);\r\n      }\r\n    }\r\n\r\n    // output should match\r\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\r\n      throw new Error('output property packed inconsistent');\r\n    }\r\n\r\n    this.session.programManager.run(artifact, inputs, output);\r\n  }\r\n\r\n  /**\r\n   * Create a TextureData object from a tensor.\r\n   * Usage = Encoder.Usage.UploadOnly.\r\n   * If a related texture data is found in cache, returns it;\r\n   * Otherwise:\r\n   *   Creates a new texture layout if not provided;\r\n   *   Creates WebGLTexture with the layout;\r\n   *   Upload tensor data to the texture;\r\n   *   Creates a texture data object associated with the given tensor.\r\n   * @param tensor the tensor with data to upload\r\n   */\r\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\r\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\r\n\r\n    if (!td) {\r\n      // check if we have texture data in different type\r\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\r\n      if (td) {\r\n        if (textureType === TextureType.packed) {\r\n          return this.pack(td);\r\n        } else {\r\n          return this.unpack(td);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!td) {\r\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\r\n\r\n      if (textureType === TextureType.packedLastDimension) {\r\n        const group = 1;\r\n        const channels = 4;\r\n        const shape = tensor.dims;\r\n        if (shape.length === 4) {\r\n          // pre-processing for kernel data of Conv.\r\n          //\r\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\r\n          // 1. implement texture based const-folding\r\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\r\n          // 3. run the program before dotProduct.\r\n          //\r\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\r\n          const adjustedLayout =\r\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\r\n          let buffer = tensor.numberData;\r\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\r\n            const numFeatureMaps = shape[0];\r\n            const oldRowSize = shape[1] * shape[2] * shape[3];\r\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\r\n            const newSize = numFeatureMaps * newRowSize;\r\n            buffer = new Float32Array(newSize);\r\n            for (let f = 0; f < numFeatureMaps; ++f) {\r\n              const oldOffset = f * oldRowSize;\r\n              const newOffset = f * newRowSize + f % group * oldRowSize;\r\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\r\n            }\r\n          }\r\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\r\n        }\r\n      }\r\n\r\n      if (textureType === TextureType.packed) {\r\n        const unpackedTextureLayout =\r\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\r\n        const unpackedTextureData = this.createTextureData(\r\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\r\n        td = this.pack(unpackedTextureData);\r\n      } else {\r\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\r\n      }\r\n    }\r\n    return td;\r\n  }\r\n\r\n  /**\r\n   * Create a TextureData object using the given data and bind to the given tensor.\r\n   * Usage = Encoder.Usage.UploadOnly.\r\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\r\n   * implementation by Graph.Transformer\r\n   * @param dataType the tensor data type\r\n   * @param data the actual data to upload\r\n   * @param tensor the tensor to bind. tensor's data is ignored.\r\n   */\r\n  createTextureDataFromLayoutBindTensor(\r\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\r\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\r\n  }\r\n\r\n  private createTextureData(\r\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\r\n      usage?: Encoder.Usage): TextureData {\r\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\r\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\r\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\r\n  }\r\n\r\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\r\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\r\n    const newTextureLayout: TextureLayout = {\r\n      channels: inputTD.channels,\r\n      height: inputTD.height,\r\n      width: inputTD.width,\r\n      // handle reshaping into scalar Tensors\r\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\r\n      strides: ShapeUtil.computeStrides(reshapedDims),\r\n      unpackedShape: reshapedDims,\r\n    };\r\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\r\n    return newTextureData.tensor;\r\n  }\r\n\r\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\r\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\r\n\r\n    // check if the reshape is 'cheap'\r\n    if (isReshapeCheap(input.dims, reshapedDims)) {\r\n      const newTextureLayout: TextureLayout = {\r\n        channels: inputTD.channels,\r\n        height: inputTD.height,\r\n        width: inputTD.width,\r\n        // handle reshaping into scalar Tensors\r\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\r\n        strides: ShapeUtil.computeStrides(reshapedDims),\r\n        unpackedShape: reshapedDims,\r\n        isPacked: true\r\n      };\r\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\r\n      return newTextureData.tensor;\r\n    }\r\n\r\n    const squeezedInputShape = processDims3D(input.dims);\r\n    const squeezedOutputShape = processDims3D(reshapedDims);\r\n\r\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\r\n    const squeezedOutputTensor = this.run(\r\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\r\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\r\n    return outputTensor;\r\n  }\r\n\r\n  private createTextureDataFromTexture(\r\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\r\n    const textureData: TextureData = {\r\n      ...layout,\r\n      tensor: tensor ||\r\n          new Tensor(\r\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\r\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\r\n      texture\r\n    };\r\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\r\n    return textureData;\r\n  }\r\n\r\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\r\n    return this.session.isInitializer(tensorId) ?\r\n        this.session.getTextureData(tensorId, isPacked) :\r\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\r\n  }\r\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\r\n    if (this.session.isInitializer(tensorId)) {\r\n      this.session.setTextureData(tensorId, td, isPacked);\r\n    } else {\r\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\r\n    }\r\n  }\r\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\r\n    return !!this.getTextureData(tensor.dataId, isPacked);\r\n  }\r\n\r\n  dispose(): void {\r\n    this.session.textureManager.clearActiveTextures();\r\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n\r\n  readTexture(textureData: TextureData): Tensor.NumberType {\r\n    if (textureData.isPacked) {\r\n      return this.readTexture(this.unpack(textureData));\r\n    }\r\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\r\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\r\n    }\r\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\r\n  }\r\n\r\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\r\n    if (textureData.isPacked) {\r\n      return this.readTextureAsync(this.unpack(textureData));\r\n    }\r\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\r\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\r\n    }\r\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\r\n  }\r\n\r\n  pack(input: TextureData): TextureData {\r\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\r\n    return outputTextureData;\r\n  }\r\n\r\n  unpack(input: TextureData): TextureData {\r\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\r\n    return outputTextureData;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {OpSet} from '../../opset';\r\n\r\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\r\nimport * as binaryOps from './ops/binary-op';\r\nimport {concat, parseConcatAttributes} from './ops/concat';\r\nimport {conv, parseConvAttributes} from './ops/conv';\r\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\r\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\r\nimport {gather, parseGatherAttributes} from './ops/gather';\r\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\r\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\r\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\r\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\r\nimport {pad, parsePadAttributes} from './ops/pad';\r\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\r\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\r\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\r\nimport {globalMaxPool} from './ops/pool';\r\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\r\nimport {parseReduceAttributes} from './ops/reduce';\r\nimport {reshape} from './ops/reshape';\r\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\r\nimport {shape} from './ops/shape';\r\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\r\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\r\nimport {parseSplitAttributes, split} from './ops/split';\r\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\r\nimport {sum} from './ops/sum';\r\nimport {tile} from './ops/tile';\r\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\r\nimport * as unaryOps from './ops/unary-op';\r\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\r\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\r\n\r\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\r\n  ['Abs', '', '6+', unaryOps.abs],\r\n  ['Acos', '', '7+', unaryOps.acos],\r\n  ['Add', '', '7+', binaryOps.add],\r\n  ['And', '', '7+', binaryOps.and],\r\n  ['Asin', '', '7+', unaryOps.asin],\r\n  ['Atan', '', '7+', unaryOps.atan],\r\n  // TODO: support new attributes for AveragePool-10\r\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\r\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\r\n  ['Ceil', '', '6+', unaryOps.ceil],\r\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\r\n  ['Concat', '', '4+', concat, parseConcatAttributes],\r\n  ['Conv', '', '1+', conv, parseConvAttributes],\r\n  ['Cos', '', '7+', unaryOps.cos],\r\n  ['Div', '', '7+', binaryOps.div],\r\n  ['Dropout', '', '7+', unaryOps.identity],\r\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\r\n  ['Equal', '', '7+', binaryOps.equal],\r\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\r\n  ['Exp', '', '6+', unaryOps.exp],\r\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\r\n  ['Floor', '', '6+', unaryOps.floor],\r\n  ['Gather', '', '1+', gather, parseGatherAttributes],\r\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\r\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\r\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\r\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\r\n  ['Greater', '', '7+', binaryOps.greater],\r\n  ['Identity', '', '1+', unaryOps.identity],\r\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\r\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\r\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\r\n  ['Less', '', '7+', binaryOps.less],\r\n  ['Log', '', '6+', unaryOps.log],\r\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\r\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\r\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\r\n  ['Mul', '', '7+', binaryOps.mul],\r\n  ['Neg', '', '6+', unaryOps.neg],\r\n  ['Not', '', '1+', unaryOps.not],\r\n  ['Or', '', '7+', binaryOps.or],\r\n  ['Pad', '', '2-10', pad, parsePadAttributes],\r\n  ['Pow', '', '7+', binaryOps.pow],\r\n  ['PRelu', '', '7+', binaryOps.pRelu],\r\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\r\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\r\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\r\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\r\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\r\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\r\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\r\n  ['Relu', '', '6+', unaryOps.relu],\r\n  ['Reshape', '', '5+', reshape],\r\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\r\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\r\n  ['Shape', '', '1+', shape],\r\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\r\n  ['Sin', '', '7+', unaryOps.sin],\r\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\r\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\r\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\r\n  // 'Split' operator has an optional attribute 'split'\r\n  // this attribute determines how the specified axis of input data is split.\r\n  // When the attribute is missing, we need the count of number of outputs\r\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\r\n  ['Split', '', '2+', split, parseSplitAttributes],\r\n  ['Sqrt', '', '6+', unaryOps.sqrt],\r\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\r\n  ['Sub', '', '7+', binaryOps.sub],\r\n  ['Sum', '', '6+', sum],\r\n  ['Tan', '', '7+', unaryOps.tan],\r\n  ['Tanh', '', '6+', unaryOps.tanh],\r\n  ['Tile', '', '6+', tile],\r\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\r\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\r\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\r\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\r\n  ['Xor', '', '7+', binaryOps.xor],\r\n];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\r\n  epsilon: number;\r\n  momentum: number;\r\n  spatial: number;\r\n}\r\n\r\nconst batchNormalizationProgramMetadata = {\r\n  name: 'BatchNormalization',\r\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\r\n  inputTypes:\r\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\r\n};\r\n\r\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...batchNormalizationProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\r\n    (node: Graph.Node): BatchNormalizationAttributes => {\r\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\r\n      const momentum = node.attributes.getFloat('momentum', 0.9);\r\n      const spatial = node.attributes.getInt('spatial', 1);\r\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\r\n    };\r\n\r\nconst createBatchNormalizationProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\r\n        ProgramInfo => {\r\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n          const rank = inputs[0].dims.length;\r\n          const [scaleWidth, scaleHeight] =\r\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\r\n          const shaderSource = `\r\n  float process(int[${rank}] indices) {\r\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\r\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\r\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\r\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\r\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\r\n\r\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\r\n  }`;\r\n          return {\r\n            ...batchNormalizationProgramMetadata,\r\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 5) {\r\n    throw new Error('BatchNormalization requires 5 inputs.');\r\n  }\r\n\r\n  const X = inputs[0];\r\n  const scale = inputs[1];\r\n  const B = inputs[2];\r\n  const mean = inputs[3];\r\n  const var_ = inputs[4];\r\n\r\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\r\n  // other inputs can have only one dimensions\r\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\r\n      var_.dims.length !== 1) {\r\n    throw new Error('invalid input shape.');\r\n  }\r\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\r\n      var_.dims[0] !== X.dims[1]) {\r\n    throw new Error('invalid input shape.');\r\n  }\r\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\r\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\r\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\r\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\n\r\nexport function glslAdd(): GlslValueFunction {\r\n  const name = 'add_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a + b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 + v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslDiv(): GlslValueFunction {\r\n  const name = 'div_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a / b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 / v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslMul(): GlslValueFunction {\r\n  const name = 'mul_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a * b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 * v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSub(): GlslValueFunction {\r\n  const name = 'sub_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a - b;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return v1 - v2;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslEqual(): GlslValueFunction {\r\n  const name = 'equal_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a == b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4(equal(v1, v2));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslGreater(): GlslValueFunction {\r\n  const name = 'greater_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a > b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4( v1.r > v2.r ,\r\n      v1.g > v2.g,\r\n      v1.b > v2.b,\r\n      v1.a > v2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLess(): GlslValueFunction {\r\n  const name = 'less_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float(a < b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4( v1.r < v2.r ,\r\n                v1.g < v2.g,\r\n                v1.b < v2.b,\r\n                v1.a < v2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslAnd(): GlslValueFunction {\r\n  const name = 'and_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) && bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r && b2.r ,\r\n                b1.g && b2.g,\r\n                b1.b && b2.b,\r\n                b1.a && b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslOr(): GlslValueFunction {\r\n  const name = 'or_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) || bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r || b2.r ,\r\n                b1.g || b2.g,\r\n                b1.b || b2.b,\r\n                b1.a || b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslXor(): GlslValueFunction {\r\n  const name = 'xor_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return float( bool(a) ^^ bool(b) );\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    bvec4 b1 = bvec4(v1);\r\n    bvec4 b2 = bvec4(v2);\r\n    return vec4( b1.r ^^ b2.r ,\r\n                b1.g ^^ b2.g,\r\n                b1.b ^^ b2.b,\r\n                b1.a ^^ b2.a );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslPow(): GlslValueFunction {\r\n  return glslBuiltinBinary('pow');\r\n}\r\nexport function glslPRelu(): GlslValueFunction {\r\n  const name = 'prelu_';\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return a < 0.0 ? a * b: a;\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return vec4(\r\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\r\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\r\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\r\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\r\n      );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\r\n  const name = `${fname}_`;\r\n  const body = `\r\n  float ${name}(float a, float b) {\r\n    return ${fname}(a, b);\r\n  }\r\n  vec4 ${name}(vec4 v1, vec4 v2) {\r\n    return ${fname}(v1, v2);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\nconst createBinaryProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\r\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\r\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n      return {\r\n        name: glslFunc.name,\r\n        inputNames: ['A', 'B'],\r\n        inputTypes: [textureType, textureType],\r\n        cacheHint: cacheKey,\r\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\r\n      };\r\n    };\r\n\r\nconst createBinaryProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\r\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\r\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\r\n      let outputShape = inputs[0].dims;\r\n\r\n      const usePackedTexture = handler.session.pack;\r\n\r\n      if (isBroadcast) {\r\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\r\n        if (!calculatedShape) {\r\n          throw new Error('Can\\'t perform binary op on the given tensors');\r\n        }\r\n        outputShape = calculatedShape;\r\n        const outputRank = outputShape.length;\r\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\r\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\r\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\r\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\r\n\r\n        const glsl = getGlsl(handler.session.backend.glContext.version);\r\n        const shaderSource = usePackedTexture ? `\r\n      ${glslFunc.body}\r\n      void main() {\r\n        vec4 a = getAAtOutCoords();\r\n        vec4 b = getBAtOutCoords();\r\n        vec4 result = ${glslFunc.name}(a, b);\r\n        ${glsl.output} = result;\r\n      }` :\r\n                                                `\r\n      ${glslFunc.body}\r\n      float process(int indices[${outputRank}]) {\r\n        int aindices[${aRank}];\r\n        int bindices[${bRank}];\r\n        ${aBcast}\r\n        ${bBcast}\r\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\r\n      }`;\r\n\r\n        return {\r\n          name: glslFunc.name,\r\n          inputNames: ['A', 'B'],\r\n          inputTypes: [textureType, textureType],\r\n          output: {dims: outputShape, type: outputTensorType, textureType},\r\n          shaderSource,\r\n          hasMain: usePackedTexture\r\n        };\r\n      }\r\n      const glsl = getGlsl(handler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n    ${glslFunc.body}\r\n    void main() {\r\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\r\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\r\n      vec4 result = ${glslFunc.name}(v1, v2);\r\n      ${glsl.output} = result;\r\n    }\r\n    `;\r\n\r\n      return {\r\n        name: glslFunc.name,\r\n        inputNames: ['A', 'B'],\r\n        inputTypes: [textureType, textureType],\r\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\r\n\r\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\r\n\r\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\r\n\r\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\r\n\r\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\r\n\r\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\r\n\r\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\r\n\r\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\r\n\r\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\r\n\r\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\r\n\r\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\r\n\r\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\nimport {ConcatAttributes} from './concat';\r\n\r\nimport {getChannels, unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\r\n  name: 'Concat (packed)',\r\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\r\n  inputTypes: Array(inputCount).fill(TextureType.packed),\r\n  cacheHint\r\n});\r\n\r\nconst createPackedConcatProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\r\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\r\n      }\r\n      if (axis < 0) {\r\n        axis = inputShape.length + axis;\r\n      }\r\n      // ensure all of the non-concatenated axes match each other\r\n      // calculate the shape of the output tensor while we do that\r\n      const outputShape = inputShape.slice(0);\r\n      for (let i = 1; i < inputs.length; i++) {\r\n        const dataNShape = inputs[i].dims.slice();\r\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\r\n          // add to the placeholder for computing output shape\r\n          if (axisIndex === axis) {\r\n            outputShape[axis] += dataNShape[axisIndex];\r\n          }\r\n          // ensure all non-cancatenated axes match each other\r\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\r\n            throw new Error('non concat dimensions must match');\r\n          }\r\n        }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const coords = getChannels('coords', rank);\r\n      const dtype = getCoordsDataType(rank);\r\n      const unpackChannel = unpackFromChannel();\r\n\r\n      const shapes = inputs.map(i => i.dims);\r\n      const channels = getGlChannels(rank);\r\n      const offsets: number[] = new Array(shapes.length - 1);\r\n\r\n      offsets[0] = shapes[0][axis];\r\n      for (let i = 1; i < offsets.length; i++) {\r\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\r\n      }\r\n\r\n      const channel = channels[axis];\r\n      const lastChannels = channels.slice(-2);\r\n      const allChannels = channels.join();\r\n\r\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\r\n        return getChannel(\r\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\r\n        }`;\r\n      for (let i = 1; i < offsets.length; i++) {\r\n        const shift = offsets[i - 1];\r\n        getValueSnippet += `\r\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\r\n              return getChannel(\r\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\r\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\r\n            }`;\r\n      }\r\n      const lastIndex = offsets.length;\r\n      const shift = offsets[offsets.length - 1];\r\n      getValueSnippet += `\r\n            return getChannel(\r\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\r\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\r\n\r\n      const glsl = getGlsl(handler.session.backend.glContext.version);\r\n\r\n      const shaderSource = `\r\n          ${unpackChannel}\r\n          float getValue(${channels.map(x => 'int ' + x)}) {\r\n            ${getValueSnippet}\r\n          }\r\n\r\n          void main() {\r\n            ${dtype} coords = getOutputCoords();\r\n            int lastDim = coords.${channels[rank - 1]};\r\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\r\n            coords.${channels[rank - 2]} = lastDim;\r\n\r\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\r\n\r\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\r\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\r\n              result.g = getValue(${coords});\r\n            }\r\n\r\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\r\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\r\n              result.a = getValue(${coords});\r\n            }\r\n\r\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\r\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\r\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\r\n              result.b = getValue(${coords});\r\n            }\r\n            ${glsl.output} = result;\r\n          }\r\n        `;\r\n\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true,\r\n      };\r\n    };\r\n\r\nexport const createPackedConcatProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\r\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\r\n  const channelIdx = channels.indexOf(channel);\r\n  const res = channels.map((c, idx) => {\r\n    if (idx === channelIdx) {\r\n      return `${c} - ${shift}`;\r\n    } else {\r\n      return c;\r\n    }\r\n  });\r\n  return res.join();\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\r\n\r\nexport interface ConcatAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nexport const concat: OperatorImplementation<ConcatAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\r\n        const output =\r\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n        return [output];\r\n      } else {\r\n        const output =\r\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n        return [output];\r\n      }\r\n    };\r\n\r\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\r\n  name: 'Concat',\r\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\r\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\r\n  cacheHint\r\n});\r\n\r\nconst createUnpackedConcatProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\r\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\r\n      }\r\n      if (axis < 0) {\r\n        axis = inputShape.length + axis;\r\n      }\r\n      // ensure all of the non-concatenated axes match each other\r\n      // calculate the shape of the output tensor while we do that\r\n      const outputShape = inputShape.slice(0);\r\n      for (let i = 1; i < inputs.length; i++) {\r\n        const dataNShape = inputs[i].dims.slice();\r\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\r\n          // add to the placeholder for computing output shape\r\n          if (axisIndex === axis) {\r\n            outputShape[axis] += dataNShape[axisIndex];\r\n          }\r\n          // ensure all non-cancatenated axes match each other\r\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\r\n            throw new Error('non concat dimensions must match');\r\n          }\r\n        }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n\r\n      const sizeInConcatAxis = new Array<number>(inputs.length);\r\n      let previousSum = 0;\r\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\r\n        previousSum += inputs[i].dims[axis];\r\n        sizeInConcatAxis[i] = previousSum;\r\n      }\r\n\r\n      let getTextureIndexWhereDataResidesMethod = '';\r\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\r\n      if (inputs.length < 5) {\r\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\r\n      } else {\r\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\r\n      }\r\n\r\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\r\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\r\n      const shaderSource = `\r\n        ${fetchDataFromCorrectTextureMethod}\r\n        ${getSizeInConcatAxisValueFromIndexMethod}\r\n        ${getTextureIndexWhereDataResidesMethod}\r\n        float process(int indices[${rank}]) {\r\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\r\n\r\n          if(textureIndex != 0) {\r\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\r\n          }\r\n\r\n          return fetchDataFromCorrectTexture(textureIndex, indices);\r\n        }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n      };\r\n    };\r\n\r\nconst createUnpackedConcatProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\r\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\r\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\r\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\r\n`);\r\n  return `int getTextureWhereDataResides(int index) {\r\n      ${searchAxis.join('')}\r\n    }`;\r\n};\r\n\r\n// TODO: Implement BinarySearch in GLSL\r\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\r\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\r\n\r\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\r\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\r\n  for (let i = 0; i < numberOfTensors; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\r\n    } else if (i === numberOfTensors - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return _X${i}(indices); }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\r\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\r\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\r\n    } else if (i === sizeInConcatAxis.length - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return ${sizeInConcatAxis[i]}; }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\r\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length < 1) {\r\n    throw new Error('too few inputs');\r\n  }\r\n\r\n  const inputType = inputs[0].type;\r\n  const inputDimensionality = inputs[0].dims.length;\r\n\r\n  // TODO: Support string concat\r\n  if (inputType === 'string') {\r\n    throw new Error('string tensor is not supported yet');\r\n  }\r\n\r\n  for (const input of inputs) {\r\n    // make sure types of all inputs match\r\n    if (input.type !== inputType) {\r\n      throw new Error('input tensors should be one type');\r\n    }\r\n\r\n    // make sure the dimensionality of all inputs are the same\r\n    if (input.dims.length !== inputDimensionality) {\r\n      throw new Error('input tensors should have the same shape');\r\n    }\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../../instrument';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {calculateOutputShape, ConvAttributes} from './conv';\r\nimport {getActicationSnippet} from './fuse-utils';\r\n\r\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\r\n  name: 'GroupedConv',\r\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.unpacked],\r\n  cacheHint\r\n});\r\n\r\nconst createUnpackedGroupedConvProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\r\n     attributes: ConvAttributes): ProgramInfo => {\r\n      const hasBias = inputs.length > 2;\r\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\r\n      const xShape = inputs[0].dims.slice();\r\n      const wShape = inputs[1].dims.slice();\r\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\r\n      Logger.verbose(\r\n          'GroupedConv',\r\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\r\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\r\n      const outputShape =\r\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\r\n\r\n      const shaderSource = `\r\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\r\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\r\n  ${activationFunction}\r\n  void main() {\r\n    ivec4 coords = getOutputCoords();\r\n    int batch = coords.x;\r\n    int output_channel = coords.y;\r\n    ivec2 xRCCorner = coords.zw * strides - pads;\r\n    int group_id = output_channel / ${outputChannelsPerGroup};\r\n\r\n    float value = 0.0;\r\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\r\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\r\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\r\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\r\n\r\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\r\n          continue;\r\n        }\r\n\r\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\r\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\r\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\r\n            continue;\r\n          }\r\n\r\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\r\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\r\n          value += xVal*wVal;\r\n        }\r\n      }\r\n    }\r\n    ${processBias}\r\n    ${applyActivation}\r\n    ${glsl.output} = vec4(value, .0, .0, .0);\r\n  }\r\n`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n        hasMain: true,\r\n      };\r\n    };\r\n\r\nexport const createUnpackedGroupedConvProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\r\n        ProgramInfoLoader => {\r\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\r\n          return {\r\n            ...metadata,\r\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\r\n          };\r\n        };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {calculateOutputShape, ConvAttributes} from './conv';\r\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\r\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\r\n\r\nexport const conv2DPackedPointwise =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\r\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\r\n\r\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\r\n      const matmulOutput = inferenceHandler.run(\r\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\r\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\r\n    };\r\n\r\nexport const conv2DPacked =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n\r\n      // run im2col\r\n      const im2colOutput = inferenceHandler.run(\r\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\r\n          [inputs[0]]);\r\n\r\n      // reshape kernel\r\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\r\n\r\n      // run matmul\r\n      const matmulInputs =\r\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\r\n      const matmulOutput = inferenceHandler.run(\r\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\r\n\r\n      // reshape output\r\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\r\n      return outputReshaped;\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {InferenceHandler} from '../../../backend';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {PoolConvUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\r\nimport {conv2DPacked} from './conv-pack';\r\nimport {createDotProductProgramInfoLoader} from './dot-product';\r\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\r\nimport {createIm2ColProgramInfoLoader} from './im2col';\r\nimport {createMatmulProgramInfoLoader} from './matmul';\r\n\r\n\r\nexport const calculateOutputShape =\r\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\r\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\r\n      const batchSize = inputShape[0];\r\n      const inputSpatialShape = inputShape.slice(2);\r\n      const spatialRank = inputSpatialShape.length;\r\n      const outChannels = kernelShape[0];\r\n      const kernelSpatialShape = kernelShape.slice(2);\r\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\r\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\r\n      const outputSpatialShape =\r\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\r\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\r\n      return outputShape;\r\n    };\r\n\r\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\r\n  readonly autoPad: string;\r\n  readonly dilations: readonly number[];\r\n  readonly group: number;\r\n  readonly kernelShape: readonly number[];\r\n  readonly pads: readonly number[];\r\n  readonly strides: readonly number[];\r\n}\r\n\r\nexport const conv: OperatorImplementation<ConvAttributes> =\r\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\r\n      return conv2d(inferenceHandler, inputs, attributes);\r\n    };\r\n\r\nconst conv2d: OperatorImplementation<ConvAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\r\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\r\n      const packMode = inferenceHandler.session.pack;\r\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\r\n      if (adjustedAttributes.group > 1) {\r\n        const result = inferenceHandler.run(\r\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\r\n        return [result];\r\n      } else if (isPointwise && packMode) {\r\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\r\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\r\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\r\n      } else {\r\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\r\n      }\r\n    };\r\n\r\nconst conv2DUnpackedPointwise =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\r\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\r\n\r\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\r\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\r\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\r\n    };\r\n\r\nconst conv2DUnpacked =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const outputShape =\r\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\r\n      const xIm2Col = inferenceHandler.run(\r\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\r\n\r\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\r\n      const output = inferenceHandler.run(\r\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\r\n      return output;\r\n    };\r\n\r\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\r\n  const kernelShape = attributes.kernelShape.slice();\r\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\r\n  if (attributes.kernelShape.length === 0) {\r\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\r\n      kernelShape.push(inputs[1].dims[i]);\r\n    }\r\n  }\r\n  const pads = attributes.pads.slice();\r\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\r\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\r\n\r\n  // always return a new object so does not modify the original attributes\r\n  const newAttributes: T = Object.assign({}, attributes);\r\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\r\n  return newAttributes;\r\n};\r\n\r\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\r\n  const attributes = node.attributes;\r\n  const activationAttributes = parseInternalActivationAttributes(attributes);\r\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\r\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\r\n  const dilations = attributes.getInts('dilations', [1, 1]);\r\n  const group = attributes.getInt('group', 1);\r\n  const kernelShape = attributes.getInts('kernel_shape', []);\r\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\r\n  const strides = attributes.getInts('strides', [1, 1]);\r\n\r\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\r\n  // Refer to the below link for all input checks\r\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\r\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\r\n    throw new Error('Conv requires 2 or 3 inputs');\r\n  }\r\n\r\n  // TODO : Need to add support for multi-dimensional conv\r\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\r\n    throw new Error('currently only support 2-dimensional conv');\r\n  }\r\n\r\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\r\n  const dataChannel = inputs[0].dims[1];\r\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\r\n  if (dataChannel !== filterInChannel) {\r\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\r\n  }\r\n\r\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\r\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\r\n    throw new Error('invalid bias');\r\n  }\r\n\r\n  const spatialRank = inputs[0].dims.length - 2;\r\n  // wrong dilations dimension\r\n  if (attributes.dilations.length !== spatialRank) {\r\n    throw new Error(`dilations should be ${spatialRank}D`);\r\n  }\r\n\r\n  // Wrong strides dimension\r\n  if (attributes.strides.length !== spatialRank) {\r\n    throw new Error(`strides should be ${spatialRank}D`);\r\n  }\r\n\r\n  // Wrong pads dimension\r\n  if (attributes.pads.length !== spatialRank * 2) {\r\n    throw new Error(`pads should be ${spatialRank * 2}D`);\r\n  }\r\n\r\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\r\n  // (the first 2 dims are batch_size and channels)\r\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\r\n    throw new Error('invalid kernel shape');\r\n  }\r\n\r\n  // TODO : Need to add support for float64\r\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\r\n    throw new Error('Conv input(X,W) should be float tensor');\r\n  }\r\n\r\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\r\n    throw new Error('Conv input(bias) should be float tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nimport {transpose, TransposeAttributes} from './transpose';\r\n\r\nexport interface DepthToSpaceAttributes {\r\n  mode: 'DCR'|'CRD';\r\n  blocksize: number;\r\n}\r\n\r\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const blocksize = attributes.blocksize;\r\n      const blocksizeSqr = blocksize * blocksize;\r\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\r\n      const firstReshapeShape = attributes.mode === 'DCR' ?\r\n          [\r\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\r\n            inputs[0].dims[3]\r\n          ] :\r\n          [\r\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\r\n            inputs[0].dims[3]\r\n          ];\r\n\r\n      // const transpose = new WebGLTranspose();\r\n      // const attributes = new Attribute(undefined);\r\n      // attributes.set('perm', 'ints', transposePerm);\r\n      // transpose.initialize(attributes);\r\n\r\n      // First reshape\r\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\r\n\r\n      // transpose\r\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\r\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\r\n\r\n      // Second reshape\r\n      const secondReshapeShape = [\r\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\r\n        inputs[0].dims[3] * blocksize\r\n      ];\r\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\r\n      return [result];\r\n    };\r\n\r\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\r\n    (node: Graph.Node): DepthToSpaceAttributes => {\r\n      // processing node attributes\r\n      const blocksize = node.attributes.getInt('blocksize');\r\n      if (blocksize < 1) {\r\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\r\n      }\r\n      const mode = node.attributes.getString('mode', 'DCR');\r\n      if (mode !== 'DCR' && mode !== 'CRD') {\r\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\r\n      }\r\n      return {mode, blocksize};\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (inputs.length !== 1) {\r\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\r\n  }\r\n\r\n  // Input has to be a 4-D tensor\r\n  // TODO: Support string depth-to-space.\r\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\r\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\r\nimport {calculateIm2ColDims} from './im2col';\r\n\r\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\r\n  name: 'ConvDotProduct',\r\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.packedLastDimension],\r\n  cacheKey: attributes.activationCacheKey\r\n});\r\n\r\nconst createDotProductProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\r\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\r\n      const xshape = inputs[0].dims;\r\n      const kshape = inputs[1].dims;\r\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\r\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\r\n      const [kWidth, kHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\r\n\r\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\r\n      const [im2colWidth, im2colHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\r\n      const rank = outputShape.length;\r\n\r\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\r\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\r\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n${activationFunction}\r\nfloat process(int indices[${rank}]) {\r\n  int b[1];\r\n  b[0] = indices[1];\r\n  int im2col[4];\r\n  im2col[0] = indices[0];\r\n  im2col[1] = indices[2];\r\n  im2col[2] = indices[3];\r\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\r\n          im2colStrides[2]};\r\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\r\n  float value = ${initValue};\r\n  for (int i = 0; i < ${sharedDim}; ++i) {\r\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\r\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\r\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\r\n    ++im2colOffset;\r\n    ++kernelOffset;\r\n  }\r\n  ${applyActivation}\r\n  return value;\r\n}`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nexport const createDotProductProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\r\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\r\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\r\n      return {\r\n        ...metadata,\r\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const flatten: OperatorImplementation<number> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\r\n      validateInputs(inputs, axis);\r\n\r\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\r\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\r\n    };\r\n\r\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\r\n    node.attributes.getInt('axis', 1);  // default axis is 1\r\n\r\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Flatten requires 1 input.');\r\n  }\r\n\r\n  const r = inputs[0].dims.length;\r\n  if (r === 0) {\r\n    throw new Error('scalar tensor is not supported.');\r\n  }\r\n\r\n  if (axis < -r || axis > r) {\r\n    throw new Error('Invalid axis');\r\n  }\r\n\r\n  // TODO: Support string type\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('string tensor is not supported.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Attribute} from '../../../attribute';\r\nimport {GlslValueFunction} from '../glsl-definitions';\r\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\r\n\r\nexport interface InternalActivationAttributes {\r\n  readonly activation: string;\r\n  readonly clipMin?: number;\r\n  readonly clipMax?: number;\r\n  readonly activationCacheKey: string;\r\n}\r\n\r\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\r\n  let func: GlslValueFunction;\r\n  switch (attributes.activation) {\r\n    case 'Relu':\r\n      func = glslRelu();\r\n      break;\r\n    case 'Sigmoid':\r\n      func = glslSigmoid();\r\n      break;\r\n    case 'Clip':\r\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\r\n      break;\r\n    // TODO: adding other activations that can be fused.\r\n    default:\r\n      return {activationFunction: '', applyActivation: ''};\r\n  }\r\n\r\n  const activationName = func.name;\r\n  const activationFunction = func.body;\r\n  const applyActivation = `value = ${activationName}_(value);`;\r\n  return {activationFunction, applyActivation};\r\n}\r\n\r\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\r\n  const activation = attributes.getString('__internal_activation', '');\r\n\r\n  if (activation === 'Clip') {\r\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\r\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\r\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\r\n  }\r\n  return {activation, activationCacheKey: activation};\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\ninterface GatherAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nexport const gather: OperatorImplementation<GatherAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes.axis);\r\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\r\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\r\n\r\nconst gatherProgramMetadata = {\r\n  name: 'Gather',\r\n  inputNames: ['A', 'B'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst createGatherProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      const indexDataShape = inputs[1].dims.slice();\r\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\r\n\r\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\r\n      const indexCopyOps: string[] = [];\r\n      for (let i = 0; i < outputShape.length; i++) {\r\n        // outputShape is divided into three parts: A, B, C\r\n        // |0        axis|  axis + indexDataShape.length |          end|\r\n        // |     A       |             B                 |      C      |\r\n        //\r\n        // inputIdx: [A, inputs[1][B], C]\r\n        if (i < axis) {  // A\r\n          outputShape[i] = inputShape[i];\r\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\r\n        } else {\r\n          if (i < axis + indexDataShape.length) {  // B\r\n            outputShape[i] = indexDataShape[i - axis];\r\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\r\n          } else {                                                       // C\r\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\r\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\r\n          }\r\n        }\r\n      }\r\n\r\n      const orank = outputShape.length || 1;\r\n      const irank = inputShape.length;\r\n      const iDrank = indexDataShape.length || 1;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${orank}]) {\r\n        int inputIdx[${irank}];\r\n        int indexDataIdx[${iDrank}];\r\n        indexDataIdx[0] = 0;\r\n        ${indexCopyOps.join('\\n        ')}\r\n        int idx = int(_B(indexDataIdx));\r\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\r\n        return _A(inputIdx);\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createGatherProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\r\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\r\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('Gather requires 2 inputs.');\r\n  }\r\n  const tensorRank = inputs[0].dims.length;\r\n  if (tensorRank < 1) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (axis < -tensorRank || axis > tensorRank - 1) {\r\n    throw new Error('Invalid axis.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invaid input type.');\r\n  }\r\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\r\n    throw new Error('Invaid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {GemmUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface GemmAttributes extends AttributeWithCacheKey {\r\n  transA: boolean;\r\n  transB: boolean;\r\n  alpha: number;\r\n  beta: number;\r\n  isOptionalC: boolean;  // in opset 11, C becomes optional\r\n}\r\n\r\nexport const gemm: OperatorImplementation<GemmAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\r\n  const transA = node.attributes.getInt('transA', 0) !== 0;\r\n  const transB = node.attributes.getInt('transB', 0) !== 0;\r\n  const alpha = node.attributes.getFloat('alpha', 1.0);\r\n  const beta = node.attributes.getFloat('beta', 1.0);\r\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\r\n};\r\n\r\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\r\n    parseGemmAttributes(node, false);\r\n\r\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\r\n    parseGemmAttributes(node, true);\r\n\r\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\r\n  const metadata = {\r\n    name: 'Gemm',\r\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\r\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                                      [TextureType.unpacked, TextureType.unpacked],\r\n    key: attributes.cacheKey\r\n  };\r\n\r\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\r\n};\r\n\r\nconst createGemmProgramInfo =\r\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\r\n      const aShape = inputs[0].dims.slice();\r\n      const bShape = inputs[1].dims.slice();\r\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\r\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\r\n      const outputShape = [M, N];\r\n      if (!outputShape) {\r\n        throw new Error('Can\\'t use gemm on the given tensors');\r\n      }\r\n      let sharedDim = aShape[aShape.length - 1];\r\n      let line = '';\r\n      if (attributes.transA) {\r\n        sharedDim = aShape[0];\r\n      }\r\n      if (attributes.transA && attributes.transB) {\r\n        line = 'value += _A_T(a) * _B_T(b);';\r\n      } else if (attributes.transA && !attributes.transB) {\r\n        line = 'value += _A_T(a) * _B(b);';\r\n      } else if (!attributes.transA && attributes.transB) {\r\n        line = 'value += _A(a) * _B_T(b);';\r\n      } else if (!attributes.transA && !attributes.transB) {\r\n        line = 'value += _A(a) * _B(b);';\r\n      }\r\n      const rank = outputShape.length;\r\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\r\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\r\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\r\n      const shaderSource = `\r\n      float process(int indices[${rank}]) {\r\n          int a[${rank}];\r\n          int b[${rank}];\r\n          ${declareC}\r\n\r\n          copyVec(indices, a);\r\n          copyVec(indices, b);\r\n          ${broadcastC}\r\n\r\n          float value = 0.0;\r\n          for (int k=0; k<${sharedDim}; ++k) {\r\n              a[${rank - 1}] = k;\r\n              b[${rank - 2}] = k;\r\n              ${line}\r\n          }\r\n\r\n          value = value * alpha;\r\n          ${calculateC}\r\n          return value;\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        variables: [\r\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\r\n        ],\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\r\n  if (!inputs) {\r\n    throw new Error('Input is missing');\r\n  }\r\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\r\n    throw new Error('Invaid input shape.');\r\n  }\r\n  if (!attributes.isOptionalC && inputs.length !== 3) {\r\n    throw new Error('Gemm requires 3 inputs');\r\n  }\r\n\r\n  // 'C' can be of dimensionality 1 or 2 only\r\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\r\n    throw new Error('Invalid input shape of C');\r\n  }\r\n\r\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\r\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\r\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n\r\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\r\n    throw new Error('Input types are mismatched');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {ConvAttributes} from './conv';\r\nimport {unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\r\n  name: 'Im2Col (packed)',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed],\r\n  cacheHint,\r\n});\r\n\r\nconst createPackedIm2ColProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\r\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\r\n      const xshape = x.dims;\r\n      const wshape = w.dims;\r\n      const rowDim = 2;\r\n      const colDim = 3;\r\n      const rank = outputShape.length;\r\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\r\n      const kernelSize = wshape[2] * wshape[3];\r\n      const unpackChannel = unpackFromChannel();\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      let unrolled = '';\r\n\r\n      for (let row = 0; row <= 1; row++) {\r\n        for (let col = 0; col <= 1; col++) {\r\n          unrolled += `\r\n            blockIndex = rc.x + ${col};\r\n            pos = rc.y + ${row};\r\n\r\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\r\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\r\n              attributes.pads[0]};\r\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\r\n\r\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\r\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\r\n              attributes.pads[1]};\r\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\r\n\r\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\r\n\r\n                  ch = int(float(pos)/ ${kernelSize}.);\r\n                    innerDims = vec2(d0, d1);\r\n                    result[${row * 2 + col}] = getChannel(\r\n                      getA(0, ch, int(innerDims.x),\r\n                      int(innerDims.y)), innerDims);\r\n                }\r\n              }\r\n            }\r\n\r\n          `;\r\n        }\r\n      }\r\n\r\n      const shaderSource = `\r\n      ${unpackChannel}\r\n\r\n      void main() {\r\n        ivec2 rc = getOutputCoords();\r\n          vec4 result = vec4(0.0);\r\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\r\n          vec2 innerDims;\r\n          ${unrolled}\r\n          ${glsl.output} = result;\r\n      }\r\n            `;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const createPackedIm2ColProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\r\n     attributes: ConvAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {ConvAttributes} from './conv';\r\n\r\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\r\n  name: 'Im2Col',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n  cacheHint,\r\n});\r\n\r\nconst createIm2ColProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\r\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\r\n      const xshape = x.dims;\r\n      const wshape = w.dims;\r\n\r\n      const rank = outputShape.length;\r\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\r\n\r\n      const shaderSource = `\r\n        const int XC = ${xshape[1]};\r\n        const int XH = ${xshape[2]};\r\n        const int XW = ${xshape[3]};\r\n        const int KH = ${attributes.kernelShape[0]};\r\n        const int KW = ${attributes.kernelShape[1]};\r\n        const int dilationH = ${attributes.dilations[0]};\r\n        const int dilationW = ${attributes.dilations[1]};\r\n        const int strideH = ${attributes.strides[0]};\r\n        const int strideW = ${attributes.strides[1]};\r\n        const int padH = ${attributes.pads[0]};\r\n        const int padW = ${attributes.pads[1]};\r\n        const int KHKW = KH*KW;\r\n        const int XCKHKW = XC * KHKW;\r\n        const int outputChannels = 4;\r\n        vec4 process(int indices[${rank}]) {\r\n          int b  = indices[0]; // batch size\r\n          int oh = indices[1] * strideH - padH; //output height\r\n          int ow = indices[2] * strideW - padW; //output width\r\n          int p = indices[3] * outputChannels; //patch\r\n          vec4 value = vec4(0.0);\r\n          for(int i=0; i < outputChannels; ++i) {\r\n            if(p < XCKHKW) {\r\n              int patchC = p / KHKW;\r\n              int patchH = (p - patchC*KHKW) / KW;\r\n              int patchW = (p - patchC*KHKW) - patchH * KW;\r\n              int xh2 = oh + patchH * dilationH;\r\n              int xw2 = ow + patchW * dilationW;\r\n              int x[${xshape.length}];\r\n              x[0] = b;\r\n              x[1] = patchC;\r\n              x[2] = xh2;\r\n              x[3] = xw2;\r\n              if(xh2 >= 0 &&\r\n                  xh2 < XH &&\r\n                  xw2 >= 0 &&\r\n                  xw2 < XW) {\r\n                value[i] = _X(x);\r\n              }\r\n            }\r\n            ++p;\r\n          }\r\n          return value;\r\n        }\r\n        `;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nexport const createIm2ColProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\r\n     attributes: ConvAttributes): ProgramInfoLoader => {\r\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\r\n      };\r\n    };\r\n\r\n\r\nexport const calculateIm2ColDims =\r\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\r\n        number[] =>\r\n            [outputShape[0], outputShape[2], outputShape[3],\r\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\r\n  scale: number;\r\n  bias: number[];\r\n}\r\n\r\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output =\r\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\r\n    (node: Graph.Node): ImageScalerAttributes => {\r\n      const scale = node.attributes.getFloat('scale');\r\n      const bias = node.attributes.getFloats('bias');\r\n      return createAttributeWithCacheKey({scale, bias});\r\n    };\r\n\r\nconst imageScalerProgramMetadata = {\r\n  name: 'ImageScaler',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst createImageScalerProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\r\n        ProgramInfo => {\r\n          const outputShape = inputs[0].dims.slice();\r\n          const rank = outputShape.length;\r\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\r\n          const shaderSource = `\r\n      ${getBiasMethod}\r\n      float process(int indices[${rank}]) {\r\n        return _X(indices) * scale + getBias(bias, indices[1]);\r\n      }`;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            variables: [\r\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\r\n              {name: 'scale', type: 'float', data: attributes.scale}\r\n            ],\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst createImageScalerProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\r\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\r\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\r\n    };\r\n\r\nconst createGetBiasMethod = (numChannels: number): string => {\r\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\r\n  for (let i = 0; i < numChannels; ++i) {\r\n    if (i === 0) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `if (channel == ${i}) { return bias[${i}]; }`);\r\n    } else if (i === numChannels - 1) {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else { return bias[${i}]; }`);\r\n    } else {\r\n      codeLines.push(\r\n          '\\t' +\r\n          `else if (channel == ${i}) { return bias[${i}]; }`);\r\n    }\r\n  }\r\n  codeLines.push(\r\n      '\\t' +\r\n      '}');\r\n  return codeLines.join('\\n');\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('ImageScaler requires 1 input.');\r\n  }\r\n  if (inputs[0].dims.length !== 4) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const instanceNormalization: OperatorImplementation<number> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\r\n      const output = inferenceHandler.run(\r\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\r\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\r\n      return [output];\r\n    };\r\n\r\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\r\n    node.attributes.getFloat('epsilon', 1e-5);\r\n\r\nconst meanAndVarianceProgramMetadata = {\r\n  name: 'InstanceNormalization_MeanAndVariance',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\r\n  const xDims = input.dims.slice();\r\n  const channel = xDims[1];\r\n  const channelSize = xDims[2] * xDims[3];\r\n  const outputShape = [xDims[0], channel];\r\n\r\n  const shaderSource = `\r\n      vec4 process(int[2] indices) {\r\n        vec4 v = vec4(0.0);\r\n        int a[4];\r\n        a[0] = indices[0];\r\n        a[1] = indices[1];\r\n        float temp = 0.0;\r\n        for(int a2=0; a2<${xDims[2]}; a2++) {\r\n          a[2] = a2;\r\n          for(int a3=0; a3<${xDims[3]}; a3++) {\r\n            a[3] = a3;\r\n            float x = _X(a);\r\n            temp += x;\r\n          }\r\n        }\r\n        float mean = temp / float(${channelSize});\r\n        temp = 0.0;\r\n        for(int a2=0; a2<${xDims[2]}; a2++) {\r\n          a[2] = a2;\r\n          for(int a3=0; a3<${xDims[3]}; a3++) {\r\n            a[3] = a3;\r\n            float x = _X(a);\r\n            temp += (x - mean) * (x - mean);\r\n          }\r\n        }\r\n        v.r = mean;\r\n        v.g = temp / float(${channelSize});\r\n\r\n        return v;\r\n      }`;\r\n  return {\r\n    ...metadata,\r\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\r\n  ...meanAndVarianceProgramMetadata,\r\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\r\n});\r\n\r\nconst computeOutputProgramMetadata = {\r\n  name: 'InstanceNormalization_ComputeOutput',\r\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\r\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst createComputeOutputProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\r\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\r\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\r\n      const shaderSource = `\r\n      vec4 get_MeanAndVariance(int[2] mv) {\r\n        int offset = indicesToOffset_MeanAndVariance(mv);\r\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\r\n        return ${glsl.texture2D}(MeanAndVariance, coords);\r\n      }\r\n\r\n      float process(int[4] indices) {\r\n        int mv[2];\r\n        mv[0] = indices[0];\r\n        mv[1] = indices[1];\r\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\r\n        float mean = mean_and_variance.r;\r\n        float variance = mean_and_variance.g;\r\n\r\n        int sb[1];\r\n        sb[0] = indices[1];\r\n        float scale = _Scale(sb);\r\n        float b = _B(sb);\r\n\r\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\r\n      }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createComputeOutputProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\r\n        ProgramInfoLoader => {\r\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\r\n          return {\r\n            ...metadata,\r\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 3) {\r\n    throw new Error('InstanceNormalization requires 3 inputs.');\r\n  }\r\n\r\n  const X = inputs[0];\r\n  const scale = inputs[1];\r\n  const B = inputs[2];\r\n\r\n  // input should at least have three dimensions - N,C,dim1,...,dimn\r\n  // other inputs can have only one dimensions\r\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\r\n    throw new Error('Input shapes are mismatched.');\r\n  }\r\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\r\n      (B.type !== 'float32' && B.type !== 'float64')) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[0].dims.length !== 4) {\r\n    throw new Error('Only support 4-D input shape.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil} from '../../../util';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\n\r\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\r\nimport {getBiasForMatmul} from './matmul';\r\n\r\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\r\n  name: 'MatMul (packed)',\r\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\r\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\r\n                        [TextureType.packed, TextureType.packed],\r\n  cacheHint\r\n});\r\n\r\nconst createPackedMatmulProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\r\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\r\n      const hasBias = inputs.length > 2;\r\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\r\n      const aShape = inputs[0].dims;\r\n      const bShape = inputs[1].dims;\r\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\r\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\r\n\r\n      if (!outputShape) {\r\n        throw new Error('Can\\'t use matmul on the given tensors');\r\n      }\r\n      const sharedDim = aShape[aShape.length - 1];\r\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\r\n      const aRank = aShape.length;\r\n      const bRank = bShape.length;\r\n\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const coordsDataType = getCoordsDataType(outputShape.length);\r\n      const outRank = outputShape.length;\r\n      const allGlChannels = getGlChannels();\r\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\r\n\r\n      const getBiasForMatmulSnippet =\r\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\r\n\r\n      const getBcastedSamplerForMatmulSnippet =\r\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\r\n\r\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\r\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\r\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\r\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\r\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\r\n      `;\r\n      const shaderSource = `\r\n            ${getBcastedSamplerForMatmulSnippet}\r\n            ${getBiasForMatmulSnippet}\r\n            ${activationFunction}\r\n            void main() {\r\n              ${getOutputCoordsSnippet}\r\n\r\n              vec4 value = vec4(0);\r\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\r\n                vec4 a = ${getSamplerAInLoopSnippet};\r\n                vec4 b = ${getSamplerBInLoopSnippet};\r\n\r\n                value += (a.rrbb * b.rgrg);\r\n                value += (a.ggaa * b.baba);\r\n              }\r\n              ${processBias}\r\n              ${applyActivation}\r\n              ${glsl.output} = value;\r\n            }`;\r\n      return {\r\n        ...metadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        shaderSource,\r\n        hasMain: true\r\n      };\r\n    };\r\n\r\nexport const createPackedMatmulProgramInfoLoader =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\r\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\r\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\r\n      return {\r\n        ...metadata,\r\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\r\n      };\r\n    };\r\n\r\nfunction getBcastSamplerForMatmul(\r\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\r\n  let unpackedACoordsSnippet = [];\r\n  let unpackedBCoordsSnippet = [];\r\n\r\n  const inAShape = inputs[0].dims;\r\n  const inBShape = inputs[1].dims;\r\n\r\n  const inARank = inAShape.length;\r\n  const inBRank = inBShape.length;\r\n\r\n  const outRank = outShape.length;\r\n  const rankADiff = outRank - inARank;\r\n  const rankBDiff = outRank - inBRank;\r\n\r\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\r\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\r\n  unpackedACoordsSnippet.join(', ');\r\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\r\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\r\n  unpackedBCoordsSnippet.join(', ');\r\n\r\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\r\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\r\n\r\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\r\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\r\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\r\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\r\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\r\n\r\n  const getBcastSamplerMatmulSource = `\r\nvec4 getAAtOutCoordsMatmul(int i) {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${swapDimSnippet}\r\n  ${coordsASnippet}\r\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\r\n  return outputValue;\r\n}\r\n\r\nvec4 getBAtOutCoordsMatmul(int i) {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${swapDimSnippet}\r\n  ${coordsBSnippet}\r\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\r\n  return outputValue;\r\n}`;\r\n\r\n  return getBcastSamplerMatmulSource;\r\n}\r\n\r\nfunction getA(allGlChannels: string[], rank: number): string {\r\n  let res = '';\r\n  for (let i = 0; i < rank - 2; i++) {\r\n    res += `rc.${allGlChannels[i]}, `;\r\n  }\r\n  res += `rc.${allGlChannels[rank - 2]}, ` +\r\n      'i*2';\r\n  return res;\r\n}\r\n\r\nfunction getB(allGlChannels: string[], rank: number): string {\r\n  let res = '';\r\n  for (let i = 0; i < rank - 2; i++) {\r\n    res += `rc.${allGlChannels[i]}, `;\r\n  }\r\n  res += 'i*2, ' +\r\n      `rc.${allGlChannels[rank - 1]}`;\r\n  return res;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\nimport {getCoordsDataType, getGlChannels} from '../utils';\r\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\r\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\r\n\r\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      if (inferenceHandler.session.pack) {\r\n        return [inferenceHandler.run(\r\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\r\n      } else {\r\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\r\n      }\r\n    };\r\n\r\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\r\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\r\n\r\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\r\n  name: 'MatMul',\r\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\r\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\r\n                        [TextureType.unpacked, TextureType.unpacked],\r\n  cacheHint\r\n});\r\n\r\nfunction createMatmulProgramInfo(\r\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\r\n  const aShape = inputs[0].dims;\r\n  const bShape = inputs[1].dims;\r\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\r\n  if (!outputShape) {\r\n    throw new Error('Can\\'t use matmul on the given tensors');\r\n  }\r\n  const coordsDataType = getCoordsDataType(outputShape.length);\r\n  const allGlChannels = getGlChannels();\r\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\r\n\r\n  const hasBias = inputs.length > 2;\r\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\r\n  const getBiasForMatmulSnippet =\r\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\r\n\r\n  const rank = outputShape.length;\r\n  const arank = aShape.length;\r\n  const brank = bShape.length;\r\n  const sharedDim = aShape[aShape.length - 1];\r\n  const shaderSource = `\r\n    ${activationFunction}\r\n    ${getBiasForMatmulSnippet}\r\n    float process(int indices[${rank}]) {\r\n        int a[${arank}];\r\n        int b[${brank}];\r\n        bcastMatmulIndices_A(indices, a);\r\n        bcastMatmulIndices_B(indices, b);\r\n\r\n        float value;\r\n        for (int k=0; k<${sharedDim}; ++k) {\r\n            a[${arank - 1}] = k;\r\n            b[${brank - 2}] = k;\r\n            value += _A(a) * _B(b);\r\n        }\r\n        ${processBias}\r\n        ${applyActivation}\r\n        return value;\r\n    }`;\r\n  return {\r\n    ...metadata,\r\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n    shaderSource,\r\n  };\r\n}\r\n\r\nexport function createMatmulProgramInfoLoader(\r\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\r\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\r\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\r\n}\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('MatMul requires 2 inputs.');\r\n  }\r\n\r\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\r\n    throw new Error('shared dimension does not match.');\r\n  }\r\n\r\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\r\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\r\n    throw new Error('inputs should be float type');\r\n  }\r\n\r\n  if (inputs[0].type !== inputs[1].type) {\r\n    throw new Error('inputs types should match');\r\n  }\r\n};\r\n\r\nexport function getBiasForMatmul(\r\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\r\n    isPacked: boolean): string {\r\n  let unpackedCoordsSnippet = '';\r\n  const inRank = inShape.length;\r\n  const outRank = outShape.length;\r\n  const rankDiff = outRank - inRank;\r\n  if (outRank < 2 && inRank > 0) {\r\n    unpackedCoordsSnippet = 'coords';\r\n  } else {\r\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\r\n  }\r\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\r\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\r\n  const inSize = ShapeUtil.size(inShape);\r\n  const isInputScalar = inSize === 1;\r\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\r\n  if (isInputScalar) {\r\n    output = 'vec4(outputValue.x)';\r\n  }\r\n  const getBiasForMatmulSource = isPacked ? `\r\nvec4 getBiasForMatmul() {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${coordsSnippet}\r\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\r\n  return ${output};\r\n}` :\r\n                                            `\r\nfloat getBiasForMatmul() {\r\n  ${coordsDataType} coords = getOutputCoords();\r\n  ${coordsSnippet}\r\n  return getBias(coords.x);\r\n}`;\r\n\r\n  return getBiasForMatmulSource;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\n\r\nimport {getChannels} from './packing-utils';\r\n\r\nconst packProgramMetadata = {\r\n  name: 'pack',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpackedReversed]\r\n};\r\n\r\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\r\n  const glsl = getGlsl(handler.session.backend.glContext.version);\r\n  const inputShape = input.dims;\r\n\r\n  const inputRank = inputShape.length;\r\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\r\n  const outputRank = input.dims.length;\r\n\r\n  const coordsDataType = getCoordsDataType(outputRank);\r\n  const channels = getChannels('rc', outputRank);\r\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\r\n\r\n  let reversedInputWH;\r\n  if (inputRank === 0) {\r\n    reversedInputWH = [1, 1];\r\n  } else if (inputRank === 1) {\r\n    reversedInputWH = [inputShape[0], 1];\r\n  } else {\r\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\r\n  }\r\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\r\n  const output = getOutput(inputShape, channels);\r\n\r\n  const shaderSource = `\r\n        void main() {\r\n          ${coordsDataType} rc = getOutputCoords();\r\n\r\n          if(${outOfBoundsCondition}) {\r\n            ${glsl.output} = vec4(0);\r\n          } else {\r\n            ${setup}\r\n\r\n            ${glsl.output} = vec4(${output});\r\n          }\r\n        }\r\n      `;\r\n  return {\r\n    ...packProgramMetadata,\r\n    hasMain: true,\r\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\r\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\r\n\r\n/**\r\n * check output coordinate location and return false if it is outside input's width/height boundary\r\n */\r\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\r\n  if (rank === 0) {\r\n    return 'false';\r\n  }\r\n  if (rank === 1) {\r\n    return `rc > ${shape[0]}`;\r\n  }\r\n\r\n  let cond = '';\r\n  for (let i = rank - 2; i < rank; i++) {\r\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\r\n    if (i < rank - 1) {\r\n      cond += '||';\r\n    }\r\n  }\r\n\r\n  return cond;\r\n}\r\n\r\n/**\r\n * code snippet to sample input texture with output coordiantes\r\n */\r\nfunction getOutput(shape: readonly number[], dims: string[]): string {\r\n  const rank = shape.length;\r\n\r\n  if (rank === 0) {\r\n    return 'getA(), 0, 0, 0';\r\n  }\r\n\r\n  if (rank === 1) {\r\n    return `getA(rc),\r\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\r\n            0, 0`;\r\n  }\r\n\r\n  const coord00 = 'r, c';\r\n  const coord01 = 'r, cp1';\r\n  const coord10 = 'rp1, c';\r\n  const coord11 = 'rp1, cp1';\r\n  let D = '';\r\n  if (rank > 2) {\r\n    for (let i = 0; i < rank - 2; ++i) {\r\n      D = D + `${dims[i]},`;\r\n    }\r\n  }\r\n  return `getA(${D}${coord00}),\r\n          rEdge ? 0. : getA(${D}${coord10}),\r\n          cEdge ? 0. : getA(${D}${coord01}),\r\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\r\n}\r\n\r\n/**\r\n * code snippet to setup 4 coordinates and edge conditions\r\n */\r\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\r\n  if (rank === 0 || rank === 1) {\r\n    return '';\r\n  }\r\n  // rank >= 2 for width+height pack.\r\n  else {\r\n    const setup = `\r\n    int r = ${dims[rank - 2]};\r\n    int c = ${dims[rank - 1]};\r\n    int rp1 = ${dims[rank - 2]} + 1;\r\n    int cp1 = ${dims[rank - 1]} + 1;\r\n    bool rEdge = rp1 >= ${cols};\r\n    bool cEdge = cp1 >= ${rows};\r\n    `;\r\n    return setup;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getGlChannels} from '../utils';\r\n\r\nexport function getVecChannels(name: string, rank: number): string[] {\r\n  return getGlChannels(rank).map(d => `${name}.${d}`);\r\n}\r\n\r\nexport function getChannels(name: string, rank: number): string[] {\r\n  if (rank === 1) {\r\n    return [name];\r\n  }\r\n  return getVecChannels(name, rank);\r\n}\r\n\r\nexport function unpackFromChannel(): string {\r\n  return `\r\n    float getChannel(vec4 frag, int dim) {\r\n      int modCoord = imod(dim, 2);\r\n      return modCoord == 0 ? frag.r : frag.g;\r\n    }\r\n\r\n    float getChannel(vec4 frag, vec2 innerDims) {\r\n      vec2 modCoord = mod(innerDims, 2.);\r\n      return modCoord.x == 0. ?\r\n        (modCoord.y == 0. ? frag.r : frag.g) :\r\n        (modCoord.y == 0. ? frag.b : frag.a);\r\n    }\r\n  `;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl, Glsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface PadAttributes extends AttributeWithCacheKey {\r\n  readonly mode: string;\r\n  readonly pads: number[];\r\n  readonly value: number;\r\n}\r\n\r\nconst padProgramMetadata = {\r\n  name: 'Pad',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const pad: OperatorImplementation<PadAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...padProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\r\n  const mode = node.attributes.getString('mode', 'constant');\r\n  const value = node.attributes.getFloat('value', 0.0);\r\n  const pads = node.attributes.getInts('pads');\r\n  return createAttributeWithCacheKey({mode, value, pads});\r\n};\r\n\r\nconst createPadProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\r\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\r\n      const rank = outputShape.length;\r\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\r\n      const shaderSource = `\r\n      ${padFunction}\r\n      float process(int[${rank}] indices) {\r\n          return padA(indices);\r\n      }`;\r\n      return {\r\n        name: 'Pad',\r\n        inputNames: ['A'],\r\n        inputTypes: [TextureType.unpacked],\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Pad requires 1 input');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\r\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n  const strides = ShapeUtil.computeStrides(input.dims);\r\n\r\n  switch (attributes.mode) {\r\n    case 'constant':\r\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\r\n    case 'reflect':\r\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\r\n    case 'edge':\r\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\r\n    default:\r\n      throw new Error('Invalid mode');\r\n  }\r\n};\r\n\r\nconst getPadConstant =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\r\n     value: number): string => {\r\n      const rank = shape.length;\r\n      let block = '';\r\n      for (let i = rank - 1; i >= 0; --i) {\r\n        block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0)  return constant;\r\n        if (k >= ${shape[i]}) return constant;\r\n        offset += k * ${strides[i]};\r\n        `;\r\n      }\r\n      return `\r\n      float padA(int m[${rank}]) {\r\n        const float constant = float(${value});\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n    };\r\n\r\nconst getPadReflect =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\r\n        string => {\r\n          const rank = shape.length;\r\n\r\n          let block = '';\r\n          for (let i = rank - 1; i >= 0; --i) {\r\n            block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0) { k = -k; }\r\n        {\r\n          const int _2n_1 = ${2 * (shape[i] - 1)};\r\n          k = int( mod( float(k), float(_2n_1) ) ) ;\r\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\r\n        }\r\n        offset += k * ${strides[i]};\r\n        `;\r\n          }\r\n          return `\r\n      float padA(int m[${rank}]) {\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n        };\r\n\r\nconst getPadEdge =\r\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\r\n        string => {\r\n          const rank = shape.length;\r\n\r\n          let block = '';\r\n          for (let i = rank - 1; i >= 0; --i) {\r\n            block += `\r\n        k = m[${i}] - ${pads[i]};\r\n        if (k < 0)  k = 0;\r\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\r\n        offset += k * ${strides[i]};\r\n      `;\r\n          }\r\n          return `\r\n      float padA(int m[${rank}]) {\r\n        int offset = 0;\r\n        int k = 0;\r\n        ${block}\r\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\r\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\r\n        return value;\r\n      }\r\n      `;\r\n        };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\r\n  readonly autoPad: string;\r\n  readonly ceilMode: number;\r\n  readonly countIncludePad: boolean;\r\n  readonly kernelShape: number[];\r\n  readonly strides: number[];\r\n  readonly pads: number[];\r\n}\r\n\r\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata =\r\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\r\n    (node: Graph.Node): AveragePoolAttributes => {\r\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\r\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\r\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\r\n      const kernelShape = node.attributes.getInts('kernel_shape');\r\n      const strides = node.attributes.getInts('strides', []);\r\n      const pads = node.attributes.getInts('pads', []);\r\n\r\n      // TODO: support attribute 'ceil_mode'\r\n      if (ceilMode !== 0) {\r\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\r\n      }\r\n\r\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\r\n    };\r\n\r\nconst createAveragePoolProgramInfo =\r\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\r\n        ProgramInfo => {\r\n          const inputShape = inputs[0].dims.slice();\r\n          PoolConvUtil.adjustPoolAttributes(\r\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\r\n          const outputShape = PoolConvUtil.computePoolOutputShape(\r\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\r\n              attributes.autoPad);\r\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\r\n          const op1 = 'value += _X(x);';\r\n          let op2 = '';\r\n          if (attributes.countIncludePad) {\r\n            op2 += `value /= float(${kernelSize});`;\r\n          } else {\r\n            op2 += `value /= float(${kernelSize} - pad);`;\r\n          }\r\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\r\n          const shaderSource = `\r\n        ${poolingCode}\r\n      `;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata = {\r\n        name: 'GlobalAveragePool',\r\n        inputNames: ['X'],\r\n        inputTypes: [TextureType.unpacked],\r\n        cacheHint: `${attributes.countIncludePad}`\r\n      };\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\r\n    (node: Graph.Node): AveragePoolAttributes => {\r\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\r\n      return createAttributeWithCacheKey(\r\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\r\n    };\r\n\r\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\r\n  readonly storageOrder: number;\r\n}\r\n\r\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const metadata =\r\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\r\n      const output = inferenceHandler.run(\r\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\r\n    (node: Graph.Node): MaxPoolAttributes => {\r\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\r\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\r\n      const kernelShape = node.attributes.getInts('kernel_shape');\r\n      const strides = node.attributes.getInts('strides', []);\r\n      const pads = node.attributes.getInts('pads', []);\r\n      const storageOrder = node.attributes.getInt('storage_order', 0);\r\n\r\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\r\n      if (storageOrder !== 0) {\r\n        throw new Error('column major storage order is not yet supported for MaxPool');\r\n      }\r\n      if (ceilMode !== 0) {\r\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\r\n      }\r\n\r\n      return createAttributeWithCacheKey(\r\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\r\n    };\r\n\r\nconst createMaxPoolProgramInfo =\r\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\r\n        ProgramInfo => {\r\n          const inputShape = inputs[0].dims.slice();\r\n          PoolConvUtil.adjustPoolAttributes(\r\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\r\n          const outputShape = PoolConvUtil.computePoolOutputShape(\r\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\r\n              attributes.autoPad);\r\n          const op1 = `\r\n      value = max(_X(x), value);\r\n    `;\r\n          const op2 = '';\r\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\r\n          const shaderSource = `\r\n      ${poolingCode}\r\n    `;\r\n          return {\r\n            ...metadata,\r\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst globalMaxPoolAttributes = {\r\n  autoPad: '',\r\n  ceilMode: 0,\r\n  countIncludePad: false,\r\n  kernelShape: [],\r\n  strides: [],\r\n  pads: [],\r\n  storageOrder: 0,\r\n  cacheKey: ''\r\n};\r\n\r\nconst globalMaxPoolMetadata = {\r\n  name: 'GlobalMaxPool',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n  const output = inferenceHandler.run(\r\n      {\r\n        ...globalMaxPoolMetadata,\r\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\r\n      },\r\n      inputs);\r\n  return [output];\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Pool ops requires 1 input.');\r\n  }\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nconst generatePoolingCode =\r\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\r\n        string => {\r\n          const rank = inputDims.length;\r\n          if (attributes.kernelShape.length <= 2) {\r\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\r\n            const sw = attributes.strides[attributes.strides.length - 1];\r\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\r\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\r\n            const dimW = inputDims[rank - 1];\r\n            let codeW = '';\r\n            let codeH = '';\r\n            let codeHEnd = '';\r\n            if (pwStart + pwEnd !== 0) {\r\n              codeW = `\r\n          for (int i = 0; i < ${kw}; i++) {\r\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\r\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\r\n              pad++;\r\n              continue;\r\n            }\r\n            ${op1}\r\n          }`;\r\n            } else {\r\n              codeW = `\r\n          for (int i = 0; i < ${kw}; i++) {\r\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\r\n            ${op1}\r\n          }`;\r\n            }\r\n\r\n            if (attributes.kernelShape.length === 2) {\r\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\r\n              const sh = attributes.strides[attributes.strides.length - 2];\r\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\r\n              const phEnd = attributes.pads[attributes.pads.length - 2];\r\n              const dimH = inputDims[rank - 2];\r\n              if (phStart + phEnd !== 0) {\r\n                codeH = `\r\n            for (int j = 0; j < ${kh}; j++) {\r\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\r\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\r\n                pad+= ${kw};\r\n                continue;\r\n              }\r\n          `;\r\n              } else {\r\n                codeH = `\r\n            for (int j = 0; j < ${kh}; j++) {\r\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\r\n            `;\r\n              }\r\n              codeHEnd = `\r\n          }\r\n        `;\r\n            }\r\n\r\n            const poolingCode = `\r\n        float process(int indices[${rank}]) {\r\n          int x[${rank}];\r\n          copyVec(indices, x);\r\n\r\n          float value = ${start};\r\n          int pad = 0;\r\n          ${codeH}\r\n          ${codeW}\r\n          ${codeHEnd}\r\n          ${op2}\r\n          return value;\r\n        }\r\n      `;\r\n            return poolingCode;\r\n          } else {\r\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\r\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\r\n            const stridesRank = kernelStrides.length;\r\n            const padsRank = attributes.pads.length;\r\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\r\n            const copyInputDims = copyArray(inputDims, 'inputDims');\r\n            const copyPads = copyArray(attributes.pads, 'pads');\r\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\r\n            const copyStrides = copyArray(attributes.strides, 'strides');\r\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\r\n            let padCode = '';\r\n            if (hasPads) {\r\n              padCode = `\r\n            if (x[j] >= inputDims[j] || x[j] < 0) {\r\n              pad++;\r\n              isPad = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!isPad) {\r\n            ${op1}\r\n          }`;\r\n            } else {\r\n              padCode = `\r\n          }\r\n          ${op1}\r\n        `;\r\n            }\r\n            const poolingCode = `\r\n        ${offsetToIndicesFunction}\r\n        float process(int indices[${rank}]) {\r\n          int x[${rank}];\r\n          copyVec(indices, x);\r\n          int offset[${stridesRank}];\r\n          int pads[${padsRank}];\r\n          int inputDims[${rank}];\r\n          int kernelStrides[${stridesRank}];\r\n          int strides[${stridesRank}];\r\n          ${copyPads}\r\n          ${copyInputDims}\r\n          ${copyStrides}\r\n          ${copyKernelStrides}\r\n\r\n          float value = ${start};\r\n          int pad = 0;\r\n          bool isPad = false;\r\n          for (int i = 0; i < ${kernelSize}; i++) {\r\n            offsetToIndices(i, kernelStrides, offset);\r\n            isPad = false;\r\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\r\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\r\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\r\n              ${padCode}\r\n          }\r\n          ${op2}\r\n\r\n          return value;\r\n        }\r\n      `;\r\n            return poolingCode;\r\n          }\r\n        };\r\n\r\nconst copyArray = (array: readonly number[], arrayName: string): string => {\r\n  let block = '';\r\n  for (let i = 0; i < array.length; i++) {\r\n    block += `\r\n      ${arrayName}[${i}] = ${array[i]};\r\n    `;\r\n  }\r\n  return block;\r\n};\r\n\r\nconst offsetToIndices = (rank: number): string => `\r\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\r\n    if (${rank} == 0) {\r\n      return;\r\n    }\r\n    for (int i = 0; i < ${rank} - 1; ++i) {\r\n      indices[i] = offset / strides[i];\r\n      offset -= indices[i] * strides[i];\r\n    }\r\n    indices[${rank} - 1] = offset;\r\n  }`;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport interface ReduceAttributes extends AttributeWithCacheKey {\r\n  readonly axes: number[];\r\n  readonly keepDims: boolean;\r\n}\r\n\r\n// return [init ops, reduce ops, final ops]\r\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\r\n\r\nconst reduce =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\r\n     reduceOp: ReduceOp): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const reduceProgramMetadata = {\r\n        name,\r\n        inputNames: ['A'],\r\n        inputTypes: [TextureType.unpacked],\r\n      };\r\n\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...reduceProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () =>\r\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\r\n  const axes = node.attributes.getInts('axes', []);\r\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\r\n  return createAttributeWithCacheKey({axes, keepDims});\r\n};\r\n\r\nconst createReduceProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\r\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const outputShape: number[] = [];\r\n      const iRank = inputs[0].dims.length || 1;\r\n\r\n      const idxCopy = [];  // copy output indexes to input indexes\r\n\r\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\r\n      const ops = reduceOp(inputs, axes);\r\n      let reduceOps = ops[1];\r\n\r\n      for (let k = 0; k < inputs[0].dims.length; k++) {\r\n        // if this axis is reduced\r\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n          if (attributes.keepDims) {\r\n            outputShape.push(1);\r\n          }  // else { remove the axis from outputShape; }\r\n\r\n          // loop over the d-th axis\r\n          reduceOps = `\r\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\r\n            inputIdx[${k}] = j${k};\r\n            ${reduceOps}\r\n          }`;\r\n        } else {\r\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\r\n\r\n          outputShape.push(inputs[0].dims[k]);\r\n        }\r\n      }\r\n\r\n      const oRank = outputShape.length || 1;\r\n\r\n      const shaderSource = `\r\n      float process(int outputIdx[${oRank}]) {\r\n        float value;                 // final result\r\n        int inputIdx[${iRank}];      // addressing input data\r\n        ${idxCopy.join('\\n')}\r\n        ${ops[0]}       // init ops for reduce max/min\r\n        ${reduceOps}\r\n        ${ops[2]}       // final computation for reduce mean\r\n        return value;\r\n      }`;\r\n\r\n      return {\r\n        ...reduceProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Reduce op requires 1 input.');\r\n  }\r\n\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\r\n    };\r\n\r\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        let size = 1.0;\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            size *= inputs[0].dims[k];\r\n          }\r\n        }\r\n\r\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\r\n    };\r\n\r\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        const idxZero = [];\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\r\n          }\r\n        }\r\n\r\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\r\n    };\r\n\r\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\r\n        const idxZero = [];\r\n        for (let k = 0; k < inputs[0].dims.length; k++) {\r\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\r\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\r\n          }\r\n        }\r\n\r\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\r\n      };\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\r\n    };\r\n\r\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\r\n    };\r\n\r\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\r\n    };\r\n\r\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\r\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\r\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\r\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nimport {unpackFromChannel} from './packing-utils';\r\n\r\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\r\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\r\n\r\nconst createPackedReshape3DProgramInfo =\r\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\r\n        ProgramInfo => {\r\n          const inputShape3D = input3D.dims as [number, number, number];\r\n          const squeezedOutputShape = outputShape3D as [number, number, number];\r\n\r\n          let mainLoop = '';\r\n          for (let i = 0; i < 4; i++) {\r\n            let outputCoords = '';\r\n            switch (i) {\r\n              case 0:\r\n                outputCoords = 'outputCoords = rc;';\r\n                break;\r\n              case 1:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\r\n                break;\r\n              case 2:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\r\n                break;\r\n              case 3:\r\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\r\n                break;\r\n              default:\r\n                throw new Error();\r\n            }\r\n\r\n            mainLoop += `\r\n        ${outputCoords}\r\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\r\n          int flattenedIndex = getFlattenedIndex(outputCoords);\r\n\r\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\r\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\r\n\r\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\r\n\r\n        ${i > 0 ? '}' : ''}\r\n      `;\r\n          }\r\n          const glsl = getGlsl(handler.session.backend.glContext.version);\r\n\r\n          const shaderSource = `\r\n      ${getReshapedInputCoords(inputShape3D)}\r\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\r\n      ${unpackFromChannel()}\r\n\r\n      void main() {\r\n        ivec3 rc = getOutputCoords();\r\n\r\n        vec4 result = vec4(0.0);\r\n\r\n        ivec3 outputCoords;\r\n        int rows = ${squeezedOutputShape[2]};\r\n        int cols = ${squeezedOutputShape[1]};\r\n\r\n        ${mainLoop}\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n\r\n          return {\r\n            ...metadata,\r\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\r\n            shaderSource,\r\n            hasMain: true\r\n          };\r\n        };\r\n\r\nexport const createPackedReshape3DProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\r\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\r\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\r\n    };\r\n\r\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\r\n  if (shape.length === 0) {\r\n    return [1, 1, 1];\r\n  }\r\n  // TODO: squeeze other shapes to 2D case\r\n  let batch = 1;\r\n  for (let i = 0; i < shape.length - 2; ++i) {\r\n    batch *= shape[i];\r\n  }\r\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\r\n}\r\n\r\n// For packed reshape, we need to re-arrange texel data for output shape.\r\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\r\n// for the reshaped new tensor, we just need to re-arrange the last h and\r\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\r\n// first convert it to 3D by collapsing other dimension to batch dim, then\r\n// process with the last two dimensions.\r\n// Note: we only need the shape tensor to calculate output shape, so the\r\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\r\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\r\n// the same between input shape and output shape, the packed reshape can be\r\n// treated as no-op.\r\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\r\n  let isCheapReshape = false;\r\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\r\n    isCheapReshape = true;\r\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\r\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\r\n  } else {  // 2D +\r\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\r\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\r\n  }\r\n\r\n  return isCheapReshape;\r\n}\r\n\r\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\r\n  const strides = ShapeUtil.computeStrides(shape);\r\n  const coords = ['b', 'r', 'c'];\r\n  const index = 'index';\r\n  const coordsFromIndexSnippet = strides\r\n                                     .map((stride, i) => {\r\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\r\n                                       const line2 = i === strides.length - 1 ?\r\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\r\n                                           `index -= ${coords[i]} * ${stride}`;\r\n                                       return `${line1}; ${line2};`;\r\n                                     })\r\n                                     .join('');\r\n\r\n  return `\r\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\r\n      ${coordsFromIndexSnippet}\r\n      return ivec3(b, r, c);\r\n    }\r\n  `;\r\n}\r\n\r\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\r\n  const strides = ShapeUtil.computeStrides(shape);\r\n\r\n  return `\r\n  int getFlattenedIndex(ivec3 coords) {\r\n    // reverse y, z order\r\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\r\n  }\r\n`;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\r\n  if (handler.session.pack) {\r\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\r\n  } else {\r\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\n\r\nimport {unpackFromChannel} from './packing-utils';\r\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\r\n\r\nconst resizeProgramMetadata = {\r\n  name: 'Resize',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed]\r\n};\r\n\r\nexport const resize: OperatorImplementation<UpsampleAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...resizeProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\r\n\r\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\r\n\r\nconst createPackedResizeProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\r\n\r\n      const isSame =\r\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\r\n      if (isSame) {\r\n        return {\r\n          ...resizeProgramMetadata,\r\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n          hasMain: true,\r\n          shaderSource: `void main() {\r\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\r\n                    ${glsl.output} = v;\r\n                }`\r\n        };\r\n      }\r\n\r\n      const dim = outputShape.length;\r\n      if (dim < 2) {\r\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\r\n      }\r\n\r\n      const outputHeight = outputShape[dim - 2];\r\n      const outputWidth = outputShape[dim - 1];\r\n\r\n      const inputShape = inputs[0].dims;\r\n      if (dim !== inputShape.length) {\r\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\r\n      }\r\n      const inputHeight = inputShape[dim - 2];\r\n      const inputWidth = inputShape[dim - 1];\r\n\r\n      const scalesHeight = scales[dim - 2];\r\n      const scalesWidth = scales[dim - 1];\r\n\r\n      let getSourceFracIndex = '';\r\n\r\n      if (attributes.mode !== 'linear') {\r\n        // TODO: support other modes\r\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\r\n      }\r\n      switch (attributes.coordinateTransformMode) {\r\n        case 'asymmetric':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        return vec4(coords) / scaleWHWH;\r\n                    }\r\n                `;\r\n          break;\r\n        case 'half_pixel':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\r\n                    }\r\n                `;\r\n          break;\r\n        case 'align_corners':\r\n          getSourceFracIndex = `\r\n                    vec4 getSourceFracIndex(ivec4 coords) {\r\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\r\n                            ${outputHeight}.0 - 1.0);\r\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\r\n                            ${inputHeight}.0 - 1.0);\r\n                        vec4 new_scale = original / resized;\r\n                        return vec4(coords) * new_scale;\r\n                    }\r\n                `;\r\n          break;\r\n        default:\r\n          // TODO:supporting other coordinateTransformModes\r\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\r\n                                '${attributes.coordinateTransformMode}'`);\r\n      }\r\n\r\n      const coordsDataType = getCoordsDataType(dim);\r\n      const unpackChannel = unpackFromChannel();\r\n      const shaderSource = `\r\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\r\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\r\n            ${unpackChannel}\r\n            ${getSourceFracIndex}\r\n            float getAValue(int x10, int r, int c, int d) {\r\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\r\n            }\r\n            void main() {\r\n                ${coordsDataType} rc = getOutputCoords();\r\n\r\n                int batch = rc[0];\r\n                int depth = rc[1];\r\n\r\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\r\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\r\n\r\n                // calculate the source index in fraction\r\n                vec4 sourceFrac = getSourceFracIndex(coords);\r\n\r\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\r\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\r\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\r\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\r\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\r\n\r\n                bool hasNextRow = rc.w < ${outputHeight - 1};\r\n                bool hasNextCol = rc.z < ${outputWidth - 1};\r\n\r\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\r\n                vec4 topLeft = vec4(\r\n                    getAValue(batch, depth, x00.x, x00.y),\r\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\r\n                vec4 topRight = vec4(\r\n                    getAValue(batch, depth, x00.x, x00.w),\r\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\r\n                vec4 bottomLeft = vec4(\r\n                    getAValue(batch, depth, x00.z, x00.y),\r\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\r\n\r\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\r\n                vec4 bottomRight = vec4(\r\n                    getAValue(batch, depth, x00.z, x00.w),\r\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\r\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\r\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\r\n\r\n                // calculate the interpolation fraction on u and v direction\r\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\r\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\r\n\r\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\r\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\r\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\r\n\r\n                ${glsl.output} = vec4(newValue);\r\n            }\r\n        `;\r\n      return {\r\n        ...resizeProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\r\n        hasMain: true,\r\n        shaderSource\r\n      };\r\n    };\r\n\r\n\r\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\r\n  const x = inputs[0];\r\n  const xDims = x.dims;\r\n\r\n  let scales = attributes.scales;\r\n  let outputSizes: number[]|undefined;\r\n  if (scales.length === 0) {\r\n    const scalesTensor = inputs[attributes.scalesInputIdx];\r\n    if (scalesTensor && scalesTensor.size !== 0) {\r\n      if (inputs[attributes.sizesInputIdx]) {\r\n        throw new Error('Only one of scales or sizes must be provided as input.');\r\n      }\r\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\r\n    } else {\r\n      const sizesTensor = inputs[attributes.sizesInputIdx];\r\n      if (!sizesTensor || sizesTensor.size === 0) {\r\n        throw new Error('Either scales or sizes MUST be provided as input.');\r\n      }\r\n\r\n      outputSizes = Array.from(sizesTensor.integerData);\r\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\r\n    }\r\n  } else {\r\n    if (inputs[attributes.sizesInputIdx]) {\r\n      throw new Error('Only one of scales or sizes must be provided as input.');\r\n    }\r\n  }\r\n\r\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\r\n\r\n  return [scales, yDims];\r\n};\r\n\r\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\r\n  const scales = Array.from(scale.floatData);\r\n  scalesValidation(scales, mode, isResize);\r\n  return scales;\r\n};\r\n\r\nconst parseScalesDataFromOutputSize =\r\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\r\n      const length = xDims.length;\r\n      const scales = new Array<number>(length);\r\n\r\n      for (let i = 0, end = length; i < end; i++) {\r\n        if (xDims[i] === 0) {\r\n          if (yDims[i] !== 0) {\r\n            throw new Error('Input dim is zero but required output dim is non-zero.');\r\n          }\r\n          scales[i] = 1;\r\n        } else {\r\n          scales[i] = yDims[i] / xDims[i];\r\n        }\r\n      }\r\n      scalesValidation(scales, mode, isResize);\r\n      return scales;\r\n    };\r\n\r\n// roi data is not used yet. but leave here for future usage.\r\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\r\n//     let roi: number[] = [];\r\n//     if (attributes.needRoiInput) {\r\n//         if (attributes.roiInputIdx <= 0) {\r\n//             throw new Error('Invalid roi input index.');\r\n//         }\r\n//         const roiTensor = inputs[attributes.roiInputIdx];\r\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\r\n//     } else {\r\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\r\n//     }\r\n//     return roi;\r\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Shape requires 1 input.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SliceAttributes extends AttributeWithCacheKey {\r\n  readonly axes: number[];\r\n  readonly ends: number[];\r\n  readonly starts: number[];\r\n}\r\n\r\nconst sliceProgramMetadata = {\r\n  name: 'Slice',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const slice: OperatorImplementation<SliceAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...sliceProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\r\n  const starts = node.attributes.getInts('starts');\r\n  const ends = node.attributes.getInts('ends');\r\n  const axes = node.attributes.getInts('axes', []);\r\n  return createAttributeWithCacheKey({starts, ends, axes});\r\n};\r\n\r\nconst createSliceProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\r\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\r\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\r\n      const starts = attributes.starts.map((start, i) => {\r\n        if (start > input.dims[normalizedAxes[i]] - 1) {\r\n          return input.dims[normalizedAxes[i]];\r\n        }\r\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\r\n      });\r\n      const ends = attributes.ends.map((end, i) => {\r\n        if (end > input.dims[normalizedAxes[i]] - 1) {\r\n          return input.dims[normalizedAxes[i]];\r\n        }\r\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\r\n      });\r\n\r\n      const outputShape = input.dims.slice();\r\n\r\n      const sliceOps: string[] = [];\r\n      for (let i = 0; i < normalizedAxes.length; i++) {\r\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\r\n        if (starts[i] > 0) {\r\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\r\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${rank}]) {\r\n        ${sliceOps.join('\\n      ')}\r\n        return _A(outputIdx);\r\n      }`;\r\n      return {\r\n        ...sliceProgramMetadata,\r\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Slice requires 1 input.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n\r\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputsV10(inputs);\r\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\r\n  const output = inferenceHandler.run(\r\n      {\r\n        ...sliceProgramMetadata,\r\n        cacheHint: attributes.cacheKey,\r\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\r\n      },\r\n      [inputs[0]]);\r\n  return [output];\r\n};\r\n\r\nconst generateSliceAttributesFromInputs =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\r\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\r\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\r\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\r\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\r\n        throw new Error('dynamic slice attributes are not allowed');\r\n      }\r\n\r\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\r\n        throw new Error('currently non-1 steps is not supported for Slice');\r\n      }\r\n\r\n      const starts = Array.from(inputs[1].integerData);\r\n      const ends = Array.from(inputs[2].integerData);\r\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\r\n      const cacheKey = `${axes};${starts};${ends}`;\r\n      return {starts, ends, axes, cacheKey};\r\n    };\r\n\r\nconst validateInputsV10 = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\r\n    throw new Error('Invalid input number.');\r\n  }\r\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n}\r\n\r\nconst softmaxComputeMaxProgramMetadata = {\r\n  name: 'SoftmaxComputeMax',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nconst softmaxComputeScaleProgramMetadata = {\r\n  name: 'SoftmaxComputeScale',\r\n  inputNames: ['A', 'Max'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nconst softmaxProgramMetadata = {\r\n  name: 'SoftMax',\r\n  inputNames: ['A', 'Max', 'Norm'],\r\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\r\n};\r\n\r\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const inputShape = inputs[0].dims.slice();\r\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\r\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\r\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\r\n\r\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\r\n      const max = inferenceHandler.run(\r\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\r\n          inputs);\r\n\r\n      const computeScaleProgramInfo =\r\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\r\n      const scale = inferenceHandler.run(\r\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\r\n          [inputs[0], max]);\r\n\r\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\r\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\r\n      const output = inferenceHandler.run(\r\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\r\n          [inputs[0], max, scale]);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\r\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\r\n\r\n/**\r\n * Create a texture that contains the maximum value of each of the 'N' rows\r\n */\r\nconst createComputeMaxProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\r\n        ProgramInfo => {\r\n          const [textureWidth, textureHeight] =\r\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n          const rank = outputShape.length;\r\n\r\n          if (N < 1 || D < 1) {\r\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n          }\r\n\r\n          if (outputShape.length !== 1) {\r\n            throw new Error('Dimensionality of the output should be 1');\r\n          }\r\n\r\n          if (outputShape[0] !== N) {\r\n            throw new Error('Shape of the output should be equal to logical row count');\r\n          }\r\n\r\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n          const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n        int logical_row_start_offset = indices[0] * ${D};\r\n\r\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\r\n        ${textureHeight} )));\r\n        for(int i=1; i<${D}; ++i)\r\n        {\r\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\r\n            ${textureWidth}, ${textureHeight})));\r\n          if(current > max)\r\n          max = current;\r\n        }\r\n\r\n        return max;\r\n      }`;\r\n          return {\r\n            ...softmaxComputeMaxProgramMetadata,\r\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\n/**\r\n * Create a texture that contains the normalization factor for each of the 'N' rows\r\n */\r\nconst createComputScaleProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\r\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n      const rank = outputShape.length;\r\n\r\n      if (N < 1 || D < 1) {\r\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n      }\r\n\r\n      if (outputShape.length !== 1) {\r\n        throw new Error('Dimensionality of the output should be 1');\r\n      }\r\n\r\n      if (outputShape[0] !== N) {\r\n        throw new Error('Shape of the output should be equal to logical row count');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow.length !== 1) {\r\n        throw new Error('Dimensionality of the intermediate results should be 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow[0] !== N) {\r\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\r\n      }\r\n\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n        int logical_row_start_offset = indices[0] * ${D};\r\n\r\n        float norm_factor = 0.0;\r\n        float max = _Max(indices);\r\n        for(int i=0; i<${D}; ++i)\r\n        {\r\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\r\n            ${textureWidth}, ${textureHeight}))) - max);\r\n        }\r\n\r\n        return norm_factor;\r\n      }`;\r\n      return {\r\n        ...softmaxComputeScaleProgramMetadata,\r\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst createSoftMaxProgramInfo =\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\r\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\r\n      const [textureWidth, textureHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\r\n      const rank = input.dims.length;\r\n\r\n      if (N < 1 || D < 1) {\r\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\r\n        throw new Error('Dimensionality of the intermediate results should be 1');\r\n      }\r\n\r\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\r\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\r\n      }\r\n\r\n      const shaderSource = `\r\n      float process(int[${rank}] indices) {\r\n\r\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\r\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\r\n\r\n      //determine the logical row for this index\r\n      int logical_row_index[1];\r\n      logical_row_index[0] = offset / ${D};\r\n\r\n      float norm_factor = _Norm(logical_row_index);\r\n\r\n      // avoid possible division by 0\r\n      // if norm_facor is 0, all elements are zero\r\n      // if so, return 0\r\n      if(norm_factor == 0.0)\r\n        return 0.0;\r\n\r\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\r\n    }`;\r\n      return {\r\n        ...softmaxProgramMetadata,\r\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Softmax requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil, SplitUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface SplitAttributes extends AttributeWithCacheKey {\r\n  readonly axis: number;\r\n  readonly split: number[];\r\n  readonly numOutputs: number;\r\n}\r\n\r\nconst splitProgramMetadata = {\r\n  name: 'Split',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const split: OperatorImplementation<SplitAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n\r\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\r\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\r\n      const output: Tensor[] = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        output.push(inferenceHandler.run(\r\n            {\r\n              ...splitProgramMetadata,\r\n              cacheHint: `${attributes.cacheKey};${i}`,\r\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\r\n            },\r\n            inputs));\r\n      }\r\n\r\n      return output;\r\n    };\r\n\r\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\r\n  const axis = node.attributes.getInt('axis', 0);\r\n  const split = node.attributes.getInts('split', []);\r\n  const numOutputs = node.outputs.length;\r\n  return createAttributeWithCacheKey({axis, split, numOutputs});\r\n};\r\n\r\nconst getProgramCount =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\r\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\r\n      return offsets.length;\r\n    };\r\n\r\nconst createSplitProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\r\n        ProgramInfo => {\r\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\r\n          const offset = offsets[index];\r\n          const outputShape = shapes[index];\r\n          const rank = outputShape.length;\r\n          const shaderSource = `\r\n      float process(int indices[${rank}]) {\r\n        indices[${axis}] += ${offset};\r\n        return _A(indices);\r\n      }\r\n    `;\r\n          return {\r\n            ...splitProgramMetadata,\r\n            cacheHint: `${attributes.cacheKey}:${index}`,\r\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\r\n            shaderSource\r\n          };\r\n        };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Split requires one input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\r\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\r\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const squeeze: OperatorImplementation<number[]> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\r\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\r\n      return [output];\r\n    };\r\n\r\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\r\n    node.attributes.getInts('axes');\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Squeeze requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n\r\n  const sumProgramMetadata = {\r\n    name: 'Sum',\r\n    inputNames: inputs.map((v, i) => `X${i}`),\r\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\r\n  };\r\n\r\n  const output = inferenceHandler.run(\r\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\r\n  return [output];\r\n};\r\n\r\nconst createSumProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const outputShape = inputs[0].dims.slice();\r\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\r\n      const shaderSource = `\r\n      void main() {\r\n        vec4 result = ${sumLine};\r\n        ${glsl.output} = result;\r\n      }\r\n    `;\r\n      return {\r\n        ...sumProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        hasMain: true,\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length === 0) {\r\n    throw new Error('Sum requires inputs.');\r\n  }\r\n\r\n  const length = inputs[0].dims.length;\r\n  for (let i = 1; i < inputs.length; i++) {\r\n    if (length !== inputs[i].dims.length) {\r\n      throw new Error('Input shapes are mismatched.');\r\n    }\r\n\r\n    for (let j = 0; j < length; j++) {\r\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\r\n        throw new Error('Input shapes are not matched.');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  for (let i = 1; i < inputs.length; i++) {\r\n    if (inputs[0].type !== inputs[i].type) {\r\n      throw new Error('Input types are not matched.');\r\n    }\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {NUMBER_TYPES} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\r\n  validateInputs(inputs);\r\n\r\n  const tileProgramMetadata = {\r\n    name: 'Tile',\r\n    inputNames: ['A'],\r\n    inputTypes: [TextureType.unpacked],\r\n  };\r\n\r\n  const output = inferenceHandler.run(\r\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\r\n      inputs);\r\n  return [output];\r\n};\r\n\r\nconst createTileProgramInfo =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\r\n      const inputShape = inputs[0].dims.slice();\r\n      const outputShape = new Array(inputShape.length);\r\n\r\n      const tileOps: string[] = [];\r\n      for (let i = 0; i < inputShape.length; i++) {\r\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\r\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\r\n      }\r\n\r\n      const rank = outputShape.length;\r\n      const shaderSource = `\r\n      float process(int outputIdx[${rank}]) {\r\n        int inputIdx[${rank}];\r\n        ${tileOps.join('\\n')}\r\n        return _A(inputIdx);\r\n      }\r\n    `;\r\n      return {\r\n        ...tileProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 2) {\r\n    throw new Error('Tile requires 2 input.');\r\n  }\r\n  if (inputs[1].dims.length !== 1) {\r\n    throw new Error('The second input shape must 1 dimension.');\r\n  }\r\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\r\n    throw new Error('Invalid input type.');\r\n  }\r\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\r\n    throw new Error('Invalid repeat type.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface TransposeAttributes extends AttributeWithCacheKey {\r\n  readonly perm: number[];\r\n}\r\n\r\nconst transposeProgramMetadata = {\r\n  name: 'Transpose',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.unpacked]\r\n};\r\n\r\nexport const transpose: OperatorImplementation<TransposeAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...transposeProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\r\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\r\n\r\nconst createTransposeProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\r\n      const inputShape = input.dims;\r\n      perm = getAdjustedPerm(inputShape, perm);\r\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\r\n      const rank = inputShape.length;\r\n      // A dims=[${inputs[0].dims.toString()}]\r\n      // out Dims=[${unpackedOutputShape.toString()}]\r\n      // based on perm=[${perm.toString()}]\r\n      const shaderSource = `\r\n      ${getPermFunctionBody('perm', perm, rank)}\r\n      float process(int indices[${rank}]) {\r\n        int a[${rank}];\r\n        perm(a, indices);\r\n        return _A(a);\r\n      }`;\r\n      return {\r\n        ...transposeProgramMetadata,\r\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\r\n        shaderSource\r\n      };\r\n    };\r\n\r\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\r\n  if (perm && perm.length !== inputShape.length) {\r\n    perm = [...(inputShape.keys())].reverse();\r\n  }\r\n  return perm;\r\n};\r\n\r\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\r\n  perm = getAdjustedPerm(inputShape, perm);\r\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\r\n};\r\n\r\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\r\n  const reverseFunc = [];\r\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\r\n  for (let i = 0; i < rank; ++i) {\r\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\r\n  }\r\n  reverseFunc.push('\\t}');\r\n  return reverseFunc.join('\\n');\r\n};\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Transpose requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\r\n    throw new Error('input should be float tensor');\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {TextureData, TextureType} from '../types';\r\n\r\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\r\n  const outputShape = input.shape;\r\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n  /**\r\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\r\n   */\r\n  const shaderSource = `\r\n    const float FLOAT_MAX = 1.70141184e38;\r\n    const float FLOAT_MIN = 1.17549435e-38;\r\n\r\n    bool isNaN(float val) {\r\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\r\n    }\r\n\r\n    highp vec4 encodeAsUint8(highp float v) {\r\n      if (isNaN(v)) {\r\n        return vec4(255, 255, 255, 255);\r\n      }\r\n\r\n      highp float av = abs(v);\r\n\r\n      if(av < FLOAT_MIN) {\r\n        return vec4(0.0, 0.0, 0.0, 0.0);\r\n      } else if(v > FLOAT_MAX) {\r\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\r\n      } else if(v < -FLOAT_MAX) {\r\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\r\n      }\r\n\r\n      highp vec4 c = vec4(0,0,0,0);\r\n\r\n      highp float e = floor(log2(av));\r\n      highp float m = exp2(fract(log2(av))) - 1.0;\r\n\r\n      c[2] = floor(128.0 * m);\r\n      m -= c[2] / 128.0;\r\n      c[1] = floor(32768.0 * m);\r\n      m -= c[1] / 32768.0;\r\n      c[0] = floor(8388608.0 * m);\r\n\r\n      highp float ebias = e + 127.0;\r\n      c[3] = floor(ebias / 2.0);\r\n      ebias -= c[3] * 2.0;\r\n      c[2] += floor(ebias) * 128.0;\r\n\r\n      c[3] += 128.0 * step(0.0, -v);\r\n\r\n      return c / 255.0;\r\n    }\r\n\r\n    void main() {\r\n      float value = ${glsl.texture2D}(X,TexCoords).r;\r\n      ${glsl.output} = encodeAsUint8(value);\r\n    }`;\r\n  const programInfo = {\r\n    name: 'Uint8Encode',\r\n    inputTypes: [TextureType.unpacked],\r\n    inputNames: ['X'],\r\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\r\n    shaderSource,\r\n    hasMain: true\r\n  };\r\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {Tensor} from '../../../tensor';\r\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\r\n\r\nexport function glslAbs(): GlslValueFunction {\r\n  return glslBuiltinUnary('abs');\r\n}\r\nexport function glslAcos(): GlslValueFunction {\r\n  return glslBuiltinUnary('acos');\r\n}\r\nexport function glslAsin(): GlslValueFunction {\r\n  return glslBuiltinUnary('asin');\r\n}\r\nexport function glslAtan(): GlslValueFunction {\r\n  return glslBuiltinUnary('atan');\r\n}\r\nexport function glslCeil(): GlslValueFunction {\r\n  return glslBuiltinUnary('ceil');\r\n}\r\nexport function glslCos(): GlslValueFunction {\r\n  return glslBuiltinUnary('cos');\r\n}\r\nexport function glslElu(alpha: number): GlslValueFunction {\r\n  const name = 'elu';\r\n  const body = `\r\n  const float alpha = float(${alpha});\r\n\r\n  float ${name}_(float a) {\r\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslExp(): GlslValueFunction {\r\n  return glslBuiltinUnary('exp');\r\n}\r\nexport function glslFloor(): GlslValueFunction {\r\n  return glslBuiltinUnary('floor');\r\n}\r\nexport function glslClip(min: number, max: number): GlslValueFunction {\r\n  const name = 'clip';\r\n  const body = `\r\n  const float min = float(${min});\r\n  const float max = float(${max});\r\n\r\n  float ${name}_(float a) {\r\n    return clamp(a, min, max);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return clamp(v, min, max);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslIdentity(): GlslValueFunction {\r\n  const name = 'indentity';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return v;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\r\n  const name = 'leakyRelu';\r\n  const body = `\r\n  const float alpha = float(${alpha});\r\n\r\n  float ${name}_(float a) {\r\n    return a < 0.0 ? a * alpha : a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslLog(): GlslValueFunction {\r\n  return glslBuiltinUnary('log');\r\n}\r\nexport function glslNeg(): GlslValueFunction {\r\n  const name = 'neg';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return -a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return -v;\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslNot(): GlslValueFunction {\r\n  const name = 'not';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return float( ! bool(a) );\r\n  }\r\n  bool ${name}_(bool a) {\r\n    return !a;\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\r\n  }\r\n  bvec4 ${name}_(bvec4 v) {\r\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSin(): GlslValueFunction {\r\n  return glslBuiltinUnary('sin');\r\n}\r\nexport function glslRelu(): GlslValueFunction {\r\n  const name = 'relu';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return max( a, 0.0 );\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return max( v, 0.0 );\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSigmoid(): GlslValueFunction {\r\n  const name = 'sigmoid';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return 1.0 / (1.0 + exp(-a));\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return 1.0 / (1.0 + exp(-v));\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nexport function glslSqrt(): GlslValueFunction {\r\n  return glslBuiltinUnary('sqrt');\r\n}\r\nexport function glslTan(): GlslValueFunction {\r\n  return glslBuiltinUnary('tan');\r\n}\r\nexport function glslTanh(): GlslValueFunction {\r\n  const name = 'tanh';\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    a = clamp(a, -10., 10.);\r\n    a = exp(2.*a);\r\n    return (a - 1.) / (a + 1.);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    v = clamp(v, -10., 10.);\r\n    v = exp(2.*v);\r\n    return (v - 1.) / (v + 1.);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\r\n  const body = `\r\n  float ${name}_(float a) {\r\n    return ${name}(a);\r\n  }\r\n  vec4 ${name}_(vec4 v) {\r\n    return ${name}(v);\r\n  }\r\n  `;\r\n  return {body, name, type: FunctionType.ValueBased};\r\n}\r\n\r\n/////\r\n/////\r\n/////\r\n\r\nconst createElementwiseProgramInfo =\r\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\r\n        ProgramInfo => {\r\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n          const glsl = getGlsl(handler.session.backend.glContext.version);\r\n          return {\r\n            ...metadata,\r\n            output: {dims: input.dims, type: input.type, textureType},\r\n            shaderSource: `\r\n     ${glslFunc.body}\r\n     void main() {\r\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\r\n       v = ${glslFunc.name}_(v);\r\n       ${glsl.output} = v;\r\n     }\r\n     `,\r\n            hasMain: true\r\n          };\r\n        };\r\n\r\nconst createElementwiseProgramInfoLoader =\r\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\r\n        ProgramInfoLoader => {\r\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\r\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\r\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\r\n        };\r\n\r\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\r\n\r\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\r\n\r\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\r\n\r\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\r\n\r\nexport interface ClipAttributes extends AttributeWithCacheKey {\r\n  readonly min: number;\r\n  readonly max: number;\r\n}\r\n\r\nexport const clip =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(\r\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\r\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\r\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\r\n});\r\n\r\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\r\n\r\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\r\n\r\nexport interface EluAttributes extends AttributeWithCacheKey {\r\n  readonly alpha: number;\r\n}\r\n\r\nexport const elu =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\r\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\r\n\r\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\r\n\r\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\r\n\r\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\r\n\r\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\r\n  readonly alpha: number;\r\n}\r\n\r\nexport const leakyRelu =\r\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\r\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\r\n        inputs)];\r\n\r\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\r\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\r\n\r\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\r\n\r\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\r\n\r\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\r\n\r\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\r\n\r\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\r\n\r\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\r\n\r\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\r\n\r\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\r\n\r\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\r\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\r\nimport {getCoordsDataType} from '../utils';\r\nimport {getChannels, unpackFromChannel} from './packing-utils';\r\n\r\nconst unpackProgramMetadata = {\r\n  name: 'unpack',\r\n  inputNames: ['A'],\r\n  inputTypes: [TextureType.packed]\r\n};\r\n\r\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\r\n  const rank = input.dims.length;\r\n\r\n  const channels = getChannels('rc', rank);\r\n  const innerDims = channels.slice(-2);\r\n  const coordsDataType = getCoordsDataType(rank);\r\n  const unpackChannel = unpackFromChannel();\r\n  const isScalar = (input.dims.length === 0);\r\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\r\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\r\n  const glsl = getGlsl(handler.session.backend.glContext.version);\r\n  const shaderSource = `\r\n    ${unpackChannel}\r\n    void main() {\r\n      ${coordsDataType} rc = getOutputCoords();\r\n\r\n       // Sample the texture with the coords to get the rgba channel value.\r\n       vec4 packedInput = getA(${sourceCoords});\r\n\r\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\r\n     }\r\n   `;\r\n\r\n  return {\r\n    ...unpackProgramMetadata,\r\n    hasMain: true,\r\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\r\n    shaderSource\r\n  };\r\n};\r\n\r\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\r\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\r\n\r\nfunction getSourceCoords(rank: number, dims: string[]): string {\r\n  if (rank === 1) {\r\n    return 'rc';\r\n  }\r\n\r\n  let coords = '';\r\n  for (let i = 0; i < rank; i++) {\r\n    coords += dims[i];\r\n    if (i < rank - 1) {\r\n      coords += ',';\r\n    }\r\n  }\r\n  return coords;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {ShapeUtil} from '../../../util';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\n\r\nexport const unsqueeze: OperatorImplementation<number[]> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\r\n      validateInputs(inputs);\r\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\r\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\r\n      return [output];\r\n    };\r\n\r\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\r\n    node.attributes.getInts('axes');\r\n\r\nconst validateInputs = (inputs: Tensor[]): void => {\r\n  if (!inputs || inputs.length !== 1) {\r\n    throw new Error('Unsqueeze requires 1 input.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('invalid input tensor types.');\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\r\nimport {Graph} from '../../../graph';\r\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\r\nimport {Tensor} from '../../../tensor';\r\nimport {getGlsl} from '../glsl-source';\r\nimport {WebGLInferenceHandler} from '../inference-handler';\r\nimport {ProgramInfo, TextureType} from '../types';\r\n\r\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\r\n  readonly opset: number;\r\n  readonly isResize: boolean;\r\n  readonly mode: string;\r\n  readonly scales: number[];\r\n  readonly extrapolationValue: number;\r\n  readonly coordinateTransformMode: string;\r\n  readonly useExtrapolation: boolean;\r\n  readonly needRoiInput: boolean;\r\n  readonly nearestMode: string;\r\n  readonly cubicCoefficientA: number;\r\n  readonly excludeOutside: boolean;\r\n  readonly useNearest2xOptimization: boolean;\r\n  readonly roiInputIdx: number;\r\n  readonly scalesInputIdx: number;\r\n  readonly sizesInputIdx: number;\r\n}\r\n\r\nconst upsampleProgramMetadata = {\r\n  name: 'Upsample',\r\n  inputNames: ['X'],\r\n  inputTypes: [TextureType.unpacked],\r\n};\r\n\r\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\r\n      validateInputs(inputs, attributes);\r\n      const output = inferenceHandler.run(\r\n          {\r\n            ...upsampleProgramMetadata,\r\n            cacheHint: attributes.cacheKey,\r\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\r\n          },\r\n          inputs);\r\n      return [output];\r\n    };\r\n\r\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\r\n\r\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\r\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\r\n\r\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\r\n  const isResize = (opset >= 10);\r\n\r\n  // processing node attributes\r\n  const mode = node.attributes.getString('mode', 'nearest');\r\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\r\n    throw new Error(`unrecognized mode: ${mode}`);\r\n  }\r\n\r\n  let scales: number[] = [];\r\n  if (opset < 9) {\r\n    scales = node.attributes.getFloats('scales');\r\n    scalesValidation(scales, mode, isResize);\r\n  }\r\n\r\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\r\n\r\n  const coordinateTransformMode =\r\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\r\n  if ([\r\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\r\n      ].indexOf(coordinateTransformMode) === -1) {\r\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\r\n  }\r\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\r\n  const useExtrapolation = needRoiInput;\r\n\r\n  const nearestMode =\r\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\r\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\r\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\r\n  }\r\n\r\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\r\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\r\n  if (excludeOutside && mode !== 'cubic') {\r\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\r\n  }\r\n\r\n  const useNearest2xOptimization =\r\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\r\n\r\n  let roiInputIdx = 0;\r\n  let scalesInputIdx = 0;\r\n  let sizesInputIdx = 0;\r\n\r\n  if (opset > 10) {\r\n    roiInputIdx = 1;\r\n    scalesInputIdx = 2;\r\n    sizesInputIdx = 3;\r\n  } else if (opset === 9) {\r\n    scalesInputIdx = 1;\r\n  }\r\n\r\n  return createAttributeWithCacheKey({\r\n    opset,\r\n    isResize,\r\n    mode,\r\n    scales,\r\n    extrapolationValue,\r\n    coordinateTransformMode,\r\n    useExtrapolation,\r\n    needRoiInput,\r\n    nearestMode,\r\n    cubicCoefficientA,\r\n    excludeOutside,\r\n    useNearest2xOptimization,\r\n    roiInputIdx,\r\n    scalesInputIdx,\r\n    sizesInputIdx\r\n  });\r\n};\r\n\r\nconst createUpsampleProgramInfo =\r\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\r\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\r\n      const [inputWidth, inputHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\r\n\r\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\r\n      const [outputWidth, outputHeight] =\r\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\r\n      const dim = outputShape.length;\r\n\r\n      const outputPitches = new Array<number>(dim);\r\n      const inputPitches = new Array<number>(dim);\r\n      let precalculatedPitches = `\r\n      int output_pitches[${dim}];\r\n      int input_pitches[${dim}];\r\n      `;\r\n      for (let d = dim - 1; d >= 0; d--) {\r\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\r\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\r\n\r\n        precalculatedPitches += `\r\n        output_pitches[${d}] = ${outputPitches[d]};\r\n        input_pitches[${d}] = ${inputPitches[d]};\r\n        `;\r\n      }\r\n      const getInputFloatFunction = `\r\n      float getInputFloat(int index) {\r\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\r\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\r\n        return value;\r\n      }\r\n      `;\r\n\r\n      const shaderSource = attributes.mode === 'nearest' ?\r\n          // nearest\r\n          `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[${dim}]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int d, m;\r\n      for (int dim = 0; dim < ${dim}; ++dim) {\r\n        d = output_index / output_pitches[dim];\r\n        m = output_index - d * output_pitches[dim];\r\n        output_index = m;\r\n\r\n        if (scales[dim] != 1 && d > 0) {\r\n          int d2 = d / scales[dim];\r\n          m = d - d2 * scales[dim];\r\n          d = d2;\r\n        }\r\n        input_index += input_pitches[dim] * d;\r\n      }\r\n\r\n      return getInputFloat(input_index);\r\n    }` :\r\n          dim === 4 ?\r\n          // bilinear 4D\r\n              `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[4]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int m;\r\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\r\n      index_of_dim0 = output_index / output_pitches[0];\r\n      m = output_index - index_of_dim0 * output_pitches[0];\r\n      index_of_dim1 = m / output_pitches[1];\r\n      m = m - index_of_dim1 * output_pitches[1];\r\n      index_of_dim2 = m / output_pitches[2];\r\n      m = m - index_of_dim2 * output_pitches[2];\r\n      index_of_dim3 = m;\r\n\r\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\r\n      index_of_input_dim2 = index_of_dim2 / scales[2];\r\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\r\n      index_of_input_dim3 = index_of_dim3 / scales[3];\r\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\r\n\r\n      input_index = index_of_dim0 * input_pitches[0] +\r\n            index_of_dim1 * input_pitches[1] +\r\n            index_of_input_dim2 * input_pitches[2] +\r\n            index_of_input_dim3;\r\n\r\n      float x00 = getInputFloat(input_index);\r\n      float x10, x01, x11;\r\n\r\n      bool end_of_dim2 = false;\r\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\r\n        // It's the end in dimension 2\r\n        x01 = x00;\r\n        end_of_dim2 = true;\r\n      } else {\r\n        x01 = getInputFloat(input_index + input_pitches[2]);\r\n      }\r\n\r\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\r\n        // It's the end in dimension 3\r\n        x10 = x00;\r\n        x11 = x01;\r\n      }\r\n      else {\r\n        x10 = getInputFloat(input_index + 1);\r\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\r\n      }\r\n\r\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\r\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\r\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\r\n    }` :\r\n              // bilinear 2D\r\n              `\r\n    ${getInputFloatFunction}\r\n    float process(int indices[2]) {\r\n      int input_index = 0;\r\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\r\n\r\n      ${precalculatedPitches}\r\n\r\n      int m;\r\n      int index_of_dim0, index_of_dim1;\r\n      index_of_dim0 = output_index / output_pitches[0];\r\n      m = output_index - index_of_dim0 * output_pitches[0];\r\n      index_of_dim1 = m;\r\n\r\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\r\n      index_of_input_dim0 = index_of_dim0 / scales[0];\r\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\r\n      index_of_input_dim1 = index_of_dim1 / scales[1];\r\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\r\n\r\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\r\n\r\n      float x00 = getInputFloat(input_index);\r\n      float x10, x01, x11;\r\n\r\n      bool end_of_dim0 = false;\r\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\r\n        // It's the end in dimension 0\r\n        x01 = x00;\r\n        end_of_dim0 = true;\r\n      } else {\r\n        x01 = getInputFloat(input_index + input_pitches[0]);\r\n      }\r\n\r\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\r\n        // It's the end in dimension 1\r\n        x10 = x00;\r\n        x11 = x01;\r\n      }\r\n      else {\r\n        x10 = getInputFloat(input_index + 1);\r\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\r\n      }\r\n\r\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\r\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\r\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\r\n    }`;\r\n      return {\r\n        ...upsampleProgramMetadata,\r\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\r\n        shaderSource,\r\n        variables: [{\r\n          name: 'scales',\r\n          type: 'int',\r\n          arrayLength: attributes.scales.length,\r\n          data: attributes.scales.map(x => Math.ceil(x))\r\n        }]\r\n      };\r\n    };\r\n\r\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\r\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\r\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\r\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\r\n    throw new Error('invalid inputs.');\r\n  }\r\n\r\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\r\n    throw new Error('Invalid input shape.');\r\n  }\r\n\r\n  if (inputs[0].type === 'string') {\r\n    throw new Error('Invalid input tensor types.');\r\n  }\r\n};\r\n\r\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\r\n  if (!isResize) {\r\n    for (const scale of scales) {\r\n      if (scale < 1) {\r\n        throw new Error('Scale value should be greater than or equal to 1.');\r\n      }\r\n    }\r\n  } else {\r\n    for (const scale of scales) {\r\n      if (scale <= 0) {\r\n        throw new Error('Scale value should be greater than 0.');\r\n      }\r\n    }\r\n  }\r\n  if (mode === 'linear' || mode === 'cubic') {\r\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\r\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\r\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\r\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\r\n    }\r\n  }\r\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\nimport {Logger, Profiler} from '../../instrument';\r\n\r\nimport {GlslPreprocessor} from './glsl-preprocessor';\r\nimport {getVertexShaderSource} from './glsl-source';\r\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\n/**\r\n * ProgramManager is the main class behind running computations\r\n * It builds ProgramInfo's into Artifacts\r\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\r\n * Uses the artifact to run the computation by calling Draw on\r\n * the WebGL drawing buffer\r\n * ProgramManager automatically maps (binds) input variables to their\r\n * corresponding Location's in the binary program\r\n */\r\nexport class ProgramManager {\r\n  repo: Map<unknown, Artifact>;  // this should be per-session object\r\n  vertexShader: WebGLShader;\r\n  attributesBound: boolean;\r\n\r\n  constructor(\r\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\r\n      public textureLayoutStrategy: TextureLayoutStrategy) {\r\n    this.repo = new Map();\r\n    this.attributesBound = false;\r\n  }\r\n  getArtifact(key: unknown): Artifact|undefined {\r\n    return this.repo.get(key);\r\n  }\r\n  setArtifact(key: unknown, artifact: Artifact): void {\r\n    this.repo.set(key, artifact);\r\n  }\r\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\r\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\r\n      const gl = this.glContext.gl;\r\n      const program = buildArtifact.program;\r\n      gl.useProgram(program);\r\n      try {\r\n        this.bindOutput(output);\r\n        if (!this.attributesBound) {\r\n          this.bindAttributes(buildArtifact.attribLocations);\r\n        }\r\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\r\n      } catch (err) {\r\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\r\n        throw err;\r\n      }\r\n      this.profiler.event('backend', 'GlContext.draw()', () => {\r\n        this.glContext.draw();\r\n      });\r\n    }, this.glContext);\r\n  }\r\n  dispose(): void {\r\n    if (this.vertexShader) {\r\n      this.glContext.deleteShader(this.vertexShader);\r\n    }\r\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\r\n  }\r\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\r\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\r\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\r\n      const fragScript = preprocessor.preprocess();\r\n      const program = this.compile(fragScript);\r\n      const artifact = {\r\n        programInfo,\r\n        program,\r\n        uniformLocations: this.getUniformLocations(\r\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\r\n        attribLocations: this.getAttribLocations(program)\r\n      };\r\n      return artifact;\r\n    });\r\n  }\r\n  protected compile(fragShaderScript: string): WebGLProgram {\r\n    if (!this.vertexShader) {\r\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\r\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\r\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\r\n    }\r\n    if (env.debug) {\r\n      Logger.verbose('ProrgramManager', `FragShader:\r\n${fragShaderScript}\r\n`);\r\n    }\r\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\r\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\r\n    this.glContext.deleteShader(fragShader);\r\n    return program;\r\n  }\r\n  bindOutput(td: TextureData): void {\r\n    const width = td.width;\r\n    const height = td.height;\r\n    Logger.verbose(\r\n        'ProrgramManager',\r\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\r\n    this.glContext.attachFramebuffer(td.texture, width, height);\r\n  }\r\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\r\n    const positionHandle = attribLocations.position;\r\n    const textureCoordHandle = attribLocations.textureCoord;\r\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\r\n    this.attributesBound = true;\r\n  }\r\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\r\n      void {\r\n    const gl = this.glContext.gl;\r\n    let texturePosition = 0;\r\n    for (const {name, type, location, arrayLength} of uniformLocations) {\r\n      const value = variables.find(v => v.name === name)?.data;\r\n      if (type !== 'sampler2D' && !value) {\r\n        throw new Error(`variable '${name}' does not have data defined in program info`);\r\n      }\r\n      switch (type) {\r\n        case 'sampler2D':\r\n          this.bindTexture(textures[texturePosition], location, texturePosition);\r\n          texturePosition++;\r\n          break;\r\n        case 'float':\r\n          if (arrayLength) {\r\n            gl.uniform1fv(location, value as number[]);\r\n          } else {\r\n            gl.uniform1f(location, value as number);\r\n          }\r\n          break;\r\n        case 'int':\r\n          if (arrayLength) {\r\n            gl.uniform1iv(location, value as number[]);\r\n          } else {\r\n            gl.uniform1i(location, value as number);\r\n          }\r\n          break;\r\n        default:\r\n          throw new Error(`Uniform not implemented: ${type}`);\r\n      }\r\n    }\r\n  }\r\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\r\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\r\n  }\r\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\r\n    return {\r\n      position: this.getAttribLocation(program, 'position'),\r\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\r\n    };\r\n  }\r\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\r\n      Artifact.UniformLocations {\r\n    const uniformLocations: Artifact.UniformLocations = [];\r\n    if (samplers) {\r\n      for (const sampler of samplers) {\r\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\r\n      }\r\n    }\r\n    if (variables) {\r\n      for (const variable of variables) {\r\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\r\n      }\r\n    }\r\n    return uniformLocations;\r\n  }\r\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\r\n    const gl = this.glContext.gl;\r\n    const reference = gl.getUniformLocation(program, name);\r\n    if (reference === null) {\r\n      throw new Error(`Uniform ${name} not found.`);\r\n    }\r\n    return reference;\r\n  }\r\n  getAttribLocation(program: WebGLProgram, name: string): number {\r\n    const gl = this.glContext.gl;\r\n    const attributeLocation: number = gl.getAttribLocation(program, name);\r\n    return attributeLocation;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {SessionHandler} from '../../backend';\r\nimport {Graph} from '../../graph';\r\nimport {Logger} from '../../instrument';\r\nimport {Operator} from '../../operators';\r\nimport {OpSet, resolveOperator} from '../../opset';\r\nimport {Session} from '../../session';\r\nimport {Tensor} from '../../tensor';\r\nimport {WebGLBackend} from '../backend-webgl';\r\n\r\nimport {WebGLInferenceHandler} from './inference-handler';\r\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\r\nimport {ProgramManager} from './program-manager';\r\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {TextureManager} from './texture-manager';\r\nimport {TextureData} from './types';\r\n\r\nexport class WebGLSessionHandler implements SessionHandler {\r\n  programManager: ProgramManager;\r\n  textureManager: TextureManager;\r\n  layoutStrategy: TextureLayoutStrategy;\r\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\r\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\r\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\r\n  initializers: Set<Tensor.Id>;\r\n  pack?: boolean;\r\n\r\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\r\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\r\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\r\n    this.textureManager = new TextureManager(\r\n        backend.glContext, this.layoutStrategy, this.context.profiler,\r\n        {reuseTextures: backend.textureCacheMode === 'full'});\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache = new Map();\r\n    this.pack = backend.pack;\r\n    this.pack2unpackMap = new Map();\r\n    this.unpack2packMap = new Map();\r\n  }\r\n\r\n  createInferenceHandler() {\r\n    return new WebGLInferenceHandler(this);\r\n  }\r\n  onGraphInitialized(graph: Graph): void {\r\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\r\n    this.initializers = new Set(initializers);\r\n  }\r\n  isInitializer(tensorId: Tensor.Id): boolean {\r\n    return this.initializers ? this.initializers.has(tensorId) : false;\r\n  }\r\n  addInitializer(tensorId: Tensor.Id): void {\r\n    this.initializers.add(tensorId);\r\n  }\r\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\r\n    if (isPacked) {\r\n      return this.packedTextureDataCache.get(tensorId);\r\n    } else {\r\n      return this.unpackedTextureDataCache.get(tensorId);\r\n    }\r\n  }\r\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\r\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\r\n    if (isPacked) {\r\n      this.packedTextureDataCache.set(tensorId, textureData);\r\n    } else {\r\n      this.unpackedTextureDataCache.set(tensorId, textureData);\r\n    }\r\n  }\r\n  dispose(): void {\r\n    this.programManager.dispose();\r\n    this.textureManager.clearActiveTextures();\r\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\r\n    this.packedTextureDataCache = new Map();\r\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\r\n    this.unpackedTextureDataCache = new Map();\r\n  }\r\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\r\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\r\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\n\r\nexport declare namespace Encoder {\r\n  export interface DataTypeMap {\r\n    float: Float32Array;\r\n    byte: Uint8Array;\r\n    int: Uint32Array;\r\n  }\r\n  export type DataType = keyof DataTypeMap;\r\n  type DataArrayType = DataTypeMap[DataType];\r\n\r\n  /* eslint-disable @typescript-eslint/naming-convention */\r\n  export const enum Usage {\r\n    Default = 0,\r\n    UploadOnly,\r\n    Download4BytesAsFloat32,\r\n  }\r\n}\r\n\r\n/**\r\n * Abstraction for mapping data types to texture texlets\r\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\r\n * Decoding means how a texlet's channels are mapped to a resulting Float32\r\n */\r\nexport interface DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\r\n  allocate(size: number): Encoder.DataArrayType;\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\r\n}\r\n/**\r\n * WebGL2 data encoder\r\n * Uses R32F as the format for texlet\r\n */\r\nexport class RedFloat32DataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\r\n    if (channels === 1) {\r\n      this.internalFormat = gl.R32F;\r\n      this.format = gl.RED;\r\n      this.textureType = gl.FLOAT;\r\n      this.channelSize = channels;\r\n    } else if (channels === 4) {\r\n      this.internalFormat = gl.RGBA32F;\r\n      this.format = gl.RGBA;\r\n      this.textureType = gl.FLOAT;\r\n      this.channelSize = channels;\r\n    } else {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n  }\r\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\r\n    let result: Float32Array;\r\n    let source: Float32Array;\r\n    if (src.constructor !== Float32Array) {\r\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\r\n      source = new Float32Array(src);\r\n    }\r\n    if (textureSize * this.channelSize > src.length) {\r\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\r\n      source = src as Float32Array;\r\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\r\n      source.forEach((v, i) => result[i] = v);\r\n    } else {\r\n      source = src as Float32Array;\r\n      result = source;\r\n    }\r\n    return result;\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Float32Array(size * 4);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\r\n    if (this.channelSize === 1) {\r\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\r\n      return filteredData;\r\n    }\r\n    return buffer.subarray(0, dataSize) as Float32Array;\r\n  }\r\n}\r\n/**\r\n * Data encoder for WebGL 1 with support for floating point texture\r\n */\r\nexport class RGBAFloatDataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize: number;\r\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\r\n    if (channels !== 1 && channels !== 4) {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n    this.internalFormat = gl.RGBA;\r\n    this.format = gl.RGBA;\r\n    this.channelSize = channels;\r\n    this.textureType = textureType || gl.FLOAT;\r\n  }\r\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\r\n    let dest = src;\r\n    if (this.channelSize === 1) {\r\n      Logger.verbose('Encoder', 'Exploding into a larger array');\r\n      dest = this.allocate(textureSize) as Float32Array;\r\n      src.forEach((v, i) => dest[i * 4] = v);\r\n    }\r\n    return dest;\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Float32Array(size * 4);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\r\n    if (this.channelSize === 1) {\r\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\r\n      return filteredData;\r\n    }\r\n    return buffer.subarray(0, dataSize) as Float32Array;\r\n  }\r\n}\r\n\r\nexport class Uint8DataEncoder implements DataEncoder {\r\n  internalFormat: number;\r\n  format: number;\r\n  textureType: number;\r\n  channelSize = 4;\r\n  constructor(gl: WebGLRenderingContext, channels = 1) {\r\n    if (channels === 1) {\r\n      this.internalFormat = gl.ALPHA;\r\n      this.format = gl.ALPHA;  // not tested\r\n      this.textureType = gl.UNSIGNED_BYTE;\r\n      this.channelSize = channels;\r\n    } else if (channels === 4) {\r\n      this.internalFormat = gl.RGBA;\r\n      this.format = gl.RGBA;\r\n      this.textureType = gl.UNSIGNED_BYTE;\r\n      this.channelSize = channels;\r\n    } else {\r\n      throw new Error(`Invalid number of channels: ${channels}`);\r\n    }\r\n  }\r\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\r\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\r\n  }\r\n  allocate(size: number): Encoder.DataArrayType {\r\n    return new Uint8Array(size * this.channelSize);\r\n  }\r\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\r\n    if (buffer instanceof Uint8Array) {\r\n      return buffer.subarray(0, dataSize);\r\n    }\r\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\nimport {assert} from '../../util';\r\n/** Layout preferences */\r\nexport interface WidthHeightPrefs {\r\n  breakAxis?: number;\r\n  isPacked?: boolean;\r\n  reverseWH?: boolean;\r\n}\r\n/**\r\n * TextureLayoutStrategy is an abstraction for different plans\r\n * for mapping n-dimensional arrays to 2D textures (and back)\r\n */\r\nexport interface TextureLayoutStrategy {\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\r\n}\r\n\r\n/**\r\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\r\n */\r\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\r\n  constructor(public maxTextureSize: number) {}\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    // scalar tensor\r\n    if (shape.length === 0) {\r\n      return [1, 1];\r\n    }\r\n    const maxTextureSize = this.maxTextureSize;\r\n    if (prefs && prefs.breakAxis !== undefined) {\r\n      // check to see if dims fit\r\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\r\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\r\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\r\n        // ignore preferences\r\n        // continue with default layout\r\n        Logger.verbose(\r\n            'TextureLayout',\r\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\r\n      } else {\r\n        return [wsize, hsize];\r\n      }\r\n    }\r\n    const totalSize = shape.reduce((a, b) => a * b);\r\n\r\n    let width = Math.floor(Math.sqrt(totalSize));\r\n\r\n    for (; width < maxTextureSize && width < totalSize; width++) {\r\n      if (totalSize % width === 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (width >= maxTextureSize || totalSize % width !== 0) {\r\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\r\n    }\r\n    return [width, totalSize / width];\r\n  }\r\n}\r\n\r\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\r\n  constructor(public maxTextureSize: number) {}\r\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    const wh = this.computeTexture(shape, prefs);\r\n    if (prefs && prefs.isPacked) {\r\n      wh[0] /= 2;\r\n      wh[1] /= 2;\r\n    }\r\n    if (prefs && prefs.reverseWH) {\r\n      return [wh[1], wh[0]];\r\n    }\r\n    return wh;\r\n  }\r\n\r\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\r\n    const isPacked = prefs && prefs.isPacked;\r\n    // scalar tensor\r\n    if (shape.length === 0) {\r\n      return isPacked ? [2, 2] : [1, 1];\r\n    }\r\n    let maxTextureSize = this.maxTextureSize;\r\n    if (prefs && prefs.breakAxis !== undefined) {\r\n      // check to see if dims fit\r\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\r\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\r\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\r\n        // ignore preferences\r\n        // continue with default layout\r\n        Logger.verbose(\r\n            'TextureLayout',\r\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\r\n      } else {\r\n        return [wsize, hsize];\r\n      }\r\n    }\r\n    let logShape = shape.slice(0);\r\n    if (isPacked) {\r\n      maxTextureSize = maxTextureSize * 2;\r\n\r\n      // This logic ensures we accurately count the number of packed texels needed\r\n      // to accommodate the tensor. We can only pack values in the same texel if\r\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\r\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\r\n      // fact that the texels containing the third row are half empty.\r\n      logShape = logShape.map(\r\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\r\n\r\n      // Packed texture height is at least 2 (the channel height of a single\r\n      // texel).\r\n      if (logShape.length === 1) {\r\n        logShape = [2, logShape[0]];\r\n      }\r\n    }\r\n\r\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\r\n    if (logShape.length !== 2) {\r\n      const squeezeResult = squeezeShape(logShape);\r\n      logShape = squeezeResult.newShape;\r\n    }\r\n\r\n    const size = sizeFromShape(logShape);\r\n    if (logShape.length <= 1 && size <= maxTextureSize) {\r\n      return [1, size];\r\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\r\n      return logShape as [number, number];\r\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\r\n      return [logShape[0] * logShape[1], logShape[2]];\r\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\r\n      return [logShape[0], logShape[1] * logShape[2]];\r\n    } else if (\r\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\r\n        logShape[3] <= maxTextureSize) {\r\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\r\n    } else if (\r\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\r\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\r\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\r\n    } else {\r\n      if (isPacked) {\r\n        // For packed textures size equals the number of channels required to\r\n        // accommodate the texture data. However in order to squarify such that\r\n        // inner dimensions stay even, we rewrite size to equal the number of\r\n        // texels. Then in the return statement we rehydrate the squarified\r\n        // dimensions to channel units.\r\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\r\n      }\r\n      return sizeToSquarishShape(size);\r\n    }\r\n  }\r\n}\r\n\r\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\r\n  const newShape: number[] = [];\r\n  const keptDims: number[] = [];\r\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\r\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\r\n  let j = 0;\r\n  for (let i = 0; i < shape.length; ++i) {\r\n    if (axes != null) {\r\n      if (axes[j] === i && shape[i] !== 1) {\r\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\r\n      }\r\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\r\n        newShape.push(shape[i]);\r\n        keptDims.push(i);\r\n      }\r\n      if (axes[j] <= i) {\r\n        j++;\r\n      }\r\n    }\r\n    if (shape[i] !== 1) {\r\n      newShape.push(shape[i]);\r\n      keptDims.push(i);\r\n    }\r\n  }\r\n  return {newShape, keptDims};\r\n}\r\n\r\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\r\n  const rank = shape.length;\r\n\r\n  // Normalize input\r\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\r\n\r\n  // Check for valid range\r\n  assert(\r\n      axis.every(ax => ax >= -rank && ax < rank),\r\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\r\n          `got axis ${axis}`);\r\n\r\n  // Check for only integers\r\n  assert(\r\n      axis.every(isInt),\r\n      () => 'All values in axis param must be integers but ' +\r\n          `got axis ${axis}`);\r\n\r\n  // Handle negative axis.\r\n  return axis.map(a => a < 0 ? rank + a : a);\r\n}\r\nexport function isInt(a: number): boolean {\r\n  return a % 1 === 0;\r\n}\r\nexport function sizeFromShape(shape: number[]): number {\r\n  if (shape.length === 0) {\r\n    // Scalar.\r\n    return 1;\r\n  }\r\n  let size = shape[0];\r\n  for (let i = 1; i < shape.length; i++) {\r\n    size *= shape[i];\r\n  }\r\n  return size;\r\n}\r\nexport function getRowsCols(shape: number[]): [number, number] {\r\n  if (shape.length === 0) {\r\n    throw Error('Cannot get rows and columns of an empty shape array.');\r\n  }\r\n\r\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\r\n}\r\nexport function sizeToSquarishShape(size: number): [number, number] {\r\n  const width = Math.ceil(Math.sqrt(size));\r\n  return [width, Math.ceil(size / width)];\r\n}\r\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\r\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {ShapeUtil} from '../../util';\r\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\r\nimport {TextureLayout, TextureType} from './types';\r\n\r\nexport const createTextureLayoutFromTextureType =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\r\n     textureType: TextureType): TextureLayout => {\r\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\r\n      const isPacked = textureType === TextureType.packed;\r\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\r\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\r\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\r\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\r\n          undefined;\r\n      return createTextureLayoutFromShape(\r\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\r\n    };\r\n\r\nexport const calculateTextureWidthAndHeight =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\r\n        [number, number] => {\r\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\r\n          return [layout.width, layout.height];\r\n        };\r\n\r\n/**\r\n * Create a TextureLayout object from shape.\r\n */\r\nexport const createTextureLayoutFromShape =\r\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\r\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\r\n      const isPacked = !!(prefs && prefs.isPacked);\r\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\r\n      const rank = shape.length;\r\n      let inferredDims = shape.slice(0);\r\n      if (rank === 0) {\r\n        inferredDims = [1];\r\n      }\r\n      if (channels === 1) {\r\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\r\n        unpackedShape = shape;\r\n      } else if (isPacked) {\r\n        if (channels !== 4) {\r\n          throw new Error('a packed texture must be 4-channel');\r\n        }\r\n        unpackedShape = shape;\r\n        if (rank > 0) {\r\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\r\n        }\r\n        if (rank > 1) {\r\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\r\n        }\r\n      } else if (!unpackedShape) {\r\n        throw new Error('Unpacked shape is needed when using channels > 1');\r\n      }\r\n      return {\r\n        width,\r\n        height,\r\n        channels,\r\n        isPacked,\r\n        shape: inferredDims,\r\n        strides: ShapeUtil.computeStrides(inferredDims),\r\n        unpackedShape,\r\n        reversedWH: (prefs && prefs.reverseWH)\r\n      };\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger, Profiler} from '../../instrument';\r\nimport {Tensor} from '../../tensor';\r\n\r\nimport {Encoder} from './texture-data-encoder';\r\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\r\nimport {TextureData, TextureLayout} from './types';\r\nimport {WebGLContext} from './webgl-context';\r\n\r\nexport interface TextureManagerConfig {\r\n  reuseTextures?: boolean;\r\n}\r\n\r\n/**\r\n * TextureManager is the mainly responsible for caching Textures\r\n * Textures are cached in 2 levels:\r\n *   1. the texures which are associated with a dataId (from Tensor)\r\n *    Caching these is crucial to performance. These are In-use Textures\r\n *   2. textures which are not in use by any current ProgramInfo/Tensor\r\n *     These are called Free Textures\r\n * TextureManager is also used to help creating textures. For this it\r\n * uses WebGLContext and TextureLayoutStrategy\r\n */\r\nexport class TextureManager {\r\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\r\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\r\n  private readonly textureLookup: Map<WebGLTexture, string>;\r\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\r\n\r\n  constructor(\r\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\r\n      private config: TextureManagerConfig) {\r\n    if (config.reuseTextures) {\r\n      this.inUseTextures = new Map();\r\n      this.idleTextures = new Map();\r\n      this.textureLookup = new Map();\r\n    }\r\n  }\r\n  createTextureFromLayout(\r\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\r\n    const textureDataType = this.toEncoderType(dataType);\r\n\r\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\r\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\r\n      throw new Error('not implemented');\r\n    }\r\n    const width = layout.width;\r\n    const height = layout.height;\r\n\r\n    let key: string|undefined;\r\n    let inUseTextures: WebGLTexture[]|undefined;\r\n    if (this.config.reuseTextures) {\r\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\r\n      inUseTextures = this.inUseTextures.get(key);\r\n      if (!inUseTextures) {\r\n        inUseTextures = [];\r\n        this.inUseTextures.set(key, inUseTextures);\r\n      }\r\n\r\n      const idleTextures = this.idleTextures.get(key);\r\n      if (idleTextures && idleTextures.length > 0) {\r\n        const texture = idleTextures.pop()!;\r\n        inUseTextures.push(texture);\r\n        if (usage === Encoder.Usage.UploadOnly) {\r\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\r\n        }\r\n        return texture;\r\n      }\r\n    }\r\n\r\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\r\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\r\n\r\n    if (this.config.reuseTextures) {\r\n      inUseTextures!.push(texture);\r\n      this.textureLookup.set(texture, key!);\r\n    }\r\n    return texture;\r\n  }\r\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\r\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\r\n      const data = this.glContext.readTexture(\r\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\r\n      return this.toTensorData(dataType, data);\r\n    });\r\n  }\r\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\r\n    const dataId = td.tensor.dataId;\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    if (this.pendingRead.has(dataId)) {\r\n      const subscribers = this.pendingRead.get(dataId);\r\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\r\n    }\r\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\r\n      this.pendingRead.set(dataId, []);\r\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\r\n      // add a fence waiting for the data to be ready\r\n      await this.glContext.createAndWaitForFence();\r\n      const data = this.glContext.readTexture(\r\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\r\n      const tensorData = this.toTensorData(dataType, data);\r\n      const subscribers = this.pendingRead.get(dataId);\r\n      this.pendingRead.delete(dataId);\r\n      subscribers?.forEach(resolve => resolve(tensorData));\r\n      return tensorData;\r\n    });\r\n  }\r\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\r\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\r\n      const dataSize = td.shape.reduce((a, b) => a * b);\r\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\r\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\r\n    });\r\n  }\r\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\r\n    let key: string|undefined;\r\n    if (this.config.reuseTextures) {\r\n      key = this.textureLookup.get(textureData.texture);\r\n      if (key) {\r\n        if (deleteTexture) {\r\n          this.textureLookup.delete(key);\r\n        }\r\n        const inUseTextures = this.inUseTextures.get(key);\r\n        if (inUseTextures) {\r\n          const index = inUseTextures.indexOf(textureData.texture);\r\n          if (index !== -1) {\r\n            inUseTextures.splice(index, 1);\r\n            let idleTextures = this.idleTextures.get(key);\r\n            if (!idleTextures) {\r\n              idleTextures = [];\r\n              this.idleTextures.set(key, idleTextures);\r\n            }\r\n            idleTextures.push(textureData.texture);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!key || deleteTexture) {\r\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\r\n      this.glContext.deleteTexture(textureData.texture);\r\n    }\r\n  }\r\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\r\n    switch (dataType) {\r\n      case 'int16':\r\n        return data instanceof Int16Array ? data : Int16Array.from(data);\r\n      case 'int32':\r\n        return data instanceof Int32Array ? data : Int32Array.from(data);\r\n      case 'int8':\r\n        return data instanceof Int8Array ? data : Int8Array.from(data);\r\n      case 'uint16':\r\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\r\n      case 'uint32':\r\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\r\n      case 'uint8':\r\n      case 'bool':\r\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\r\n      case 'float32':\r\n        return data instanceof Float32Array ? data : Float32Array.from(data);\r\n      case 'float64':\r\n        return data instanceof Float64Array ? data : Float64Array.from(data);\r\n      default:\r\n        throw new Error(`TensorData type ${dataType} is not supported`);\r\n    }\r\n  }\r\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\r\n    if (!data) {\r\n      return undefined;\r\n    }\r\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\r\n    /*\r\n    switch (dataType) {\r\n      case 'int16':\r\n      case 'int32':\r\n      case 'uint16':\r\n      case 'uint32':\r\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\r\n      case 'int8':\r\n      case 'uint8':\r\n      case 'bool':\r\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\r\n      case 'float32':\r\n      case 'float64':\r\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\r\n      default:\r\n        throw new Error(`TensorData type ${dataType} is not supported`);\r\n    }\r\n    */\r\n  }\r\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\r\n    return 'float';\r\n    // switch (dataType) {\r\n    //   case 'int16':\r\n    //   case 'int32':\r\n    //   case 'uint16':\r\n    //   case 'uint32':\r\n    //     return 'int';\r\n    //   case 'uint8':\r\n    //   case 'bool':\r\n    //     return 'byte';\r\n    //   case 'float32':\r\n    //   case 'float64':\r\n    //     return 'float';\r\n    //   default:\r\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\r\n    // }\r\n  }\r\n  clearActiveTextures(): void {\r\n    this.glContext.clearActiveTextures();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Tensor} from '../../tensor';\r\n\r\n/**\r\n * Layout info is used for mapping n-dimensional array to 2D textures\r\n * The layout is created by the TextureLayoutStrategy based on\r\n * the Tensor's dimensions and strides\r\n */\r\nexport interface TextureLayout {\r\n  width: number;\r\n  height: number;\r\n  /**\r\n   * specify the number of value that encoded in a single pixel\r\n   */\r\n  channels: 1|2|3|4;\r\n  /**\r\n   * whether in packed mode or not\r\n   */\r\n  isPacked?: boolean;\r\n  /**\r\n   * the normalized shape\r\n   */\r\n  shape: readonly number[];\r\n  /**\r\n   * the stride of each dimensions, calculated according to shape\r\n   */\r\n  strides: readonly number[];\r\n  /**\r\n   * the original shape(dims) of the corresponding tensor\r\n   */\r\n  unpackedShape: readonly number[];\r\n\r\n  reversedWH?: boolean;\r\n}\r\nexport interface TextureData extends TextureLayout {\r\n  tensor: Tensor;\r\n  texture: WebGLTexture;\r\n}\r\n\r\nexport enum TextureType {\r\n  unpacked,              // <-- normal unpacked texture\r\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\r\n  packed,                // <-- normal packed texture\r\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\r\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\r\n}\r\n\r\nexport interface TensorInfo {\r\n  id?: Tensor.Id;\r\n  dims: readonly number[];\r\n  type: Tensor.DataType;\r\n  textureType: TextureType;\r\n}\r\n\r\nexport interface ProgramVariable {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n  data: number|number[];\r\n}\r\n\r\n/**\r\n * A set of metadata of a shader program.\r\n */\r\nexport interface ProgramMetadata {\r\n  /**\r\n   * the name of the program. used for debugging and profiling\r\n   */\r\n  name: string;\r\n  /**\r\n   * texture types for each input\r\n   */\r\n  inputTypes: TextureType[];\r\n  /**\r\n   * names of each input\r\n   */\r\n  inputNames: string[];\r\n  /**\r\n   * an optional string as a cache hint in the artifact cache\r\n   */\r\n  cacheHint?: string;\r\n}\r\n\r\n/**\r\n * A ProgramInfoLoader allows\r\n */\r\nexport interface ProgramInfoLoader extends ProgramMetadata {\r\n  /**\r\n   * a function to get the program info\r\n   */\r\n  get(): ProgramInfo;\r\n}\r\n\r\n/**\r\n * A set of data that represent a shader program\r\n */\r\nexport interface ProgramInfo extends ProgramMetadata {\r\n  /**\r\n   * information of uniform variables\r\n   */\r\n  variables?: ProgramVariable[];\r\n  /**\r\n   * tensor info for output\r\n   */\r\n  output: TensorInfo;\r\n  /**\r\n   * the shader's processing source code\r\n   */\r\n  shaderSource: string;\r\n  /**\r\n   * whether the shader source contains a customized main function implementation\r\n   */\r\n  hasMain?: boolean;\r\n}\r\n\r\nexport interface VariableInfo {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n}\r\n\r\nexport interface ProgramVariable {\r\n  type: 'float'|'int';\r\n  name: string;\r\n  arrayLength?: number;\r\n  data: number|number[];\r\n}\r\n\r\n/**\r\n * Information of uniforms that shader uses\r\n */\r\nexport interface UniformInfo {\r\n  type: 'sampler2D'|VariableInfo['type'];\r\n  name: string;\r\n  arrayLength?: number;\r\n}\r\n\r\nexport interface UniformLocation extends UniformInfo {\r\n  location: WebGLUniformLocation;\r\n}\r\n\r\n/**\r\n * Artifact is the result of compilation\r\n * It does not contain input of output data\r\n * However anything that could be run as a \"program\"\r\n */\r\nexport interface Artifact {\r\n  programInfo: ProgramInfo;\r\n  program: WebGLProgram;\r\n  uniformLocations: UniformLocation[];\r\n  attribLocations: {position: number; textureCoord: number};\r\n}\r\nexport declare namespace Artifact {\r\n  type UniformLocations = Artifact['uniformLocations'];\r\n  type AttribLocations = Artifact['attribLocations'];\r\n}\r\n\r\nexport interface UniformData {\r\n  [name: string]: number|number[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {assert} from '../../util';\r\n/**\r\n * Given a non RGBA shape calculate the R version\r\n * It is assumed that the dimensions are multiples of given channels\r\n * NOTE: it is always the last dim that gets packed.\r\n * @param unpackedShape original shape to create a packed version from\r\n */\r\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\r\n  const len = unpackedShape.length;\r\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\r\n}\r\n\r\nexport async function repeatedTry(\r\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    let tryCount = 0;\r\n\r\n    const tryFn = () => {\r\n      if (checkFn()) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      tryCount++;\r\n\r\n      const nextBackoff = delayFn(tryCount);\r\n\r\n      if (maxCounter != null && tryCount >= maxCounter) {\r\n        reject();\r\n        return;\r\n      }\r\n      setTimeout(tryFn, nextBackoff);\r\n    };\r\n\r\n    tryFn();\r\n  });\r\n}\r\n\r\n/**\r\n * Generates the function name from an input sampler name.\r\n * @param samplerName Name of the sampler.\r\n */\r\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\r\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\r\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\r\n}\r\n\r\n/**\r\n * Generates the function name from an input sampler name at output coordinates.\r\n * @param samplerName Name of the sampler.\r\n */\r\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\r\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\r\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\r\n}\r\n\r\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\r\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\r\n  // Deep copy.\r\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\r\n  newInputShape = squeezedShape;\r\n  return newInputShape;\r\n}\r\n\r\n/** Returns a list of squeezed parameters for shader functions */\r\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\r\n  return keptDims.map(d => params[d]).join(', ');\r\n}\r\n\r\n/** Returns the data type for different ranks. */\r\nexport function getCoordsDataType(rank: number): string {\r\n  if (rank <= 1) {\r\n    return 'int';\r\n  } else if (rank === 2) {\r\n    return 'ivec2';\r\n  } else if (rank === 3) {\r\n    return 'ivec3';\r\n  } else if (rank === 4) {\r\n    return 'ivec4';\r\n  } else if (rank === 5) {\r\n    return 'ivec5';\r\n  } else if (rank === 6) {\r\n    return 'ivec6';\r\n  } else {\r\n    throw Error(`GPU for rank ${rank} is not yet supported`);\r\n  }\r\n}\r\n\r\nexport function getGlChannels(rank = 6): string[] {\r\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Logger} from '../../instrument';\r\n\r\nimport {WebGLContext} from './webgl-context';\r\n\r\nconst cache: {[contextId: string]: WebGLContext} = {};\r\n\r\n/**\r\n * This factory function creates proper WebGLRenderingContext based on\r\n * the current browsers capabilities\r\n * The order is from higher/most recent versions to most basic\r\n */\r\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\r\n  let context: WebGLContext|undefined;\r\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\r\n    context = cache.webgl2;\r\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\r\n    context = cache.webgl;\r\n  }\r\n\r\n  context = context || createNewWebGLContext(contextId);\r\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\r\n  const gl = context.gl;\r\n\r\n  cache[contextId] = context;\r\n\r\n  if (gl.isContextLost()) {\r\n    delete cache[contextId];\r\n    return createWebGLContext(contextId);\r\n  }\r\n\r\n  gl.disable(gl.DEPTH_TEST);\r\n  gl.disable(gl.STENCIL_TEST);\r\n  gl.disable(gl.BLEND);\r\n  gl.disable(gl.DITHER);\r\n  gl.disable(gl.POLYGON_OFFSET_FILL);\r\n  gl.disable(gl.SAMPLE_COVERAGE);\r\n  gl.enable(gl.SCISSOR_TEST);\r\n  gl.enable(gl.CULL_FACE);\r\n  gl.cullFace(gl.BACK);\r\n\r\n  return context;\r\n}\r\n\r\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\r\n  const canvas = createCanvas();\r\n  const contextAttributes: WebGLContextAttributes = {\r\n    alpha: false,\r\n    depth: false,\r\n    antialias: false,\r\n    stencil: false,\r\n    preserveDrawingBuffer: false,\r\n    premultipliedAlpha: false,\r\n    failIfMajorPerformanceCaveat: false\r\n  };\r\n  let gl: WebGLRenderingContext|null;\r\n  const ca = contextAttributes;\r\n  if (!contextId || contextId === 'webgl2') {\r\n    gl = canvas.getContext('webgl2', ca);\r\n    if (gl) {\r\n      try {\r\n        return new WebGLContext(gl, 2);\r\n      } catch (err) {\r\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\r\n      }\r\n    }\r\n  }\r\n  if (!contextId || contextId === 'webgl') {\r\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\r\n    if (gl) {\r\n      try {\r\n        return new WebGLContext(gl, 1);\r\n      } catch (err) {\r\n        Logger.warning(\r\n            'GlContextFactory',\r\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('WebGL is not supported');\r\n}\r\n\r\nfunction createCanvas(): HTMLCanvasElement {\r\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  return canvas;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env} from 'onnxruntime-common';\r\n\r\nimport * as DataEncoders from './texture-data-encoder';\r\nimport {DataEncoder, Encoder} from './texture-data-encoder';\r\nimport {repeatedTry} from './utils';\r\n\r\nexport interface FenceContext {\r\n  query: WebGLSync|null;\r\n  isFencePassed(): boolean;\r\n}\r\n\r\ntype PollItem = {\r\n  isDoneFn: () => boolean; resolveFn: () => void;\r\n};\r\n\r\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\r\n  let i = 0;\r\n  for (; i < arr.length; ++i) {\r\n    const isDone = arr[i]();\r\n    if (!isDone) {\r\n      break;\r\n    }\r\n  }\r\n  return i - 1;\r\n}\r\n\r\n/**\r\n * Abstraction and wrapper around WebGLRenderingContext and its operations\r\n */\r\nexport class WebGLContext {\r\n  gl: WebGLRenderingContext;\r\n  version: 1|2;\r\n\r\n  private vertexbuffer: WebGLBuffer;\r\n  private framebuffer: WebGLFramebuffer;\r\n\r\n  // WebGL flags and vital parameters\r\n  private isFloatTextureAttachableToFrameBuffer: boolean;\r\n  isFloat32DownloadSupported: boolean;\r\n  isRenderFloat32Supported: boolean;\r\n  isBlendSupported: boolean;\r\n  maxTextureSize: number;\r\n  // private maxCombinedTextureImageUnits: number;\r\n  private maxTextureImageUnits: number;\r\n  // private maxCubeMapTextureSize: number;\r\n  // private shadingLanguageVersion: string;\r\n  // private webglVendor: string;\r\n  // private webglVersion: string;\r\n\r\n  // WebGL2 flags and vital parameters\r\n  // private max3DTextureSize: number;\r\n  // private maxArrayTextureLayers: number;\r\n  // private maxColorAttachments: number;\r\n  // private maxDrawBuffers: number;\r\n\r\n  // WebGL extensions\r\n  // eslint-disable-next-line camelcase\r\n  textureFloatExtension: OES_texture_float|null;\r\n  // eslint-disable-next-line camelcase\r\n  textureHalfFloatExtension: OES_texture_half_float|null;\r\n\r\n  // WebGL2 extensions\r\n  colorBufferFloatExtension: unknown|null;\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\r\n\r\n  private disposed: boolean;\r\n  private frameBufferBound = false;\r\n\r\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\r\n    this.gl = gl;\r\n    this.version = version;\r\n\r\n    this.getExtensions();\r\n    this.vertexbuffer = this.createVertexbuffer();\r\n    this.framebuffer = this.createFramebuffer();\r\n    this.queryVitalParameters();\r\n  }\r\n\r\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\r\n    const gl = this.gl;\r\n    // create the texture\r\n    const texture = gl.createTexture();\r\n    // bind the texture so the following methods effect this texture.\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    const buffer = data ? encoder.encode(data, width * height) : null;\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,  // Level of detail.\r\n        encoder.internalFormat, width, height,\r\n        0,  // Always 0 in OpenGL ES.\r\n        encoder.format, encoder.textureType, buffer);\r\n    this.checkError();\r\n    return texture as WebGLTexture;\r\n  }\r\n  updateTexture(\r\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\r\n    const gl = this.gl;\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    const buffer = encoder.encode(data, width * height);\r\n    gl.texSubImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,  // level\r\n        0,  // xoffset\r\n        0,  // yoffset\r\n        width, height, encoder.format, encoder.textureType, buffer);\r\n    this.checkError();\r\n  }\r\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\r\n    const gl = this.gl;\r\n    // Make it the target for framebuffer operations - including rendering.\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\r\n        0);  // 0, we aren't using MIPMAPs\r\n    this.checkError();\r\n    gl.viewport(0, 0, width, height);\r\n    gl.scissor(0, 0, width, height);\r\n  }\r\n  readTexture(\r\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\r\n      channels: number): Encoder.DataArrayType {\r\n    const gl = this.gl;\r\n    if (!channels) {\r\n      channels = 1;\r\n    }\r\n    if (!this.frameBufferBound) {\r\n      this.attachFramebuffer(texture, width, height);\r\n    }\r\n    const encoder = this.getEncoder(dataType, channels);\r\n    const buffer = encoder.allocate(width * height);\r\n    // bind texture to framebuffer\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\r\n        0);  // 0, we aren't using MIPMAPs\r\n    // TODO: Check if framebuffer is ready\r\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\r\n    this.checkError();\r\n    // unbind FB\r\n    return encoder.decode(buffer, dataSize);\r\n  }\r\n\r\n  isFramebufferReady(): boolean {\r\n    // TODO: Implement logic to check if the framebuffer is ready\r\n    return true;\r\n  }\r\n  getActiveTexture(): string {\r\n    const gl = this.gl;\r\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\r\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\r\n  }\r\n  getTextureBinding(): WebGLTexture {\r\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\r\n  }\r\n  getFramebufferBinding(): WebGLFramebuffer {\r\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\r\n  }\r\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\r\n    const gl = this.gl;\r\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\r\n    gl.enableVertexAttribArray(positionHandle);\r\n    if (textureCoordHandle !== -1) {\r\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\r\n      gl.enableVertexAttribArray(textureCoordHandle);\r\n    }\r\n    this.checkError();\r\n  }\r\n  createProgram(\r\n      vertexShader: WebGLShader,\r\n      fragShader: WebGLShader,\r\n      ): WebGLProgram {\r\n    const gl = this.gl;\r\n    const program = gl.createProgram()!;\r\n\r\n    // the program consists of our shaders\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n    return program;\r\n  }\r\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(shaderType);\r\n    if (!shader) {\r\n      throw new Error(`createShader() returned null with type ${shaderType}`);\r\n    }\r\n\r\n    gl.shaderSource(shader, shaderSource);\r\n    gl.compileShader(shader);\r\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\r\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\r\nShader source:\r\n${shaderSource}`);\r\n    }\r\n    return shader;\r\n  }\r\n  deleteShader(shader: WebGLShader): void {\r\n    this.gl.deleteShader(shader);\r\n  }\r\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\r\n    const gl = this.gl;\r\n    gl.activeTexture(gl.TEXTURE0 + position);\r\n    this.checkError();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    this.checkError();\r\n    gl.uniform1i(uniformHandle, position);\r\n    this.checkError();\r\n  }\r\n  draw(): void {\r\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\r\n    this.checkError();\r\n  }\r\n  checkError(): void {\r\n    if (env.debug) {\r\n      const gl = this.gl;\r\n      const error = gl.getError();\r\n      let label = '';\r\n      switch (error) {\r\n        case (gl.NO_ERROR):\r\n          return;\r\n        case (gl.INVALID_ENUM):\r\n          label = 'INVALID_ENUM';\r\n          break;\r\n        case (gl.INVALID_VALUE):\r\n          label = 'INVALID_VALUE';\r\n          break;\r\n        case (gl.INVALID_OPERATION):\r\n          label = 'INVALID_OPERATION';\r\n          break;\r\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\r\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\r\n          break;\r\n        case (gl.OUT_OF_MEMORY):\r\n          label = 'OUT_OF_MEMORY';\r\n          break;\r\n        case (gl.CONTEXT_LOST_WEBGL):\r\n          label = 'CONTEXT_LOST_WEBGL';\r\n          break;\r\n        default:\r\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\r\n      }\r\n      throw new Error(label);\r\n    }\r\n  }\r\n  deleteTexture(texture: WebGLTexture): void {\r\n    this.gl.deleteTexture(texture);\r\n  }\r\n  deleteProgram(program: WebGLProgram): void {\r\n    this.gl.deleteProgram(program);\r\n  }\r\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\r\n    if (this.version === 2) {\r\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\r\n    }\r\n\r\n    switch (dataType) {\r\n      case 'float':\r\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\r\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\r\n        } else {\r\n          return new DataEncoders.RGBAFloatDataEncoder(\r\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\r\n        }\r\n      case 'int':\r\n        throw new Error('not implemented');\r\n      case 'byte':\r\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\r\n      default:\r\n        throw new Error(`Invalid dataType: ${dataType}`);\r\n    }\r\n  }\r\n  clearActiveTextures(): void {\r\n    const gl = this.gl;\r\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\r\n      gl.activeTexture(gl.TEXTURE0 + unit);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n  }\r\n  dispose(): void {\r\n    if (this.disposed) {\r\n      return;\r\n    }\r\n    const gl = this.gl;\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.deleteFramebuffer(this.framebuffer);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.deleteBuffer(this.vertexbuffer);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    gl.finish();\r\n    this.disposed = true;\r\n  }\r\n\r\n  private createDefaultGeometry(): Float32Array {\r\n    // Sets of x,y,z(=0),s,t coordinates.\r\n    return new Float32Array([\r\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\r\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\r\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\r\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\r\n    ]);\r\n  }\r\n  private createVertexbuffer(): WebGLBuffer {\r\n    const gl = this.gl;\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      throw new Error('createBuffer() returned null');\r\n    }\r\n    const geometry = this.createDefaultGeometry();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\r\n    this.checkError();\r\n    return buffer;\r\n  }\r\n  private createFramebuffer(): WebGLFramebuffer {\r\n    const fb = this.gl.createFramebuffer();\r\n    if (!fb) {\r\n      throw new Error('createFramebuffer returned null');\r\n    }\r\n    return fb;\r\n  }\r\n\r\n  private queryVitalParameters(): void {\r\n    const gl = this.gl;\r\n\r\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\r\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\r\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\r\n\r\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\r\n      throw new Error('both float32 and float16 TextureType are not supported');\r\n    }\r\n\r\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\r\n\r\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\r\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\r\n    // this.webglVersion = gl.getParameter(gl.VERSION);\r\n\r\n    if (this.version === 2) {\r\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\r\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\r\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\r\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\r\n    }\r\n  }\r\n  private getExtensions(): void {\r\n    if (this.version === 2) {\r\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\r\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\r\n    } else {\r\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\r\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\r\n    }\r\n  }\r\n\r\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\r\n    // test whether Float32 texture is supported:\r\n    // STEP.1 create a float texture\r\n    const gl = this.gl;\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\r\n    // STEP.2 bind a frame buffer\r\n    const frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n    // STEP.3 attach texture to framebuffer\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n    // STEP.4 test whether framebuffer is complete\r\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.deleteTexture(texture);\r\n    gl.deleteFramebuffer(frameBuffer);\r\n    return isComplete;\r\n  }\r\n\r\n  private checkRenderFloat32(): boolean {\r\n    if (this.version === 2) {\r\n      if (!this.colorBufferFloatExtension) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.textureFloatExtension) {\r\n        return false;\r\n      }\r\n    }\r\n    return this.isFloatTextureAttachableToFrameBuffer;\r\n  }\r\n\r\n  private checkFloat32Download(): boolean {\r\n    if (this.version === 2) {\r\n      if (!this.colorBufferFloatExtension) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.textureFloatExtension) {\r\n        return false;\r\n      }\r\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\r\n        return false;\r\n      }\r\n    }\r\n    return this.isFloatTextureAttachableToFrameBuffer;\r\n  }\r\n\r\n  /**\r\n   * Check whether GL_BLEND is supported\r\n   */\r\n  private checkFloat32Blend(): boolean {\r\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\r\n    // https://github.com/microsoft/onnxjs/issues/145\r\n\r\n    const gl = this.gl;\r\n\r\n    let texture: WebGLTexture|null|undefined;\r\n    let frameBuffer: WebGLFramebuffer|null|undefined;\r\n    let vertexShader: WebGLShader|null|undefined;\r\n    let fragmentShader: WebGLShader|null|undefined;\r\n    let program: WebGLProgram|null|undefined;\r\n\r\n    try {\r\n      texture = gl.createTexture();\r\n      frameBuffer = gl.createFramebuffer();\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n      // eslint-disable-next-line @typescript-eslint/naming-convention\r\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\r\n\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n\r\n      gl.enable(gl.BLEND);\r\n\r\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n      if (!vertexShader) {\r\n        return false;\r\n      }\r\n      gl.shaderSource(vertexShader, 'void main(){}');\r\n      gl.compileShader(vertexShader);\r\n\r\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n      if (!fragmentShader) {\r\n        return false;\r\n      }\r\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\r\n      gl.compileShader(fragmentShader);\r\n\r\n      program = gl.createProgram();\r\n      if (!program) {\r\n        return false;\r\n      }\r\n      gl.attachShader(program, vertexShader);\r\n      gl.attachShader(program, fragmentShader);\r\n      gl.linkProgram(program);\r\n      gl.useProgram(program);\r\n\r\n      gl.drawArrays(gl.POINTS, 0, 1);\r\n      return gl.getError() === gl.NO_ERROR;\r\n\r\n    } finally {\r\n      gl.disable(gl.BLEND);\r\n\r\n      if (program) {\r\n        gl.deleteProgram(program);\r\n      }\r\n      if (vertexShader) {\r\n        gl.deleteShader(vertexShader);\r\n      }\r\n      if (fragmentShader) {\r\n        gl.deleteShader(fragmentShader);\r\n      }\r\n      if (frameBuffer) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.deleteFramebuffer(frameBuffer);\r\n      }\r\n      if (texture) {\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.deleteTexture(texture);\r\n      }\r\n    }\r\n  }\r\n\r\n  beginTimer(): WebGLQuery {\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n\r\n      const query = gl2.createQuery() as WebGLQuery;\r\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\r\n      return query;\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported.');\r\n    }\r\n  }\r\n\r\n  endTimer() {\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\r\n      return;\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n  }\r\n\r\n  isTimerResultAvailable(query: WebGLQuery): boolean {\r\n    let available = false, disjoint = false;\r\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      const ext = this.disjointTimerQueryWebgl2Extension;\r\n\r\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\r\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n\r\n    return available && !disjoint;\r\n  }\r\n\r\n  getTimerResult(query: WebGLQuery): number {\r\n    let timeElapsed = 0;\r\n    if (this.version === 2) {\r\n      const gl2 = this.gl as WebGL2RenderingContext;\r\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\r\n      gl2.deleteQuery(query);\r\n    } else {\r\n      // TODO: add webgl 1 handling.\r\n      throw new Error('WebGL1 profiling currently not supported');\r\n    }\r\n    // return miliseconds\r\n    return timeElapsed / 1000000;\r\n  }\r\n\r\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\r\n    await repeatedTry(() => this.isTimerResultAvailable(query));\r\n    return this.getTimerResult(query);\r\n  }\r\n\r\n  public async createAndWaitForFence(): Promise<void> {\r\n    const fenceContext = this.createFence(this.gl);\r\n    return this.pollFence(fenceContext);\r\n  }\r\n\r\n  private createFence(gl: WebGLRenderingContext): FenceContext {\r\n    let isFencePassed: () => boolean;\r\n    const gl2 = gl as WebGL2RenderingContext;\r\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\r\n    gl.flush();\r\n    if (query === null) {\r\n      isFencePassed = () => true;\r\n    } else {\r\n      isFencePassed = () => {\r\n        const status = gl2.clientWaitSync(query, 0, 0);\r\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\r\n      };\r\n    }\r\n    return {query, isFencePassed};\r\n  }\r\n\r\n  async pollFence(fenceContext: FenceContext) {\r\n    return new Promise<void>(resolve => {\r\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\r\n    });\r\n  }\r\n\r\n  private itemsToPoll: PollItem[] = [];\r\n\r\n  pollItems(): void {\r\n    // Find the last query that has finished.\r\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\r\n    for (let i = 0; i <= index; ++i) {\r\n      const {resolveFn} = this.itemsToPoll[i];\r\n      resolveFn();\r\n    }\r\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\r\n  }\r\n\r\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\r\n    this.itemsToPoll.push({isDoneFn, resolveFn});\r\n    if (this.itemsToPoll.length > 1) {\r\n      // We already have a running loop that polls.\r\n      return;\r\n    }\r\n    // Start a new loop that polls.\r\n    await repeatedTry(() => {\r\n      this.pollItems();\r\n      // End the loop if no more items to poll.\r\n      return this.itemsToPoll.length === 0;\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {SessionHandler} from './backend';\r\nimport {Graph} from './graph';\r\nimport {Logger, Profiler} from './instrument';\r\nimport {Operator} from './operators';\r\nimport {Tensor} from './tensor';\r\n\r\nclass KernelOp {\r\n  constructor(public op: Operator, public node: Graph.Node) {}\r\n}\r\n\r\nexport class ExecutionPlan {\r\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\r\n    this.initialize(ops);\r\n  }\r\n\r\n  initialize(ops: Operator[]) {\r\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\r\n      const graphNodes = this.graph.getNodes();\r\n      if (graphNodes.length !== ops.length) {\r\n        throw new Error('The size of nodes and OPs do not match.');\r\n      }\r\n\r\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\r\n      this.reset();\r\n\r\n      // look for starter node(s)\r\n      this._starter = [];\r\n      this._ops.forEach((op, i) => {\r\n        let resolved = true;\r\n        for (const input of op.node.inputs) {\r\n          if (\r\n              !this._values[input]                                   // not an initialized input\r\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\r\n          ) {\r\n            resolved = false;\r\n            break;\r\n          }\r\n        }\r\n        if (resolved) {\r\n          this._starter.push(i);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this._values = this.graph.getValues().map(i => i.tensor);\r\n  }\r\n\r\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\r\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\r\n      // reset mediem result\r\n      this.reset();\r\n\r\n      // create inference handler\r\n      const inferenceHandler = sessionHandler.createInferenceHandler();\r\n\r\n      // populate inputs value\r\n      const graphInputs = this.graph.getInputIndices();\r\n      if (modelInputs.length !== graphInputs.length) {\r\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\r\n            modelInputs.length} expected: ${graphInputs.length}`);\r\n      }\r\n\r\n      modelInputs.forEach((input, i) => {\r\n        const index = graphInputs[i];\r\n        this._values[index] = input;\r\n      });\r\n\r\n      // prepare running sequence\r\n      const sequence: number[] = this._starter.slice(0);\r\n\r\n      // execution iterations\r\n      const graphValues = this.graph.getValues();\r\n      const graphNodes = this.graph.getNodes();\r\n\r\n      let rear = 0;\r\n      while (rear < sequence.length) {\r\n        const thisOpIndex = sequence[rear++];\r\n        const thisOp = this._ops[thisOpIndex];\r\n\r\n        // check input\r\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\r\n        if (inputList.indexOf(undefined) !== -1) {\r\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\r\n        }\r\n\r\n        // run\r\n        const inputTensors = inputList as Tensor[];\r\n        Logger.verbose(\r\n            'ExecPlan',\r\n            `Runing op:${thisOp.node.name} (${\r\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\r\n\r\n        const outputList = await this.profiler.event(\r\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\r\n\r\n        // check output\r\n        if (outputList.length !== thisOp.node.outputs.length) {\r\n          throw new Error('the size of output does not match model definition.');\r\n        }\r\n\r\n        // fill value\r\n        outputList.forEach((output, i) => {\r\n          const j = thisOp.node.outputs[i];\r\n          if (this._values[j]) {\r\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\r\n          }\r\n          this._values[j] = output;\r\n        });\r\n\r\n        // resolve downstream nodes\r\n        const downstreamNodes = new Set<number>();\r\n        outputList.forEach((output, i) => {\r\n          const j = thisOp.node.outputs[i];\r\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\r\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\r\n            let resolved = true;\r\n            for (const k of currentDownstreamNode.inputs) {\r\n              if (!this._values[k]) {\r\n                resolved = false;\r\n                break;\r\n              }\r\n            }\r\n            if (resolved) {\r\n              downstreamNodes.add(currentDownstreamNodeIndex);\r\n            }\r\n          }\r\n        });\r\n        sequence.push(...downstreamNodes);\r\n      }\r\n\r\n      const output: Tensor[] = [];\r\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\r\n        const outputIndex = this.graph.getOutputIndices()[i];\r\n        const outputTensor = this._values[outputIndex];\r\n        if (outputTensor === undefined) {\r\n          throw new Error(`required output [${outputIndex}] does not have value`);\r\n        }\r\n        if (outputIndex === 0) {\r\n          await outputTensor.getData();\r\n        } else {\r\n          // eslint-disable-next-line no-unused-expressions\r\n          outputTensor.data;\r\n        }\r\n        output.push(outputTensor);\r\n      }\r\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\r\n      inferenceHandler.dispose();\r\n      return output;\r\n    });\r\n  }\r\n\r\n  _values: Array<Tensor|undefined>;\r\n  _ops: KernelOp[];\r\n  _starter: number[];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Attribute} from './attribute';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\nimport {Tensor} from './tensor';\r\nimport {LongUtil, ProtoUtil} from './util';\r\n\r\nexport declare namespace Graph {\r\n  export interface Shape {\r\n    readonly dims: readonly number[];\r\n  }\r\n  export interface ValueType {\r\n    readonly tensorType: Tensor.DataType;\r\n    readonly shape: Shape;\r\n  }\r\n  export interface Value {\r\n    // the tensor data. empty for non-initialized inputs\r\n    readonly tensor?: Tensor;\r\n\r\n    // index to the Node where the value comes from. -1 for initializer.\r\n    readonly from: number;\r\n\r\n    // indices to the Nodes where the values go to.\r\n    readonly to: readonly number[];\r\n\r\n    // value type specification. empty for non-input values.\r\n    readonly type?: ValueType;\r\n  }\r\n  export interface Node {\r\n    // name of the node\r\n    readonly name: string;\r\n\r\n    // the operator type\r\n    readonly opType: string;\r\n\r\n    // indices to the Values where the inputs come from.\r\n    readonly inputs: readonly number[];\r\n\r\n    // indices to the Values where the outpus go to.\r\n    readonly outputs: readonly number[];\r\n\r\n    // the attributes that used by the operator\r\n    readonly attributes: Attribute;\r\n  }\r\n\r\n  /**\r\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\r\n   */\r\n  export interface Transformer {\r\n    removeAllIdentityNodes(): void;\r\n    removeAllDropoutNodes(): void;\r\n    fuseConvActivationNodes(): void;\r\n    // TODO: add generic functions to manipulate the graph\r\n  }\r\n\r\n  // an initializer can use transformer to transform the graph\r\n  export interface Initializer {\r\n    transformGraph(transformer: Transformer): void;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport interface Graph {\r\n  getInputIndices(): readonly number[];\r\n  getInputNames(): readonly string[];\r\n  getOutputIndices(): readonly number[];\r\n  getOutputNames(): readonly string[];\r\n  getValues(): readonly Graph.Value[];\r\n  getNodes(): readonly Graph.Node[];\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\r\nexport const Graph = {\r\n  /**\r\n   * construct a graph from a graph protobuf type\r\n   */\r\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\r\n      new GraphImpl(graphProto, initializer),\r\n};\r\n\r\nclass Value implements Graph.Value {\r\n  constructor(valueInfo?: onnx.IValueInfoProto) {\r\n    this._from = undefined;\r\n    this._to = [];\r\n    this.tensor = undefined;\r\n    this.type = undefined;\r\n\r\n    if (valueInfo) {\r\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\r\n    }\r\n  }\r\n\r\n  _from?: number;  // -1 represent from initializer\r\n  get from() {\r\n    return this._from!;\r\n  }\r\n  _to: number[];\r\n  get to() {\r\n    return this._to;\r\n  }\r\n  type?: Graph.ValueType;\r\n  tensor?: Tensor;\r\n}\r\n\r\nclass Node implements Graph.Node {\r\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\r\n    if (_nodeProto instanceof onnx.NodeProto) {\r\n      this.name = _nodeProto.name;\r\n      this.opType = _nodeProto.opType;\r\n      this.attributes = new Attribute(_nodeProto.attribute);\r\n    } else if (_nodeProto instanceof ortFbs.Node) {\r\n      this.name = name ?? _nodeProto.name()!;\r\n      this.opType = _nodeProto.opType()!;\r\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\r\n    }\r\n\r\n    this.inputs = [];\r\n    this.outputs = [];\r\n    this.executeNode = true;\r\n  }\r\n\r\n  name: string;\r\n  opType: string;\r\n  inputs: number[];\r\n  outputs: number[];\r\n  attributes: Attribute;\r\n  executeNode: boolean;\r\n}\r\n\r\nclass GraphImpl implements Graph, Graph.Transformer {\r\n  private _allData: Value[];\r\n\r\n  private _allInputIndices: number[];\r\n  private _allInputNames: string[];\r\n\r\n  private _allOutputIndices: number[];\r\n  private _allOutputNames: string[];\r\n\r\n  private _nodes: Node[];\r\n\r\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\r\n    if (!graph) {\r\n      throw new TypeError('graph is empty');\r\n    }\r\n\r\n    // build the graph - will throw exceptions if something fatal is detected\r\n    this.buildGraph(graph);\r\n\r\n    // execute any transformation logic for the graph (if applicable)\r\n    this.transformGraph(graphInitializer);\r\n\r\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\r\n    this.checkIsAcyclic();\r\n  }\r\n\r\n  getInputIndices(): readonly number[] {\r\n    return this._allInputIndices;\r\n  }\r\n\r\n  getInputNames(): readonly string[] {\r\n    return this._allInputNames;\r\n  }\r\n\r\n  getOutputIndices(): readonly number[] {\r\n    return this._allOutputIndices;\r\n  }\r\n\r\n  getOutputNames(): readonly string[] {\r\n    return this._allOutputNames;\r\n  }\r\n\r\n  getValues(): readonly Graph.Value[] {\r\n    return this._allData;\r\n  }\r\n\r\n  getNodes(): readonly Graph.Node[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\r\n    // build the graph - will throw exceptions if something fatal is detected\r\n    if (graph instanceof onnx.GraphProto) {\r\n      this.buildGraphFromOnnxFormat(graph);\r\n    } else if (graph instanceof ortFbs.Graph) {\r\n      this.buildGraphFromOrtFormat(graph);\r\n    } else {\r\n      throw new TypeError('Graph type is not supported.');\r\n    }\r\n  }\r\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\r\n    const dataIndices = new Map<string, number>();\r\n    this._allData = [];\r\n\r\n    this._allInputIndices = [];\r\n    this._allInputNames = [];\r\n\r\n    this._allOutputIndices = [];\r\n    this._allOutputNames = [];\r\n\r\n    this._nodes = [];\r\n\r\n    const nodesIndices = new Map<string, number>();\r\n\r\n    // scan all inputs\r\n    if (!graph.input) {\r\n      throw new Error('missing information in graph: input');\r\n    }\r\n    const inputValueNames = [];\r\n    for (const i of graph.input) {\r\n      if (dataIndices.has(i.name!)) {\r\n        throw new Error(`duplicated input name: ${i.name}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value(i)) - 1;\r\n      dataIndices.set(i.name!, currentIndex);\r\n      inputValueNames.push(i.name!);\r\n    }\r\n\r\n    // scan all initializers\r\n    if (!graph.initializer) {\r\n      throw new Error('missing information in graph: initializer');\r\n    }\r\n    for (const i of graph.initializer) {\r\n      let index = dataIndices.get(i.name!);\r\n      if (index === undefined) {\r\n        const value = new Value();\r\n        value.type = {\r\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\r\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\r\n        };\r\n        index = this._allData.push(value) - 1;\r\n        dataIndices.set(i.name!, index);\r\n      }\r\n      this._allData[index]._from = -1;\r\n      this._allData[index].tensor = Tensor.fromProto(i);\r\n    }\r\n\r\n    // filter out input indices\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      if (!this._allData[i].tensor) {\r\n        this._allInputIndices.push(i);\r\n        this._allInputNames.push(inputValueNames[i]);\r\n      }\r\n    }\r\n\r\n    // scan all outputs\r\n    if (!graph.output) {\r\n      throw new Error('missing information in graph: output');\r\n    }\r\n    for (const i of graph.output) {\r\n      if (dataIndices.has(i.name!)) {\r\n        throw new Error(`duplicated output name: ${i.name}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value(i)) - 1;\r\n      dataIndices.set(i.name!, currentIndex);\r\n      this._allOutputIndices.push(currentIndex);\r\n      this._allOutputNames.push(i.name!);\r\n    }\r\n\r\n    // scan all nodes\r\n    if (!graph.node) {\r\n      throw new Error('missing information in graph: node');\r\n    }\r\n    for (const nodeProto of graph.node) {\r\n      if (!nodeProto.name) {\r\n        // assign a name to the node if it doesn't have one\r\n        for (let pick = 0;; pick++) {\r\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\r\n          if (!nodesIndices.has(name)) {\r\n            nodeProto.name = name;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nodesIndices.has(nodeProto.name)) {\r\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\r\n      }\r\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\r\n      nodesIndices.set(nodeProto.name, currentIndex);\r\n    }\r\n\r\n    // scan node's outputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.node[i];\r\n      if (!nodeProto.output) {\r\n        throw new Error(`missing output for node: ${nodeProto.name}`);\r\n      }\r\n      for (const output of nodeProto.output) {\r\n        let dataIndex = dataIndices.get(output);\r\n        if (typeof dataIndex === 'undefined') {\r\n          dataIndex = this._allData.push(new Value()) - 1;\r\n          dataIndices.set(output, dataIndex);\r\n        }\r\n        node.outputs.push(dataIndex);\r\n\r\n        if (this._allData[dataIndex]._from !== undefined) {\r\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\r\n        }\r\n        this._allData[dataIndex]._from = i;\r\n\r\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\r\n        // operator and ignore the node from the graph\r\n        if (nodeProto.opType === 'Constant') {\r\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\r\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\r\n          }\r\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\r\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\r\n          }\r\n          node.outputs.pop();\r\n          node.executeNode = false;\r\n\r\n          this._allData[dataIndex]._from = -1;\r\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\r\n        }\r\n      }\r\n    }\r\n\r\n    // scan node's inputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.node[i];\r\n\r\n      if (!nodeProto.input) {\r\n        throw new Error(`missing input for node: ${nodeProto.name}`);\r\n      }\r\n      for (const input of nodeProto.input) {\r\n        const dataIndex = dataIndices.get(input);\r\n        if (typeof dataIndex === 'undefined') {\r\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\r\n        }\r\n        node.inputs.push(dataIndex);\r\n\r\n        this._allData[dataIndex]._to.push(i);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\r\n    const dataIndices = new Map<string, number>();\r\n    this._allData = [];\r\n\r\n    this._allInputIndices = [];\r\n    this._allInputNames = [];\r\n\r\n    this._allOutputIndices = [];\r\n    this._allOutputNames = [];\r\n\r\n    this._nodes = [];\r\n\r\n    const nodesIndices = new Map<string, number>();\r\n\r\n    // scan all inputs\r\n    const inputValueNames = [];\r\n    for (let i = 0; i < graph.inputsLength(); i++) {\r\n      const inputName = graph.inputs(i);\r\n      if (dataIndices.has(inputName)) {\r\n        throw new Error(`duplicated input name: ${inputName}`);\r\n      }\r\n      // Find the input typeInfo from nodeargs\r\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\r\n        if (graph.nodeArgs(j)?.name() === inputName) {\r\n          const value = new Value();\r\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\r\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\r\n            throw new Error('Unexpected value type for the nodeArg.');\r\n          }\r\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\r\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\r\n          const shape = valueInfo.shape()!;\r\n          const dims = [];\r\n          for (let k = 0; k < shape.dimLength()!; k++) {\r\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\r\n          }\r\n          value.type = {shape: {dims}, tensorType: type};\r\n          const currentIndex = this._allData.push(value) - 1;\r\n          dataIndices.set(inputName, currentIndex);\r\n          inputValueNames.push(inputName);\r\n        }\r\n      }\r\n    }\r\n    // check initializers\r\n    for (let i = 0; i < graph.initializersLength(); i++) {\r\n      const initializer = graph.initializers(i)!;\r\n      let index = dataIndices.get(initializer.name()!);\r\n      if (index === undefined) {\r\n        const value = new Value();\r\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\r\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\r\n        value.type = {shape: {dims}, tensorType: type};\r\n        index = this._allData.push(value) - 1;\r\n        dataIndices.set(initializer.name()!, index);\r\n      }\r\n      this._allData[index]._from = -1;\r\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\r\n    }\r\n\r\n    // filter out input indices\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      if (!this._allData[i].tensor) {\r\n        this._allInputIndices.push(i);\r\n        this._allInputNames.push(inputValueNames[i]);\r\n      }\r\n    }\r\n\r\n    // scan all outputs\r\n    for (let i = 0; i < graph.outputsLength(); i++) {\r\n      const outputName = graph.outputs(i);\r\n      if (dataIndices.has(outputName)) {\r\n        throw new Error(`duplicated output name: ${outputName}`);\r\n      }\r\n      const currentIndex = this._allData.push(new Value()) - 1;\r\n      dataIndices.set(outputName, currentIndex);\r\n      this._allOutputIndices.push(currentIndex);\r\n      this._allOutputNames.push(outputName);\r\n    }\r\n\r\n    // scan all nodes\r\n    if (!graph.nodes) {\r\n      throw new Error('missing information in graph: node');\r\n    }\r\n    for (let i = 0; i < graph.nodesLength(); i++) {\r\n      const nodeProto = graph.nodes(i);\r\n      let name = nodeProto!.name();\r\n      if (!name) {\r\n        // assign a name to the node if it doesn't have one\r\n        for (let pick = 0;; pick++) {\r\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\r\n          if (!nodesIndices.has(name)) {\r\n            // an unique name is found. break.\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (nodesIndices.has(name)) {\r\n        throw new Error(`duplicated node name: ${name}`);\r\n      }\r\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\r\n      nodesIndices.set(name, currentIndex);\r\n    }\r\n\r\n    // scan node's outputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.nodes(i);\r\n      if (nodeProto == null) {\r\n        throw new Error(`No node exists at index ${i}`);\r\n      }\r\n      if (nodeProto?.outputsLength() === 0) {\r\n        throw new Error(`missing output for node: ${nodeProto.name}`);\r\n      }\r\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\r\n        const output = nodeProto?.outputs(j);\r\n        let dataIndex = dataIndices.get(output);\r\n        if (typeof dataIndex === 'undefined') {\r\n          dataIndex = this._allData.push(new Value()) - 1;\r\n          dataIndices.set(output, dataIndex);\r\n        }\r\n        node.outputs.push(dataIndex);\r\n\r\n        if (this._allData[dataIndex]._from !== undefined) {\r\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\r\n        }\r\n        this._allData[dataIndex]._from = i;\r\n\r\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\r\n        // operator and ignore the node from the graph\r\n        if (nodeProto.opType() === 'Constant') {\r\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\r\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\r\n          }\r\n          if (nodeProto.outputsLength() !== 1) {\r\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\r\n          }\r\n          node.outputs.pop();\r\n          node.executeNode = false;\r\n\r\n          this._allData[dataIndex]._from = -1;\r\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\r\n        }\r\n      }\r\n    }\r\n\r\n    // scan node's inputs\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      const node = this._nodes[i];\r\n      const nodeProto = graph.nodes(i)!;\r\n\r\n      if (nodeProto.inputsLength() === 0) {\r\n        throw new Error(`missing input for node: ${nodeProto.name}`);\r\n      }\r\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\r\n        const input = nodeProto.inputs(j)!;\r\n        const dataIndex = dataIndices.get(input);\r\n        if (typeof dataIndex === 'undefined') {\r\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\r\n        }\r\n        node.inputs.push(dataIndex);\r\n\r\n        this._allData[dataIndex]._to.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkIsAcyclic() {\r\n    // go through the graph and check for cycles or other fatal inconsistencies\r\n    const starters: Set<number> = new Set<number>();\r\n    this._allInputIndices.forEach(i => {\r\n      const data = this._allData[i];\r\n      data._to.forEach(j => {\r\n        starters.add(j);\r\n      });\r\n    });\r\n\r\n    // Iterative DFS to check for cycles\r\n    const nodesStack = Array.from(starters);\r\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\r\n\r\n    while (nodesStack.length > 0) {\r\n      const nodeIndex = nodesStack.pop()!;\r\n      // this node has now been processed completely. Mark this node 'black' to denote this.\r\n      if (nodesState[nodeIndex] === 'gray') {\r\n        nodesState[nodeIndex] = 'black';\r\n      } else {\r\n        // this node is under processing stage. mark this node 'gray' to denote this.\r\n        nodesStack.push(nodeIndex);\r\n        nodesState[nodeIndex] = 'gray';\r\n\r\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\r\n          const data = this._allData[outgoingEdgeIndex];\r\n          if (typeof data.tensor !== 'undefined') {\r\n            throw new Error('node outputs should not be initialized');\r\n          }\r\n          if (data._from !== nodeIndex) {\r\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\r\n          }\r\n          data._to.forEach((downstreamNodeIndex) => {\r\n            // back edge found - cyclic\r\n            if (nodesState[downstreamNodeIndex] === 'gray') {\r\n              throw new Error('model graph is cyclic');\r\n            }\r\n            // tree edge found - continue processing by adding it to stack\r\n            else if (nodesState[downstreamNodeIndex] === 'white') {\r\n              nodesStack.push(downstreamNodeIndex);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\r\n    // apply common transform\r\n    this.removeAllIdentityNodes();\r\n    this.removeAllDropoutNodes();\r\n    this.fuseConvActivationNodes();\r\n    // apply initializer specific transform\r\n    if (graphInitializer) {\r\n      graphInitializer.transformGraph(this);\r\n    }\r\n\r\n    // finalize graph\r\n    this.finalizeGraph();\r\n  }\r\n\r\n  /**\r\n   * finalize the graph.\r\n   *\r\n   * this function should be called after all the transformation completed.\r\n   * this function removes all unnecessary nodes and values from the graph\r\n   */\r\n  finalizeGraph() {\r\n    let offset = 0;\r\n    // delete all nodes that are not being executed\r\n    for (let i = 0; i < this._nodes.length; i++) {\r\n      if (!this._nodes[i].executeNode) {\r\n        // delete this node and shift all subsequent nodes up\r\n        offset++;\r\n        // delete all output values\r\n        this._nodes[i].outputs.forEach(ind => {\r\n          this._allData[ind]._from = -2;\r\n        });\r\n        this._nodes.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      if (offset > 0) {\r\n        // update the value table\r\n        this._nodes[i].inputs.forEach(value => {\r\n          const ind = this._allData[value]._to.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allData[value]._to[ind] = i;\r\n          }\r\n        });\r\n        this._nodes[i].outputs.forEach(value => {\r\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\r\n            this._allData[value]._from! = i;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    offset = 0;\r\n    // delete all values that are not being referenced\r\n    for (let i = 0; i < this._allData.length; i++) {\r\n      // if current value is neither linked to next node, nor an output value, remove it.\r\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\r\n        offset++;\r\n        this._allData.splice(i, 1);\r\n        i--;\r\n        continue;\r\n      }\r\n      if (offset > 0) {\r\n        let ind = -1;\r\n        // if current value is neither an input value nor an initializer, find the node it's\r\n        // coming from and update the corresponding node output\r\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\r\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._nodes[this._allData[i].from].outputs[ind] = i;\r\n          }\r\n        } else {\r\n          // if current value is an input value, update its reference in inputIndices\r\n          ind = this._allInputIndices.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allInputIndices[ind] = i;\r\n          }\r\n        }\r\n\r\n        // find the node that the current value is linking to and update its input reference\r\n        this._allData[i].to.forEach(node => {\r\n          ind = this._nodes[node].inputs.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._nodes[node].inputs[ind] = i;\r\n          }\r\n        });\r\n        if (this._allData[i].to.length === 0) {\r\n          // if current value is a graph output, update its reference in outputIndices\r\n          ind = this._allOutputIndices.indexOf(i + offset);\r\n          if (ind !== -1) {\r\n            this._allOutputIndices[ind] = i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\r\n   * @param nodeIndex The index of node to be deleted\r\n   */\r\n  private deleteNode(nodeIndex: number) {\r\n    const node = this._nodes[nodeIndex];\r\n    if (node.inputs.length > 1) {\r\n      throw new Error('Node deletion with multiple inputs is not supported. ');\r\n    }\r\n    if (node.outputs.length > 1) {\r\n      for (let i = 1; i < node.outputs.length; i++) {\r\n        if (this._allData[node.outputs[i]].to.length > 0) {\r\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\r\n        }\r\n      }\r\n    }\r\n\r\n    // this node wil not be executed\r\n    node.executeNode = false;\r\n    const inputValueIndex = node.inputs[0];\r\n    const outputValueIndex = node.outputs[0];\r\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\r\n\r\n    // remove this node from the to property of the input Value\r\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\r\n    // should not happen\r\n    if (delIndex === -1) {\r\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\r\n    }\r\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\r\n\r\n    // clear node indices consuming this output Value\r\n    this._allData[outputValueIndex]._to = [];\r\n\r\n    // if the output of this node is a graph output, adjust the index appropriately\r\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\r\n    if (index !== -1) {\r\n      this._allOutputIndices[index] = inputValueIndex;\r\n    }\r\n\r\n    // override the inputs for nodes consuming this node's output with the input to this node\r\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\r\n      for (const nodeIndex of nodesConsumingOutput) {\r\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\r\n        // should not happen\r\n        if (replaceIndex === -1) {\r\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\r\n        }\r\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\r\n        this._allData[inputValueIndex].to.push(nodeIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeAllDropoutNodes() {\r\n    let nodeIndex = 0;\r\n    for (const node of this._nodes) {\r\n      // weed out 'Dropout' nodes so that no time is wasted in execution\r\n      if (node.opType === 'Dropout') {\r\n        // the node should have exactly 1 input and 1 or 2 outputs\r\n        if (node.inputs.length !== 1) {\r\n          throw new Error('Dropout nodes should only contain one input. ');\r\n        }\r\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\r\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\r\n        }\r\n        // the second output should not be referenced by any other node\r\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\r\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\r\n        }\r\n        this.deleteNode(nodeIndex);\r\n      }\r\n      nodeIndex++;\r\n    }\r\n  }\r\n\r\n  removeAllIdentityNodes() {\r\n    let nodeIndex = 0;\r\n    for (const node of this._nodes) {\r\n      // weed out 'Identity' nodes so that no time is wasted in execution\r\n      if (node.opType === 'Identity') {\r\n        this.deleteNode(nodeIndex);\r\n      }\r\n      nodeIndex++;\r\n    }\r\n  }\r\n\r\n  isActivation(n: Node): boolean {\r\n    switch (n.opType) {\r\n      // TODO: add other activation methods\r\n      case 'Relu':\r\n      case 'Sigmoid':\r\n      case 'Clip':\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  fuseConvActivationNodes() {\r\n    for (const node of this._nodes) {\r\n      if (node.opType === 'Conv') {\r\n        const next = this._allData[node.outputs[0]]._to;\r\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\r\n          const child = this._nodes[next[0]];\r\n          node.attributes.set('__internal_activation', 'string', (child.opType));\r\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\r\n          if (child.opType === 'Clip') {\r\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\r\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\r\n          }\r\n          this.deleteNode(next[0]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Env} from 'onnxruntime-common';\r\n\r\nimport {WebGLContext} from './backends/webgl/webgl-context';\r\n\r\nexport declare namespace Logger {\r\n  export interface SeverityTypeMap {\r\n    verbose: 'v';\r\n    info: 'i';\r\n    warning: 'w';\r\n    error: 'e';\r\n    fatal: 'f';\r\n  }\r\n\r\n  export type Severity = keyof SeverityTypeMap;\r\n\r\n  export type Provider = 'none'|'console';\r\n\r\n  /**\r\n   * Logging config that used to control the behavior of logger\r\n   */\r\n  export interface Config {\r\n    /**\r\n     * Specify the logging provider. 'console' by default\r\n     */\r\n    provider?: Provider;\r\n    /**\r\n     * Specify the minimal logger serverity. 'warning' by default\r\n     */\r\n    minimalSeverity?: Logger.Severity;\r\n    /**\r\n     * Whether to output date time in log. true by default\r\n     */\r\n    logDateTime?: boolean;\r\n    /**\r\n     * Whether to output source information (Not yet supported). false by default\r\n     */\r\n    logSourceLocation?: boolean;\r\n  }\r\n\r\n  export interface CategorizedLogger {\r\n    verbose(content: string): void;\r\n    info(content: string): void;\r\n    warning(content: string): void;\r\n    error(content: string): void;\r\n    fatal(content: string): void;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport interface Logger {\r\n  (category: string): Logger.CategorizedLogger;\r\n\r\n  verbose(content: string): void;\r\n  verbose(category: string, content: string): void;\r\n  info(content: string): void;\r\n  info(category: string, content: string): void;\r\n  warning(content: string): void;\r\n  warning(category: string, content: string): void;\r\n  error(content: string): void;\r\n  error(category: string, content: string): void;\r\n  fatal(content: string): void;\r\n  fatal(category: string, content: string): void;\r\n\r\n  /**\r\n   * Reset the logger configuration.\r\n   * @param config specify an optional default config\r\n   */\r\n  reset(config?: Logger.Config): void;\r\n  /**\r\n   * Set the logger's behavior on the given category\r\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\r\n   * '' is specified, the default behavior will be updated.\r\n   * @param config the config object to indicate the logger's behavior\r\n   */\r\n  set(category: string, config: Logger.Config): void;\r\n\r\n  /**\r\n   * Set the logger's behavior from ort-common env\r\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\r\n   */\r\n  setWithEnv(env: Env): void;\r\n}\r\n\r\ninterface LoggerProvider {\r\n  log(severity: Logger.Severity, content: string, category?: string): void;\r\n}\r\nclass NoOpLoggerProvider implements LoggerProvider {\r\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\r\n    // do nothing\r\n  }\r\n}\r\nclass ConsoleLoggerProvider implements LoggerProvider {\r\n  log(severity: Logger.Severity, content: string, category?: string) {\r\n    // eslint-disable-next-line no-console\r\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\r\n  }\r\n\r\n  private color(severity: Logger.Severity) {\r\n    switch (severity) {\r\n      case 'verbose':\r\n        return '\\x1b[34;40mv\\x1b[0m';\r\n      case 'info':\r\n        return '\\x1b[32mi\\x1b[0m';\r\n      case 'warning':\r\n        return '\\x1b[30;43mw\\x1b[0m';\r\n      case 'error':\r\n        return '\\x1b[31;40me\\x1b[0m';\r\n      case 'fatal':\r\n        return '\\x1b[101mf\\x1b[0m';\r\n      default:\r\n        throw new Error(`unsupported severity: ${severity}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst SEVERITY_VALUE = {\r\n  verbose: 1000,\r\n  info: 2000,\r\n  warning: 4000,\r\n  error: 5000,\r\n  fatal: 6000\r\n};\r\n\r\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\r\n  ['none']: new NoOpLoggerProvider(),\r\n  ['console']: new ConsoleLoggerProvider()\r\n};\r\nconst LOGGER_DEFAULT_CONFIG = {\r\n  provider: 'console',\r\n  minimalSeverity: 'warning',\r\n  logDateTime: true,\r\n  logSourceLocation: false\r\n};\r\nlet LOGGER_CONFIG_MAP:\r\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\r\n\r\nfunction log(category: string): Logger.CategorizedLogger;\r\nfunction log(severity: Logger.Severity, content: string): void;\r\nfunction log(severity: Logger.Severity, category: string, content: string): void;\r\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\r\nfunction log(\r\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\r\n  if (arg1 === undefined) {\r\n    // log(category: string): Logger.CategorizedLogger;\r\n    return createCategorizedLogger(arg0);\r\n  } else if (arg2 === undefined) {\r\n    // log(severity, content);\r\n    logInternal(arg0 as Logger.Severity, arg1, 1);\r\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\r\n    // log(severity, content, stack)\r\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\r\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\r\n    // log(severity, category, content)\r\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\r\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\r\n    // log(severity, category, content, stack)\r\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\r\n  } else {\r\n    throw new TypeError('input is valid');\r\n  }\r\n}\r\n\r\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\r\n  return {\r\n    verbose: log.verbose.bind(null, category),\r\n    info: log.info.bind(null, category),\r\n    warning: log.warning.bind(null, category),\r\n    error: log.error.bind(null, category),\r\n    fatal: log.fatal.bind(null, category)\r\n  };\r\n}\r\n\r\n// NOTE: argument 'category' is put the last parameter beacause typescript\r\n// doesn't allow optional argument put in front of required argument. This\r\n// order is different from a usual logging API.\r\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\r\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\r\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\r\n    return;\r\n  }\r\n\r\n  if (config.logDateTime) {\r\n    content = `${new Date().toISOString()}|${content}`;\r\n  }\r\n\r\n  if (config.logSourceLocation) {\r\n    // TODO: calculate source location from 'stack'\r\n  }\r\n\r\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nnamespace log {\r\n  export function verbose(content: string): void;\r\n  export function verbose(category: string, content: string): void;\r\n  export function verbose(arg0: string, arg1?: string) {\r\n    log('verbose', arg0, arg1);\r\n  }\r\n  export function info(content: string): void;\r\n  export function info(category: string, content: string): void;\r\n  export function info(arg0: string, arg1?: string) {\r\n    log('info', arg0, arg1);\r\n  }\r\n  export function warning(content: string): void;\r\n  export function warning(category: string, content: string): void;\r\n  export function warning(arg0: string, arg1?: string) {\r\n    log('warning', arg0, arg1);\r\n  }\r\n  export function error(content: string): void;\r\n  export function error(category: string, content: string): void;\r\n  export function error(arg0: string, arg1?: string) {\r\n    log('error', arg0, arg1);\r\n  }\r\n  export function fatal(content: string): void;\r\n  export function fatal(category: string, content: string): void;\r\n  export function fatal(arg0: string, arg1?: string) {\r\n    log('fatal', arg0, arg1);\r\n  }\r\n\r\n  export function reset(config?: Logger.Config): void {\r\n    LOGGER_CONFIG_MAP = {};\r\n    set('', config || {});\r\n  }\r\n  export function set(category: string, config: Logger.Config): void {\r\n    if (category === '*') {\r\n      reset(config);\r\n    } else {\r\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\r\n      LOGGER_CONFIG_MAP[category] = {\r\n        provider: config.provider || previousConfig.provider,\r\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\r\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\r\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\r\n                                                                      config.logSourceLocation\r\n      };\r\n    }\r\n\r\n    // TODO: we want to support wildcard or regex?\r\n  }\r\n\r\n  export function setWithEnv(env: Env): void {\r\n    const config: Logger.Config = {};\r\n    if (env.logLevel) {\r\n      config.minimalSeverity = env.logLevel as Logger.Severity;\r\n    }\r\n    set('', config);\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\r\nexport const Logger: Logger = log;\r\n\r\nexport declare namespace Profiler {\r\n  export interface Config {\r\n    maxNumberEvents?: number;\r\n    flushBatchSize?: number;\r\n    flushIntervalInMilliseconds?: number;\r\n  }\r\n\r\n  export type EventCategory = 'session'|'node'|'op'|'backend';\r\n\r\n  export interface Event {\r\n    end(): void|Promise<void>;\r\n  }\r\n}\r\n// TODO\r\n// class WebGLEvent implements Profiler.Event {}\r\n\r\nclass Event implements Profiler.Event {\r\n  constructor(\r\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\r\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\r\n\r\n  end() {\r\n    return this.endCallback(this);\r\n  }\r\n\r\n  async checkTimer(): Promise<number> {\r\n    if (this.ctx === undefined || this.timer === undefined) {\r\n      throw new Error('No webgl timer found');\r\n    } else {\r\n      this.ctx.endTimer();\r\n      return this.ctx.waitForQueryAndGetTime(this.timer);\r\n    }\r\n  }\r\n}\r\n\r\nclass EventRecord {\r\n  constructor(\r\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\r\n}\r\n\r\nexport class Profiler {\r\n  static create(config?: Profiler.Config): Profiler {\r\n    if (config === undefined) {\r\n      return new this();\r\n    }\r\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\r\n  }\r\n\r\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\r\n    this._started = false;\r\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\r\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\r\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\r\n  }\r\n\r\n  // start profiling\r\n  start() {\r\n    this._started = true;\r\n    this._timingEvents = [];\r\n    this._flushTime = now();\r\n    this._flushPointer = 0;\r\n  }\r\n\r\n  // stop profiling\r\n  stop() {\r\n    this._started = false;\r\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\r\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\r\n    }\r\n  }\r\n\r\n  // create an event scope for the specific function\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\r\n\r\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\r\n      |Promise<T> {\r\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\r\n    let isPromise = false;\r\n\r\n    const res = func();\r\n\r\n    // we consider a then-able object is a promise\r\n    if (res && typeof (res as Promise<T>).then === 'function') {\r\n      isPromise = true;\r\n      return new Promise<T>((resolve, reject) => {\r\n        (res as Promise<T>)\r\n            .then(\r\n                async value => {  // fulfilled\r\n                  if (event) {\r\n                    await event.end();\r\n                  }\r\n                  resolve(value);\r\n                },\r\n                async reason => {  // rejected\r\n                  if (event) {\r\n                    await event.end();\r\n                  }\r\n                  reject(reason);\r\n                });\r\n      });\r\n    }\r\n    if (!isPromise && event) {\r\n      const eventRes = event.end();\r\n      if (eventRes && typeof eventRes.then === 'function') {\r\n        return new Promise<T>((resolve, reject) => {\r\n          (eventRes).then(\r\n              () => {  // fulfilled\r\n                resolve(res);\r\n              },\r\n              (reason) => {  // rejected\r\n                reject(reason);\r\n              });\r\n        });\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  // begin an event\r\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\r\n    if (!this._started) {\r\n      throw new Error('profiler is not started yet');\r\n    }\r\n    if (ctx === undefined) {\r\n      const startTime = now();\r\n      this.flush(startTime);\r\n      return new Event(category, name, startTime, e => this.endSync(e));\r\n    } else {\r\n      const timer: WebGLQuery = ctx.beginTimer();\r\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\r\n    }\r\n  }\r\n\r\n  // end the specific event\r\n  private async end(event: Event): Promise<void> {\r\n    const endTime: number = await event.checkTimer();\r\n    if (this._timingEvents.length < this._maxNumberEvents) {\r\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\r\n      this.flush(endTime);\r\n    }\r\n  }\r\n\r\n  private endSync(event: Event): void {\r\n    const endTime: number = now();\r\n    if (this._timingEvents.length < this._maxNumberEvents) {\r\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\r\n      this.flush(endTime);\r\n    }\r\n  }\r\n\r\n  private logOneEvent(event: EventRecord) {\r\n    Logger.verbose(\r\n        `Profiler.${event.category}`,\r\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\r\n  }\r\n\r\n  private flush(currentTime: number) {\r\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\r\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\r\n      // should flush when either batch size accumlated or interval elepsed\r\n\r\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\r\n           this._flushPointer < this._timingEvents.length;\r\n           this._flushPointer++) {\r\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\r\n      }\r\n\r\n      this._flushTime = now();\r\n    }\r\n  }\r\n\r\n  get started() {\r\n    return this._started;\r\n  }\r\n  private _started = false;\r\n  private _timingEvents: EventRecord[];\r\n\r\n  private readonly _maxNumberEvents: number;\r\n\r\n  private readonly _flushBatchSize: number;\r\n  private readonly _flushIntervalInMilliseconds: number;\r\n\r\n  private _flushTime: number;\r\n  private _flushPointer = 0;\r\n}\r\n\r\n/**\r\n * returns a number to represent the current timestamp in a resolution as high as possible.\r\n */\r\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Graph} from './graph';\r\nimport {OpSet} from './opset';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\nimport {LongUtil} from './util';\r\n\r\nexport class Model {\r\n  // empty model\r\n  constructor() {}\r\n\r\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\r\n    if (!isOrtFormat) {\r\n      // isOrtFormat === false || isOrtFormat === undefined\r\n      try {\r\n        this.loadFromOnnxFormat(buf, graphInitializer);\r\n        return;\r\n      } catch (e) {\r\n        if (isOrtFormat !== undefined) {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.loadFromOrtFormat(buf, graphInitializer);\r\n  }\r\n\r\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\r\n    const modelProto = onnx.ModelProto.decode(buf);\r\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\r\n    if (irVersion < 3) {\r\n      throw new Error('only support ONNX model with IR_VERSION>=3');\r\n    }\r\n\r\n    this._opsets =\r\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\r\n\r\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\r\n  }\r\n\r\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\r\n    const fb = new flatbuffers.ByteBuffer(buf);\r\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\r\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\r\n    if (irVersion < 3) {\r\n      throw new Error('only support ONNX model with IR_VERSION>=3');\r\n    }\r\n    this._opsets = [];\r\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\r\n      const opsetId = ortModel.opsetImport(i)!;\r\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\r\n    }\r\n\r\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\r\n  }\r\n\r\n  private _graph: Graph;\r\n  get graph(): Graph {\r\n    return this._graph;\r\n  }\r\n\r\n  private _opsets: OpSet[];\r\n  get opsets(): readonly OpSet[] {\r\n    return this._opsets;\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceHandler} from './backend';\r\nimport {Graph} from './graph';\r\nimport {Tensor} from './tensor';\r\n\r\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\r\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\r\n\r\nexport interface Operator {\r\n  readonly impl: OperatorImplementation<unknown>;\r\n  readonly context: Graph.Node|unknown;\r\n}\r\n\r\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\r\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\r\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\r\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Graph} from './graph';\r\nimport {OperatorImplementation, OperatorInitialization} from './operators';\r\n\r\nexport interface OpSet {\r\n  domain: string;\r\n  version: number;\r\n}\r\n\r\nexport declare namespace OpSet {\r\n  /**\r\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\r\n   */\r\n  type Domain = ''|'ai.onnx.ml';\r\n\r\n  /**\r\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\r\n   * operatorInitialization (optional)\r\n   */\r\n  type ResolveRule = [\r\n    string, Domain, string, OperatorImplementation<Graph.Node>\r\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\r\n}\r\n\r\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\r\n  for (const rule of rules) {\r\n    const opType = rule[0];\r\n    const domain = rule[1];\r\n    const versionSelector = rule[2];\r\n    const opImpl = rule[3];\r\n    const opInit = rule[4];\r\n\r\n    if (node.opType === opType) {  // operator type matches\r\n      for (const opset of opsets) {\r\n        // opset '' and 'ai.onnx' are considered the same.\r\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\r\n          if (matchSelector(opset.version, versionSelector)) {\r\n            return {opImpl, opInit};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\r\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\r\n}\r\n\r\nfunction matchSelector(version: number, selector: string): boolean {\r\n  if (selector.endsWith('+')) {\r\n    // minimum version match ('7+' expects version>=7)\r\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\r\n    return !isNaN(rangeStart) && rangeStart <= version;\r\n  } else if (selector.split('-').length === 2) {\r\n    // range match ('6-8' expects 6<=version<=8)\r\n    const pair = selector.split('-');\r\n    const rangeStart = Number.parseInt(pair[0], 10);\r\n    const rangeEnd = Number.parseInt(pair[1], 10);\r\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\r\n  } else {\r\n    // exact match ('7' expects version===7)\r\n    return Number.parseInt(selector, 10) === version;\r\n  }\r\n}\r\n","// automatically generated by the FlatBuffers compiler, do not modify\r\n/* eslint-disable */\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum AttributeType {\r\n    UNDEFINED = 0,\r\n    FLOAT = 1,\r\n    INT = 2,\r\n    STRING = 3,\r\n    TENSOR = 4,\r\n    GRAPH = 5,\r\n    FLOATS = 6,\r\n    INTS = 7,\r\n    STRINGS = 8,\r\n    TENSORS = 9,\r\n    GRAPHS = 10,\r\n    SPARSE_TENSOR = 11,\r\n    SPARSE_TENSORS = 12\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum TensorDataType {\r\n    UNDEFINED = 0,\r\n    FLOAT = 1,\r\n    UINT8 = 2,\r\n    INT8 = 3,\r\n    UINT16 = 4,\r\n    INT16 = 5,\r\n    INT32 = 6,\r\n    INT64 = 7,\r\n    STRING = 8,\r\n    BOOL = 9,\r\n    FLOAT16 = 10,\r\n    DOUBLE = 11,\r\n    UINT32 = 12,\r\n    UINT64 = 13,\r\n    COMPLEX64 = 14,\r\n    COMPLEX128 = 15,\r\n    BFLOAT16 = 16\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum NodeType {Primitive = 0, Fused = 1}\r\n}\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\r\n}\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Shape {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Shape\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Shape= obj\r\n     * @returns Shape\r\n     */\r\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\r\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Shape= obj\r\n     * @returns Shape\r\n     */\r\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Dimension= obj\r\n     * @returns onnxruntime.experimental.fbs.Dimension\r\n     */\r\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startShape(builder: flatbuffers.Builder) {\r\n      builder.startObject(1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimOffset\r\n     */\r\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, dimOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Shape.startShape(builder);\r\n      Shape.addDim(builder, dimOffset);\r\n      return Shape.endShape(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Dimension {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Dimension\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Dimension= obj\r\n     * @returns Dimension\r\n     */\r\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\r\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Dimension= obj\r\n     * @returns Dimension\r\n     */\r\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\r\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\r\n     */\r\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    denotation(): string|null;\r\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startDimension(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueOffset\r\n     */\r\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, valueOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset denotationOffset\r\n     */\r\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, denotationOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createDimension(\r\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\r\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Dimension.startDimension(builder);\r\n      Dimension.addValue(builder, valueOffset);\r\n      Dimension.addDenotation(builder, denotationOffset);\r\n      return Dimension.endDimension(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class DimensionValue {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns DimensionValue\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param DimensionValue= obj\r\n     * @returns DimensionValue\r\n     */\r\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\r\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param DimensionValue= obj\r\n     * @returns DimensionValue\r\n     */\r\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\r\n     */\r\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dimValue(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    dimParam(): string|null;\r\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startDimensionValue(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\r\n     */\r\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\r\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long dimValue\r\n     */\r\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\r\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimParamOffset\r\n     */\r\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimParamOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createDimensionValue(\r\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\r\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      DimensionValue.startDimensionValue(builder);\r\n      DimensionValue.addDimType(builder, dimType);\r\n      DimensionValue.addDimValue(builder, dimValue);\r\n      DimensionValue.addDimParam(builder, dimParamOffset);\r\n      return DimensionValue.endDimensionValue(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class TensorTypeAndShape {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TensorTypeAndShape= obj\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\r\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TensorTypeAndShape= obj\r\n     * @returns TensorTypeAndShape\r\n     */\r\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\r\n        TensorTypeAndShape {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Shape= obj\r\n     * @returns onnxruntime.experimental.fbs.Shape|null\r\n     */\r\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\r\n     */\r\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset shapeOffset\r\n     */\r\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, shapeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTensorTypeAndShape(\r\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\r\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\r\n      TensorTypeAndShape.addElemType(builder, elemType);\r\n      TensorTypeAndShape.addShape(builder, shapeOffset);\r\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class MapType {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns MapType\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param MapType= obj\r\n     * @returns MapType\r\n     */\r\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\r\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param MapType= obj\r\n     * @returns MapType\r\n     */\r\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startMapType(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\r\n     */\r\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueTypeOffset\r\n     */\r\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, valueTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createMapType(\r\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\r\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      MapType.startMapType(builder);\r\n      MapType.addKeyType(builder, keyType);\r\n      MapType.addValueType(builder, valueTypeOffset);\r\n      return MapType.endMapType(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SequenceType {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SequenceType\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SequenceType= obj\r\n     * @returns SequenceType\r\n     */\r\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\r\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SequenceType= obj\r\n     * @returns SequenceType\r\n     */\r\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSequenceType(builder: flatbuffers.Builder) {\r\n      builder.startObject(1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset elemTypeOffset\r\n     */\r\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, elemTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SequenceType.startSequenceType(builder);\r\n      SequenceType.addElemType(builder, elemTypeOffset);\r\n      return SequenceType.endSequenceType(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class EdgeEnd {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns EdgeEnd\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndex(): number {\r\n      return this.bb!.readUint32(this.bb_pos);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    srcArgIndex(): number {\r\n      return this.bb!.readInt32(this.bb_pos + 4);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dstArgIndex(): number {\r\n      return this.bb!.readInt32(this.bb_pos + 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number node_index\r\n     * @param number src_arg_index\r\n     * @param number dst_arg_index\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createEdgeEnd(\r\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\r\n        dst_arg_index: number): flatbuffers.Offset {\r\n      builder.prep(4, 12);\r\n      builder.writeInt32(dst_arg_index);\r\n      builder.writeInt32(src_arg_index);\r\n      builder.writeInt32(node_index);\r\n      return builder.offset();\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class NodeEdge {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns NodeEdge\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param NodeEdge= obj\r\n     * @returns NodeEdge\r\n     */\r\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\r\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param NodeEdge= obj\r\n     * @returns NodeEdge\r\n     */\r\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndex(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\r\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\r\n     */\r\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\r\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\r\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\r\n     */\r\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\r\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startNodeEdge(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number nodeIndex\r\n     */\r\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\r\n      builder.addFieldInt32(0, nodeIndex, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputEdgesOffset\r\n     */\r\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(12, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputEdgesOffset\r\n     */\r\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(12, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createNodeEdge(\r\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\r\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      NodeEdge.startNodeEdge(builder);\r\n      NodeEdge.addNodeIndex(builder, nodeIndex);\r\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\r\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\r\n      return NodeEdge.endNodeEdge(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Node {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Node\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Node= obj\r\n     * @returns Node\r\n     */\r\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\r\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Node= obj\r\n     * @returns Node\r\n     */\r\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    sinceVersion(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    index(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    opType(): string|null;\r\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    opType(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.NodeType\r\n     */\r\n    type(): onnxruntime.experimental.fbs.NodeType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    executionProviderType(): string|null;\r\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    inputs(index: number): string;\r\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    outputs(index: number): string;\r\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Attribute= obj\r\n     * @returns onnxruntime.experimental.fbs.Attribute\r\n     */\r\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\r\n        |null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    attributesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    inputArgCounts(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputArgCountsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Int32Array\r\n     */\r\n    inputArgCountsArray(): Int32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ?\r\n          new Int32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    implicitInputs(index: number): string;\r\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    implicitInputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startNode(builder: flatbuffers.Builder) {\r\n      builder.startObject(13);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number sinceVersion\r\n     */\r\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\r\n      builder.addFieldInt32(3, sinceVersion, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number index\r\n     */\r\n    static addIndex(builder: flatbuffers.Builder, index: number) {\r\n      builder.addFieldInt32(4, index, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset opTypeOffset\r\n     */\r\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, opTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.NodeType type\r\n     */\r\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\r\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset executionProviderTypeOffset\r\n     */\r\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputsOffset\r\n     */\r\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, inputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputsOffset\r\n     */\r\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(9, outputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset attributesOffset\r\n     */\r\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(10, attributesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputArgCountsOffset\r\n     */\r\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset implicitInputsOffset\r\n     */\r\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createNode(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\r\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\r\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\r\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Node.startNode(builder);\r\n      Node.addName(builder, nameOffset);\r\n      Node.addDocString(builder, docStringOffset);\r\n      Node.addDomain(builder, domainOffset);\r\n      Node.addSinceVersion(builder, sinceVersion);\r\n      Node.addIndex(builder, index);\r\n      Node.addOpType(builder, opTypeOffset);\r\n      Node.addType(builder, type);\r\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\r\n      Node.addInputs(builder, inputsOffset);\r\n      Node.addOutputs(builder, outputsOffset);\r\n      Node.addAttributes(builder, attributesOffset);\r\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\r\n      Node.addImplicitInputs(builder, implicitInputsOffset);\r\n      return Node.endNode(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class ValueInfo {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns ValueInfo\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param ValueInfo= obj\r\n     * @returns ValueInfo\r\n     */\r\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\r\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param ValueInfo= obj\r\n     * @returns ValueInfo\r\n     */\r\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\r\n     */\r\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startValueInfo(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset typeOffset\r\n     */\r\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, typeOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createValueInfo(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      ValueInfo.startValueInfo(builder);\r\n      ValueInfo.addName(builder, nameOffset);\r\n      ValueInfo.addDocString(builder, docStringOffset);\r\n      ValueInfo.addType(builder, typeOffset);\r\n      return ValueInfo.endValueInfo(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class TypeInfo {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns TypeInfo\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TypeInfo= obj\r\n     * @returns TypeInfo\r\n     */\r\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\r\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param TypeInfo= obj\r\n     * @returns TypeInfo\r\n     */\r\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    denotation(): string|null;\r\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\r\n     */\r\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Table obj\r\n     * @returns ?flatbuffers.Table\r\n     */\r\n    value<T extends flatbuffers.Table>(obj: T): T|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTypeInfo(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset denotationOffset\r\n     */\r\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, denotationOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\r\n     */\r\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\r\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valueOffset\r\n     */\r\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, valueOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTypeInfo(\r\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\r\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      TypeInfo.startTypeInfo(builder);\r\n      TypeInfo.addDenotation(builder, denotationOffset);\r\n      TypeInfo.addValueType(builder, valueType);\r\n      TypeInfo.addValue(builder, valueOffset);\r\n      return TypeInfo.endTypeInfo(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class OperatorSetId {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns OperatorSetId\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param OperatorSetId= obj\r\n     * @returns OperatorSetId\r\n     */\r\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\r\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param OperatorSetId= obj\r\n     * @returns OperatorSetId\r\n     */\r\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    version(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startOperatorSetId(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long version\r\n     */\r\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\r\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createOperatorSetId(\r\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\r\n      OperatorSetId.startOperatorSetId(builder);\r\n      OperatorSetId.addDomain(builder, domainOffset);\r\n      OperatorSetId.addVersion(builder, version);\r\n      return OperatorSetId.endOperatorSetId(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Tensor {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Tensor\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Tensor= obj\r\n     * @returns Tensor\r\n     */\r\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\r\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Tensor= obj\r\n     * @returns Tensor\r\n     */\r\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dims(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.TensorDataType\r\n     */\r\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    rawData(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    rawDataLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Uint8Array\r\n     */\r\n    rawDataArray(): Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ?\r\n          new Uint8Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    stringData(index: number): string;\r\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    stringDataLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startTensor(builder: flatbuffers.Builder) {\r\n      builder.startObject(6);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimsOffset\r\n     */\r\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\r\n     */\r\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\r\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset rawDataOffset\r\n     */\r\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, rawDataOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(1, data.length, 1);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt8(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(1, numElems, 1);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset stringDataOffset\r\n     */\r\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, stringDataOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createTensor(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\r\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Tensor.startTensor(builder);\r\n      Tensor.addName(builder, nameOffset);\r\n      Tensor.addDocString(builder, docStringOffset);\r\n      Tensor.addDims(builder, dimsOffset);\r\n      Tensor.addDataType(builder, dataType);\r\n      Tensor.addRawData(builder, rawDataOffset);\r\n      Tensor.addStringData(builder, stringDataOffset);\r\n      return Tensor.endTensor(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SparseTensor {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SparseTensor\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SparseTensor= obj\r\n     * @returns SparseTensor\r\n     */\r\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\r\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SparseTensor= obj\r\n     * @returns SparseTensor\r\n     */\r\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    dims(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    dimsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSparseTensor(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset valuesOffset\r\n     */\r\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, valuesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset indicesOffset\r\n     */\r\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, indicesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset dimsOffset\r\n     */\r\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, dimsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSparseTensor(\r\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\r\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SparseTensor.startSparseTensor(builder);\r\n      SparseTensor.addValues(builder, valuesOffset);\r\n      SparseTensor.addIndices(builder, indicesOffset);\r\n      SparseTensor.addDims(builder, dimsOffset);\r\n      return SparseTensor.endSparseTensor(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Attribute {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Attribute\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Attribute= obj\r\n     * @returns Attribute\r\n     */\r\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\r\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Attribute= obj\r\n     * @returns Attribute\r\n     */\r\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    name(): string|null;\r\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    name(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns onnxruntime.experimental.fbs.AttributeType\r\n     */\r\n    type(): onnxruntime.experimental.fbs.AttributeType {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\r\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    f(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    i(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    s(): string|null;\r\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    s(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor|null\r\n     */\r\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph|null\r\n     */\r\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    floats(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    floatsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Float32Array\r\n     */\r\n    floatsArray(): Float32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ?\r\n          new Float32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    ints(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    intsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 22);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    strings(index: number): string;\r\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    stringsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 24);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor\r\n     */\r\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    tensorsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 26);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph\r\n     */\r\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    graphsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 28);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startAttribute(builder: flatbuffers.Builder) {\r\n      builder.startObject(13);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nameOffset\r\n     */\r\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param onnxruntime.experimental.fbs.AttributeType type\r\n     */\r\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\r\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number f\r\n     */\r\n    static addF(builder: flatbuffers.Builder, f: number) {\r\n      builder.addFieldFloat32(3, f, 0.0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long i\r\n     */\r\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\r\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sOffset\r\n     */\r\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, sOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset tOffset\r\n     */\r\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, tOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset gOffset\r\n     */\r\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, gOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset floatsOffset\r\n     */\r\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, floatsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addFloat32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset intsOffset\r\n     */\r\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(9, intsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset stringsOffset\r\n     */\r\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(10, stringsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset tensorsOffset\r\n     */\r\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(11, tensorsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphsOffset\r\n     */\r\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(12, graphsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createAttribute(\r\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\r\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\r\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\r\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\r\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Attribute.startAttribute(builder);\r\n      Attribute.addName(builder, nameOffset);\r\n      Attribute.addDocString(builder, docStringOffset);\r\n      Attribute.addType(builder, type);\r\n      Attribute.addF(builder, f);\r\n      Attribute.addI(builder, i);\r\n      Attribute.addS(builder, sOffset);\r\n      Attribute.addT(builder, tOffset);\r\n      Attribute.addG(builder, gOffset);\r\n      Attribute.addFloats(builder, floatsOffset);\r\n      Attribute.addInts(builder, intsOffset);\r\n      Attribute.addStrings(builder, stringsOffset);\r\n      Attribute.addTensors(builder, tensorsOffset);\r\n      Attribute.addGraphs(builder, graphsOffset);\r\n      return Attribute.endAttribute(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Graph {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Graph\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Graph= obj\r\n     * @returns Graph\r\n     */\r\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\r\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Graph= obj\r\n     * @returns Graph\r\n     */\r\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Tensor= obj\r\n     * @returns onnxruntime.experimental.fbs.Tensor\r\n     */\r\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    initializersLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\r\n     * @returns onnxruntime.experimental.fbs.ValueInfo\r\n     */\r\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeArgsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.Node= obj\r\n     * @returns onnxruntime.experimental.fbs.Node\r\n     */\r\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    maxNodeIndex(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\r\n     * @returns onnxruntime.experimental.fbs.NodeEdge\r\n     */\r\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeEdgesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    inputs(index: number): string;\r\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    inputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array\r\n     */\r\n    outputs(index: number): string;\r\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\r\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    outputsLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\r\n     * @returns onnxruntime.experimental.fbs.SparseTensor\r\n     */\r\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\r\n        onnxruntime.experimental.fbs.SparseTensor|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    sparseInitializersLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startGraph(builder: flatbuffers.Builder) {\r\n      builder.startObject(8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset initializersOffset\r\n     */\r\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, initializersOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeArgsOffset\r\n     */\r\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodesOffset\r\n     */\r\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, nodesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number maxNodeIndex\r\n     */\r\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\r\n      builder.addFieldInt32(3, maxNodeIndex, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeEdgesOffset\r\n     */\r\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset inputsOffset\r\n     */\r\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(5, inputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset outputsOffset\r\n     */\r\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, outputsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sparseInitializersOffset\r\n     */\r\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\r\n        flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createGraph(\r\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\r\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\r\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\r\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Graph.startGraph(builder);\r\n      Graph.addInitializers(builder, initializersOffset);\r\n      Graph.addNodeArgs(builder, nodeArgsOffset);\r\n      Graph.addNodes(builder, nodesOffset);\r\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\r\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\r\n      Graph.addInputs(builder, inputsOffset);\r\n      Graph.addOutputs(builder, outputsOffset);\r\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\r\n      return Graph.endGraph(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class Model {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns Model\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Model= obj\r\n     * @returns Model\r\n     */\r\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\r\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param Model= obj\r\n     * @returns Model\r\n     */\r\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    irVersion(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\r\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\r\n     */\r\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\r\n        onnxruntime.experimental.fbs.OperatorSetId|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    opsetImportLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    producerName(): string|null;\r\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    producerVersion(): string|null;\r\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 10);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    domain(): string|null;\r\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    domain(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 12);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @returns flatbuffers.Long\r\n     */\r\n    modelVersion(): flatbuffers.Long {\r\n      let offset = this.bb!.__offset(this.bb_pos, 14);\r\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    docString(): string|null;\r\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    docString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 16);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Graph= obj\r\n     * @returns onnxruntime.experimental.fbs.Graph|null\r\n     */\r\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 18);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    graphDocString(): string|null;\r\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 20);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startModel(builder: flatbuffers.Builder) {\r\n      builder.startObject(9);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long irVersion\r\n     */\r\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\r\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset opsetImportOffset\r\n     */\r\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, opsetImportOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset producerNameOffset\r\n     */\r\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, producerNameOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset producerVersionOffset\r\n     */\r\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(3, producerVersionOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset domainOffset\r\n     */\r\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(4, domainOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Long modelVersion\r\n     */\r\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\r\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset docStringOffset\r\n     */\r\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(6, docStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphOffset\r\n     */\r\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(7, graphOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphDocStringOffset\r\n     */\r\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createModel(\r\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\r\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\r\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\r\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      Model.startModel(builder);\r\n      Model.addIrVersion(builder, irVersion);\r\n      Model.addOpsetImport(builder, opsetImportOffset);\r\n      Model.addProducerName(builder, producerNameOffset);\r\n      Model.addProducerVersion(builder, producerVersionOffset);\r\n      Model.addDomain(builder, domainOffset);\r\n      Model.addModelVersion(builder, modelVersion);\r\n      Model.addDocString(builder, docStringOffset);\r\n      Model.addGraph(builder, graphOffset);\r\n      Model.addGraphDocString(builder, graphDocStringOffset);\r\n      return Model.endModel(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class KernelCreateInfos {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns KernelCreateInfos\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param KernelCreateInfos= obj\r\n     * @returns KernelCreateInfos\r\n     */\r\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\r\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param KernelCreateInfos= obj\r\n     * @returns KernelCreateInfos\r\n     */\r\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\r\n        KernelCreateInfos {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns number\r\n     */\r\n    nodeIndices(index: number): number|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    nodeIndicesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @returns Uint32Array\r\n     */\r\n    nodeIndicesArray(): Uint32Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ?\r\n          new Uint32Array(\r\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\r\n              this.bb!.__vector_len(this.bb_pos + offset)) :\r\n          null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @returns flatbuffers.Long\r\n     */\r\n    kernelDefHashes(index: number): flatbuffers.Long|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\r\n                      this.bb!.createLong(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    kernelDefHashesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset nodeIndicesOffset\r\n     */\r\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<number> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt32(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset kernelDefHashesOffset\r\n     */\r\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Long> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\r\n      builder.startVector(8, data.length, 8);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addInt64(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(8, numElems, 8);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createKernelCreateInfos(\r\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\r\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      KernelCreateInfos.startKernelCreateInfos(builder);\r\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\r\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\r\n      return KernelCreateInfos.endKernelCreateInfos(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SubGraphSessionState {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SubGraphSessionState\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SubGraphSessionState= obj\r\n     * @returns SubGraphSessionState\r\n     */\r\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\r\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SubGraphSessionState= obj\r\n     * @returns SubGraphSessionState\r\n     */\r\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\r\n        SubGraphSessionState {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    graphId(): string|null;\r\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.SessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SessionState|null\r\n     */\r\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset graphIdOffset\r\n     */\r\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, graphIdOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sessionStateOffset\r\n     */\r\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, sessionStateOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      builder.requiredField(offset, 4);  // graph_id\r\n      return offset;\r\n    }\r\n\r\n    static createSubGraphSessionState(\r\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\r\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SubGraphSessionState.startSubGraphSessionState(builder);\r\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\r\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\r\n      return SubGraphSessionState.endSubGraphSessionState(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class SessionState {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns SessionState\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SessionState= obj\r\n     * @returns SessionState\r\n     */\r\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\r\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param SessionState= obj\r\n     * @returns SessionState\r\n     */\r\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\r\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\r\n     */\r\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param number index\r\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\r\n     */\r\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\r\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\r\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @returns number\r\n     */\r\n    subGraphSessionStatesLength(): number {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startSessionState(builder: flatbuffers.Builder) {\r\n      builder.startObject(2);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset kernelsOffset\r\n     */\r\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, kernelsOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\r\n     */\r\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param Array.<flatbuffers.Offset> data\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\r\n        flatbuffers.Offset {\r\n      builder.startVector(4, data.length, 4);\r\n      for (let i = data.length - 1; i >= 0; i--) {\r\n        builder.addOffset(data[i]);\r\n      }\r\n      return builder.endVector();\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param number numElems\r\n     */\r\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\r\n      builder.startVector(4, numElems, 4);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    static createSessionState(\r\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\r\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      SessionState.startSessionState(builder);\r\n      SessionState.addKernels(builder, kernelsOffset);\r\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\r\n      return SessionState.endSessionState(builder);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace onnxruntime.experimental.fbs {\r\n  export class InferenceSession {\r\n    bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n    bb_pos = 0;\r\n    /**\r\n     * @param number i\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns InferenceSession\r\n     */\r\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\r\n      this.bb_pos = i;\r\n      this.bb = bb;\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param InferenceSession= obj\r\n     * @returns InferenceSession\r\n     */\r\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\r\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @param InferenceSession= obj\r\n     * @returns InferenceSession\r\n     */\r\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\r\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.ByteBuffer bb\r\n     * @returns boolean\r\n     */\r\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\r\n      return bb.__has_identifier('ORTM');\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Encoding= optionalEncoding\r\n     * @returns string|Uint8Array|null\r\n     */\r\n    ortVersion(): string|null;\r\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\r\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 4);\r\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.Model= obj\r\n     * @returns onnxruntime.experimental.fbs.Model|null\r\n     */\r\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 6);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param onnxruntime.experimental.fbs.SessionState= obj\r\n     * @returns onnxruntime.experimental.fbs.SessionState|null\r\n     */\r\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\r\n      let offset = this.bb!.__offset(this.bb_pos, 8);\r\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\r\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\r\n                      null;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     */\r\n    static startInferenceSession(builder: flatbuffers.Builder) {\r\n      builder.startObject(3);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset ortVersionOffset\r\n     */\r\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(0, ortVersionOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset modelOffset\r\n     */\r\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(1, modelOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset sessionStateOffset\r\n     */\r\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\r\n      builder.addFieldOffset(2, sessionStateOffset, 0);\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @returns flatbuffers.Offset\r\n     */\r\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\r\n      let offset = builder.endObject();\r\n      return offset;\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset offset\r\n     */\r\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\r\n      builder.finish(offset, 'ORTM');\r\n    }\r\n\r\n    /**\r\n     * @param flatbuffers.Builder builder\r\n     * @param flatbuffers.Offset offset\r\n     */\r\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\r\n      builder.finish(offset, 'ORTM', true);\r\n    }\r\n\r\n    static createInferenceSession(\r\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\r\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\r\n      InferenceSession.startInferenceSession(builder);\r\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\r\n      InferenceSession.addModel(builder, modelOffset);\r\n      InferenceSession.addSessionState(builder, sessionStateOffset);\r\n      return InferenceSession.endInferenceSession(builder);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\r\nimport {Session} from './session';\r\nimport {Tensor as OnnxjsTensor} from './tensor';\r\n\r\nexport class OnnxjsSessionHandler implements SessionHandler {\r\n  constructor(private session: Session) {\r\n    this.inputNames = this.session.inputNames;\r\n    this.outputNames = this.session.outputNames;\r\n  }\r\n\r\n  async dispose(): Promise<void> {}\r\n  inputNames: readonly string[];\r\n  outputNames: readonly string[];\r\n  async run(\r\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\r\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\r\n    const inputMap = new Map<string, OnnxjsTensor>();\r\n    for (const name in feeds) {\r\n      if (Object.hasOwnProperty.call(feeds, name)) {\r\n        const feed = feeds[name];\r\n        inputMap.set(\r\n            name,\r\n            new OnnxjsTensor(\r\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\r\n                feed.data as OnnxjsTensor.NumberType));\r\n      }\r\n    }\r\n    const outputMap = await this.session.run(inputMap);\r\n    const output: SessionHandler.ReturnType = {};\r\n    outputMap.forEach((tensor, name) => {\r\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\r\n    });\r\n    return output;\r\n  }\r\n  startProfiling(): void {\r\n    this.session.startProfiling();\r\n  }\r\n  endProfiling(): void {\r\n    this.session.endProfiling();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {readFile} from 'fs';\r\nimport {promisify} from 'util';\r\n\r\nimport {resolveBackend, SessionHandlerType} from './backend';\r\nimport {ExecutionPlan} from './execution-plan';\r\nimport {Graph} from './graph';\r\nimport {Profiler} from './instrument';\r\nimport {Model} from './model';\r\nimport {Operator} from './operators';\r\nimport {Tensor} from './tensor';\r\n\r\nexport declare namespace Session {\r\n  export interface Config {\r\n    backendHint?: string;\r\n    profiler?: Profiler.Config;\r\n  }\r\n\r\n  export interface Context {\r\n    profiler: Readonly<Profiler>;\r\n    graphInputTypes?: Tensor.DataType[];\r\n    graphInputDims?: Array<readonly number[]>;\r\n  }\r\n}\r\n\r\nexport class Session {\r\n  constructor(config: Session.Config = {}) {\r\n    this._initialized = false;\r\n    this.backendHint = config.backendHint;\r\n    this.profiler = Profiler.create(config.profiler);\r\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\r\n  }\r\n\r\n  get inputNames(): readonly string[] {\r\n    return this._model.graph.getInputNames();\r\n  }\r\n  get outputNames(): readonly string[] {\r\n    return this._model.graph.getOutputNames();\r\n  }\r\n\r\n  startProfiling() {\r\n    this.profiler.start();\r\n  }\r\n\r\n  endProfiling() {\r\n    this.profiler.stop();\r\n  }\r\n\r\n  async loadModel(uri: string): Promise<void>;\r\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\r\n  async loadModel(buffer: Uint8Array): Promise<void>;\r\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\r\n    await this.profiler.event('session', 'Session.loadModel', async () => {\r\n      // resolve backend and session handler\r\n      const backend = await resolveBackend(this.backendHint);\r\n      this.sessionHandler = backend.createSessionHandler(this.context);\r\n\r\n      this._model = new Model();\r\n      if (typeof arg === 'string') {\r\n        const isOrtFormat = arg.endsWith('.ort');\r\n        if (typeof fetch === 'undefined') {\r\n          // node\r\n          const buf = await promisify(readFile)(arg);\r\n          this.initialize(Buffer.from(buf), isOrtFormat);\r\n        } else {\r\n          // browser\r\n          const response = await fetch(arg);\r\n          const buf = await response.arrayBuffer();\r\n          this.initialize(new Uint8Array(buf), isOrtFormat);\r\n        }\r\n      } else if (!ArrayBuffer.isView(arg)) {\r\n        // load model from ArrayBuffer\r\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\r\n        this.initialize(arr);\r\n      } else {\r\n        // load model from Uint8array\r\n        this.initialize(arg);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\r\n    if (this._initialized) {\r\n      throw new Error('already initialized');\r\n    }\r\n\r\n    this.profiler.event('session', 'Session.initialize', () => {\r\n      // load graph\r\n      const graphInitializer =\r\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\r\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\r\n\r\n      // graph is completely initialzied at this stage , let the interested handlers know\r\n      if (this.sessionHandler.onGraphInitialized) {\r\n        this.sessionHandler.onGraphInitialized(this._model.graph);\r\n      }\r\n      // initialize each operator in the graph\r\n      this.initializeOps(this._model.graph);\r\n\r\n      // instantiate an ExecutionPlan object to be used by the Session object\r\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\r\n    });\r\n\r\n    this._initialized = true;\r\n  }\r\n\r\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\r\n    if (!this._initialized) {\r\n      throw new Error('session not initialized yet');\r\n    }\r\n\r\n    return this.profiler.event('session', 'Session.run', async () => {\r\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\r\n\r\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\r\n\r\n      return this.createOutput(outputTensors);\r\n    });\r\n  }\r\n\r\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\r\n    const modelInputNames = this._model.graph.getInputNames();\r\n\r\n    // normalize inputs\r\n    // inputs: Tensor[]\r\n    if (Array.isArray(inputs)) {\r\n      if (inputs.length !== modelInputNames.length) {\r\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\r\n      }\r\n    }\r\n    // convert map to array\r\n    // inputs: Map<string, Tensor>\r\n    else {\r\n      if (inputs.size !== modelInputNames.length) {\r\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\r\n      }\r\n\r\n      const sortedInputs = new Array<Tensor>(inputs.size);\r\n      let sortedInputsIndex = 0;\r\n      for (let i = 0; i < modelInputNames.length; ++i) {\r\n        const tensor = inputs.get(modelInputNames[i]);\r\n        if (!tensor) {\r\n          throw new Error(`missing input tensor for: '${name}'`);\r\n        }\r\n        sortedInputs[sortedInputsIndex++] = tensor;\r\n      }\r\n\r\n      inputs = sortedInputs;\r\n    }\r\n\r\n    // validate dims requirements\r\n    // First session run - graph input data is not cached for the session\r\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\r\n        this.context.graphInputDims.length === 0) {\r\n      const modelInputIndices = this._model.graph.getInputIndices();\r\n      const modelValues = this._model.graph.getValues();\r\n\r\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\r\n\r\n      for (let i = 0; i < modelInputIndices.length; ++i) {\r\n        const graphInput = modelValues[modelInputIndices[i]];\r\n        graphInputDims[i] = graphInput.type!.shape.dims;\r\n\r\n        // cached for second and subsequent runs.\r\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\r\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\r\n        this.context.graphInputDims!.push(inputs[i].dims);\r\n      }\r\n\r\n      this.validateInputTensorDims(graphInputDims, inputs, true);\r\n    }\r\n\r\n    // Second and subsequent session runs - graph input data is cached for the session\r\n    else {\r\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\r\n    }\r\n\r\n    // validate types requirement\r\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\r\n\r\n    return inputs;\r\n  }\r\n\r\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\r\n    for (let i = 0; i < givenInputs.length; i++) {\r\n      const expectedType = graphInputTypes[i];\r\n      const actualType = givenInputs[i].type;\r\n      if (expectedType !== actualType) {\r\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private validateInputTensorDims(\r\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\r\n    for (let i = 0; i < givenInputs.length; i++) {\r\n      const expectedDims = graphInputDims[i];\r\n      const actualDims = givenInputs[i].dims;\r\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\r\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\r\n            actualDims.join(',')}]`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\r\n      boolean {\r\n    if (expectedDims.length !== actualDims.length) {\r\n      return false;\r\n    }\r\n\r\n    for (let i = 0; i < expectedDims.length; ++i) {\r\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\r\n        // data shape mis-match AND not a 'None' dimension.\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\r\n    const modelOutputNames = this._model.graph.getOutputNames();\r\n    if (outputTensors.length !== modelOutputNames.length) {\r\n      throw new Error('expected number of outputs do not match number of generated outputs');\r\n    }\r\n\r\n    const output = new Map<string, Tensor>();\r\n    for (let i = 0; i < modelOutputNames.length; ++i) {\r\n      output.set(modelOutputNames[i], outputTensors[i]);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  private initializeOps(graph: Graph): void {\r\n    const nodes = graph.getNodes();\r\n    this._ops = new Array(nodes.length);\r\n\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\r\n    }\r\n  }\r\n\r\n  private _model: Model;\r\n  private _initialized: boolean;\r\n\r\n  private _ops: Operator[];\r\n  private _executionPlan: ExecutionPlan;\r\n\r\n  private backendHint?: string;\r\n\r\n  private sessionHandler: SessionHandlerType;\r\n  private context: Session.Context;\r\n  private profiler: Readonly<Profiler>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Guid} from 'guid-typescript';\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\n\r\nimport ortFbs = onnxruntime.experimental.fbs;\r\n\r\nimport {ProtoUtil, ShapeUtil} from './util';\r\n\r\nexport declare namespace Tensor {\r\n  export interface DataTypeMap {\r\n    bool: Uint8Array;\r\n    float32: Float32Array;\r\n    float64: Float64Array;\r\n    string: string[];\r\n    int8: Int8Array;\r\n    uint8: Uint8Array;\r\n    int16: Int16Array;\r\n    uint16: Uint16Array;\r\n    int32: Int32Array;\r\n    uint32: Uint32Array;\r\n  }\r\n\r\n  export type DataType = keyof DataTypeMap;\r\n\r\n  export type StringType = Tensor.DataTypeMap['string'];\r\n  export type BooleanType = Tensor.DataTypeMap['bool'];\r\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\r\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\r\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\r\n  export type NumberType = BooleanType|IntegerType|FloatType;\r\n\r\n  export type Id = Guid;\r\n}\r\n\r\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\r\n\r\ntype DataProvider = (id: Tensor.Id) => TensorData;\r\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\r\n\r\nexport class Tensor {\r\n  /**\r\n   * get the underlying tensor data\r\n   */\r\n  get data(): TensorData {\r\n    if (this.cache === undefined) {\r\n      const data = this.dataProvider!(this.dataId);\r\n      if (data.length !== this.size) {\r\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\r\n      }\r\n      this.cache = data;\r\n    }\r\n    return this.cache;\r\n  }\r\n\r\n  /**\r\n   * get the underlying string tensor data. Should only use when type is STRING\r\n   */\r\n  get stringData() {\r\n    if (this.type !== 'string') {\r\n      throw new TypeError('data type is not string');\r\n    }\r\n\r\n    return this.data as Tensor.StringType;\r\n  }\r\n\r\n  /**\r\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\r\n   * INT16, INT32, UINT32, BOOL)\r\n   */\r\n  get integerData() {\r\n    switch (this.type) {\r\n      case 'uint8':\r\n      case 'int8':\r\n      case 'uint16':\r\n      case 'int16':\r\n      case 'int32':\r\n      case 'uint32':\r\n      case 'bool':\r\n        return this.data as Tensor.IntegerType;\r\n\r\n      default:\r\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\r\n   */\r\n  get floatData() {\r\n    switch (this.type) {\r\n      case 'float32':\r\n      case 'float64':\r\n        return this.data as Tensor.FloatType;\r\n\r\n      default:\r\n        throw new TypeError('data type is not float (float32, float64)');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\r\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\r\n   */\r\n  get numberData() {\r\n    if (this.type !== 'string') {\r\n      return this.data as Tensor.NumberType;\r\n    }\r\n    throw new TypeError('type cannot be non-number (string)');\r\n  }\r\n\r\n  /**\r\n   * get value of an element at the given indices\r\n   */\r\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\r\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\r\n  }\r\n\r\n  /**\r\n   * set value of an element at the given indices\r\n   */\r\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\r\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\r\n  }\r\n\r\n  /**\r\n   * get the underlying tensor data asynchronously\r\n   */\r\n  async getData(): Promise<TensorData> {\r\n    if (this.cache === undefined) {\r\n      this.cache = await this.asyncDataProvider!(this.dataId);\r\n    }\r\n    return this.cache;\r\n  }\r\n\r\n  /**\r\n   * get the number of elements in the tensor\r\n   */\r\n  public readonly size: number;\r\n\r\n  private _strides: readonly number[];\r\n  /**\r\n   * get the strides for each dimension\r\n   */\r\n  get strides(): readonly number[] {\r\n    if (!this._strides) {\r\n      this._strides = ShapeUtil.computeStrides(this.dims);\r\n    }\r\n    return this._strides;\r\n  }\r\n\r\n  constructor(\r\n      /**\r\n       * get the dimensions of the tensor\r\n       */\r\n      public readonly dims: readonly number[],\r\n      /**\r\n       * get the type of the tensor\r\n       */\r\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\r\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\r\n      /**\r\n       * get the data ID that used to map to a tensor data\r\n       */\r\n      public readonly dataId: Guid = Guid.create()) {\r\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\r\n    const size = this.size;\r\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\r\n\r\n    if (cache !== undefined) {\r\n      if (cache.length !== size) {\r\n        throw new RangeError('Input dims doesn\\'t match data length.');\r\n      }\r\n    }\r\n\r\n    if (type === 'string') {\r\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\r\n        throw new TypeError('cache should be a string array');\r\n      }\r\n\r\n      if (empty) {\r\n        this.cache = new Array<string>(size);\r\n      }\r\n    } else {\r\n      if (cache !== undefined) {\r\n        const constructor = dataviewConstructor(type);\r\n        if (!(cache instanceof constructor)) {\r\n          throw new TypeError(`cache should be type ${constructor.name}`);\r\n        }\r\n      }\r\n\r\n      if (empty) {\r\n        const buf = new ArrayBuffer(size * sizeof(type));\r\n        this.cache = createView(buf, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construct new Tensor from a ONNX Tensor object\r\n   * @param tensorProto the ONNX Tensor\r\n   */\r\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\r\n    if (!tensorProto) {\r\n      throw new Error('cannot construct Value from an empty tensor');\r\n    }\r\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\r\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\r\n\r\n    const value = new Tensor(dims, type);\r\n\r\n    if (type === 'string') {\r\n      // When it's STRING type, the value should always be stored in field\r\n      // 'stringData'\r\n      tensorProto.stringData!.forEach((str, i) => {\r\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\r\n        value.data[i] = buf.toString();\r\n      });\r\n\r\n    } else if (\r\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\r\n        tensorProto.rawData.byteLength > 0) {\r\n      // NOT considering segment for now (IMPORTANT)\r\n\r\n      // populate value from rawData\r\n      const dataDest = value.data;\r\n      const dataSource =\r\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\r\n      const elementSize = sizeofProto(tensorProto.dataType!);\r\n      const length = tensorProto.rawData.byteLength / elementSize;\r\n\r\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\r\n        throw new Error('invalid buffer length');\r\n      }\r\n      if (dataDest.length !== length) {\r\n        throw new Error('buffer length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\r\n        dataDest[i] = n;\r\n      }\r\n    } else {\r\n      // populate value from array\r\n      let array: Array<number|Long>;\r\n      switch (tensorProto.dataType) {\r\n        case onnx.TensorProto.DataType.FLOAT:\r\n          array = tensorProto.floatData!;\r\n          break;\r\n        case onnx.TensorProto.DataType.INT32:\r\n        case onnx.TensorProto.DataType.INT16:\r\n        case onnx.TensorProto.DataType.UINT16:\r\n        case onnx.TensorProto.DataType.INT8:\r\n        case onnx.TensorProto.DataType.UINT8:\r\n        case onnx.TensorProto.DataType.BOOL:\r\n          array = tensorProto.int32Data!;\r\n          break;\r\n        case onnx.TensorProto.DataType.INT64:\r\n          array = tensorProto.int64Data!;\r\n          break;\r\n        case onnx.TensorProto.DataType.DOUBLE:\r\n          array = tensorProto.doubleData!;\r\n          break;\r\n        case onnx.TensorProto.DataType.UINT32:\r\n        case onnx.TensorProto.DataType.UINT64:\r\n          array = tensorProto.uint64Data!;\r\n          break;\r\n        default:\r\n          // should never run here\r\n          throw new Error('unspecific error');\r\n      }\r\n\r\n      if (array === null || array === undefined) {\r\n        throw new Error('failed to populate data from a tensorproto value');\r\n      }\r\n\r\n      const data = value.data;\r\n      if (data.length !== array.length) {\r\n        throw new Error('array length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < array.length; i++) {\r\n        const element = array[i];\r\n        if (Long.isLong(element)) {\r\n          data[i] = longToNumber(element, tensorProto.dataType);\r\n        } else {\r\n          data[i] = element;\r\n        }\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Construct new Tensor from raw data\r\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\r\n   * for other types of tensor.\r\n   * @param dims the dimensions of the tensor\r\n   * @param type the type of the tensor\r\n   */\r\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\r\n    return new Tensor(dims, type, undefined, undefined, data);\r\n  }\r\n\r\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\r\n    if (!ortTensor) {\r\n      throw new Error('cannot construct Value from an empty tensor');\r\n    }\r\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\r\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\r\n\r\n    const value = new Tensor(dims, type);\r\n\r\n    if (type === 'string') {\r\n      // When it's STRING type, the value should always be stored in field\r\n      // 'stringData'\r\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\r\n        value.data[i] = ortTensor.stringData(i);\r\n      }\r\n\r\n    } else if (\r\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\r\n      // NOT considering segment for now (IMPORTANT)\r\n\r\n      // populate value from rawData\r\n      const dataDest = value.data;\r\n      const dataSource = new DataView(\r\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\r\n      const elementSize = sizeofProto(ortTensor.dataType());\r\n      const length = ortTensor.rawDataLength() / elementSize;\r\n\r\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\r\n        throw new Error('invalid buffer length');\r\n      }\r\n      if (dataDest.length !== length) {\r\n        throw new Error('buffer length mismatch');\r\n      }\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\r\n        dataDest[i] = n;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction sizeof(type: Tensor.DataType): number {\r\n  switch (type) {\r\n    case 'bool':\r\n    case 'int8':\r\n    case 'uint8':\r\n      return 1;\r\n    case 'int16':\r\n    case 'uint16':\r\n      return 2;\r\n    case 'int32':\r\n    case 'uint32':\r\n    case 'float32':\r\n      return 4;\r\n    case 'float64':\r\n      return 8;\r\n    default:\r\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\r\n  }\r\n}\r\n\r\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\r\n  switch (type) {\r\n    case onnx.TensorProto.DataType.UINT8:\r\n    case onnx.TensorProto.DataType.INT8:\r\n    case onnx.TensorProto.DataType.BOOL:\r\n      return 1;\r\n    case onnx.TensorProto.DataType.UINT16:\r\n    case onnx.TensorProto.DataType.INT16:\r\n      return 2;\r\n    case onnx.TensorProto.DataType.FLOAT:\r\n    case onnx.TensorProto.DataType.INT32:\r\n    case onnx.TensorProto.DataType.UINT32:\r\n      return 4;\r\n    case onnx.TensorProto.DataType.INT64:\r\n    case onnx.TensorProto.DataType.DOUBLE:\r\n    case onnx.TensorProto.DataType.UINT64:\r\n      return 8;\r\n    default:\r\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n}\r\n\r\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\r\n  return new (dataviewConstructor(type))(dataBuffer);\r\n}\r\n\r\nfunction dataviewConstructor(type: Tensor.DataType) {\r\n  switch (type) {\r\n    case 'bool':\r\n    case 'uint8':\r\n      return Uint8Array;\r\n    case 'int8':\r\n      return Int8Array;\r\n    case 'int16':\r\n      return Int16Array;\r\n    case 'uint16':\r\n      return Uint16Array;\r\n    case 'int32':\r\n      return Int32Array;\r\n    case 'uint32':\r\n      return Uint32Array;\r\n    case 'float32':\r\n      return Float32Array;\r\n    case 'float64':\r\n      return Float64Array;\r\n    default:\r\n      // should never run to here\r\n      throw new Error('unspecified error');\r\n  }\r\n}\r\n\r\n// convert a long number to a 32-bit integer (cast-down)\r\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\r\n  // INT64, UINT32, UINT64\r\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\r\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\r\n      throw new TypeError('int64 is not supported');\r\n    }\r\n  } else if (\r\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\r\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\r\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\r\n      throw new TypeError('uint64 is not supported');\r\n    }\r\n  } else {\r\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n\r\n  return i.toNumber();\r\n}\r\n\r\n// read one value from TensorProto\r\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\r\n  switch (type) {\r\n    case onnx.TensorProto.DataType.BOOL:\r\n    case onnx.TensorProto.DataType.UINT8:\r\n      return view.getUint8(byteOffset);\r\n    case onnx.TensorProto.DataType.INT8:\r\n      return view.getInt8(byteOffset);\r\n    case onnx.TensorProto.DataType.UINT16:\r\n      return view.getUint16(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT16:\r\n      return view.getInt16(byteOffset, true);\r\n    case onnx.TensorProto.DataType.FLOAT:\r\n      return view.getFloat32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT32:\r\n      return view.getInt32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.UINT32:\r\n      return view.getUint32(byteOffset, true);\r\n    case onnx.TensorProto.DataType.INT64:\r\n      return longToNumber(\r\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\r\n    case onnx.TensorProto.DataType.DOUBLE:\r\n      return view.getFloat64(byteOffset, true);\r\n    case onnx.TensorProto.DataType.UINT64:\r\n      return longToNumber(\r\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\r\n    default:\r\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {flatbuffers} from 'flatbuffers';\r\nimport Long from 'long';\r\nimport {onnx} from 'onnx-proto';\r\n\r\nimport {Graph} from './graph';\r\nimport {onnxruntime} from './ort-schema/ort-generated';\r\nimport {Tensor} from './tensor';\r\n\r\n// check the inputs shape before running an OP.\r\n// return true when the inputs pass the check\r\n// return false when the inputs do not fit the requirement\r\n// throw exception when fatal error or not implemented\r\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\r\n  if (!inputs || inputs.length !== expectedDimensions.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Evaluates the given expression and asserts error message if condition is unmet.\r\nexport function assert(expr: boolean, msg: () => string) {\r\n  if (!expr) {\r\n    throw new Error(typeof msg === 'string' ? msg : msg());\r\n  }\r\n}\r\n\r\nexport class ArrayUtil {\r\n  /**\r\n   * Verifies if 2 input arrays contain the same elements.\r\n   * @param n1 Array 1\r\n   * @param n2 Array 2\r\n   * @returns Whether these 2 are equal\r\n   */\r\n  static arraysEqual(\r\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\r\n      Float32Array|Float64Array,\r\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\r\n      Float32Array|Float64Array) {\r\n    if (n1.length !== n2.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < n1.length; i++) {\r\n      if (n1[i] !== n2[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class MatMulUtil {\r\n  /**\r\n   * Fix the input shapes for MatMul operation if they need fixing\r\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\r\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\r\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\r\n   */\r\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\r\n      [readonly number[], readonly number[]] {\r\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\r\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\r\n    // removed.\r\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\r\n\r\n    // If the second argument is 1-D, it is promoted to a matrix by appending\r\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\r\n    // removed.\r\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\r\n\r\n    return [a, b];\r\n  }\r\n\r\n  /**\r\n   * Fix the output shape computed for MatMul operation if it needs fixing\r\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\r\n   * This will be mutated.\r\n   * @param aRank The rank of tensor A.\r\n   * @param bRank The rank of tensor B.\r\n   */\r\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\r\n    // Remove prepended dimension if first input is 1d\r\n    if (aRank === 1) {\r\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\r\n      outputShape.splice(outputShape.length - 2, 1);\r\n    }\r\n    // Remove appended dimension if second input is 1d\r\n    if (bRank === 1) {\r\n      outputShape.pop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the expected shape when matrix multiplication\r\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\r\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\r\n   * @returns The expected shape of the result, or undefined if N/A\r\n   */\r\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\r\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\r\n  }\r\n}\r\n\r\nexport class BroadcastUtil {\r\n  /**\r\n   * Calculate the expected shape when broadcasting 2 tensors\r\n   * @param a The shape of tensor A. Should be an array of positive integers\r\n   * @param b The shape of tensor B. Should be an array of positive integers\r\n   * @param isMatMul Whether the operation is MatMul\r\n   * @returns The expected shape of the result, or undefined if N/A\r\n   */\r\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\r\n    const arank = adims.length;\r\n    const brank = bdims.length;\r\n    if (arank === 0) {\r\n      return bdims;\r\n    }\r\n    if (brank === 0) {\r\n      return adims;\r\n    }\r\n    const crank = Math.max(adims.length, bdims.length);\r\n    const cdims = new Array<number>(crank);\r\n\r\n    // calculate the last 2 dimension if it is MatMul\r\n    if (isMatMul) {\r\n      if (arank < 2 || brank < 2) {\r\n        return undefined;\r\n      }\r\n      const cShapeMatMul =\r\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\r\n      if (cShapeMatMul === undefined) {\r\n        return undefined;\r\n      }\r\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\r\n    }\r\n\r\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\r\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\r\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\r\n\r\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\r\n        return undefined;\r\n      }\r\n      cdims[crank - i] = Math.max(aLen, bLen);\r\n    }\r\n\r\n    return cdims;\r\n  }\r\n\r\n  /**\r\n   * Given the indices of a broadcasted tensor, calculate the original indices\r\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\r\n   * @param originalShape The original shape of the tensor before broadcas\r\n   * @returns The calculated indices that maps to the original tensor.\r\n   */\r\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\r\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\r\n    // length as the broadcasted shape, and for each dimension the index should\r\n    // not be out of range.\r\n    const originalIndices = new Array(originalShape.length);\r\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\r\n    return originalIndices;\r\n  }\r\n\r\n  /**\r\n   * Given the indices of a broadcasted tensor, calculate the original indices\r\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\r\n   * @param originalShape The original shape of the tensor before broadcast\r\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\r\n   *     mutated).\r\n   */\r\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\r\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\r\n    // broadcasted shape, and for each dimension the index should not be out of range.\r\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\r\n    const dimOffset = broadcastedIndices.length - originalShape.length;\r\n    for (let i = 0; i < originalShape.length; i++) {\r\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform the broadcasting operation on the specific operator\r\n   * @param a The input tensor A\r\n   * @param b The input tensor B\r\n   * @param op The operator lambda function\r\n   * @param inplace Whether to write the result back to A.\r\n   * @returns The result tensor, or undefined if input not broadcastable.\r\n   */\r\n  static calc(\r\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\r\n      resultType?: Tensor.DataType): Tensor|undefined {\r\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\r\n\r\n    if (outputShape) {\r\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\r\n        // B is not broadcastable to A, failed to calculate inplace.\r\n        return undefined;\r\n      }\r\n\r\n      const size = ShapeUtil.size(outputShape);\r\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\r\n\r\n      // both inputs are scalars\r\n      if (outputShape.length === 0) {\r\n        c.set([], op(a.get([]), b.get([])));\r\n      }\r\n\r\n      // atleast one input is a non-scalar\r\n      else {\r\n        const outputIndices = new Array<number>(outputShape.length);\r\n        const originalIndicesA = new Array(a.dims.length);\r\n        const originalIndicesB = new Array(b.dims.length);\r\n        let valA: string|number = 0;\r\n        let valB: string|number = 0;\r\n        let isAScalar = false;\r\n        let isBScalar = false;\r\n        if (a.dims.length === 0) {\r\n          valA = a.get([]);\r\n          isAScalar = true;\r\n        }\r\n        if (b.dims.length === 0) {\r\n          valB = b.get([]);\r\n          isBScalar = true;\r\n        }\r\n        let rest: number;\r\n        for (let i = 0; i < size; i++) {\r\n          // traversal indices\r\n          rest = i;\r\n          for (let j = outputShape.length - 1; j >= 0; j--) {\r\n            outputIndices[j] = rest % outputShape[j];\r\n            rest = Math.floor(rest / outputShape[j]);\r\n          }\r\n\r\n          if (!isAScalar) {\r\n            // map outputIndices (which is actually broadcasted) to the originalIndices\r\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\r\n            valA = a.get(originalIndicesA);\r\n          }\r\n          if (!isBScalar) {\r\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\r\n            valB = b.get(originalIndicesB);\r\n          }\r\n\r\n          c.set(outputIndices, op(valA, valB));\r\n        }\r\n      }\r\n\r\n      return c;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Determine if a shape is unidirectional broadcastable to another shape\r\n   * @param shape The input shape\r\n   * @param finalShape The desired shape after broadcasting\r\n   */\r\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\r\n    // align shape to the right\r\n    const inputRank = shape.length;\r\n    const finalRank = finalShape.length;\r\n    if (inputRank > finalRank) {\r\n      return false;\r\n    }\r\n    for (let i = 1; i <= inputRank; i++) {\r\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determine the broadcasted dims in input shape based on the given output shape.\r\n   * Note that this function only returns the broadcasted dims.\r\n   * @param inputShape The input shape\r\n   * @param outputShape The output shape\r\n   * @returns The broadcasted dims in input shape.\r\n   */\r\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\r\n    const inRank = inputShape.length;\r\n    const dims: number[] = [];\r\n    for (let i = 0; i < inRank; i++) {\r\n      const dim = inRank - 1 - i;\r\n      const a = inputShape[dim] || 1;\r\n      const b = outputShape[outputShape.length - 1 - i] || 1;\r\n      if (b > 1 && a === 1) {\r\n        dims.unshift(dim);\r\n      }\r\n    }\r\n    return dims;\r\n  }\r\n}\r\n\r\n// copy array helper\r\n// mimics memcpy as much as possible\r\nexport function arrayCopyHelper(\r\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n    blockSize: number) {\r\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n    throw new Error('sourceIndex out of bounds');\r\n  }\r\n  if (targetIndex < 0 || targetIndex >= target.length) {\r\n    throw new Error('targetIndex out of bounds');\r\n  }\r\n  if (sourceIndex + blockSize > source.length) {\r\n    throw new Error('source indices to be copied are outside bounds');\r\n  }\r\n  if (targetIndex + blockSize > target.length) {\r\n    throw new Error('target array is too small to hold result');\r\n  }\r\n\r\n  for (let offset = 0; offset < blockSize; offset++) {\r\n    target[targetIndex + offset] = source[sourceIndex + offset];\r\n  }\r\n}\r\n\r\nexport class GemmUtil {\r\n  // will make sure input shapes are compatible for this op\r\n  // and return back the shape of the output in the form of a tuple\r\n  // will throw exception if the input shapes are not compatible\r\n  static getShapeOfGemmResult(\r\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\r\n      biasShape?: readonly number[]): readonly number[] {\r\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\r\n      throw new Error('shape need to be of size 2');\r\n    }\r\n\r\n    let M: number;\r\n    let K: number;\r\n    let N: number;\r\n\r\n    if (transLeft) {\r\n      M = leftShape[1];\r\n      K = leftShape[0];\r\n    } else {\r\n      M = leftShape[0];\r\n      K = leftShape[1];\r\n    }\r\n\r\n    let kDim = -1;\r\n\r\n    if (transRight) {\r\n      N = rightShape[0];\r\n      kDim = 1;\r\n    } else {\r\n      N = rightShape[1];\r\n      kDim = 0;\r\n    }\r\n\r\n    if (rightShape[kDim] !== K) {\r\n      throw new Error('dimension mismatch');\r\n    }\r\n\r\n    if (M <= 0 || N <= 0 || K <= 0) {\r\n      throw new Error('invalid shape specified');\r\n    }\r\n\r\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\r\n      throw new Error('gemm: invalid bias shape for broadcast');\r\n    }\r\n\r\n    return [M, N, K];\r\n  }\r\n}\r\n\r\nexport class ProtoUtil {\r\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\r\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\r\n    switch (typeProto) {\r\n      case onnx.TensorProto.DataType.INT8:\r\n        return 'int8';\r\n      case onnx.TensorProto.DataType.UINT8:\r\n        return 'uint8';\r\n      case onnx.TensorProto.DataType.BOOL:\r\n        return 'bool';\r\n      case onnx.TensorProto.DataType.INT16:\r\n        return 'int16';\r\n      case onnx.TensorProto.DataType.UINT16:\r\n        return 'uint16';\r\n      case onnx.TensorProto.DataType.INT32:\r\n        return 'int32';\r\n      case onnx.TensorProto.DataType.UINT32:\r\n        return 'uint32';\r\n      case onnx.TensorProto.DataType.FLOAT:\r\n        return 'float32';\r\n      case onnx.TensorProto.DataType.DOUBLE:\r\n        return 'float64';\r\n      case onnx.TensorProto.DataType.STRING:\r\n        return 'string';\r\n\r\n      // For INT64/UINT64, reduce their value to 32-bits.\r\n      // Should throw exception when overflow\r\n      case onnx.TensorProto.DataType.INT64:\r\n        return 'int32';\r\n      case onnx.TensorProto.DataType.UINT64:\r\n        return 'uint32';\r\n\r\n      default:\r\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\r\n    }\r\n  }\r\n\r\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\r\n    switch (type) {\r\n      case 'int8':\r\n        return onnx.TensorProto.DataType.INT8;\r\n      case 'uint8':\r\n        return onnx.TensorProto.DataType.UINT8;\r\n      case 'bool':\r\n        return onnx.TensorProto.DataType.BOOL;\r\n      case 'int16':\r\n        return onnx.TensorProto.DataType.INT16;\r\n      case 'uint16':\r\n        return onnx.TensorProto.DataType.UINT16;\r\n      case 'int32':\r\n        return onnx.TensorProto.DataType.INT32;\r\n      case 'uint32':\r\n        return onnx.TensorProto.DataType.UINT32;\r\n      case 'float32':\r\n        return onnx.TensorProto.DataType.FLOAT;\r\n      case 'float64':\r\n        return onnx.TensorProto.DataType.DOUBLE;\r\n      case 'string':\r\n        return onnx.TensorProto.DataType.STRING;\r\n      case 'int64':\r\n        return onnx.TensorProto.DataType.INT64;\r\n      case 'uint64':\r\n        return onnx.TensorProto.DataType.UINT64;\r\n\r\n      default:\r\n        throw new Error(`unsupported data type: ${type}`);\r\n    }\r\n  }\r\n\r\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\r\n    // get rid of Long type for dims\r\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\r\n  }\r\n\r\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\r\n    return {\r\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\r\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\r\n    };\r\n  }\r\n\r\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\r\n    const dims = [];\r\n    for (let i = 0; i < tensor.dimsLength(); i++) {\r\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\r\n    }\r\n    return dims;\r\n  }\r\n\r\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\r\n    const attributes = [];\r\n    for (let i = 0; i < node.attributesLength(); i++) {\r\n      attributes.push(node.attributes(i)!);\r\n    }\r\n    return attributes;\r\n  }\r\n}\r\n\r\nexport class LongUtil {\r\n  static longToNumber(n: Long|flatbuffers.Long|number) {\r\n    if (Long.isLong(n)) {\r\n      return n.toNumber();\r\n    } else if (n instanceof flatbuffers.Long) {\r\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\r\n    }\r\n    return n;\r\n  }\r\n  static isLong(n: unknown) {\r\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\r\n  }\r\n}\r\n\r\nexport class ShapeUtil {\r\n  static size(dims: readonly number[]): number {\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\r\n  }\r\n\r\n  // `axis` inclusive\r\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\r\n    if (axis < 0 || axis > dims.length) {\r\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\r\n    }\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\r\n  }\r\n\r\n  // `axis` exclusive\r\n  static sizeToDimension(dims: readonly number[], axis: number): number {\r\n    if (axis < 0 || axis > dims.length) {\r\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\r\n    }\r\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\r\n  }\r\n\r\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\r\n    let size = 1;\r\n    for (let i = start; i < end; i++) {\r\n      // safety check as this method is called by multiple other methods requiring size.\r\n      // size cannot be 0 or negative.\r\n      if (dims[i] <= 0) {\r\n        throw new Error(\r\n            // eslint-disable-next-line max-len\r\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\r\n      }\r\n      size *= dims[i];\r\n    }\r\n    return size;\r\n  }\r\n\r\n  static computeStrides(dims: readonly number[]): readonly number[] {\r\n    const rank = dims.length;\r\n    if (rank === 0) {\r\n      return [];\r\n    } else if (rank === 1) {\r\n      return [1];\r\n    }\r\n    const strides = new Array(rank);\r\n    strides[rank - 1] = 1;\r\n    strides[rank - 2] = dims[rank - 1];\r\n    for (let i = rank - 3; i >= 0; --i) {\r\n      strides[i] = strides[i + 1] * dims[i + 1];\r\n    }\r\n    return strides;\r\n  }\r\n\r\n  static transpose(dims: readonly number[]): readonly number[] {\r\n    const copy = dims.slice();\r\n    return copy.reverse();\r\n  }\r\n\r\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\r\n    if (axis === undefined) {\r\n      axis = indices.length;\r\n    }\r\n    let offset = 0;\r\n    for (let i = 0; i < axis; ++i) {\r\n      offset += strides[i] * indices[i];\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\r\n    const rank = strides.length;\r\n    if (rank === 0) {\r\n      return [];\r\n    } else if (rank === 1) {\r\n      return [offset * strides[0]];\r\n    }\r\n    const indices: number[] = new Array(strides.length);\r\n    for (let i = 0; i < indices.length - 1; ++i) {\r\n      indices[i] = Math.floor(offset / strides[i]);\r\n      offset -= indices[i] * strides[i];\r\n    }\r\n    indices[indices.length - 1] = offset;\r\n    return indices;\r\n  }\r\n\r\n  /**\r\n   * normailze axis of range [-r, r) into [0, r).\r\n   */\r\n  static normalizeAxis(axis: number, tensorRank: number): number {\r\n    if (axis < -tensorRank && axis >= tensorRank) {\r\n      throw new Error('unsupported axis for this operation.');\r\n    }\r\n    return axis < 0 ? axis + tensorRank : axis;\r\n  }\r\n\r\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\r\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\r\n  }\r\n\r\n  // Increment an index into a tensor (in lexicographic\r\n  // ordering), wrapping around the specified upper_bound.\r\n  /**\r\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\r\n   * @param index Given index to increment (Will be mutated)\r\n   * @param dims The dimensions of the tensor for which the given index corresponds to\r\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\r\n   */\r\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\r\n    if (dims.length === 0 || index.length === 0) {\r\n      throw new Error('Index incrementing unsupported for scalar Tensor');\r\n    }\r\n    if (axisToIncrementOn === undefined) {\r\n      axisToIncrementOn = dims.length;\r\n    } else {\r\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\r\n        throw new Error('Incorrect axis to increment on');\r\n      }\r\n    }\r\n\r\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\r\n      index[k]++;\r\n      if (index[k] < dims[k]) {\r\n        break;\r\n      }\r\n      index[k] = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\r\n   * Used in Reshape\r\n   * @param originalDims Original Shape array\r\n   * @param shapeHints array containing values to compute the new dimensions\r\n   * For example:\r\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\r\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\r\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\r\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\r\n   */\r\n\r\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\r\n    // reshape to a Scalar Tensor\r\n    if (shapeHints.length === 0) {\r\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\r\n        return [];\r\n      } else {\r\n        throw new Error('cannot reshape to a scalar Tensor');\r\n      }\r\n    }\r\n\r\n    const nDims = shapeHints.length;\r\n    const reshapedDims = new Array<number>(nDims);\r\n    let unknownDimension = -1;\r\n    let newTensorSize = 1;\r\n    for (let i = 0; i < nDims; i++) {\r\n      if (shapeHints[i] < -1) {\r\n        throw new Error('a dimension in shape hints cannot be less than -1');\r\n      }\r\n      if (shapeHints[i] === -1) {\r\n        if (unknownDimension !== -1) {\r\n          throw new Error('at most one dimension in shape hints can be -1');\r\n        }\r\n        unknownDimension = i;\r\n      } else {\r\n        if (shapeHints[i] === 0) {\r\n          if (i >= originalDims.length) {\r\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\r\n          }\r\n          reshapedDims[i] = originalDims[i];\r\n        } else {\r\n          reshapedDims[i] = shapeHints[i];\r\n        }\r\n        newTensorSize *= reshapedDims[i];\r\n      }\r\n    }\r\n\r\n    const oldTensorSize = ShapeUtil.size(originalDims);\r\n    if (unknownDimension !== -1) {\r\n      if (oldTensorSize % newTensorSize !== 0) {\r\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\r\n            originalDims}] Output shape: [${shapeHints}]`);\r\n      }\r\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\r\n    }\r\n    // validate sizes from originalDims and reshapedDims match\r\n    else {\r\n      if (newTensorSize !== oldTensorSize) {\r\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\r\n      }\r\n    }\r\n    return reshapedDims;\r\n  }\r\n\r\n  /**\r\n   * Sorts a given array based on the indices in the Perm array\r\n   * Used in Transpose\r\n   * @param a Array to be sorted such as dims or strides\r\n   * @param perm Perm given; if null a will be reversed\r\n   */\r\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\r\n    if (perm) {\r\n      return perm.map((v) => a[v]);\r\n    } else {\r\n      return a.slice().reverse();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pads a given shape according to the padding values\r\n   * @param dims shape of the Tensor to be padded\r\n   * @param pad pad values\r\n   */\r\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\r\n    const rank = dims.length;\r\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\r\n  }\r\n\r\n  /**\r\n   * Determines if the two shapes are identical\r\n   * @param shape1\r\n   * @param shape2\r\n   */\r\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\r\n    if (shape1.length !== shape2.length) {\r\n      return false;\r\n    }\r\n    return shape1.every((v, i) => v === shape2[i]);\r\n  }\r\n\r\n  /**\r\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\r\n   * @param dims - input `dims` that needs to be checked\r\n   */\r\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\r\n    if (dims.length > 6) {\r\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\r\n    }\r\n    let size = 1;\r\n    for (const n of dims) {\r\n      if (!Number.isInteger(n)) {\r\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\r\n      }\r\n      if (n < 0 || n > 2147483647) {\r\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\r\n      }\r\n      size *= n;\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = flatten(x, axis)\r\n   * @param dims - shape of input tensor\r\n   * @param axis - flatten axis, in the range [-r, r]\r\n   */\r\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\r\n    if (axis < 0) {\r\n      axis += dims.length;\r\n    }\r\n    const total = dims.reduce((x, y) => x * y, 1);\r\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\r\n    const outputDims = [total / right, right];\r\n\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = squeeze(x, axes)\r\n   * @param dims - shape of input tensor\r\n   * @param axes - squeeze axes\r\n   */\r\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\r\n    const outputDims = new Array<number>();\r\n\r\n    // sanity check\r\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\r\n\r\n    for (let i = 0; i < dims.length; i++) {\r\n      const inSqueezeList = axes.indexOf(i) >= 0;\r\n      if (inSqueezeList && dims[i] !== 1) {\r\n        throw new Error('squeeze an axis of size different than 1');\r\n      }\r\n\r\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\r\n        outputDims.push(dims[i]);\r\n      }\r\n    }\r\n\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\r\n   * @param dims - shape of input tensor\r\n   * @param axes - unsqueeze axes\r\n   */\r\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\r\n    const outputDims = new Array<number>(dims.length + axes.length);\r\n\r\n    // initialize the array elements to 0\r\n    outputDims.fill(0);\r\n\r\n    // set all axes indices to 1 in outputDims and check for duplicates\r\n    for (let i = 0; i < axes.length; i++) {\r\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\r\n      if (axis >= outputDims.length) {\r\n        throw new Error('\\'axes\\' has an out of range axis');\r\n      }\r\n      if (outputDims[axis] !== 0) {\r\n        throw new Error('\\'axes\\' has a duplicate axis');\r\n      }\r\n\r\n      outputDims[axis] = 1;\r\n    }\r\n\r\n    // fill in the zero entries of outputDims with the input tensor's shape\r\n    let inputDimsIterator = 0;\r\n    for (let i = 0; i < outputDims.length; i++) {\r\n      if (outputDims[i] === 0) {\r\n        outputDims[i] = dims[inputDimsIterator++];\r\n      }\r\n    }\r\n\r\n    // sanity check assertion. 'inputDimsIterator'\r\n    // should be equal to the length of 'dims'\r\n    if (inputDimsIterator !== dims.length) {\r\n      throw new Error('the unsqueezed dimension could not be established');\r\n    }\r\n\r\n    return outputDims;\r\n  }\r\n}\r\n\r\n// bunch of helper methods that do a variety of math operations\r\nexport class MathUtil {\r\n  // y = (x*x) + y\r\n  static sqr(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\r\n    }\r\n  }\r\n\r\n  // y = ax + y\r\n  static axpy(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number, alpha: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\r\n    }\r\n  }\r\n\r\n  // y = pow(x, b)\r\n  static powx(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number, b: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\r\n    }\r\n  }\r\n\r\n  // y = x * y\r\n  static mul(\r\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\r\n      blockSize: number) {\r\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\r\n      throw new Error('sourceIndex out of bounds');\r\n    }\r\n    if (targetIndex < 0 || targetIndex >= target.length) {\r\n      throw new Error('targetIndex out of bounds');\r\n    }\r\n    if (sourceIndex + blockSize > source.length) {\r\n      throw new Error('source indices to be copied are outside bounds');\r\n    }\r\n    if (targetIndex + blockSize > target.length) {\r\n      throw new Error('target array is too small to hold result');\r\n    }\r\n\r\n    for (let offset = 0; offset < blockSize; offset++) {\r\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\r\n    }\r\n  }\r\n}\r\n\r\nexport class SplitUtil {\r\n  /**\r\n   * Calculates new Shapes from existing one and the splits given along the axis provides\r\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\r\n   * @param axis The dimension along which the Tensor will be split\r\n   * @param splits Offsets for the start of each split\r\n   */\r\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\r\n      [number[][], number[]] {\r\n    if (split.length === 0) {\r\n      if (!numOutputs) {\r\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\r\n      }\r\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\r\n    }\r\n\r\n    const shapes: number[][] = [];\r\n    const offsets = [0];\r\n    for (let i = 0; i < split.length; ++i) {\r\n      if (i !== 0) {\r\n        offsets.push(offsets[i - 1] + split[i - 1]);\r\n      }\r\n      const shape = dims.slice();\r\n      shape[axis] = split[i];\r\n      shapes.push(shape);\r\n    }\r\n    return [shapes, offsets];\r\n  }\r\n\r\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\r\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\r\n    if (numElementsAlongAxis % numOutputs !== 0) {\r\n      throw new Error('cannot split tensor to equal sized parts');\r\n    }\r\n    for (let i = 0; i < numOutputs; ++i) {\r\n      split.push(numElementsAlongAxis / numOutputs);\r\n    }\r\n  }\r\n}\r\n\r\nexport class ReduceUtil {\r\n  /**\r\n   * Perform reduce operations on the specific operator\r\n   * @param a Input tensor data\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param keepdims If set to true, the axes which are reduced are left in the\r\n   *    result as dimensions with size one.\r\n   * @param op1 The operation to be performed on each element in the tensor\r\n   * @param op2 The operation to be performed between elements in the tensor\r\n   */\r\n  static calcReduce(\r\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\r\n      op2: (a: number, b: number) => number): Tensor {\r\n    const dims = a.dims.slice(0);\r\n    // if axes is not set, perform reduce on all axes\r\n    if (axes.length === 0) {\r\n      dims.forEach((d, ind) => axes.push(ind));\r\n    }\r\n    // get a temporary broadcastable output shape\r\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\r\n\r\n    // loop through the output and calculate result one by one\r\n    const size = ShapeUtil.size(outputDims);\r\n    const y = new Tensor(outputDims, a.type);\r\n    const strides = ShapeUtil.computeStrides(outputDims);\r\n    const inputStrides = ShapeUtil.computeStrides(dims);\r\n    const indicesY = new Array(dims.length);\r\n    for (let i = 0; i < size; i++) {\r\n      const indices = ShapeUtil.offsetToIndices(i, strides);\r\n      // map index\r\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\r\n      y.set(\r\n          indices,\r\n          ReduceUtil.calcReduceByAxis(\r\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\r\n    }\r\n\r\n    if (keepdims) {\r\n      return y;\r\n    } else {\r\n      // keepdims == 0, calculate the expected shape\r\n      return new Tensor(\r\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform reduce operations on the specific operator on specific axes\r\n   * @param a Input tensor data\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param dims The input dimension.\r\n   * @param curAxisInd Index in axes specifying the current dimension along\r\n   *      which the tensor will be reduced\r\n   * @param pos The current index of element to perform operation\r\n   * @param op1 The operation to be performed on each element in the tensor\r\n   * @param op2 The operation to be performed between elements in the tensor\r\n   */\r\n  static calcReduceByAxis(\r\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\r\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\r\n    let res = 0;\r\n    if (curAxisInd >= axes.length) {\r\n      return op1(input[pos]);\r\n    }\r\n    const axis = axes[curAxisInd];\r\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\r\n    for (let i = 0; i < dims[axis]; i++) {\r\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\r\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\r\n      pos += step;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Calculate the expected shape of a reduce operation\r\n   * @param dims The input tensor dimension\r\n   * @param axes The dimensions along which the Tensor will be reduced\r\n   * @param keepdims If set to true, the axes which are reduced are left in the\r\n   *    result as dimensions with size one.\r\n   */\r\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\r\n    const outputDims = dims.slice();\r\n    for (let i = 0; i < axes.length; i++) {\r\n      if (keepDims) {\r\n        outputDims[axes[i]] = 1;\r\n      } else {\r\n        outputDims[axes[i]] = 0;\r\n      }\r\n    }\r\n    return outputDims.filter(dim => dim !== 0);\r\n  }\r\n}\r\n\r\nexport class PoolConvUtil {\r\n  /**\r\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\r\n   * @param isGlobalOperator If true, perform global pooling.\r\n   * @param inputDims The input tensor dimension.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param strides Stride along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   */\r\n  static adjustPoolAttributes(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\r\n      pads: number[]) {\r\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\r\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\r\n    }\r\n\r\n    if (isGlobalOperator) {\r\n      // adjust kernel shape to cover the input dims\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        if (dim >= kernelShape.length) {\r\n          kernelShape.push(inputDims[dim + 2]);\r\n        } else {\r\n          kernelShape[dim] = inputDims[dim + 2];\r\n        }\r\n      }\r\n    }\r\n\r\n    // adjust strides length to match kernel shape length\r\n    for (let dim = 0; dim < kernelShape.length; dim++) {\r\n      if (dim < strides.length) {\r\n        if (strides[dim] < 0) {\r\n          throw new Error('strides should be greater than or equal to 1');\r\n        }\r\n      } else {\r\n        strides.push(1);\r\n      }\r\n    }\r\n\r\n    // adjust pads length to match 2 * kernel shape length\r\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\r\n      if (dim < pads.length) {\r\n        if (pads[dim] < 0) {\r\n          throw new Error('pad should be greater than or equal to 1');\r\n        }\r\n      } else {\r\n        pads.push(0);\r\n      }\r\n    }\r\n\r\n    // sanity checks for values in kernel shapes and pads\r\n    for (let dim = 0; dim < kernelShape.length; dim++) {\r\n      if (kernelShape[dim] <= 0) {\r\n        throw new Error('kernel shapes need to be greater than 0');\r\n      }\r\n\r\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\r\n        throw new Error('pads should be smaller than kernel');\r\n      }\r\n    }\r\n  }\r\n\r\n  // adjust pad values based on 'autoPad' attribute\r\n  static adjustPadsBasedOnAutoPad(\r\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\r\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\r\n    if (!autoPad) {\r\n      return;\r\n    }\r\n\r\n    if (pads.length !== 2 * (inputDims.length - 2)) {\r\n      throw new Error('length of pads should be twice the length of data dimensions');\r\n    }\r\n\r\n    if (strides.length !== (inputDims.length - 2)) {\r\n      throw new Error('length of strides should be the length of data dimensions');\r\n    }\r\n\r\n    if (kernelShape.length !== (inputDims.length - 2)) {\r\n      throw new Error('length of kernel shapes should be the length of data dimensions');\r\n    }\r\n\r\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n      PoolConvUtil.adjustPadAndReturnShape(\r\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\r\n          autoPad);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\r\n   * @param isGlobalOperator If true, perform global pooling.\r\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\r\n   * @param strides Stride along each axis.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\r\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\r\n   */\r\n  static computePoolOutputShape(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\r\n      autoPad?: string): number[] {\r\n    if (inputDims.length <= 0) {\r\n      throw new Error('input shape must be of size greater than 0');\r\n    }\r\n\r\n    // Add batch size and number of channels of output\r\n    const outputDims = [inputDims[0], inputDims[1]];\r\n\r\n    // TODO: support dilations for pool operators\r\n    const dilations = new Array<number>(kernelShape.length).fill(1);\r\n\r\n    PoolConvUtil.computeShapeHelper(\r\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\r\n    return outputDims;\r\n  }\r\n\r\n  /**\r\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\r\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\r\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\r\n   * @param strides Stride along each axis.\r\n   * @param kernelShape The size of the kernel along each axis.\r\n   * @param pads Padding for the beginning and ending along each axis.\r\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\r\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\r\n   */\r\n  static computeConvOutputShape(\r\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\r\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\r\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\r\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\r\n    }\r\n\r\n    // Add batch size and number of channels of output\r\n    const outputDims = [inputDims[0], filterDims[0]];\r\n\r\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\r\n    return outputDims;\r\n  }\r\n\r\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\r\n  // called by computePoolOutputShape() and computeConvOutputShape()\r\n  // adjust pads based on 'autoPad' attribute prior to shape computation\r\n  private static computeShapeHelper(\r\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\r\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\r\n    if (isGlobalOperator) {\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        outputDims.push(1);\r\n      }\r\n    } else {\r\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\r\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\r\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\r\n            autoPad));\r\n      }\r\n    }\r\n  }\r\n\r\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\r\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\r\n  private static adjustPadAndReturnShape(\r\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\r\n      padTailIndex: number, autoPad?: string): number {\r\n    const dkernel = dilation * (kernel - 1) + 1;\r\n    if (autoPad && autoPad !== 'NOTSET') {\r\n      switch (autoPad) {\r\n        case 'VALID':\r\n          pads[padHeadIndex] = 0;\r\n          pads[padTailIndex] = 0;\r\n          return Math.floor(((inSize - dkernel) / stride) + 1);\r\n        case 'SAME_LOWER':\r\n        case 'SAME_UPPER':\r\n          if (dilation !== 1) {\r\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\r\n          } else {\r\n            const legacyTargetSize = (inSize + stride - 1) / stride;\r\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\r\n            pads[padHeadIndex] =\r\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\r\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\r\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\r\n          }\r\n        default:\r\n          throw new Error('Unsupported AutoPad type');\r\n      }\r\n    } else {\r\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\ninterface ExtraOptionsHandler {\r\n  (name: string, value: string): void;\r\n}\r\n\r\nexport const iterateExtraOptions =\r\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\r\n     handler: ExtraOptionsHandler): void => {\r\n      if (typeof options == 'object' && options !== null) {\r\n        if (seen.has(options)) {\r\n          throw new Error('Circular reference in options');\r\n        } else {\r\n          seen.add(options);\r\n        }\r\n      }\r\n\r\n      Object.entries(options).forEach(([key, value]) => {\r\n        const name = (prefix) ? prefix + key : key;\r\n        if (typeof value === 'object') {\r\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\r\n        } else if (typeof value === 'string' || typeof value === 'number') {\r\n          handler(name, value.toString());\r\n        } else if (typeof value === 'boolean') {\r\n          handler(name, (value) ? '1' : '0');\r\n        } else {\r\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\r\n        }\r\n      });\r\n    };\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env, InferenceSession} from 'onnxruntime-common';\r\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\r\nimport * as core from './wasm-core-impl';\r\nimport {initializeWebAssembly} from './wasm-factory';\r\n\r\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\r\nlet proxyWorker: Worker|undefined;\r\nlet initializing = false;\r\nlet initialized = false;\r\nlet aborted = false;\r\n\r\n// resolve; reject\r\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\r\n\r\nlet initWasmCallbacks: PromiseCallbacks;\r\nlet initOrtCallbacks: PromiseCallbacks;\r\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\r\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\r\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\r\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\r\n\r\nconst ensureWorker = (): void => {\r\n  if (initializing || !initialized || aborted || !proxyWorker) {\r\n    throw new Error('worker not ready');\r\n  }\r\n};\r\n\r\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\r\n  switch (ev.data.type) {\r\n    case 'init-wasm':\r\n      initializing = false;\r\n      if (ev.data.err) {\r\n        aborted = true;\r\n        initWasmCallbacks[1](ev.data.err);\r\n      } else {\r\n        initialized = true;\r\n        initWasmCallbacks[0]();\r\n      }\r\n      break;\r\n    case 'init-ort':\r\n      if (ev.data.err) {\r\n        initOrtCallbacks[1](ev.data.err);\r\n      } else {\r\n        initOrtCallbacks[0]();\r\n      }\r\n      break;\r\n    case 'create':\r\n      if (ev.data.err) {\r\n        createSessionCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        createSessionCallbacks.shift()![0](ev.data.out!);\r\n      }\r\n      break;\r\n    case 'release':\r\n      if (ev.data.err) {\r\n        releaseSessionCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        releaseSessionCallbacks.shift()![0]();\r\n      }\r\n      break;\r\n    case 'run':\r\n      if (ev.data.err) {\r\n        runCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        runCallbacks.shift()![0](ev.data.out!);\r\n      }\r\n      break;\r\n    case 'end-profiling':\r\n      if (ev.data.err) {\r\n        endProfilingCallbacks.shift()![1](ev.data.err);\r\n      } else {\r\n        endProfilingCallbacks.shift()![0]();\r\n      }\r\n      break;\r\n    default:\r\n  }\r\n};\r\n\r\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\r\n\r\nexport const initWasm = async(): Promise<void> => {\r\n  if (isProxy()) {\r\n    if (initialized) {\r\n      return;\r\n    }\r\n    if (initializing) {\r\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\r\n    }\r\n    if (aborted) {\r\n      throw new Error('previous call to \\'initWasm()\\' failed.');\r\n    }\r\n\r\n    initializing = true;\r\n\r\n    // overwrite wasm filepaths\r\n    if (env.wasm.wasmPaths === undefined) {\r\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\r\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\r\n      }\r\n    }\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n      proxyWorker?.terminate();\r\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\r\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\r\n      proxyWorker.onmessage = onProxyWorkerMessage;\r\n      initWasmCallbacks = [resolve, reject];\r\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\r\n      proxyWorker.postMessage(message);\r\n    });\r\n\r\n  } else {\r\n    return initializeWebAssembly(env.wasm);\r\n  }\r\n};\r\n\r\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      initOrtCallbacks = [resolve, reject];\r\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.initOrt(numThreads, loggingLevel);\r\n  }\r\n};\r\n\r\nexport const createSession =\r\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\r\n      createSessionCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\r\n      proxyWorker!.postMessage(message, [model.buffer]);\r\n    });\r\n  } else {\r\n    return core.createSession(model, options);\r\n  }\r\n};\r\n\r\nexport const releaseSession = async(sessionId: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      releaseSessionCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.releaseSession(sessionId);\r\n  }\r\n};\r\n\r\nexport const run = async(\r\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\r\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\r\n      runCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\r\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\r\n    });\r\n  } else {\r\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\r\n  }\r\n};\r\n\r\nexport const endProfiling = async(sessionId: number): Promise<void> => {\r\n  if (isProxy()) {\r\n    ensureWorker();\r\n    return new Promise<void>((resolve, reject) => {\r\n      endProfilingCallbacks.push([resolve, reject]);\r\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\r\n      proxyWorker!.postMessage(message);\r\n    });\r\n  } else {\r\n    core.endProfiling(sessionId);\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession} from 'onnxruntime-common';\r\n\r\nimport {iterateExtraOptions} from './options-utils';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\r\n  const wasm = getInstance();\r\n  let runOptionsHandle = 0;\r\n  const allocs: number[] = [];\r\n\r\n  const runOptions: InferenceSession.RunOptions = options || {};\r\n\r\n  try {\r\n    if (options?.logSeverityLevel === undefined) {\r\n      runOptions.logSeverityLevel = 2;  // Default to warning\r\n    } else if (\r\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\r\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\r\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\r\n    }\r\n\r\n    if (options?.logVerbosityLevel === undefined) {\r\n      runOptions.logVerbosityLevel = 0;  // Default to 0\r\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\r\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\r\n    }\r\n\r\n    if (options?.terminate === undefined) {\r\n      runOptions.terminate = false;\r\n    }\r\n\r\n    let tagDataOffset = 0;\r\n    if (options?.tag !== undefined) {\r\n      tagDataOffset = allocWasmString(options.tag, allocs);\r\n    }\r\n\r\n    runOptionsHandle = wasm._OrtCreateRunOptions(\r\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\r\n    if (runOptionsHandle === 0) {\r\n      throw new Error('Can\\'t create run options');\r\n    }\r\n\r\n    if (options?.extra !== undefined) {\r\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\r\n        const keyDataOffset = allocWasmString(key, allocs);\r\n        const valueDataOffset = allocWasmString(value, allocs);\r\n\r\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\r\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    return [runOptionsHandle, allocs];\r\n  } catch (e) {\r\n    if (runOptionsHandle !== 0) {\r\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\r\n    }\r\n    allocs.forEach(wasm._free);\r\n    throw e;\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\r\n\r\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\r\n\r\nlet ortInit: boolean;\r\n\r\n\r\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\r\n  switch (logLevel) {\r\n    case 'verbose':\r\n      return 0;\r\n    case 'info':\r\n      return 1;\r\n    case 'warning':\r\n      return 2;\r\n    case 'error':\r\n      return 3;\r\n    case 'fatal':\r\n      return 4;\r\n    default:\r\n      throw new Error(`unsupported logging level: ${logLevel}`);\r\n  }\r\n};\r\n\r\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\r\n  private sessionId: number;\r\n\r\n  inputNames: string[];\r\n  outputNames: string[];\r\n\r\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\r\n    if (!ortInit) {\r\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\r\n      ortInit = true;\r\n    }\r\n\r\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\r\n  }\r\n\r\n  async dispose(): Promise<void> {\r\n    return releaseSession(this.sessionId);\r\n  }\r\n\r\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\r\n      Promise<SessionHandler.ReturnType> {\r\n    const inputArray: Tensor[] = [];\r\n    const inputIndices: number[] = [];\r\n    Object.entries(feeds).forEach(kvp => {\r\n      const name = kvp[0];\r\n      const tensor = kvp[1];\r\n      const index = this.inputNames.indexOf(name);\r\n      if (index === -1) {\r\n        throw new Error(`invalid input '${name}'`);\r\n      }\r\n      inputArray.push(tensor);\r\n      inputIndices.push(index);\r\n    });\r\n\r\n    const outputIndices: number[] = [];\r\n    Object.entries(fetches).forEach(kvp => {\r\n      const name = kvp[0];\r\n      // TODO: support pre-allocated output\r\n      const index = this.outputNames.indexOf(name);\r\n      if (index === -1) {\r\n        throw new Error(`invalid output '${name}'`);\r\n      }\r\n      outputIndices.push(index);\r\n    });\r\n\r\n    const outputs =\r\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\r\n\r\n    const result: SessionHandler.ReturnType = {};\r\n    for (let i = 0; i < outputs.length; i++) {\r\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  startProfiling(): void {\r\n    // TODO: implement profiling\r\n  }\r\n\r\n  endProfiling(): void {\r\n    void endProfiling(this.sessionId);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession} from 'onnxruntime-common';\r\n\r\nimport {iterateExtraOptions} from './options-utils';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\r\n  switch (graphOptimizationLevel) {\r\n    case 'disabled':\r\n      return 0;\r\n    case 'basic':\r\n      return 1;\r\n    case 'extended':\r\n      return 2;\r\n    case 'all':\r\n      return 99;\r\n    default:\r\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\r\n  }\r\n};\r\n\r\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\r\n  switch (executionMode) {\r\n    case 'sequential':\r\n      return 0;\r\n    case 'parallel':\r\n      return 1;\r\n    default:\r\n      throw new Error(`unsupported execution mode: ${executionMode}`);\r\n  }\r\n};\r\n\r\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\r\n  if (!options.extra) {\r\n    options.extra = {};\r\n  }\r\n  if (!options.extra.session) {\r\n    options.extra.session = {};\r\n  }\r\n  const session = options.extra.session as Record<string, string>;\r\n  if (!session.use_ort_model_bytes_directly) {\r\n    // eslint-disable-next-line camelcase\r\n    session.use_ort_model_bytes_directly = '1';\r\n  }\r\n};\r\n\r\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\r\n  const wasm = getInstance();\r\n  let sessionOptionsHandle = 0;\r\n  const allocs: number[] = [];\r\n\r\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\r\n  appendDefaultOptions(sessionOptions);\r\n\r\n  try {\r\n    if (options?.graphOptimizationLevel === undefined) {\r\n      sessionOptions.graphOptimizationLevel = 'all';\r\n    }\r\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\r\n\r\n    if (options?.enableCpuMemArena === undefined) {\r\n      sessionOptions.enableCpuMemArena = true;\r\n    }\r\n\r\n    if (options?.enableMemPattern === undefined) {\r\n      sessionOptions.enableMemPattern = true;\r\n    }\r\n\r\n    if (options?.executionMode === undefined) {\r\n      sessionOptions.executionMode = 'sequential';\r\n    }\r\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\r\n\r\n    let logIdDataOffset = 0;\r\n    if (options?.logId !== undefined) {\r\n      logIdDataOffset = allocWasmString(options.logId, allocs);\r\n    }\r\n\r\n    if (options?.logSeverityLevel === undefined) {\r\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\r\n    } else if (\r\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\r\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\r\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\r\n    }\r\n\r\n    if (options?.logVerbosityLevel === undefined) {\r\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\r\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\r\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\r\n    }\r\n\r\n    if (options?.enableProfiling === undefined) {\r\n      sessionOptions.enableProfiling = false;\r\n    }\r\n\r\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\r\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\r\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\r\n        sessionOptions.logVerbosityLevel!);\r\n    if (sessionOptionsHandle === 0) {\r\n      throw new Error('Can\\'t create session options');\r\n    }\r\n\r\n    if (options?.extra !== undefined) {\r\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\r\n        const keyDataOffset = allocWasmString(key, allocs);\r\n        const valueDataOffset = allocWasmString(value, allocs);\r\n\r\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\r\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (options?.executionProviders) {\r\n      for (const ep of options.executionProviders) {\r\n        const name = typeof ep === 'string' ? ep : ep.name;\r\n        if (name === 'webnn') {\r\n          let deviceType = 2;\r\n          let powerPreference = 0;\r\n          if (typeof ep !== 'string') {\r\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\r\n            if (webnnOptions?.deviceType) {\r\n              deviceType = webnnOptions.deviceType;\r\n            }\r\n            if (webnnOptions?.powerPreference) {\r\n              powerPreference = webnnOptions.powerPreference;\r\n            }\r\n          }\r\n          const preferenceValues = [0, 1, 2];\r\n          if (!preferenceValues.includes(deviceType)) {\r\n            throw new Error(\"Invalid deviceType value, it shoule be one of {0, 1, 2}\");\r\n          }\r\n          if (!preferenceValues.includes(powerPreference)) {\r\n            throw new Error(\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\");\r\n          }\r\n          const deviceTypeNames = [\"Auto\", \"GPU\", \"CPU\"];\r\n          const powerPreferenceNames = [\"Auto\", \"High-performance\", \"Low-power\"];\r\n          console.log(`webnn device type: ${deviceTypeNames[deviceType]}`);\r\n          console.log(`webnn power preference: ${powerPreferenceNames[powerPreference]}`);\r\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, deviceType, powerPreference) !== 0) {\r\n            throw new Error(`Can't append WebNN execution provider`);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return [sessionOptionsHandle, allocs];\r\n  } catch (e) {\r\n    if (sessionOptionsHandle !== 0) {\r\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\r\n    }\r\n    allocs.forEach(wasm._free);\r\n    throw e;\r\n  }\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {getInstance} from './wasm-factory';\r\n\r\nexport const allocWasmString = (data: string, allocs: number[]): number => {\r\n  const wasm = getInstance();\r\n\r\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\r\n  const dataOffset = wasm._malloc(dataLength);\r\n  wasm.stringToUTF8(data, dataOffset, dataLength);\r\n  allocs.push(dataOffset);\r\n\r\n  return dataOffset;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\r\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\r\nimport {setRunOptions} from './run-options';\r\nimport {setSessionOptions} from './session-options';\r\nimport {allocWasmString} from './string-utils';\r\nimport {getInstance} from './wasm-factory';\r\n\r\n/**\r\n * initialize ORT environment.\r\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\r\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\r\n */\r\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\r\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\r\n  if (errorCode !== 0) {\r\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\r\n  }\r\n};\r\n\r\n/**\r\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\r\n */\r\ntype SessionMetadata = [number, number[], number[]];\r\n\r\nconst activeSessions: Array<SessionMetadata|undefined> = [];\r\n\r\n/**\r\n * create an instance of InferenceSession.\r\n * @returns the metadata of InferenceSession. 0-value handle for failure.\r\n */\r\nexport const createSession =\r\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\r\n      const wasm = getInstance();\r\n      const modelDataOffset = wasm._malloc(model.byteLength);\r\n      let sessionHandle = 0;\r\n      let sessionOptionsHandle = 0;\r\n      let allocs: number[] = [];\r\n\r\n      try {\r\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\r\n\r\n        wasm.HEAPU8.set(model, modelDataOffset);\r\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\r\n        if (sessionHandle === 0) {\r\n          throw new Error('Can\\'t create a session');\r\n        }\r\n      } finally {\r\n        wasm._free(modelDataOffset);\r\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\r\n        allocs.forEach(wasm._free);\r\n      }\r\n\r\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\r\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\r\n\r\n      const inputNames = [];\r\n      const inputNamesUTF8Encoded = [];\r\n      const outputNames = [];\r\n      const outputNamesUTF8Encoded = [];\r\n      for (let i = 0; i < inputCount; i++) {\r\n        const name = wasm._OrtGetInputName(sessionHandle, i);\r\n        if (name === 0) {\r\n          throw new Error('Can\\'t get an input name');\r\n        }\r\n        inputNamesUTF8Encoded.push(name);\r\n        inputNames.push(wasm.UTF8ToString(name));\r\n      }\r\n      for (let i = 0; i < outputCount; i++) {\r\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\r\n        if (name === 0) {\r\n          throw new Error('Can\\'t get an output name');\r\n        }\r\n        outputNamesUTF8Encoded.push(name);\r\n        outputNames.push(wasm.UTF8ToString(name));\r\n      }\r\n\r\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\r\n      return [activeSessions.length - 1, inputNames, outputNames];\r\n    };\r\n\r\nexport const releaseSession = (sessionId: number): void => {\r\n  const wasm = getInstance();\r\n  const session = activeSessions[sessionId];\r\n  if (!session) {\r\n    throw new Error('invalid session id');\r\n  }\r\n  const sessionHandle = session[0];\r\n  const inputNamesUTF8Encoded = session[1];\r\n  const outputNamesUTF8Encoded = session[2];\r\n\r\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\r\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\r\n  wasm._OrtReleaseSession(sessionHandle);\r\n  activeSessions[sessionId] = undefined;\r\n};\r\n\r\n/**\r\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\r\n */\r\nconst enum DataType {\r\n  undefined = 0,\r\n  float = 1,\r\n  uint8 = 2,\r\n  int8 = 3,\r\n  uint16 = 4,\r\n  int16 = 5,\r\n  int32 = 6,\r\n  int64 = 7,\r\n  string = 8,\r\n  bool = 9,\r\n  float16 = 10,\r\n  double = 11,\r\n  uint32 = 12,\r\n  uint64 = 13,\r\n  complex64 = 14,\r\n  complex128 = 15,\r\n  bfloat16 = 16\r\n}\r\n\r\n\r\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\r\n  switch (type) {\r\n    case 'int8':\r\n      return DataType.int8;\r\n    case 'uint8':\r\n      return DataType.uint8;\r\n    case 'bool':\r\n      return DataType.bool;\r\n    case 'int16':\r\n      return DataType.int16;\r\n    case 'uint16':\r\n      return DataType.uint16;\r\n    case 'int32':\r\n      return DataType.int32;\r\n    case 'uint32':\r\n      return DataType.uint32;\r\n    case 'float32':\r\n      return DataType.float;\r\n    case 'float64':\r\n      return DataType.double;\r\n    case 'string':\r\n      return DataType.string;\r\n    case 'int64':\r\n      return DataType.int64;\r\n    case 'uint64':\r\n      return DataType.uint64;\r\n\r\n    default:\r\n      throw new Error(`unsupported data type: ${type}`);\r\n  }\r\n};\r\n\r\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\r\n  switch (typeProto) {\r\n    case DataType.int8:\r\n      return 'int8';\r\n    case DataType.uint8:\r\n      return 'uint8';\r\n    case DataType.bool:\r\n      return 'bool';\r\n    case DataType.int16:\r\n      return 'int16';\r\n    case DataType.uint16:\r\n      return 'uint16';\r\n    case DataType.int32:\r\n      return 'int32';\r\n    case DataType.uint32:\r\n      return 'uint32';\r\n    case DataType.float:\r\n      return 'float32';\r\n    case DataType.double:\r\n      return 'float64';\r\n    case DataType.string:\r\n      return 'string';\r\n    case DataType.int64:\r\n      return 'int32';\r\n    case DataType.uint64:\r\n      return 'uint32';\r\n\r\n    default:\r\n      throw new Error(`unsupported data type: ${typeProto}`);\r\n  }\r\n};\r\n\r\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\r\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\r\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\r\n      switch (type) {\r\n        case 'float32':\r\n          return Float32Array;\r\n        case 'uint8':\r\n          return Uint8Array;\r\n        case 'int8':\r\n          return Int8Array;\r\n        case 'uint16':\r\n          return Uint16Array;\r\n        case 'int16':\r\n          return Int16Array;\r\n        case 'int32':\r\n          return Int32Array;\r\n        case 'bool':\r\n          return Uint8Array;\r\n        case 'float64':\r\n          return Float64Array;\r\n        case 'uint32':\r\n          return Uint32Array;\r\n        case 'int64':\r\n          return BigInt64Array;\r\n        case 'uint64':\r\n          return BigUint64Array;\r\n        default:\r\n          throw new Error(`unsupported type: ${type}`);\r\n      }\r\n    };\r\n\r\n/**\r\n * perform inference run\r\n */\r\nexport const run =\r\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\r\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\r\n      const wasm = getInstance();\r\n      const session = activeSessions[sessionId];\r\n      if (!session) {\r\n        throw new Error('invalid session id');\r\n      }\r\n      const sessionHandle = session[0];\r\n      const inputNamesUTF8Encoded = session[1];\r\n      const outputNamesUTF8Encoded = session[2];\r\n\r\n      const inputCount = inputIndices.length;\r\n      const outputCount = outputIndices.length;\r\n\r\n      let runOptionsHandle = 0;\r\n      let runOptionsAllocs: number[] = [];\r\n\r\n      const inputValues: number[] = [];\r\n      const inputAllocs: number[] = [];\r\n\r\n      try {\r\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\r\n\r\n        // create input tensors\r\n        for (let i = 0; i < inputCount; i++) {\r\n          const dataType = inputs[i][0];\r\n          const dims = inputs[i][1];\r\n          const data = inputs[i][2];\r\n\r\n          let dataOffset: number;\r\n          let dataByteLength: number;\r\n\r\n          if (Array.isArray(data)) {\r\n            // string tensor\r\n            dataByteLength = 4 * data.length;\r\n            dataOffset = wasm._malloc(dataByteLength);\r\n            inputAllocs.push(dataOffset);\r\n            let dataIndex = dataOffset / 4;\r\n            for (let i = 0; i < data.length; i++) {\r\n              if (typeof data[i] !== 'string') {\r\n                throw new TypeError(`tensor data at index ${i} is not a string`);\r\n              }\r\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\r\n            }\r\n          } else {\r\n            dataByteLength = data.byteLength;\r\n            dataOffset = wasm._malloc(dataByteLength);\r\n            inputAllocs.push(dataOffset);\r\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\r\n          }\r\n\r\n          const stack = wasm.stackSave();\r\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\r\n          try {\r\n            let dimIndex = dimsOffset / 4;\r\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\r\n            const tensor = wasm._OrtCreateTensor(\r\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\r\n            if (tensor === 0) {\r\n              throw new Error('Can\\'t create a tensor');\r\n            }\r\n            inputValues.push(tensor);\r\n          } finally {\r\n            wasm.stackRestore(stack);\r\n          }\r\n        }\r\n\r\n        const beforeRunStack = wasm.stackSave();\r\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\r\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\r\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\r\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\r\n\r\n        try {\r\n          let inputValuesIndex = inputValuesOffset / 4;\r\n          let inputNamesIndex = inputNamesOffset / 4;\r\n          let outputValuesIndex = outputValuesOffset / 4;\r\n          let outputNamesIndex = outputNamesOffset / 4;\r\n          for (let i = 0; i < inputCount; i++) {\r\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\r\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\r\n          }\r\n          for (let i = 0; i < outputCount; i++) {\r\n            wasm.HEAPU32[outputValuesIndex++] = 0;\r\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\r\n          }\r\n\r\n          // support RunOptions\r\n          let errorCode = wasm._OrtRun(\r\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\r\n              outputValuesOffset, runOptionsHandle);\r\n\r\n          const output: SerializableTensor[] = [];\r\n\r\n          if (errorCode === 0) {\r\n            for (let i = 0; i < outputCount; i++) {\r\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\r\n\r\n              const beforeGetTensorDataStack = wasm.stackSave();\r\n              // stack allocate 4 pointer value\r\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\r\n\r\n              let type: Tensor.Type|undefined, dataOffset = 0;\r\n              try {\r\n                errorCode = wasm._OrtGetTensorData(\r\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\r\n                if (errorCode !== 0) {\r\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\r\n                }\r\n                let tensorDataIndex = tensorDataOffset / 4;\r\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\r\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\r\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\r\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\r\n                const dims = [];\r\n                for (let i = 0; i < dimsLength; i++) {\r\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\r\n                }\r\n                wasm._OrtFree(dimsOffset);\r\n\r\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\r\n                type = tensorDataTypeEnumToString(dataType);\r\n                if (type === 'string') {\r\n                  const stringData: string[] = [];\r\n                  let dataIndex = dataOffset / 4;\r\n                  for (let i = 0; i < size; i++) {\r\n                    const offset = wasm.HEAPU32[dataIndex++];\r\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\r\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\r\n                  }\r\n                  output.push([type, dims, stringData]);\r\n                } else {\r\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\r\n                  const data = new typedArrayConstructor(size);\r\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\r\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\r\n                  output.push([type, dims, data]);\r\n                }\r\n              } finally {\r\n                wasm.stackRestore(beforeGetTensorDataStack);\r\n                if (type === 'string' && dataOffset) {\r\n                  wasm._free(dataOffset);\r\n                }\r\n                wasm._OrtReleaseTensor(tensor);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (errorCode === 0) {\r\n            return output;\r\n          } else {\r\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\r\n          }\r\n        } finally {\r\n          wasm.stackRestore(beforeRunStack);\r\n        }\r\n      } finally {\r\n        inputValues.forEach(wasm._OrtReleaseTensor);\r\n        inputAllocs.forEach(wasm._free);\r\n\r\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\r\n        runOptionsAllocs.forEach(wasm._free);\r\n      }\r\n    };\r\n\r\n/**\r\n * end profiling\r\n */\r\nexport const endProfiling = (sessionId: number): void => {\r\n  const wasm = getInstance();\r\n  const session = activeSessions[sessionId];\r\n  if (!session) {\r\n    throw new Error('invalid session id');\r\n  }\r\n  const sessionHandle = session[0];\r\n\r\n  // profile file name is not used yet, but it must be freed.\r\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\r\n  if (profileFileName === 0) {\r\n    throw new Error('Can\\'t get an profile file name');\r\n  }\r\n  wasm._OrtFree(profileFileName);\r\n};\r\n\r\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\r\n  const buffers: ArrayBufferLike[] = [];\r\n  for (const tensor of tensors) {\r\n    const data = tensor[2];\r\n    if (!Array.isArray(data) && data.buffer) {\r\n      buffers.push(data.buffer);\r\n    }\r\n  }\r\n  return buffers;\r\n};\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {Env} from 'onnxruntime-common';\r\nimport * as path from 'path';\r\n\r\nimport {OrtWasmModule} from './binding/ort-wasm';\r\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\r\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\r\nimport ortWasmFactory from './binding/ort-wasm.js';\r\n\r\nlet wasm: OrtWasmModule|undefined;\r\nlet initialized = false;\r\nlet initializing = false;\r\nlet aborted = false;\r\n\r\nconst isMultiThreadSupported = (): boolean => {\r\n  try {\r\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\r\n    if (typeof SharedArrayBuffer === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    // Test for transferability of SABs (for browsers. needed for Firefox)\r\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\r\n    if (typeof MessageChannel !== 'undefined') {\r\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\r\n    }\r\n\r\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\r\n    // This typed array is a WebAssembly program containing threaded instructions.\r\n    return WebAssembly.validate(new Uint8Array([\r\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\r\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\r\n    ]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isSimdSupported = (): boolean => {\r\n  try {\r\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\r\n    // This typed array is a WebAssembly program containing SIMD instructions.\r\n    return WebAssembly.validate(new Uint8Array(\r\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\r\n  if (useThreads) {\r\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\r\n  } else {\r\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\r\n  }\r\n};\r\n\r\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\r\n  if (initialized) {\r\n    return Promise.resolve();\r\n  }\r\n  if (initializing) {\r\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\r\n  }\r\n  if (aborted) {\r\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\r\n  }\r\n\r\n  initializing = true;\r\n\r\n  // wasm flags are already initialized\r\n  const timeout = flags.initTimeout!;\r\n  const numThreads = flags.numThreads!;\r\n  const simd = flags.simd!;\r\n\r\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\r\n  const useSimd = simd && isSimdSupported();\r\n\r\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\r\n  const wasmFileName = getWasmFileName(false, useThreads);\r\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\r\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\r\n\r\n  let isTimeout = false;\r\n\r\n  const tasks: Array<Promise<void>> = [];\r\n\r\n  // promise for timeout\r\n  if (timeout > 0) {\r\n    tasks.push(new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        isTimeout = true;\r\n        resolve();\r\n      }, timeout);\r\n    }));\r\n  }\r\n\r\n  // promise for module initialization\r\n  tasks.push(new Promise((resolve, reject) => {\r\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\r\n    const config: Partial<OrtWasmModule> = {\r\n      locateFile: (fileName: string, scriptDirectory: string) => {\r\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\r\n          return URL.createObjectURL(new Blob(\r\n              [\r\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\r\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\r\n                require('./binding/ort-wasm-threaded.worker.js')\r\n              ],\r\n              {type: 'text/javascript'}));\r\n        }\r\n\r\n        if (fileName === wasmFileName) {\r\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\r\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\r\n        }\r\n\r\n        return scriptDirectory + fileName;\r\n      }\r\n    };\r\n\r\n    if (useThreads) {\r\n      if (typeof Blob === 'undefined') {\r\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\r\n      } else {\r\n        const scriptSourceCode =\r\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\r\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\r\n      }\r\n    }\r\n\r\n    factory(config).then(\r\n        // wasm module initialized successfully\r\n        module => {\r\n          initializing = false;\r\n          initialized = true;\r\n          wasm = module;\r\n          resolve();\r\n        },\r\n        // wasm module failed to initialize\r\n        (what) => {\r\n          initializing = false;\r\n          aborted = true;\r\n          reject(what);\r\n        });\r\n  }));\r\n\r\n  await Promise.race(tasks);\r\n\r\n  if (isTimeout) {\r\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\r\n  }\r\n};\r\n\r\nexport const getInstance = (): OrtWasmModule => {\r\n  if (initialized && wasm) {\r\n    return wasm;\r\n  }\r\n\r\n  throw new Error('WebAssembly is not initialized yet.');\r\n};\r\n\r\nexport const dispose = (): void => {\r\n  if (initialized && !initializing && !aborted) {\r\n    initializing = true;\r\n\r\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\r\n    wasm = undefined;\r\n\r\n    initializing = false;\r\n    initialized = false;\r\n    aborted = true;\r\n  }\r\n};\r\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={474:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return x.buffer!=G&&se(x.buffer),V}function r(){return x.buffer!=G&&se(x.buffer),$}function a(){return x.buffer!=G&&se(x.buffer),q}function o(){return x.buffer!=G&&se(x.buffer),X}function i(){return x.buffer!=G&&se(x.buffer),J}function u(){return x.buffer!=G&&se(x.buffer),Z}function s(){return x.buffer!=G&&se(x.buffer),K}var c,f,l;e=e||{},c||(c=void 0!==e?e:{}),c.ready=new Promise((function(e,t){f=e,l=t}));var p,d={};for(p in c)c.hasOwnProperty(p)&&(d[p]=c[p]);var m=\\\"./this.program\\\";function h(e,t){throw t}var g,y,v,b,_,w=\\\"object\\\"==typeof window,A=\\\"function\\\"==typeof importScripts,T=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,O=c.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function S(e){return c.locateFile?c.locateFile(e,E):E+e}if(T){if(E=A?n(908).dirname(E)+\\\"/\\\":\\\"//\\\",g=function(e,t){return b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFileSync(e,t?null:\\\"utf8\\\")},v=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),U(e.buffer),e},y=function(e,t,r){b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(m=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof Fn))throw e})),process.on(\\\"unhandledRejection\\\",Ae),h=function(e,t){if(ge())throw process.exitCode=e,t;process.exit(e)},c.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var C;try{C=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}}else(w||A)&&(A?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",T?(g=function(e,t){return b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFileSync(e,t?null:\\\"utf8\\\")},v=function(e){return(e=g(e,!0)).buffer||(e=new Uint8Array(e)),U(e.buffer),e},y=function(e,t,r){b||(b=n(384)),_||(_=n(908)),e=_.normalize(e),b.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(g=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},A&&(v=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),y=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));T&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var k,M,P=c.print||console.log.bind(console),D=c.printErr||console.warn.bind(console);for(p in d)d.hasOwnProperty(p)&&(c[p]=d[p]);d=null,c.thisProgram&&(m=c.thisProgram),c.quit&&(h=c.quit),c.wasmBinary&&(M=c.wasmBinary);var F=c.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&Ae(\\\"no native wasm support detected\\\");var x,R,I,W=!1;function U(e,t){e||Ae(\\\"Assertion failed: \\\"+t)}function j(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var L=\\\"undefined\\\"!=typeof TextDecoder?new j(\\\"utf8\\\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&L)return L.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function Y(e,t){return e?H(r(),e,t):\\\"\\\"}function N(e,t,n,r){if(!(0<r))return 0;var a=n;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++]=i}else{if(2047>=i){if(n+1>=r)break;t[n++]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++]=224|i>>12}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63}t[n++]=128|i>>6&63}t[n++]=128|63&i}}return t[n]=0,n-a}function z(e,t,n){return N(e,r(),t,n)}function B(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}var G,V,$,q,X,J,Z,Q,K,ee=\\\"undefined\\\"!=typeof TextDecoder?new j(\\\"utf-16le\\\"):void 0;function te(e,t){for(var n=e>>1,i=n+t/2;!(n>=i)&&o()[n];)++n;if(32<(n<<=1)-e&&ee)return ee.decode(r().subarray(e,n));for(n=\\\"\\\",i=0;!(i>=t/2);++i){var u=a()[e+2*i>>1];if(0==u)break;n+=String.fromCharCode(u)}return n}function ne(e,t,n){if(void 0===n&&(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var o=0;o<n;++o){var i=e.charCodeAt(o);a()[t>>1]=i,t+=2}return a()[t>>1]=0,t-r}function re(e){return 2*e.length}function ae(e,t){for(var n=0,r=\\\"\\\";!(n>=t/4);){var a=i()[e+4*n>>2];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r}function oe(e,t,n){if(void 0===n&&(n=2147483647),4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),i()[t>>2]=o,(t+=4)+4>n)break}return i()[t>>2]=0,t-r}function ie(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t}function ue(e){var n=B(e)+1,r=an(n);return r&&N(e,t(),r,n),r}function se(e){G=e,c.HEAP8=V=new Int8Array(e),c.HEAP16=q=new Int16Array(e),c.HEAP32=J=new Int32Array(e),c.HEAPU8=$=new Uint8Array(e),c.HEAPU16=X=new Uint16Array(e),c.HEAPU32=Z=new Uint32Array(e),c.HEAPF32=Q=new Float32Array(e),c.HEAPF64=K=new Float64Array(e)}O&&(G=c.buffer);var ce=c.INITIAL_MEMORY||16777216;if(O)x=c.wasmMemory,G=c.buffer;else if(c.wasmMemory)x=c.wasmMemory;else if(!((x=new WebAssembly.Memory({initial:ce/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw D(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),T&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");x&&(G=x.buffer),ce=G.byteLength,se(G);var fe,le=[],pe=[],de=[],me=[],he=0;function ge(){return F||0<he}function ye(){var e=c.preRun.shift();le.unshift(e)}var ve,be=0,_e=null,we=null;function Ae(e){throw c.onAbort&&c.onAbort(e),U(!O),D(e),W=!0,I=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function Te(){return ve.startsWith(\\\"data:application/octet-stream;base64,\\\")}function Oe(){var e=ve;try{if(e==ve&&M)return new Uint8Array(M);if(v)return v(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Ae(e)}}c.preloadedImages={},c.preloadedAudios={},ve=\\\"ort-wasm-threaded.wasm\\\",Te()||(ve=S(ve));var Ee={985396:function(){throw\\\"Canceled!\\\"}};function Se(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(c);else{var n=t.qc;\\\"number\\\"==typeof n?void 0===t.Jb?fe.get(n)():fe.get(n)(t.Jb):n(void 0===t.Jb?null:t.Jb)}}}function Ce(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),Dn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),Dn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ke(e){if(O)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=Pe.Eb[e];t&&(i()[e+12>>2]=0,Pe.Ub(t.worker))}c._emscripten_futex_wake=Ce;var Me,Pe={Hb:[],Gb:[],bc:[],bd:function(){},vc:function(){for(var e=an(228),t=0;57>t;++t)u()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=an(512);for(t=0;128>t;++t)u()[n/4+t]=0;Atomics.store(u(),e+100>>2,n),Atomics.store(u(),e+40>>2,e),bn(e,!A,1),ln(e)},wc:function(){Pe.receiveObjectTransfer=Pe.Cc,Pe.threadInit=Pe.Mc,Pe.threadCancel=Pe.Lc,Pe.threadExit=Pe.kc,Pe.setExitStatus=Pe.Ec},Eb:{},ac:[],hc:function(){for(;0<Pe.ac.length;)Pe.ac.pop()();wn()},ic:function(e,t){Atomics.store(u(),e+56>>2,1),Atomics.store(u(),e+60>>2,0),Pe.hc(),Atomics.store(u(),e+4>>2,t),Atomics.store(u(),e+0>>2,1),Ce(e+0,2147483647),bn(0,0,0)},Ec:function(e){I=e},kc:function(e){var t=sn();t&&(Pe.ic(t,e),O&&postMessage({cmd:\\\"exit\\\"}))},Lc:function(){Pe.ic(sn(),-1),postMessage({cmd:\\\"cancelDone\\\"})},jc:function(){for(var e in Pe.Eb){var t=Pe.Eb[e];t&&t.worker&&Pe.Ub(t.worker)}for(Pe.Eb={},e=0;e<Pe.Hb.length;++e){var n=Pe.Hb[e];n.terminate()}for(Pe.Hb=[],e=0;e<Pe.Gb.length;++e)t=(n=Pe.Gb[e]).Db,Pe.Zb(t),n.terminate();Pe.Gb=[]},Zb:function(e){if(e){if(e.Fb){var t=i()[e.Fb+100>>2];i()[e.Fb+100>>2]=0,un(t),un(e.Fb)}e.Fb=0,e.Yb&&e.Ib&&un(e.Ib),e.Ib=0,e.worker&&(e.worker.Db=null)}},Ub:function(e){Pe.Dc((function(){delete Pe.Eb[e.Db.Fb],Pe.Hb.push(e),Pe.Gb.splice(Pe.Gb.indexOf(e),1),Pe.Zb(e.Db),e.Db=void 0}))},Dc:function(e){i()[Pn>>2]=0;try{e()}finally{i()[Pn>>2]=1}},Cc:function(){},Mc:function(){for(var e in Pe.bc)Pe.bc[e]()},zc:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.Db&&(Pe.oc=e.Db.Fb),r.targetThread&&r.targetThread!=sn()){var o=Pe.Eb[r.jd];o?o.worker.postMessage(n.data,r.transferList):D('Internal error! Worker sent a message \\\"'+a+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===a)mn();else if(\\\"spawnThread\\\"===a)Re(n.data);else if(\\\"cleanupThread\\\"===a)ke(r.thread);else if(\\\"killThread\\\"===a){if(n=r.thread,O)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=Pe.Eb[n],delete Pe.Eb[n],r.worker.terminate(),Pe.Zb(r),Pe.Gb.splice(Pe.Gb.indexOf(r.worker),1),r.worker.Db=void 0}else if(\\\"cancelThread\\\"===a){if(n=r.thread,O)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";Pe.Eb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===a)e.loaded=!0,t&&t(e),e.Ob&&(e.Ob(),delete e.Ob);else if(\\\"print\\\"===a)P(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===a)D(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===a)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===a)e.Db&&Atomics.load(u(),e.Db.Fb+64>>2)&&Pe.Ub(e);else if(\\\"exitProcess\\\"===a)try{Rn(r.returnCode)}catch(e){if(e instanceof Fn)return;throw e}else\\\"cancelDone\\\"===a?Pe.Ub(e):\\\"objectTransfer\\\"!==a&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):D(\\\"worker sent an unknown command \\\"+a));Pe.oc=void 0},e.onerror=function(e){D(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},T&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:c.mainScriptUrlOrBlob||_scriptDir,wasmMemory:x,wasmModule:R})},lc:function(){var e=S(\\\"ort-wasm-threaded.worker.js\\\");Pe.Hb.push(new Worker(e))},rc:function(){return 0==Pe.Hb.length&&(Pe.lc(),Pe.zc(Pe.Hb[0])),Pe.Hb.pop()},Sc:function(e){for(e=performance.now()+e;performance.now()<e;);}};function De(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[on()>>2]=28,-1;e=Me()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Fe(e,t){if(O)return Pt(1,1,e,t);de.unshift({qc:e,Jb:t})}function xe(e){this.Nb=e-16,this.Jc=function(e){i()[this.Nb+4>>2]=e},this.Gc=function(e){i()[this.Nb+8>>2]=e},this.Hc=function(){i()[this.Nb>>2]=0},this.Fc=function(){t()[this.Nb+12>>0]=0},this.Ic=function(){t()[this.Nb+13>>0]=0},this.tc=function(e,t){this.Jc(e),this.Gc(t),this.Hc(),this.Fc(),this.Ic()}}function Re(e){if(O)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=Pe.rc();if(!t)return 6;if(void 0!==t.Db)throw\\\"Internal error!\\\";if(!e.Tb)throw\\\"Internal error, no pthread ptr!\\\";Pe.Gb.push(t);for(var n=an(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var a=e.Ib+e.Kb,o=(r=Pe.Eb[e.Tb]={worker:t,Ib:e.Ib,Kb:e.Kb,Yb:e.Yb,Fb:e.Tb}).Fb>>2;Atomics.store(u(),o+16,e.detached),Atomics.store(u(),o+25,n),Atomics.store(u(),o+10,r.Fb),Atomics.store(u(),o+20,e.Kb),Atomics.store(u(),o+19,a),Atomics.store(u(),o+26,e.Kb),Atomics.store(u(),o+28,a),Atomics.store(u(),o+29,e.detached),n=_n()+40,Atomics.store(u(),o+43,n),t.Db=r;var s={cmd:\\\"run\\\",start_routine:e.Kc,arg:e.Jb,threadInfoStruct:e.Tb,stackBase:e.Ib,stackSize:e.Kb};return t.Ob=function(){s.time=performance.now(),t.postMessage(s,e.Rc)},t.loaded&&(t.Ob(),delete t.Ob),0}function Ie(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),Dn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),Dn>>2,0),-73;if(0==(a=Atomics.exchange(i(),Dn>>2,0)))break;if(mn(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),Dn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function We(){T||A||(k||(k={}),k[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(k[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,D(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}c.establishStackSpace=function(e,t){kn(e,t),Sn(e)},c.invokeEntryPoint=function(e,t){return fe.get(e)(t)},Me=T?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:O?function(){return performance.now()-c.__performance_now_clock_drift}:function(){return performance.now()};var Ue={},je=[null,[],[]];function Le(e,t){var n=je[e];0===t||10===t?((1===e?P:D)(H(n,0)),n.length=0):n.push(t)}var He={};function Ye(e,t){return O?Pt(2,1,e,t):(e=Y(e),He.Wc(e,t))}function Ne(e,t,n){return O?Pt(3,1,e,t,n):0}function ze(e,t){if(O)return Pt(4,1,e,t)}function Be(e,t,n){if(O)return Pt(5,1,e,t,n)}function Ge(e,t,n){return O?Pt(6,1,e,t,n):0}function Ve(e,t){if(O)return Pt(7,1,e,t)}function $e(e,t){return O?Pt(8,1,e,t):(e=Y(e),He.Xc(e,t))}function qe(e,t,n,a,o,i){if(O)t=Pt(9,1,e,t,n,a,o,i);else if(i<<=12,0!=(16&a)&&0!=e%65536)t=-28;else if(0!=(32&a)){var u=65536*Math.ceil(t/65536);(e=Mn(65536,u))?r().fill(0,e,e+u):e=0,e?(Ue[e]={Bc:e,yc:t,mc:!0,fd:o,ed:n,flags:a,offset:i},t=e):t=-48}else t=-52;return t}function Xe(e,t){if(O)e=Pt(10,1,e,t);else{var n=Ue[e];0!==t&&n?(t===n.yc&&(Ue[e]=null,n.mc&&un(n.Bc)),e=0):e=-28}return e}function Je(e,t,n){if(O)return Pt(11,1,e,t,n)}function Ze(e,t,n){return O?Pt(12,1,e,t,n):(e=Y(e),He.Yc(e,t,n))}function Qe(e){if(O)return Pt(13,1,e)}function Ke(e,t){if(O)return Pt(14,1,e,t)}function et(e){if(O)return Pt(15,1,e)}function tt(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var nt=void 0;function rt(e){for(var t=\\\"\\\";r()[e];)t+=nt[r()[e++]];return t}var at={},ot={},it={};function ut(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return 48<=t&&57>=t?\\\"_\\\"+e:e}function st(e,t){return e=ut(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function ct(e){var t=Error,n=st(e,(function(t){this.name=e,this.message=t,void 0!==(t=Error(t).stack)&&(this.stack=this.toString()+\\\"\\\\n\\\"+t.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var ft=void 0;function lt(e){throw new ft(e)}function pt(e,t,n){if(n=n||{},!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=t.name;if(e||lt('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),ot.hasOwnProperty(e)){if(n.sc)return;lt(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}ot[e]=t,delete it[e],at.hasOwnProperty(e)&&(t=at[e],delete at[e],t.forEach((function(e){e()})))}var dt=[],mt=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function ht(e){4<e&&0==--mt[e].$b&&(mt[e]=void 0,dt.push(e))}function gt(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=dt.length?dt.pop():mt.length;return mt[t]={$b:1,value:e},t}}function yt(e){return this.fromWireType(u()[e>>2])}function vt(e){if(null===e)return\\\"null\\\";var t=typeof e;return\\\"object\\\"===t||\\\"array\\\"===t||\\\"function\\\"===t?e.toString():\\\"\\\"+e}function bt(e,t){switch(t){case 2:return function(e){var t=this.fromWireType;return x.buffer!=G&&se(x.buffer),t.call(this,Q[e>>2])};case 3:return function(e){return this.fromWireType(s()[e>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function _t(e,n,s){switch(n){case 0:return s?function(e){return t()[e]}:function(e){return r()[e]};case 1:return s?function(e){return a()[e>>1]}:function(e){return o()[e>>1]};case 2:return s?function(e){return i()[e>>2]}:function(e){return u()[e>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}function wt(e){return e||lt(\\\"Cannot use deleted val. handle = \\\"+e),mt[e].value}function At(e,t){var n=ot[e];if(void 0===n){var r=rt(e=cn(e));un(e),lt(t+\\\" has unknown type \\\"+r)}return n}var Tt={};function Ot(e){var t=Tt[e];return void 0===t?rt(e):t}var Et=[];function St(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var Ct={};function kt(){if(O)return Pt(16,1);Ae()}var Mt=[];function Pt(e,t){for(var n=arguments.length-2,r=En(),a=Cn(8*n),o=a>>3,i=0;i<n;i++){var u=arguments[2+i];s()[o+i]=u}return n=hn(e,n,a,t),Sn(r),n}var Dt=[],Ft=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function xt(e){return e=2<e?Y(e):e,Ft[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Rt(e,t,n){var r=xt(e);if(!r)return-4;if(r.Sb&&(i()[r.Sb>>2]=t,i()[r.Sb+4>>2]=n),!r.fc&&r.Uc){if(r.Sb){r=i()[r.Sb+8>>2],e=e?Y(e):\\\"\\\";var a=En(),o=Cn(12),u=0;if(e){u=B(e)+1;var s=an(u);z(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,gn(0,r,657457152,0,u,o),Sn(a),1}return-4}return r.fc&&(r=r.fc),e=!1,r.Rb&&r.Rb.Qb&&(e=0===(e=r.Rb.Qb.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.Rb.Qb.viewport(0,0,t,n),0}function It(e,t,n){return O?Pt(17,1,e,t,n):Rt(e,t,n)}var Wt,Ut=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],jt={};function Lt(){if(!Wt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:m||\\\"./this.program\\\"};for(e in jt)void 0===jt[e]?delete t[e]:t[e]=jt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Wt=n}return Wt}function Ht(e,n){if(O)return Pt(18,1,e,n);var r=0;return Lt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Yt(e,t){if(O)return Pt(19,1,e,t);var n=Lt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function Nt(e){return O?Pt(20,1,e):0}function zt(e,n){return O?Pt(21,1,e,n):(e=1==e||2==e?2:Ae(),t()[n>>0]=e,0)}function Bt(e,t,n,r){return O?Pt(22,1,e,t,n,r):(e=He.$c(e),t=He.Zc(e,t,n),i()[r>>2]=t,0)}function Gt(e,t,n,r,a){if(O)return Pt(23,1,e,t,n,r,a)}function Vt(e,t,n,a){if(O)return Pt(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],f=0;f<c;f++)Le(e,r()[s+f]);o+=c}return i()[a>>2]=o,0}function $t(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(O)return Pt(25,1);if(!$t.nc){$t.nc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[On()>>2]=60*o,i()[Tn()>>2]=Number(t!=a),n=e(n),r=e(r),n=ue(n),r=ue(r),a<t?(i()[An()>>2]=n,i()[An()+4>>2]=r):(i()[An()>>2]=r,i()[An()+4>>2]=n)}}function qt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Xt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Jt=[31,29,31,30,31,30,31,31,30,31,30,31],Zt=[31,28,31,30,31,30,31,31,30,31,30,31];function Qt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(qt(e.getFullYear())?Jt:Zt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Kt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Qt(new Date(e.Cb+1900,0,1),e.Xb);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=i()[a+40>>2];for(var p in a={Pc:i()[a>>2],Oc:i()[a+4>>2],Vb:i()[a+8>>2],Pb:i()[a+12>>2],Lb:i()[a+16>>2],Cb:i()[a+20>>2],Wb:i()[a+24>>2],Xb:i()[a+28>>2],kd:i()[a+32>>2],Nc:i()[a+36>>2],Qc:l?Y(l):\\\"\\\"},r=Y(r),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(p,\\\"g\\\"),l[p]);var d=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),m=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(p in l={\\\"%a\\\":function(e){return d[e.Wb].substring(0,3)},\\\"%A\\\":function(e){return d[e.Wb]},\\\"%b\\\":function(e){return m[e.Lb].substring(0,3)},\\\"%B\\\":function(e){return m[e.Lb]},\\\"%C\\\":function(e){return u((e.Cb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.Pb,2)},\\\"%e\\\":function(e){return o(e.Pb,2,\\\" \\\")},\\\"%g\\\":function(e){return f(e).toString().substring(2)},\\\"%G\\\":function(e){return f(e)},\\\"%H\\\":function(e){return u(e.Vb,2)},\\\"%I\\\":function(e){return 0==(e=e.Vb)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.Pb+Xt(qt(e.Cb+1900)?Jt:Zt,e.Lb-1),3)},\\\"%m\\\":function(e){return u(e.Lb+1,2)},\\\"%M\\\":function(e){return u(e.Oc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Vb&&12>e.Vb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.Pc,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Wb||7},\\\"%U\\\":function(e){var t=new Date(e.Cb+1900,0,1),n=0===t.getDay()?t:Qt(t,7-t.getDay());return 0>s(n,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-n.getDate()+(Xt(qt(e.getFullYear())?Jt:Zt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Cb+1901,0,4),n=c(new Date(e.Cb+1900,0,4));t=c(t);var r=Qt(new Date(e.Cb+1900,0,1),e.Xb);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Cb+1900?e.Xb+32-n.getDate():e.Xb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.Wb},\\\"%W\\\":function(e){var t=new Date(e.Cb,0,1),n=1===t.getDay()?t:Qt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Cb+1900,e.Lb,e.Pb))?u(Math.ceil((31-n.getDate()+(Xt(qt(e.getFullYear())?Jt:Zt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Cb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Cb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Nc);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Qc},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(p)&&(r=r.replace(new RegExp(p,\\\"g\\\"),l[p](a)));return(p=function(e){var t=Array(B(e)+1);return N(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(p,e),p.length-1)}for(var en=Array(256),tn=0;256>tn;++tn)en[tn]=String.fromCharCode(tn);nt=en,ft=c.BindingError=ct(\\\"BindingError\\\"),c.InternalError=ct(\\\"InternalError\\\"),c.count_emval_handles=function(){for(var e=0,t=5;t<mt.length;++t)void 0!==mt[t]&&++e;return e},c.get_first_emval=function(){for(var e=5;e<mt.length;++e)if(void 0!==mt[e])return mt[e];return null};var nn=[null,Fe,Ye,Ne,ze,Be,Ge,Ve,$e,qe,Xe,Je,Ze,Qe,Ke,et,kt,It,Ht,Yt,Nt,zt,Bt,Gt,Vt,$t],rn={u:function(e,t,n,r){Ae(\\\"Assertion failed: \\\"+Y(e)+\\\", at: \\\"+[t?Y(t):\\\"unknown filename\\\",n,r?Y(r):\\\"unknown function\\\"])},da:function(e,t){return De(e,t)},b:function(e){return an(e+16)+16},e:function(e,t){return Fe(e,t)},l:function(e,t){Pe.ac.push((function(){fe.get(e)(t)}))},c:function(e,t,n){throw new xe(e).tc(t,n),e},ra:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return D(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return D(\\\"pthread_create called with a null thread pointer!\\\"),28;var a=[];if(O&&0===a.length)return dn(687865856,e,t,n,r);var o=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,o=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==o)?o=Mn(16,c):U(0<(o-=c));for(var f=an(228),l=0;57>l;++l)u()[(f>>2)+l]=0;return i()[e>>2]=f,i()[f+12>>2]=f,e=f+152,i()[e>>2]=e,n={Ib:o,Kb:c,Yb:t,detached:s,Kc:n,Tb:f,Jb:r,Rc:a},O?(n.Tc=\\\"spawnThread\\\",postMessage(n,a),0):Re(n)},pa:function(e){throw O?Pe.kc(e):(Pe.hc(),Rn(e)),\\\"unwind\\\"},qa:function(e,t){return function(e,t){if(!e)return D(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(O&&sn()==e)return D(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!O&&pn()==e)return D(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return D(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(u(),e+64>>2))return D(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(We();;){var n=Atomics.load(u(),e+0>>2);if(1==n)return n=Atomics.load(u(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(u(),e+64>>2,1),O?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ke(e),0;yn(),O||mn(),Ie(e+0,n,O?100:1)}}(e,t)},ca:Ye,I:Ne,ja:ze,ma:Be,K:function(){return 42},X:Ge,ia:Ve,ha:$e,la:qe,ka:Xe,E:Je,ba:Ze,fa:Qe,L:Ke,ga:et,U:function(){},Ba:function(e,n,r,o,u){var s=tt(r);pt(e,{name:n=rt(n),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?o:u},argPackAdvance:8,readValueFromPointer:function(e){if(1===r)var o=t();else if(2===r)o=a();else{if(4!==r)throw new TypeError(\\\"Unknown boolean type size: \\\"+n);o=i()}return this.fromWireType(o[e>>s])},Mb:null})},Aa:function(e,t){pt(e,{name:t=rt(t),fromWireType:function(e){var t=mt[e].value;return ht(e),t},toWireType:function(e,t){return gt(t)},argPackAdvance:8,readValueFromPointer:yt,Mb:null})},N:function(e,t,n){n=tt(n),pt(e,{name:t=rt(t),fromWireType:function(e){return e},toWireType:function(e,t){if(\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t)throw new TypeError('Cannot convert \\\"'+vt(t)+'\\\" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:bt(t,n),Mb:null})},t:function(e,t,n,r,a){function o(e){return e}t=rt(t),-1===a&&(a=4294967295);var i=tt(n);if(0===r){var u=32-8*n;o=function(e){return e<<u>>>u}}var s=t.includes(\\\"unsigned\\\");pt(e,{name:t,fromWireType:o,toWireType:function(e,n){if(\\\"number\\\"!=typeof n&&\\\"boolean\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+vt(n)+'\\\" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number \\\"'+vt(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+t+'\\\", which is outside the valid range ['+r+\\\", \\\"+a+\\\"]!\\\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:_t(t,i,0!==r),Mb:null})},s:function(e,t,n){function r(e){e>>=2;var t=u();return new a(G,t[e+1],t[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];pt(e,{name:n=rt(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{sc:!0})},O:function(e,t){var n=\\\"std::string\\\"===(t=rt(t));pt(e,{name:t,fromWireType:function(e){var t=u()[e>>2];if(n)for(var a=e+4,o=0;o<=t;++o){var i=e+4+o;if(o==t||0==r()[i]){if(a=Y(a,i-a),void 0===s)var s=a;else s+=String.fromCharCode(0),s+=a;a=i+1}}else{for(s=Array(t),o=0;o<t;++o)s[o]=String.fromCharCode(r()[e+4+o]);s=s.join(\\\"\\\")}return un(e),s},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var a=\\\"string\\\"==typeof t;a||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||lt(\\\"Cannot pass non-string to std::string\\\");var o=(n&&a?function(){return B(t)}:function(){return t.length})(),i=an(4+o+1);if(u()[i>>2]=o,n&&a)z(t,i+4,o+1);else if(a)for(a=0;a<o;++a){var s=t.charCodeAt(a);255<s&&(un(i),lt(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),r()[i+4+a]=s}else for(a=0;a<o;++a)r()[i+4+a]=t[a];return null!==e&&e.push(un,i),i},argPackAdvance:8,readValueFromPointer:yt,Mb:function(e){un(e)}})},F:function(e,t,n){if(n=rt(n),2===t)var r=te,a=ne,i=re,s=function(){return o()},c=1;else 4===t&&(r=ae,a=oe,i=ie,s=function(){return u()},c=2);pt(e,{name:n,fromWireType:function(e){for(var n,a=u()[e>>2],o=s(),i=e+4,f=0;f<=a;++f){var l=e+4+f*t;f!=a&&0!=o[l>>c]||(i=r(i,l-i),void 0===n?n=i:(n+=String.fromCharCode(0),n+=i),i=l+t)}return un(e),n},toWireType:function(e,r){\\\"string\\\"!=typeof r&&lt(\\\"Cannot pass non-string to C++ string type \\\"+n);var o=i(r),s=an(4+o+t);return u()[s>>2]=o>>c,a(r,s+4,o+t),null!==e&&e.push(un,s),s},argPackAdvance:8,readValueFromPointer:yt,Mb:function(e){un(e)}})},Ca:function(e,t){pt(e,{xc:!0,name:t=rt(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},xa:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(O)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=Pe.Eb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},G:function(e,t,n){e=wt(e),t=At(t,\\\"emval::as\\\");var r=[],a=gt(r);return i()[n>>2]=a,t.toWireType(r,e)},r:function(e,t,n,r,a){e=Et[e],t=wt(t),n=Ot(n);var o=[];return i()[r>>2]=gt(o),e(t,n,o,a)},n:function(e,t,n,r){(e=Et[e])(t=wt(t),n=Ot(n),null,r)},d:ht,P:function(e,t){return(e=wt(e))==wt(t)},R:function(e){return 0===e?gt(St()):(e=Ot(e),gt(St()[e]))},i:function(e,t){for(var n=(t=function(e,t){for(var n=Array(e),r=0;r<e;++r)n[r]=At(i()[(t>>2)+r],\\\"parameter \\\"+r);return n}(e,t))[0],r=n.name+\\\"_$\\\"+t.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",a=[\\\"retType\\\"],o=[n],u=\\\"\\\",s=0;s<e-1;++s)u+=(0!==s?\\\", \\\":\\\"\\\")+\\\"arg\\\"+s,a.push(\\\"argType\\\"+s),o.push(t[1+s]);r=\\\"return function \\\"+ut(\\\"methodCaller_\\\"+r)+\\\"(handle, name, destructors, args) {\\\\n\\\";var c=0;for(s=0;s<e-1;++s)r+=\\\"    var arg\\\"+s+\\\" = argType\\\"+s+\\\".readValueFromPointer(args\\\"+(c?\\\"+\\\"+c:\\\"\\\")+\\\");\\\\n\\\",c+=t[s+1].argPackAdvance;for(r+=\\\"    var rv = handle[name](\\\"+u+\\\");\\\\n\\\",s=0;s<e-1;++s)t[s+1].deleteObject&&(r+=\\\"    argType\\\"+s+\\\".deleteObject(arg\\\"+s+\\\");\\\\n\\\");return n.xc||(r+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),a.push(r+\\\"};\\\\n\\\"),function(e){var t=Et.length;return Et.push(e),t}(e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=st(t.name||\\\"unknownFunctionName\\\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a).apply(null,o))},A:function(e,t){return gt((e=wt(e))[t=wt(t)])},h:function(e){4<e&&(mt[e].$b+=1)},Da:function(e,t,n,r){e=wt(e);var a=Ct[t];if(!a){a=\\\"\\\";for(var o=0;o<t;++o)a+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o;var i=\\\"return function emval_allocator_\\\"+t+\\\"(constructor, argTypes, args) {\\\\n\\\";for(o=0;o<t;++o)i+=\\\"var argType\\\"+o+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \\\"+o+'], \\\"parameter '+o+'\\\");\\\\nvar arg'+o+\\\" = argType\\\"+o+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+o+\\\"['argPackAdvance'];\\\\n\\\";a=new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",i+\\\"var obj = new constructor(\\\"+a+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\")(At,c,gt),Ct[t]=a}return a(e,n,r)},o:function(){return gt([])},f:function(e){return gt(Ot(e))},j:function(){return gt({})},p:function(e){for(var t=mt[e].value;t.length;){var n=t.pop();t.pop()(n)}ht(e)},g:function(e,t,n){e=wt(e),t=wt(t),n=wt(n),e[t]=n},k:function(e,t){return gt(e=(e=At(e,\\\"_emval_take_value\\\")).readValueFromPointer(t))},m:kt,Q:De,Fa:function(e,t){return e-t},ea:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},z:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},na:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Y:function(){Ae(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ya:function(e,t,n){var a;for(Mt.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Mt.push(a?s()[n++>>1]:i()[n]),++n;return Ee[e].apply(null,Mt)},Z:We,B:function(){},x:Ie,w:Ce,oa:function(){return 2147483648},v:Me,V:function(e,t,n){r().copyWithin(e,t,t+n)},C:function(){return T?n(993).cpus().length:navigator.hardwareConcurrency},ua:function(e,t,n){Dt.length=t,n>>=3;for(var r=0;r<t;r++)Dt[r]=s()[n+r];return(0>e?Ee[-e-1]:nn[e]).apply(null,Dt)},W:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296),0<(a=Math.max(e,a))%65536&&(a+=65536-a%65536);e:{try{x.grow(Math.min(2147483648,a)-G.byteLength+65535>>>16),se(x.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},va:function(e,t,n){return xt(e)?Rt(e,t,n):It(e,t,n)},M:function(){},ta:function(e,t,n){return he+=1,setTimeout((function(){--he,function(e){if(!W){try{e()}catch(e){if(e instanceof Fn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&D(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!ge())try{O?vn(I):Rn(I)}catch(e){if(!(e instanceof Fn))throw e}}}((function(){fe.get(e)(n)}))}),t)},wa:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ut[n],failIfMajorPerformanceCaveat:!!i()[t+7],Ac:i()[t+8],cd:i()[t+9],dc:i()[t+10],pc:i()[t+11],gd:i()[t+12],hd:i()[t+13]},!(e=xt(e))||t.pc?0:function(e,t){e.ec||(e.ec=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.ec(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=an(8);i()[n+4>>2]=sn();var r={ad:n,attributes:t,version:t.Ac,Qb:e};return e.canvas&&(e.canvas.Rb=r),(void 0===t.dc||t.dc)&&function(e){if(e||(e=void 0),!e.uc){e.uc=!0;var t=e.Qb;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,o){t.drawElementsInstancedANGLE(e,n,r,a,o)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.Vc=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.dd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},$:Ht,aa:Yt,y:Nt,_:zt,J:Bt,T:Gt,D:Vt,za:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Ga:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.cc||(e.cc=ue(\\\"GMT\\\")),i()[n+40>>2]=e.cc,n},sa:function(){Pe.vc()},H:function(e,t){$t(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[An()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:x||c.wasmMemory,S:function(e){$t();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Ea:Kt,q:function(e,t,n,r){return Kt(e,t,n,r)}};!function(){function e(e,t){c.asm=e.exports,fe=c.asm.ab,pe.unshift(c.asm.Ha),Pe.bc.push(c.asm.fb),R=t,O||(be--,c.monitorRunDependencies&&c.monitorRunDependencies(be),0==be&&(null!==_e&&(clearInterval(_e),_e=null),we&&(e=we,we=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!M&&(w||A)){if(\\\"function\\\"==typeof fetch&&!ve.startsWith(\\\"file://\\\"))return fetch(ve,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+ve+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return Oe()}));if(y)return new Promise((function(e,t){y(ve,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Oe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){D(\\\"failed to asynchronously prepare wasm: \\\"+e),Ae(e)}))}var r={a:rn};if(O||(be++,c.monitorRunDependencies&&c.monitorRunDependencies(be)),c.instantiateWasm)try{return c.instantiateWasm(r,e)}catch(e){return D(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(M||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Te()||ve.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(ve,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return D(\\\"wasm streaming compile failed: \\\"+e),D(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),c.___wasm_call_ctors=function(){return(c.___wasm_call_ctors=c.asm.Ha).apply(null,arguments)},c._OrtInit=function(){return(c._OrtInit=c.asm.Ia).apply(null,arguments)},c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.Ja).apply(null,arguments)},c._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(c._OrtSessionOptionsAppendExecutionProviderWebNN=c.asm.Ka).apply(null,arguments)},c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.La).apply(null,arguments)},c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.Ma).apply(null,arguments)},c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.Na).apply(null,arguments)},c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.Oa).apply(null,arguments)},c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.Pa).apply(null,arguments)},c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.Qa).apply(null,arguments)},c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.Ra).apply(null,arguments)},c._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.Sa).apply(null,arguments)},c._OrtFree=function(){return(c._OrtFree=c.asm.Ta).apply(null,arguments)},c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Ua).apply(null,arguments)},c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Va).apply(null,arguments)},c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.Wa).apply(null,arguments)},c._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.Xa).apply(null,arguments)},c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.Ya).apply(null,arguments)},c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.Za).apply(null,arguments)},c._OrtRun=function(){return(c._OrtRun=c.asm._a).apply(null,arguments)},c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.$a).apply(null,arguments)};var an=c._malloc=function(){return(an=c._malloc=c.asm.bb).apply(null,arguments)},on=c.___errno_location=function(){return(on=c.___errno_location=c.asm.cb).apply(null,arguments)},un=c._free=function(){return(un=c._free=c.asm.db).apply(null,arguments)},sn=c._pthread_self=function(){return(sn=c._pthread_self=c.asm.eb).apply(null,arguments)};c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.fb).apply(null,arguments)};var cn=c.___getTypeName=function(){return(cn=c.___getTypeName=c.asm.gb).apply(null,arguments)};c.___embind_register_native_and_builtin_types=function(){return(c.___embind_register_native_and_builtin_types=c.asm.hb).apply(null,arguments)},c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.ib).apply(null,arguments)};var fn,ln=c._emscripten_register_main_browser_thread_id=function(){return(ln=c._emscripten_register_main_browser_thread_id=c.asm.jb).apply(null,arguments)},pn=c._emscripten_main_browser_thread_id=function(){return(pn=c._emscripten_main_browser_thread_id=c.asm.kb).apply(null,arguments)},dn=c._emscripten_sync_run_in_main_thread_4=function(){return(dn=c._emscripten_sync_run_in_main_thread_4=c.asm.lb).apply(null,arguments)},mn=c._emscripten_main_thread_process_queued_calls=function(){return(mn=c._emscripten_main_thread_process_queued_calls=c.asm.mb).apply(null,arguments)},hn=c._emscripten_run_in_main_runtime_thread_js=function(){return(hn=c._emscripten_run_in_main_runtime_thread_js=c.asm.nb).apply(null,arguments)},gn=c.__emscripten_call_on_thread=function(){return(gn=c.__emscripten_call_on_thread=c.asm.ob).apply(null,arguments)},yn=c._pthread_testcancel=function(){return(yn=c._pthread_testcancel=c.asm.pb).apply(null,arguments)},vn=c._pthread_exit=function(){return(vn=c._pthread_exit=c.asm.qb).apply(null,arguments)},bn=c.__emscripten_thread_init=function(){return(bn=c.__emscripten_thread_init=c.asm.rb).apply(null,arguments)},_n=c._emscripten_get_global_libc=function(){return(_n=c._emscripten_get_global_libc=c.asm.sb).apply(null,arguments)},wn=c.___pthread_tsd_run_dtors=function(){return(wn=c.___pthread_tsd_run_dtors=c.asm.tb).apply(null,arguments)},An=c.__get_tzname=function(){return(An=c.__get_tzname=c.asm.ub).apply(null,arguments)},Tn=c.__get_daylight=function(){return(Tn=c.__get_daylight=c.asm.vb).apply(null,arguments)},On=c.__get_timezone=function(){return(On=c.__get_timezone=c.asm.wb).apply(null,arguments)},En=c.stackSave=function(){return(En=c.stackSave=c.asm.xb).apply(null,arguments)},Sn=c.stackRestore=function(){return(Sn=c.stackRestore=c.asm.yb).apply(null,arguments)},Cn=c.stackAlloc=function(){return(Cn=c.stackAlloc=c.asm.zb).apply(null,arguments)},kn=c._emscripten_stack_set_limits=function(){return(kn=c._emscripten_stack_set_limits=c.asm.Ab).apply(null,arguments)},Mn=c._memalign=function(){return(Mn=c._memalign=c.asm.Bb).apply(null,arguments)},Pn=c.__emscripten_allow_main_runtime_queued_calls=984944,Dn=c.__emscripten_main_thread_futex=989072;function Fn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function xn(){function e(){if(!fn&&(fn=!0,c.calledRun=!0,!W)&&(O||Se(pe),f(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),!O)){if(c.postRun)for(\\\"function\\\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var e=c.postRun.shift();me.unshift(e)}Se(me)}}if(!(0<be))if(O)f(c),O||Se(pe),postMessage({cmd:\\\"loaded\\\"});else{if(!O){if(c.preRun)for(\\\"function\\\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ye();Se(le)}0<be||(c.setStatus?(c.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){c.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function Rn(e){if(I=e,O)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new Fn(e);ge()||(Pe.jc(),O||(Se(de),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),je[1].length&&Le(1,10),je[2].length&&Le(2,10))),I=e,ge()||(Pe.jc(),c.onExit&&c.onExit(e),W=!0),h(e,new Fn(e))}if(c.UTF8ToString=Y,c.stringToUTF8=z,c.lengthBytesUTF8=B,c.keepRuntimeAlive=ge,c.PThread=Pe,c.stackSave=En,c.stackRestore=Sn,c.stackAlloc=Cn,c.PThread=Pe,c.wasmMemory=x,c.ExitStatus=Fn,we=function e(){fn||xn(),fn||(we=e)},c.run=xn,c.preInit)for(\\\"function\\\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();return O&&(F=!1,Pe.wc()),xn(),e.ready});e.exports=r},118:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=!1,o=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,n=a.data.stackBase+a.data.stackSize;e.establishStackSpace(n,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit(),s||(e.___embind_register_native_and_builtin_types(),s=!0);try{var c=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(c):e.PThread.threadExit(c)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(o(\\\"worker.js received unknown command \\\"+a.data.cmd),o(a.data)))}catch(e){throw o(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&o(e.stack),e}};\\\\n'},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,a;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,a=t}));var o,i={};for(o in t)t.hasOwnProperty(o)&&(i[o]=t[o]);var u,s,c,f,l,p=\\\"./this.program\\\",d=\\\"object\\\"==typeof window,m=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";h?(g=m?n(908).dirname(g)+\\\"/\\\":\\\"//\\\",u=function(e,t){return f||(f=n(384)),l||(l=n(908)),e=l.normalize(e),f.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||ne(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){f||(f=n(384)),l||(l=n(908)),e=l.normalize(e),f.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",ne),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(d||m)&&(m?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},m&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,v=t.print||console.log.bind(console),b=t.printErr||console.warn.bind(console);for(o in i)i.hasOwnProperty(o)&&(t[o]=i[o]);i=null,t.thisProgram&&(p=t.thisProgram),t.wasmBinary&&(y=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&ne(\\\"no native wasm support detected\\\");var _,w=!1,A=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function T(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&A)return A.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function O(e,t){return e?T(P,e,t):\\\"\\\"}function E(e,t,n,r){if(!(0<r))return 0;var a=n;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++]=i}else{if(2047>=i){if(n+1>=r)break;t[n++]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++]=224|i>>12}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63}t[n++]=128|i>>6&63}t[n++]=128|63&i}}return t[n]=0,n-a}function S(e,t,n){return E(e,P,t,n)}function C(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}var k,M,P,D,F,x,R,I,W,U=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function j(e,t){for(var n=e>>1,r=n+t/2;!(n>=r)&&F[n];)++n;if(32<(n<<=1)-e&&U)return U.decode(P.subarray(e,n));for(n=\\\"\\\",r=0;!(r>=t/2);++r){var a=D[e+2*r>>1];if(0==a)break;n+=String.fromCharCode(a)}return n}function L(e,t,n){if(void 0===n&&(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var a=0;a<n;++a)D[t>>1]=e.charCodeAt(a),t+=2;return D[t>>1]=0,t-r}function H(e){return 2*e.length}function Y(e,t){for(var n=0,r=\\\"\\\";!(n>=t/4);){var a=x[e+4*n>>2];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r}function N(e,t,n){if(void 0===n&&(n=2147483647),4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),x[t>>2]=o,(t+=4)+4>n)break}return x[t>>2]=0,t-r}function z(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t}function B(e){var t=C(e)+1,n=Ke(t);return n&&E(e,M,n,t),n}function G(){var e=_.buffer;k=e,t.HEAP8=M=new Int8Array(e),t.HEAP16=D=new Int16Array(e),t.HEAP32=x=new Int32Array(e),t.HEAPU8=P=new Uint8Array(e),t.HEAPU16=F=new Uint16Array(e),t.HEAPU32=R=new Uint32Array(e),t.HEAPF32=I=new Float32Array(e),t.HEAPF64=W=new Float64Array(e)}var V,$=[],q=[],X=[],J=[];function Z(){var e=t.preRun.shift();$.unshift(e)}var Q,K=0,ee=null,te=null;function ne(e){throw t.onAbort&&t.onAbort(e),b(e),w=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),a(e),e}function re(){return Q.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},Q=\\\"ort-wasm.wasm\\\",!re()){var ae=Q;Q=t.locateFile?t.locateFile(ae,g):g+ae}function oe(){var e=Q;try{if(e==Q&&y)return new Uint8Array(y);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){ne(e)}}function ie(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.ib;\\\"number\\\"==typeof r?void 0===n.Za?V.get(r)():V.get(r)(n.Za):r(void 0===n.Za?null:n.Za)}}}function ue(e){this.ab=e-16,this.tb=function(e){x[this.ab+4>>2]=e},this.qb=function(e){x[this.ab+8>>2]=e},this.rb=function(){x[this.ab>>2]=0},this.pb=function(){M[this.ab+12>>0]=0},this.sb=function(){M[this.ab+13>>0]=0},this.lb=function(e,t){this.tb(e),this.qb(t),this.rb(),this.pb(),this.sb()}}var se={},ce=[null,[],[]],fe={};function le(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+e)}}var pe=void 0;function de(e){for(var t=\\\"\\\";P[e];)t+=pe[P[e++]];return t}var me={},he={},ge={};function ye(e){if(void 0===e)return\\\"_unknown\\\";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return 48<=t&&57>=t?\\\"_\\\"+e:e}function ve(e,t){return e=ye(e),new Function(\\\"body\\\",\\\"return function \\\"+e+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(t)}function be(e){var t=Error,n=ve(e,(function(t){this.name=e,this.message=t,void 0!==(t=Error(t).stack)&&(this.stack=this.toString()+\\\"\\\\n\\\"+t.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return n.prototype=Object.create(t.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},n}var _e=void 0;function we(e){throw new _e(e)}function Ae(e,t,n){if(n=n||{},!(\\\"argPackAdvance\\\"in t))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var r=t.name;if(e||we('type \\\"'+r+'\\\" must have a positive integer typeid pointer'),he.hasOwnProperty(e)){if(n.kb)return;we(\\\"Cannot register type '\\\"+r+\\\"' twice\\\")}he[e]=t,delete ge[e],me.hasOwnProperty(e)&&(t=me[e],delete me[e],t.forEach((function(e){e()})))}var Te=[],Oe=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Ee(e){4<e&&0==--Oe[e].gb&&(Oe[e]=void 0,Te.push(e))}function Se(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=Te.length?Te.pop():Oe.length;return Oe[t]={gb:1,value:e},t}}function Ce(e){return this.fromWireType(R[e>>2])}function ke(e){if(null===e)return\\\"null\\\";var t=typeof e;return\\\"object\\\"===t||\\\"array\\\"===t||\\\"function\\\"===t?e.toString():\\\"\\\"+e}function Me(e,t){switch(t){case 2:return function(e){return this.fromWireType(I[e>>2])};case 3:return function(e){return this.fromWireType(W[e>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+e)}}function Pe(e,t,n){switch(t){case 0:return n?function(e){return M[e]}:function(e){return P[e]};case 1:return n?function(e){return D[e>>1]}:function(e){return F[e>>1]};case 2:return n?function(e){return x[e>>2]}:function(e){return R[e>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+e)}}function De(e){return e||we(\\\"Cannot use deleted val. handle = \\\"+e),Oe[e].value}function Fe(e,t){var n=he[e];if(void 0===n){var r=de(e=nt(e));tt(e),we(t+\\\" has unknown type \\\"+r)}return n}var xe={};function Re(e){var t=xe[e];return void 0===t?de(e):t}var Ie=[];function We(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}var Ue,je={};Ue=h?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var Le,He,Ye={};function Ne(){if(!Le){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in Ye)void 0===Ye[e]?delete t[e]:t[e]=Ye[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Le=n}return Le}function ze(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!He){He=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);x[it()>>2]=60*o,x[ot()>>2]=Number(t!=a),n=e(n),r=e(r),n=B(n),r=B(r),a<t?(x[at()>>2]=n,x[at()+4>>2]=r):(x[at()>>2]=r,x[at()+4>>2]=n)}}function Be(e){return 0==e%4&&(0!=e%100||0==e%400)}function Ge(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ve=[31,29,31,30,31,30,31,31,30,31,30,31],$e=[31,28,31,30,31,30,31,31,30,31,30,31];function qe(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Be(e.getFullYear())?Ve:$e)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Xe(e,t,n,r){function a(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\\\"0\\\")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=qe(new Date(e.Xa+1900,0,1),e.fb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=i(n,e)?0>=i(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=x[r+40>>2];for(var f in r={wb:x[r>>2],vb:x[r+4>>2],cb:x[r+8>>2],bb:x[r+12>>2],Ya:x[r+16>>2],Xa:x[r+20>>2],eb:x[r+24>>2],fb:x[r+28>>2],Eb:x[r+32>>2],ub:x[r+36>>2],xb:c?O(c):\\\"\\\"},n=O(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(f,\\\"g\\\"),c[f]);var l=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),p=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(f in c={\\\"%a\\\":function(e){return l[e.eb].substring(0,3)},\\\"%A\\\":function(e){return l[e.eb]},\\\"%b\\\":function(e){return p[e.Ya].substring(0,3)},\\\"%B\\\":function(e){return p[e.Ya]},\\\"%C\\\":function(e){return o((e.Xa+1900)/100|0,2)},\\\"%d\\\":function(e){return o(e.bb,2)},\\\"%e\\\":function(e){return a(e.bb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return o(e.cb,2)},\\\"%I\\\":function(e){return 0==(e=e.cb)?e=12:12<e&&(e-=12),o(e,2)},\\\"%j\\\":function(e){return o(e.bb+Ge(Be(e.Xa+1900)?Ve:$e,e.Ya-1),3)},\\\"%m\\\":function(e){return o(e.Ya+1,2)},\\\"%M\\\":function(e){return o(e.vb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.cb&&12>e.cb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return o(e.wb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.eb||7},\\\"%U\\\":function(e){var t=new Date(e.Xa+1900,0,1),n=0===t.getDay()?t:qe(t,7-t.getDay());return 0>i(n,e=new Date(e.Xa+1900,e.Ya,e.bb))?o(Math.ceil((31-n.getDate()+(Ge(Be(e.getFullYear())?Ve:$e,e.getMonth()-1)-31)+e.getDate())/7),2):0===i(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Xa+1901,0,4),n=u(new Date(e.Xa+1900,0,4));t=u(t);var r=qe(new Date(e.Xa+1900,0,1),e.fb);return 0>i(r,n)?\\\"53\\\":0>=i(t,r)?\\\"01\\\":o(Math.ceil((n.getFullYear()<e.Xa+1900?e.fb+32-n.getDate():e.fb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.eb},\\\"%W\\\":function(e){var t=new Date(e.Xa,0,1),n=1===t.getDay()?t:qe(t,0===t.getDay()?1:7-t.getDay()+1);return 0>i(n,e=new Date(e.Xa+1900,e.Ya,e.bb))?o(Math.ceil((31-n.getDate()+(Ge(Be(e.getFullYear())?Ve:$e,e.getMonth()-1)-31)+e.getDate())/7),2):0===i(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Xa+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Xa+1900},\\\"%z\\\":function(e){var t=0<=(e=e.ub);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.xb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(f)&&(n=n.replace(new RegExp(f,\\\"g\\\"),c[f](r)));return(f=function(e){var t=Array(C(e)+1);return E(e,t,0,t.length),t}(n)).length>t?0:(M.set(f,e),f.length-1)}for(var Je=Array(256),Ze=0;256>Ze;++Ze)Je[Ze]=String.fromCharCode(Ze);pe=Je,_e=t.BindingError=be(\\\"BindingError\\\"),t.InternalError=be(\\\"InternalError\\\"),t.count_emval_handles=function(){for(var e=0,t=5;t<Oe.length;++t)void 0!==Oe[t]&&++e;return e},t.get_first_emval=function(){for(var e=5;e<Oe.length;++e)if(void 0!==Oe[e])return Oe[e];return null};var Qe={a:function(e){return Ke(e+16)+16},c:function(e,t){X.unshift({ib:e,Za:t})},k:function(e,t){X.unshift({ib:e,Za:t})},b:function(e,t,n){throw new ue(e).lb(t,n),e},X:function(e,t){return e=O(e),fe.yb(e,t)},B:function(){return 0},aa:function(){},da:function(){},D:function(){return 42},Q:function(){return 0},$:function(){},_:function(e,t){return e=O(e),fe.zb(e,t)},ca:function(e,t,n,r,a,o){if(o<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var i=ft(65536,e);i?(P.fill(0,i,i+e),e=i):e=0,e?(se[e]={ob:e,nb:t,jb:!0,fd:a,Db:n,flags:r,offset:o},t=e):t=-48}else t=-52;return t},ba:function(e,t){var n=se[e];return 0!==t&&n?(t===n.nb&&(se[e]=null,n.jb&&tt(n.ob)),e=0):e=-28,e},x:function(){},W:function(e,t,n){return e=O(e),fe.Ab(e,t,n)},Y:function(){},G:function(){},Z:function(){},O:function(){},ha:function(e,t,n,r,a){var o=le(n);Ae(e,{name:t=de(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:a},argPackAdvance:8,readValueFromPointer:function(e){if(1===n)var r=M;else if(2===n)r=D;else{if(4!==n)throw new TypeError(\\\"Unknown boolean type size: \\\"+t);r=x}return this.fromWireType(r[e>>o])},$a:null})},ga:function(e,t){Ae(e,{name:t=de(t),fromWireType:function(e){var t=Oe[e].value;return Ee(e),t},toWireType:function(e,t){return Se(t)},argPackAdvance:8,readValueFromPointer:Ce,$a:null})},H:function(e,t,n){n=le(n),Ae(e,{name:t=de(t),fromWireType:function(e){return e},toWireType:function(e,t){if(\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t)throw new TypeError('Cannot convert \\\"'+ke(t)+'\\\" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Me(t,n),$a:null})},r:function(e,t,n,r,a){function o(e){return e}t=de(t),-1===a&&(a=4294967295);var i=le(n);if(0===r){var u=32-8*n;o=function(e){return e<<u>>>u}}var s=t.includes(\\\"unsigned\\\");Ae(e,{name:t,fromWireType:o,toWireType:function(e,n){if(\\\"number\\\"!=typeof n&&\\\"boolean\\\"!=typeof n)throw new TypeError('Cannot convert \\\"'+ke(n)+'\\\" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number \\\"'+ke(n)+'\\\" from JS side to C/C++ side to an argument of type \\\"'+t+'\\\", which is outside the valid range ['+r+\\\", \\\"+a+\\\"]!\\\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Pe(t,i,0!==r),$a:null})},q:function(e,t,n){function r(e){var t=R;return new a(k,t[1+(e>>=2)],t[e])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];Ae(e,{name:n=de(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{kb:!0})},I:function(e,t){var n=\\\"std::string\\\"===(t=de(t));Ae(e,{name:t,fromWireType:function(e){var t=R[e>>2];if(n)for(var r=e+4,a=0;a<=t;++a){var o=e+4+a;if(a==t||0==P[o]){if(r=O(r,o-r),void 0===i)var i=r;else i+=String.fromCharCode(0),i+=r;r=o+1}}else{for(i=Array(t),a=0;a<t;++a)i[a]=String.fromCharCode(P[e+4+a]);i=i.join(\\\"\\\")}return tt(e),i},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r=\\\"string\\\"==typeof t;r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||we(\\\"Cannot pass non-string to std::string\\\");var a=(n&&r?function(){return C(t)}:function(){return t.length})(),o=Ke(4+a+1);if(R[o>>2]=a,n&&r)S(t,o+4,a+1);else if(r)for(r=0;r<a;++r){var i=t.charCodeAt(r);255<i&&(tt(o),we(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),P[o+4+r]=i}else for(r=0;r<a;++r)P[o+4+r]=t[r];return null!==e&&e.push(tt,o),o},argPackAdvance:8,readValueFromPointer:Ce,$a:function(e){tt(e)}})},y:function(e,t,n){if(n=de(n),2===t)var r=j,a=L,o=H,i=function(){return F},u=1;else 4===t&&(r=Y,a=N,o=z,i=function(){return R},u=2);Ae(e,{name:n,fromWireType:function(e){for(var n,a=R[e>>2],o=i(),s=e+4,c=0;c<=a;++c){var f=e+4+c*t;c!=a&&0!=o[f>>u]||(s=r(s,f-s),void 0===n?n=s:(n+=String.fromCharCode(0),n+=s),s=f+t)}return tt(e),n},toWireType:function(e,r){\\\"string\\\"!=typeof r&&we(\\\"Cannot pass non-string to C++ string type \\\"+n);var i=o(r),s=Ke(4+i+t);return R[s>>2]=i>>u,a(r,s+4,i+t),null!==e&&e.push(tt,s),s},argPackAdvance:8,readValueFromPointer:Ce,$a:function(e){tt(e)}})},ia:function(e,t){Ae(e,{mb:!0,name:t=de(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},z:function(e,t,n){e=De(e),t=Fe(t,\\\"emval::as\\\");var r=[],a=Se(r);return x[n>>2]=a,t.toWireType(r,e)},p:function(e,t,n,r,a){e=Ie[e],t=De(t),n=Re(n);var o=[];return x[r>>2]=Se(o),e(t,n,o,a)},l:function(e,t,n,r){(e=Ie[e])(t=De(t),n=Re(n),null,r)},d:Ee,K:function(e,t){return(e=De(e))==De(t)},L:function(e){return 0===e?Se(We()):(e=Re(e),Se(We()[e]))},h:function(e,t){for(var n=(t=function(e,t){for(var n=Array(e),r=0;r<e;++r)n[r]=Fe(x[(t>>2)+r],\\\"parameter \\\"+r);return n}(e,t))[0],r=n.name+\\\"_$\\\"+t.slice(1).map((function(e){return e.name})).join(\\\"_\\\")+\\\"$\\\",a=[\\\"retType\\\"],o=[n],i=\\\"\\\",u=0;u<e-1;++u)i+=(0!==u?\\\", \\\":\\\"\\\")+\\\"arg\\\"+u,a.push(\\\"argType\\\"+u),o.push(t[1+u]);r=\\\"return function \\\"+ye(\\\"methodCaller_\\\"+r)+\\\"(handle, name, destructors, args) {\\\\n\\\";var s=0;for(u=0;u<e-1;++u)r+=\\\"    var arg\\\"+u+\\\" = argType\\\"+u+\\\".readValueFromPointer(args\\\"+(s?\\\"+\\\"+s:\\\"\\\")+\\\");\\\\n\\\",s+=t[u+1].argPackAdvance;for(r+=\\\"    var rv = handle[name](\\\"+i+\\\");\\\\n\\\",u=0;u<e-1;++u)t[u+1].deleteObject&&(r+=\\\"    argType\\\"+u+\\\".deleteObject(arg\\\"+u+\\\");\\\\n\\\");return n.mb||(r+=\\\"    return retType.toWireType(destructors, rv);\\\\n\\\"),a.push(r+\\\"};\\\\n\\\"),function(e){var t=Ie.length;return Ie.push(e),t}(e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof t+\\\" which is not a function\\\");var n=ve(t.name||\\\"unknownFunctionName\\\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a).apply(null,o))},u:function(e,t){return Se((e=De(e))[t=De(t)])},g:function(e){4<e&&(Oe[e].gb+=1)},ja:function(e,n,r,a){e=De(e);var o=je[n];if(!o){o=\\\"\\\";for(var i=0;i<n;++i)o+=(0!==i?\\\", \\\":\\\"\\\")+\\\"arg\\\"+i;var u=\\\"return function emval_allocator_\\\"+n+\\\"(constructor, argTypes, args) {\\\\n\\\";for(i=0;i<n;++i)u+=\\\"var argType\\\"+i+\\\" = requireRegisteredType(Module['HEAP32'][(argTypes >>> 2) + \\\"+i+'], \\\"parameter '+i+'\\\");\\\\nvar arg'+i+\\\" = argType\\\"+i+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+i+\\\"['argPackAdvance'];\\\\n\\\";o=new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"__emval_register\\\",u+\\\"var obj = new constructor(\\\"+o+\\\");\\\\nreturn __emval_register(obj);\\\\n}\\\\n\\\")(Fe,t,Se),je[n]=o}return o(e,r,a)},m:function(){return Se([])},e:function(e){return Se(Re(e))},i:function(){return Se({})},n:function(e){for(var t=Oe[e].value;t.length;){var n=t.pop();t.pop()(n)}Ee(e)},f:function(e,t,n){e=De(e),t=De(t),n=De(n),e[t]=n},j:function(e,t){return Se(e=(e=Fe(e,\\\"_emval_take_value\\\")).readValueFromPointer(t))},v:function(){ne()},J:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return x[et()>>2]=28,-1;e=Ue()}return x[t>>2]=e/1e3|0,x[t+4>>2]=e%1e3*1e6|0,0},M:function(e,t){return e-t},ma:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},t:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},na:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},la:function(){ne(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ea:function(){return 2147483648},P:function(e,t,n){P.copyWithin(e,t,t+n)},w:function(e){var t=P.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{_.grow(Math.min(2147483648,r)-k.byteLength+65535>>>16),G();var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},V:function(e){for(var t=Ue();Ue()-t<e;);},T:function(e,t){var n=0;return Ne().forEach((function(r,a){var o=t+n;for(a=x[e+4*a>>2]=o,o=0;o<r.length;++o)M[a++>>0]=r.charCodeAt(o);M[a>>0]=0,n+=r.length+1})),0},U:function(e,t){var n=Ne();x[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),x[t>>2]=r,0},s:function(){return 0},R:function(e,t){return e=1==e||2==e?2:ne(),M[t>>0]=e,0},C:function(e,t,n,r){return e=fe.Cb(e),t=fe.Bb(e,t,n),x[r>>2]=t,0},N:function(){},E:function(e,t,n,r){for(var a=0,o=0;o<n;o++){for(var i=x[t+8*o>>2],u=x[t+(8*o+4)>>2],s=0;s<u;s++){var c=P[i+s],f=ce[e];0===c||10===c?((1===e?v:b)(T(f,0)),f.length=0):f.push(c)}a+=u}return x[r>>2]=a,0},fa:function(e){var t=Date.now();return x[e>>2]=t/1e3|0,x[e+4>>2]=t%1e3*1e3|0,0},S:function e(t,n){return t=new Date(1e3*x[t>>2]),x[n>>2]=t.getUTCSeconds(),x[n+4>>2]=t.getUTCMinutes(),x[n+8>>2]=t.getUTCHours(),x[n+12>>2]=t.getUTCDate(),x[n+16>>2]=t.getUTCMonth(),x[n+20>>2]=t.getUTCFullYear()-1900,x[n+24>>2]=t.getUTCDay(),x[n+36>>2]=0,x[n+32>>2]=0,x[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.hb||(e.hb=B(\\\"GMT\\\")),x[n+40>>2]=e.hb,n},F:function(e,t){ze(),e=new Date(1e3*x[e>>2]),x[t>>2]=e.getSeconds(),x[t+4>>2]=e.getMinutes(),x[t+8>>2]=e.getHours(),x[t+12>>2]=e.getDate(),x[t+16>>2]=e.getMonth(),x[t+20>>2]=e.getFullYear()-1900,x[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);x[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,x[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),x[t+32>>2]=e,e=x[at()+(e?4:0)>>2],x[t+40>>2]=e,t},A:function(e){ze();var t=new Date(x[e+20>>2]+1900,x[e+16>>2],x[e+12>>2],x[e+8>>2],x[e+4>>2],x[e>>2],0),n=x[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=a.getTimezoneOffset(),u=Math.min(i,o);return 0>n?x[e+32>>2]=Number(o!=i&&u==r):0<n!=(u==r)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<n?u:o)-r))),x[e+24>>2]=t.getDay(),x[e+28>>2]=(t.getTime()-a.getTime())/864e5|0,x[e>>2]=t.getSeconds(),x[e+4>>2]=t.getMinutes(),x[e+8>>2]=t.getHours(),x[e+12>>2]=t.getDate(),x[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},ka:Xe,o:function(e,t,n,r){return Xe(e,t,n,r)}};!function(){function e(e){t.asm=e.exports,_=t.asm.oa,G(),V=t.asm.Wa,q.unshift(t.asm.pa),K--,t.monitorRunDependencies&&t.monitorRunDependencies(K),0==K&&(null!==ee&&(clearInterval(ee),ee=null),te&&(e=te,te=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!y&&(d||m)){if(\\\"function\\\"==typeof fetch&&!Q.startsWith(\\\"file://\\\"))return fetch(Q,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+Q+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return oe()}));if(s)return new Promise((function(e,t){s(Q,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return oe()}))}().then((function(e){return WebAssembly.instantiate(e,o)})).then(e,(function(e){b(\\\"failed to asynchronously prepare wasm: \\\"+e),ne(e)}))}var o={a:Qe};if(K++,t.monitorRunDependencies&&t.monitorRunDependencies(K),t.instantiateWasm)try{return t.instantiateWasm(o,e)}catch(e){return b(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(y||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||re()||Q.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(Q,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,o).then(n,(function(e){return b(\\\"wasm streaming compile failed: \\\"+e),b(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(a)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.pa).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.qa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.ra).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.sa).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.ta).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.ua).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.va).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.wa).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.xa).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.ya).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.za).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Aa).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Ba).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Ca).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Da).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ea).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Fa).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Ga).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Ha).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Ia).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Ja).apply(null,arguments)};var Ke=t._malloc=function(){return(Ke=t._malloc=t.asm.Ka).apply(null,arguments)},et=t.___errno_location=function(){return(et=t.___errno_location=t.asm.La).apply(null,arguments)},tt=t._free=function(){return(tt=t._free=t.asm.Ma).apply(null,arguments)},nt=t.___getTypeName=function(){return(nt=t.___getTypeName=t.asm.Na).apply(null,arguments)};t.___embind_register_native_and_builtin_types=function(){return(t.___embind_register_native_and_builtin_types=t.asm.Oa).apply(null,arguments)};var rt,at=t.__get_tzname=function(){return(at=t.__get_tzname=t.asm.Pa).apply(null,arguments)},ot=t.__get_daylight=function(){return(ot=t.__get_daylight=t.asm.Qa).apply(null,arguments)},it=t.__get_timezone=function(){return(it=t.__get_timezone=t.asm.Ra).apply(null,arguments)},ut=t.stackSave=function(){return(ut=t.stackSave=t.asm.Sa).apply(null,arguments)},st=t.stackRestore=function(){return(st=t.stackRestore=t.asm.Ta).apply(null,arguments)},ct=t.stackAlloc=function(){return(ct=t.stackAlloc=t.asm.Ua).apply(null,arguments)},ft=t._memalign=function(){return(ft=t._memalign=t.asm.Va).apply(null,arguments)};function lt(){function e(){if(!rt&&(rt=!0,t.calledRun=!0,!w)){if(ie(q),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();J.unshift(e)}ie(J)}}if(!(0<K)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)Z();ie($),0<K||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=O,t.stringToUTF8=S,t.lengthBytesUTF8=C,t.stackSave=ut,t.stackRestore=st,t.stackAlloc=ct,te=function e(){rt||lt(),rt||(te=e)},t.run=lt,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return lt(),e.ready});e.exports=r},967:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,n,r,a)=>{if(\\\"object\\\"==typeof e&&null!==e){if(r.has(e))throw new Error(\\\"Circular reference in options\\\");r.add(e)}Object.entries(e).forEach((([e,o])=>{const i=n?n+e:e;if(\\\"object\\\"==typeof o)t.iterateExtraOptions(o,i+\\\".\\\",r,a);else if(\\\"string\\\"==typeof o||\\\"number\\\"==typeof o)a(i,o.toString());else{if(\\\"boolean\\\"!=typeof o)throw new Error(\\\"Can't handle extra config type: \\\"+typeof o);a(i,o?\\\"1\\\":\\\"0\\\")}}))}},586:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const r=n(967),a=n(983),o=n(361);t.setRunOptions=e=>{const t=o.getInstance();let n=0;const i=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);let o=0;if(void 0!==(null==e?void 0:e.tag)&&(o=a.allocWasmString(e.tag,i)),n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,o),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const o=a.allocWasmString(e,i),u=a.allocWasmString(r,i);if(0!==t._OrtAddRunConfigEntry(n,o,u))throw new Error(`Can't set a run config entry: ${e} - ${r}`)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),i.forEach(t._free),e}}},919:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const r=n(967),a=n(983),o=n(361);t.setSessionOptions=e=>{const t=o.getInstance();let n=0;const i=[],u=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const o=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(u.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(u.executionMode=\\\"sequential\\\");const s=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(u.executionMode);let c=0;if(void 0!==(null==e?void 0:e.logId)&&(c=a.allocWasmString(e.logId,i)),void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);if(void 0===(null==e?void 0:e.enableProfiling)&&(u.enableProfiling=!1),n=t._OrtCreateSessionOptions(o,!!u.enableCpuMemArena,!!u.enableMemPattern,s,!!u.enableProfiling,0,c,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const o=a.allocWasmString(e,i),u=a.allocWasmString(r,i);if(0!==t._OrtAddSessionConfigEntry(n,o,u))throw new Error(`Can't set a session config entry: ${e} - ${r}`)})),null==e?void 0:e.executionProviders)for(const r of e.executionProviders)if(\\\"webnn\\\"===(\\\"string\\\"==typeof r?r:r.name)){let e=2,a=0;if(\\\"string\\\"!=typeof r){const t=r;(null==t?void 0:t.deviceType)&&(e=t.deviceType),(null==t?void 0:t.powerPreference)&&(a=t.powerPreference)}const o=[0,1,2];if(!o.includes(e))throw new Error(\\\"Invalid deviceType value, it shoule be one of {0, 1, 2}\\\");if(!o.includes(a))throw new Error(\\\"Invalid powerPreference value, it shoule be one of {0, 1, 2}\\\");const i=[\\\"Auto\\\",\\\"GPU\\\",\\\"CPU\\\"],u=[\\\"Auto\\\",\\\"High-performance\\\",\\\"Low-power\\\"];if(console.log(`webnn device type: ${i[e]}`),console.log(`webnn power preference: ${u[a]}`),0!==t._OrtSessionOptionsAppendExecutionProviderWebNN(n,e,a))throw new Error(\\\"Can't append WebNN execution provider\\\");break}return[n,i]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),i.forEach(t._free),e}}},983:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;const r=n(361);t.allocWasmString=(e,t)=>{const n=r.getInstance(),a=n.lengthBytesUTF8(e)+1,o=n._malloc(a);return n.stringToUTF8(e,o,a),t.push(o),o}},349:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;const r=n(586),a=n(919),o=n(983),i=n(361);t.initOrt=(e,t)=>{const n=i.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=[];t.createSession=(e,t)=>{const n=i.getInstance(),r=n._malloc(e.byteLength);let o=0,s=0,c=[];try{if([s,c]=a.setSessionOptions(t),n.HEAPU8.set(e,r),o=n._OrtCreateSession(r,e.byteLength,s),0===o)throw new Error(\\\"Can't create a session\\\")}finally{n._free(r),n._OrtReleaseSessionOptions(s),c.forEach(n._free)}const f=n._OrtGetInputCount(o),l=n._OrtGetOutputCount(o),p=[],d=[],m=[],h=[];for(let e=0;e<f;e++){const t=n._OrtGetInputName(o,e);if(0===t)throw new Error(\\\"Can't get an input name\\\");d.push(t),p.push(n.UTF8ToString(t))}for(let e=0;e<l;e++){const t=n._OrtGetOutputName(o,e);if(0===t)throw new Error(\\\"Can't get an output name\\\");h.push(t),m.push(n.UTF8ToString(t))}return u.push([o,d,h]),[u.length-1,p,m]},t.releaseSession=e=>{const t=i.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=n[1],o=n[2];a.forEach(t._OrtFree),o.forEach(t._OrtFree),t._OrtReleaseSession(r),u[e]=void 0};const s=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},c=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(`unsupported data type: ${e}`)}},f=e=>{switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}};t.run=(e,t,n,a,l)=>{const p=i.getInstance(),d=u[e];if(!d)throw new Error(\\\"invalid session id\\\");const m=d[0],h=d[1],g=d[2],y=t.length,v=a.length;let b=0,_=[];const w=[],A=[];try{[b,_]=r.setRunOptions(l);for(let e=0;e<y;e++){const t=n[e][0],r=n[e][1],a=n[e][2];let i,u;if(Array.isArray(a)){u=4*a.length,i=p._malloc(u),A.push(i);let e=i/4;for(let t=0;t<a.length;t++){if(\\\"string\\\"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);p.HEAPU32[e++]=o.allocWasmString(a[t],A)}}else u=a.byteLength,i=p._malloc(u),A.push(i),p.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),i);const c=p.stackSave(),f=p.stackAlloc(4*r.length);try{let e=f/4;r.forEach((t=>p.HEAP32[e++]=t));const n=p._OrtCreateTensor(s(t),i,u,f,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");w.push(n)}finally{p.stackRestore(c)}}const e=p.stackSave(),i=p.stackAlloc(4*y),u=p.stackAlloc(4*y),d=p.stackAlloc(4*v),T=p.stackAlloc(4*v);try{let n=i/4,r=u/4,o=d/4,s=T/4;for(let e=0;e<y;e++)p.HEAPU32[n++]=w[e],p.HEAPU32[r++]=h[t[e]];for(let e=0;e<v;e++)p.HEAPU32[o++]=0,p.HEAPU32[s++]=g[a[e]];let l=p._OrtRun(m,u,i,y,T,v,d,b);const _=[];if(0===l)for(let e=0;e<v;e++){const t=p.HEAPU32[d/4+e],n=p.stackSave(),r=p.stackAlloc(16);let a,o=0;try{if(l=p._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==l)throw new Error(`Can't get a tensor data. error code = ${l}`);let e=r/4;const i=p.HEAPU32[e++];o=p.HEAPU32[e++];const u=p.HEAPU32[e++],s=p.HEAPU32[e++],d=[];for(let e=0;e<s;e++)d.push(p.HEAPU32[u/4+e]);p._OrtFree(u);const m=0===d.length?1:d.reduce(((e,t)=>e*t));if(a=c(i),\\\"string\\\"===a){const e=[];let t=o/4;for(let n=0;n<m;n++){const r=p.HEAPU32[t++],a=n===m-1?void 0:p.HEAPU32[t]-r;e.push(p.UTF8ToString(r,a))}_.push([a,d,e])}else{const e=new(f(a))(m);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(p.HEAPU8.subarray(o,o+e.byteLength)),_.push([a,d,e])}}finally{p.stackRestore(n),\\\"string\\\"===a&&o&&p._free(o),p._OrtReleaseTensor(t)}}if(0===l)return _;throw new Error(`failed to call OrtRun(). error code = ${l}.`)}finally{p.stackRestore(e)}}finally{w.forEach(p._OrtReleaseTensor),A.forEach(p._free),p._OrtReleaseRunOptions(b),_.forEach(p._free)}},t.endProfiling=e=>{const t=i.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=t._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function i(e){try{s(r.next(e))}catch(e){o(e)}}function u(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const s=o(n(449)),c=u(n(474)),f=u(n(932));let l,p=!1,d=!1,m=!1;const h=(e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";t.initializeWebAssembly=e=>i(void 0,void 0,void 0,(function*(){if(p)return Promise.resolve();if(d)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(m)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");d=!0;const t=e.initTimeout,r=e.numThreads,a=e.simd,o=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),i=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})(),u=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,g=h(!1,o),y=h(i,o),v=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[y]:void 0;let b=!1;const _=[];if(t>0&&_.push(new Promise((e=>{setTimeout((()=>{b=!0,e()}),t)}))),_.push(new Promise(((e,t)=>{const r=o?c.default:f.default,a={locateFile:(e,t)=>{if(e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob)return URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"}));if(e===g){const e=null!=u?u:t;return null!=v?v:e+y}return t+e}};if(o)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=s.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${c.default.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}r(a).then((t=>{d=!1,p=!0,l=t,e()}),(e=>{d=!1,m=!0,t(e)}))}))),yield Promise.race(_),b)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)})),t.getInstance=()=>{if(p&&l)return l;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!p||d||m||(d=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,d=!1,p=!1,m=!0)}},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),(()=>{\\\"use strict\\\";const e=n(349),t=n(361);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})));break;case\\\"init-ort\\\":try{const{numThreads:t,loggingLevel:r}=n.data.in;e.initOrt(t,r),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:r}=n.data.in,a=e.createSession(t,r);postMessage({type:\\\"create\\\",out:a})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=n.data.in;e.releaseSession(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:r,inputs:a,outputIndices:o,options:i}=n.data.in,u=e.run(t,r,a,o,i);postMessage({type:\\\"run\\\",out:u},e.extractTransferableBuffers(u))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=n.data.in;e.endProfiling(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2174__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}